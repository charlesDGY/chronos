cscope 15 $HOME/sudiptac/Work/release-4.2/chronos-4.2/est -q 0000003594 0000739683
	@.metadata/.plugins/org.eclipse.cdt.make.core/specs.c

	@address.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<°d¨g.h
>

6 
	~<as£π.h
>

7 
	~"tcfg.h
"

8 
	~"addªss.h
"

9 
	~"lo›s.h
"

10 
	~"comm⁄.h
"

11 
	~"ö„asibÀ.h
"

14 
tcfg_node_t
** 
tcfg
;

15 
num_tcfg_nodes
;

18 
lo›_t
** 
	glo›_m≠
;

21 
iß_t
* 
iß
;

22 
dumpAddªss
(
tcfg_node_t
* 
bb
);

23 
upd©eSuc˚ss‹Aloc
(
tcfg_node_t
* 
bbi
, * 
ch™ge
);

24 
checkEquÆôy
(
ric_p
 
¨g1
,Ñic_∞
¨g2
);

25 
FILE
* 
	gaFûe
;

28 
™Æyze_t›
();

29 
™Æyze
(
tcfg_node_t
* 
bbi
);

30 
¶i°_p
 
™Æyze_lo›_t›
(
lo›_t
* 
lo›
, 
lo›_id
);

31 
™Æyze_lo›
(
tcfg_node_t
* 
bbi
, 
lo›_id
);

32 
joöMem‹yAloc
(
abs_mem_p
 
mem1
,ábs_mem_p* 
mem2
);

35 * 
	g™Æyzed
;

36 * 
	g™Æyzed_lo›
;

39 
	gcou¡
 = 0;

41 
	$isSt‹eIn°
(* 
iß_«me
)

43 if(! 
	`°rcmp
(
iß_«me
, "sw") || !strcmp(isa_name, "sh")

44 || !
	`°rcmp
(
iß_«me
, "sb") || !strcmp(isa_name, "swl")

45 || !
	`°rcmp
(
iß_«me
, "swr") || !strcmp(isa_name, "s.s")

46 || !
	`°rcmp
(
iß_«me
, "s.d"))

51 
	}
}

53 
	$isLﬂdIn°
(* 
iß_«me
)

55 if(! 
	`°rcmp
(
iß_«me
, "lw") || !strcmp(isa_name, "lh")

56 || !
	`°rcmp
(
iß_«me
, "lb") || !strcmp(isa_name, "lwl")

57 || !
	`°rcmp
(
iß_«me
, "lwr") || !strcmp(isa_name, "lhu")

58 || !
	`°rcmp
(
iß_«me
, "l.s") || !strcmp(isa_name, "l.d"))

63 
	}
}

66 
ric_p
 
	$gëAddrBa£Off£t
(
de_ö°_t
* 
ö°
, 
ba£
, 
off£t
, 
›t
)

68 
ric_p
* 
abs_ªg
 = 
ö°
->abs_reg;

69 
ric_p
 
nAddr
;

71 #ifde‡
_DEBUG


72 if(!
abs_ªg
)

74 
	`¥ötf
("Somê¥obÀm o‡ab°ø˘i⁄áàö°ru˘i⁄ %x\n", 
ö°
->
addr
);

78 
	`as£π
(
abs_ªg
);

80 if(
›t
 && 
ö°
->
mod_addr
)

82 #ifde‡
_DEBUG


83 
	`¥ötf
("modifõdáddªs†(0x%x,0x%x,0x%x)\n", 
ö°
->
mod_addr
->
lowî_bound
,

84 
ö°
->
mod_addr
->
uµî_bound
, in°->mod_addr->
°ride
);

86  
ö°
->
mod_addr
;

89 if(
abs_ªg
[
ba£
])

91 
nAddr
 = (
ric_p
)
	`mÆloc
((
ric_s
));

92 #ifde‡
_DEBUG


93 
	`¥ötf
("Ba£Ñegi°î (%dËvÆue(%xË%d\n", 
ba£
, 
ö°
->
addr
,

94 
abs_ªg
[
ba£
]->
lowî_bound
);

96 
nAddr
->
lowî_bound
 = 
abs_ªg
[
ba£
]->lowî_bound + 
off£t
;

97 
nAddr
->
uµî_bound
 = 
abs_ªg
[
ba£
]->uµî_bound + 
off£t
;

100 if(
ba£
 =
REG_GLOBAL
)

101 
nAddr
->
°ride
 = 0;

103 
nAddr
->
°ride
 = 
abs_ªg
[
ba£
]->stride;

105  
nAddr
;

108  
NULL
;

109 
	}
}

112 
ric_p
 
	$gëAddrBa£Index
(
de_ö°_t
* 
ö°
, 
ba£
, 
ödex
, 
›t
)

114 
ric_p
* 
abs_ªg
 = 
ö°
->abs_reg;

115 
ric_p
 
nAddr
;

117 #ifde‡
_DEBUG


118 if(!
abs_ªg
)

120 
	`¥ötf
("Somê¥obÀm o‡ab°ø˘i⁄áàö°ru˘i⁄ %x\n", 
ö°
->
addr
);

124 
	`as£π
(
abs_ªg
);

126 if(
›t
 && 
ö°
->
mod_addr
)

128 #ifde‡
_DEBUG


129 
	`¥ötf
("modifõdáddªs†(0x%x,0x%x,0x%x)\n", 
ö°
->
mod_addr
->
lowî_bound
,

130 
ö°
->
mod_addr
->
uµî_bound
, in°->mod_addr->
°ride
);

132  
ö°
->
mod_addr
;

135 if(
abs_ªg
[
ba£
] &&ábs_ªg[
ödex
])

137 
nAddr
 = (
ric_p
)
	`mÆloc
((
ric_s
));

138 
nAddr
->
lowî_bound
 = 
abs_ªg
[
ba£
]->lower_bound +

139 
abs_ªg
[
ödex
]->
lowî_bound
;

140 
nAddr
->
uµî_bound
 = 
abs_ªg
[
ba£
]->upper_bound +

141 
abs_ªg
[
ödex
]->
uµî_bound
;

142 
nAddr
->
°ride
 = 
	`gcd
(
abs_ªg
[
ba£
]->°ride,ábs_ªg[
ödex
]->stride);

143  
nAddr
;

146  
NULL
;

147 
	}
}

150 #ifde‡
_DEBUG


151 
	$dump
(
de_ö°_t
* 
ö°
, 
ric_p
 
addr
, 
FILE
* 
Â
)

153 
	`Ârötf
(
Â
, "==========================================================\n");

154 
	`Ârötf
(
Â
, "InstructionÇame = %s, Address = %x, Immediate = %d\n",

155 
iß
[
ö°
->
›_íum
].
«me
, in°->
addr
, in°->
imm
);

156 
	`Ârötf
(
Â
, "==========================================================\n");

157 if(
addr
)

158 
	`Ârötf
(
Â
, "Addªs†(0x%x,0x%x,0x%x)\n", 
addr
->
lowî_bound
,áddr->
uµî_bound
,

159 
addr
->
°ride
);

161 
	`Ârötf
(
Â
, "UNKNOWN\n");

162 
	}
}

166 
	$dump_d©a_addªss
()

168 
tcfg_node_t
* 
bbi
;

169 
de_ö°_t
* 
ö°
;

170 * 
iß_«me
;

171 
ric_p
 
addr
;

172 
i
, 
j
;

173 
rs
, 
π
, 
d
, 
imm
, 
ba£
, 
off£t
, 
ödex
;

174 
FILE
* 
Â
;

176 
Â
 = 
	`f›í
("address.dump", "w");

177 if(!
Â
)

178 
	`Áèl
("Internal file opening failed");

180 
i
 = 0; i < 
num_tcfg_nodes
; i++)

182 
ö°
 = 
tcfg
[
i
]->
bb
->
code
;

184 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++)

186 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

191 if(
	`isSt‹eIn°
(
iß_«me
))

193 if(
ö°
->
num_ö
 <= 2)

195 
imm
 = 
ö°
->imm;

196 
ba£
 = *(
ö°
->
ö
 + 1);

197 
addr
 = 
	`gëAddrBa£Off£t
(
ö°
, 
ba£
, 
imm
, 0);

198 
	`dump
(
ö°
, 
addr
, 
Â
);

200 if(
ö°
->
num_ö
 == 3)

202 
ba£
 = *(
ö°
->
ö
 + 1);

203 
ödex
 = *(
ö°
->
ö
 + 2);

204 
addr
 = 
	`gëAddrBa£Index
(
ö°
, 
ba£
, 
ödex
, 0);

205 
	`dump
(
ö°
, 
addr
, 
Â
);

208 if(
	`isLﬂdIn°
(
iß_«me
))

210 if(
ö°
->
num_ö
 <= 1)

212 
imm
 = 
ö°
->imm;

213 
ba£
 = *(
ö°
->
ö
);

214 
addr
 = 
	`gëAddrBa£Off£t
(
ö°
, 
ba£
, 
imm
, 0);

215 
	`dump
(
ö°
, 
addr
, 
Â
);

217 if(
ö°
->
num_ö
 == 2)

219 
ba£
 = *(
ö°
->
ö
);

220 
ödex
 = *(
ö°
->
ö
 + 1);

221 
addr
 = 
	`gëAddrBa£Index
(
ö°
, 
ba£
, 
ödex
, 0);

222 
	`dump
(
ö°
, 
addr
, 
Â
);

225 
ö°
++;

229 
	`f˛o£
(
Â
);

231 
	}
}

233 
	$dump_mod_d©a_addªss
()

235 
tcfg_node_t
* 
bbi
;

236 
de_ö°_t
* 
ö°
;

237 * 
iß_«me
;

238 
ric_p
 
addr
;

239 
i
, 
j
;

240 
rs
, 
π
, 
d
, 
imm
, 
ba£
, 
off£t
, 
ödex
;

241 
FILE
* 
Â
;

243 
Â
 = 
	`f›í
("address.dump", "a");

244 if(!
Â
)

245 
	`Áèl
("Internal file opening failed");

247 
i
 = 0; i < 
num_tcfg_nodes
; i++)

249 
ö°
 = 
tcfg
[
i
]->
bb
->
code
;

251 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++)

253 if(
ö°
->
mod_addr
)

255 
	`Ârötf
(
Â
, "modifiedáddressát 0x%x = (0x%x,0x%x,0x%x)\n",

256 
ö°
->
r_addr
,

257 
ö°
->
mod_addr
->
lowî_bound
,

258 
ö°
->
mod_addr
->
uµî_bound
,

259 
ö°
->
mod_addr
->
°ride
);

261 
ö°
++;

265 
	`f˛o£
(
Â
);

266 
	}
}

269 
	$dumpAlocSètus
(
tcfg_node_t
* 
bbi
, 
FILE
* 
Â
)

271 
ric_p
* 
ªg
 = 
bbi
->
bb
->
ö_abs_ªg_vÆue
;

272 
num_ªgs
;

273 
abs_mem_p
 
ôî
;

274 
l
[20],
u
[20];

276 
	`Ârötf
(
Â
,"\n****Printing Input informationÅoÅhe basic block****\n");

277 
	`Ârötf
(
Â
,"*****Printing Abstract Register Values*****\n\n");

278 
	`Ârötf
(
Â
, "Basic block startáddress = 0x%x, Endáddress = 0x%x\n",

279 
bbi
->
bb
->
ß
, bbi->bb->ß + bbi->bb->
size
);

280 
num_ªgs
 = 0;Çum_ªg†< 
MAX_NO_REGISTERS
;Çum_regs++)

282 if(! 
ªg
[
num_ªgs
])

284 
	`Ârötf
(
Â
, "Regi°î %d::\n", 
num_ªgs
);

285 if(
ªg
[
num_ªgs
]->
lowî_bound
 =-
INFINITY
)

286 
	`•rötf
(
l
, "-inf");

288 
	`•rötf
(
l
, "%d", 
ªg
[
num_ªgs
]->
lowî_bound
);

289 if(
ªg
[
num_ªgs
]->
uµî_bound
 =
INFINITY
)

290 
	`•rötf
(
u
, "inf");

292 
	`•rötf
(
u
, "%d", 
ªg
[
num_ªgs
]->
uµî_bound
);

293 
	`Ârötf
(
Â
, "(%s,%s,%d)\n", 
l
, 
u
, 
ªg
[
num_ªgs
]->
°ride
);

296 
	`Ârötf
(
Â
,"\n*****End Printing Abstract Register Values*****\n\n");

297 
	`Ârötf
(
Â
,"\n*****Printing Abstract Memory Locations*****\n\n");

299 
ôî
 = 
bbi
->
bb
->
ö_abs_mem_vÆue
; iãr; iã∏ôî->
√xt
)

301 
	`Ârötf
(
Â
, "Addªs†%x\n", 
ôî
->
ö°_addr
);

302 if(!
ôî
->
vÆid
)

304 
	`Ârötf
(
Â
,"Not valid\n");

307 
	`Ârötf
(
Â
, "Address Range::");

308 if(
ôî
->
addr
->
lowî_bound
 =-
INFINITY
)

309 
	`•rötf
(
l
, "-inf");

311 
	`•rötf
(
l
, "%d", 
ôî
->
addr
->
lowî_bound
);

312 if(
ôî
->
addr
->
uµî_bound
 =
INFINITY
)

313 
	`•rötf
(
u
, "inf");

315 
	`•rötf
(
u
, "%d", 
ôî
->
addr
->
uµî_bound
);

316 
	`Ârötf
(
Â
, "(%s,%s,%dË ", 
l
, 
u
, 
ôî
->
addr
->
°ride
);

317 
	`Ârötf
(
Â
, "Value Range::");

318 if(!
ôî
->
vÆue
)

320 
	`Ârötf
(
Â
, "(UNKNOWN)\n");

323 if(
ôî
->
vÆue
->
lowî_bound
 =-
INFINITY
)

324 
	`•rötf
(
l
, "-inf");

326 
	`•rötf
(
l
, "%d", 
ôî
->
vÆue
->
lowî_bound
);

327 if(
ôî
->
vÆue
->
uµî_bound
 =
INFINITY
)

328 
	`•rötf
(
u
, "inf");

330 
	`•rötf
(
u
, "%d", 
ôî
->
vÆue
->
uµî_bound
);

331 
	`Ârötf
(
Â
, "(%s,%s,%d)\n", 
l
, 
u
, 
ôî
->
vÆue
->
°ride
);

334 
	`Ârötf
(
Â
,"\n*****End Printing Abstract Memory Locations*****\n\n");

336 
ªg
 = 
bbi
->
bb
->
out_abs_ªg_vÆue
;

338 
	`Ârötf
(
Â
,"\n****Priniting Output informationÅoÅhe basic block****\n");

339 
	`Ârötf
(
Â
,"*****Printing Abstract Register Values*****\n\n");

340 
	`Ârötf
(
Â
, "Basic block startáddress = 0x%x, Endáddress = 0x%x\n",

341 
bbi
->
bb
->
ß
, bbi->bb->ß + bbi->bb->
size
);

342 
num_ªgs
 = 0;Çum_ªg†< 
MAX_NO_REGISTERS
;Çum_regs++)

344 if(! 
ªg
[
num_ªgs
])

346 
	`Ârötf
(
Â
, "Regi°î %d::\n", 
num_ªgs
);

347 if(
ªg
[
num_ªgs
]->
lowî_bound
 =-
INFINITY
)

348 
	`•rötf
(
l
, "-inf");

350 
	`•rötf
(
l
, "%d", 
ªg
[
num_ªgs
]->
lowî_bound
);

351 if(
ªg
[
num_ªgs
]->
uµî_bound
 =
INFINITY
)

352 
	`•rötf
(
u
, "inf");

354 
	`•rötf
(
u
, "%d", 
ªg
[
num_ªgs
]->
uµî_bound
);

355 
	`Ârötf
(
Â
, "(%s,%s,%d)\n", 
l
, 
u
, 
ªg
[
num_ªgs
]->
°ride
);

358 
	`Ârötf
(
Â
,"\n*****End Printing Abstract Register Values*****\n\n");

359 
	`Ârötf
(
Â
,"\n*****Printing Abstract Memory Locations*****\n\n");

361 
ôî
 = 
bbi
->
bb
->
out_abs_mem_vÆue
; iãr; iã∏ôî->
√xt
)

363 
	`Ârötf
(
Â
, "Addªs†%x\n", 
ôî
->
ö°_addr
);

364 if(!
ôî
->
vÆid
)

366 
	`Ârötf
(
Â
,"Not valid\n");

369 
	`Ârötf
(
Â
, "Address Range::");

370 if(
ôî
->
addr
->
lowî_bound
 =-
INFINITY
)

371 
	`•rötf
(
l
, "-inf");

373 
	`•rötf
(
l
, "%d", 
ôî
->
addr
->
lowî_bound
);

374 if(
ôî
->
addr
->
uµî_bound
 =
INFINITY
)

375 
	`•rötf
(
u
, "inf");

377 
	`•rötf
(
u
, "%d", 
ôî
->
addr
->
uµî_bound
);

378 
	`Ârötf
(
Â
, "(%s,%s,%dË ", 
l
, 
u
, 
ôî
->
addr
->
°ride
);

379 
	`Ârötf
(
Â
, "Value Range::");

380 if(!
ôî
->
vÆue
)

382 
	`Ârötf
(
Â
, "(UNKNOWN)\n");

385 if(
ôî
->
vÆue
->
lowî_bound
 =-
INFINITY
)

386 
	`•rötf
(
l
, "-inf");

388 
	`•rötf
(
l
, "%d", 
ôî
->
vÆue
->
lowî_bound
);

389 if(
ôî
->
vÆue
->
uµî_bound
 =
INFINITY
)

390 
	`•rötf
(
u
, "inf");

392 
	`•rötf
(
u
, "%d", 
ôî
->
vÆue
->
uµî_bound
);

393 
	`Ârötf
(
Â
, "(%s,%s,%d)\n", 
l
, 
u
, 
ôî
->
vÆue
->
°ride
);

396 
	`Ârötf
(
Â
,"\n*****End Printing Abstract Memory Locations*****\n\n");

397 
	}
}

401 
	$dumpAddªss
(
tcfg_node_t
* 
bbi
)

403 
de_ö°_t
* 
ö°
;

404 
i
;

406 if(! 
aFûe
)

407 
aFûe
 = 
	`f›í
("aloc.dump", "w");

408 if(!
aFûe
)

409 
	`Áèl
("Internal file opening failed");

410 
	`Ârötf
(
aFûe
, "Printingábstract value ofÑegistersánd memoryÜocations\n");

412 
	`dumpAlocSètus
(
bbi
, 
aFûe
);

413 
	}
}

421 
	$gëLo›Bound
(
lo›_t
* 
lo›
)

424 
tcfg_node_t
* 
èû
;

425 
tcfg_node_t
* 
hód
;

426 
de_ö°_t
* 
cmp_ö°
;

428 
	`as£π
(
lo›
);

431 
èû
 = 
lo›
->tail;

432 
hód
 = 
lo›
->head;

434 
	`as£π
(
èû
);

436 if(
hód
->
exec_cou¡
 != -1)

438 
lo›_t
* 
∑ª¡
 = 
lo›
->parent;

440 if(
∑ª¡
 &&Ö¨ít->
hód
->
exec_cou¡
 != -1)

441  (
hód
->
exec_cou¡
 / 
∑ª¡
->head->exec_count);

443  
hód
->
exec_cou¡
;

446 
öf_lo›_t
* 
öf_lo›s
;

447 
öf_lo›_t
* 
Õ
;

449 
Õ
 = &(
öf_lo›s
[
lo›
->
id
]);

450 
	`as£π
(
Õ
);

452 if(
Õ
 &&Üp->
bound
 >= 0)

455 
	`¥ötf
("ªtu∫ög %d f‹Üo›Åaû %d\n", 
Õ
->
bound
, 
èû
->
id
);

457  
Õ
->
bound
;

461 
	`¥ötf
("Loop boundÇot constant...Örovideá constraint...Éxiting\n");

462 
	`exô
(-1);

464 
	}
}

467 
	$gcd
 ( 
a
, 
b
 )

469 
c
;

471 if(! 
a
Ë 
b
;

472 if(! 
b
Ë 
a
;

474  
a
 != 0 ) {

475 
c
 = 
a
;á = 
b
%a; b = c;

477  
b
;

478 
	}
}

481 
	$maxof
(
n_¨gs
, ...){

482 
i
;

483 
max
, 
a
;

484 
va_li°
 
≠
;

486 
	`va_°¨t
(
≠
, 
n_¨gs
);

487 
max
 = 
	`va_¨g
(
≠
, );

489 
i
 = 2; i <
n_¨gs
; i++) {

490 if((
a
 = 
	`va_¨g
(
≠
, )Ë> 
max
)

491 
max
 = 
a
;

494 
	`va_íd
(
≠
);

496  
max
;

497 
	}
}

500 
	$möof
(
n_¨gs
, ...){

501 
i
;

502 
mö
, 
a
;

503 
va_li°
 
≠
;

505 
	`va_°¨t
(
≠
, 
n_¨gs
);

506 
mö
 = 
	`va_¨g
(
≠
, );

508 
i
 = 2; i <
n_¨gs
; i++) {

509 if((
a
 = 
	`va_¨g
(
≠
, )Ë< 
mö
)

510 
mö
 = 
a
;

513 
	`va_íd
(
≠
);

515  
mö
;

516 
	}
}

519 
ric_p
 
	$makeRIC
(
ric_p
 
¨g
)

521 
ric_p
 
nRIC
;

523 if(! 
¨g
)

524  
NULL
;

525 
nRIC
 = (
ric_p
)
	`mÆloc
((
ric_s
));

526 if(! 
nRIC
)

527 
	`Áèl
("Out of memory");

528 
nRIC
->
lowî_bound
 = 
¨g
->lower_bound;

529 
nRIC
->
uµî_bound
 = 
¨g
->upper_bound;

530 
nRIC
->
°ride
 = 
¨g
->stride;

532  
nRIC
;

533 
	}
}

536 
	$makeRICPîIn°ru˘i⁄
(
de_ö°_t
* 
ö°
, 
ric_p
* 
abs_ªg
)

538 
i
;

540 if(! 
ö°
->
abs_ªg
)

542 
ö°
->
abs_ªg
 = (
ric_p
 *)
	`mÆloc
(
MAX_NO_REGISTERS
 * (ric_p));

543 if(! 
ö°
->
abs_ªg
)

544 
	`Áèl
("Out of memory");

545 
	`mem£t
(
ö°
->
abs_ªg
, 0, 
MAX_NO_REGISTERS
 * (
ric_p
));

547 
i
 = 0; i < 
MAX_NO_REGISTERS
; i++)

549 if(! 
abs_ªg
[
i
])

551 if(! 
ö°
->
abs_ªg
[
i
])

553 
ö°
->
abs_ªg
[
i
] = (
ric_p
)
	`mÆloc
((
ric_s
));

554 if(! 
ö°
->
abs_ªg
[
i
])

555 
	`Áèl
("Out of memory");

557 
ö°
->
abs_ªg
[
i
]->
lowî_bound
 =ábs_reg[i]->lower_bound;

558 
ö°
->
abs_ªg
[
i
]->
uµî_bound
 =ábs_reg[i]->upper_bound;

559 
ö°
->
abs_ªg
[
i
]->
°ride
 =ábs_reg[i]->stride;

561 
	}
}

564 
	$upd©eRICMul
(
ric_p
* 
hi
,Ñic_p* 
lo
,Ñic_∞
§c1
,Ñic_∞
§c2
)

566 
lowî_bound
, 
uµî_bound
;

568 if(! (*
hi
))

569 *
hi
 = (
ric_p
)
	`mÆloc
((
ric_s
));

570 if(! 
hi
)

571 
	`Áèl
("Out of memory");

572 if(! (*
lo
))

573 *
lo
 = (
ric_p
)
	`mÆloc
((
ric_s
));

574 if(! 
lo
)

575 
	`Áèl
("Out of memory");

577 if(
§c1
 && 
§c2
)

580 if(
§c1
->
°ride
 !-1 && 
§c2
->stride != -1)

582 
lowî_bound
 = 
	`möof
(4, 
§c1
->lowî_bound * 
§c2
->lower_bound,

583 
§c1
->
lowî_bound
 * 
§c2
->
uµî_bound
,

584 
§c1
->
uµî_bound
 * 
§c2
->upper_bound,

585 
§c1
->
uµî_bound
 * 
§c2
->
lowî_bound
);

586 
uµî_bound
 = 
	`maxof
(4, 
§c1
->
lowî_bound
 * 
§c2
->lower_bound,

587 
§c1
->
lowî_bound
 * 
§c2
->
uµî_bound
,

588 
§c1
->
uµî_bound
 * 
§c2
->upper_bound,

589 
§c1
->
uµî_bound
 * 
§c2
->
lowî_bound
);

590 (*
hi
)->
lowî_bound
 = ()(lower_bound >> 32);

591 (*
hi
)->
uµî_bound
 = ()(upper_bound >> 32);

592 (*
hi
)->
°ride
 = 1;

594 if(! ((*
hi
)->
uµî_bound
)) {

595 (*
lo
)->
uµî_bound
 = ()upper_bound;

596 (*
lo
)->
lowî_bound
 = ()lower_bound;

597 (*
lo
)->
°ride
 = ()(
	`gcd
(gcd(
§c1
->°ridê* 
§c2
->stride,

598 
§c1
->
lowî_bound
 * 
§c2
->
°ride
),

599 
§c2
->
lowî_bound
 * 
§c1
->
°ride
));

602 (*
lo
)->
uµî_bound
 = 0;

603 (*
lo
)->
lowî_bound
 = 0;

604 (*
lo
)->
°ride
 = -1;

612 (*
hi
)->
lowî_bound
 = (*hi)->
uµî_bound
 = 0;

613 (*
lo
)->
lowî_bound
 = (*lo)->
uµî_bound
 = 0;

614 (*
hi
)->
°ride
 = -1;

615 (*
lo
)->
°ride
 = -1;

619 (*
hi
)->
lowî_bound
 = (*hi)->
uµî_bound
 = 0;

620 (*
lo
)->
lowî_bound
 = (*lo)->
uµî_bound
 = 0;

621 (*
hi
)->
°ride
 = -1;

622 (*
lo
)->
°ride
 = -1;

624 
	}
}

627 
	$upd©eRICSub
(
ric_p
* 
de°
,Ñic_∞
§c1
,Ñic_∞
§c2
)

629 if(! (*
de°
))

630 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

631 if(! 
de°
)

632 
	`Áèl
("Out of memory");

633 if(
§c1
 && 
§c2
)

636 if(
§c1
->
°ride
 !-1 && 
§c2
->stride != -1)

638 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound - 
§c2
->
uµî_bound
;

639 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound - 
§c2
->
lowî_bound
;

640 (*
de°
)->
°ride
 = 
	`gcd
(
§c1
->°ride, 
§c2
->stride);

647 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

648 (*
de°
)->
°ride
 = -1;

652 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

653 (*
de°
)->
°ride
 = -1;

655 
	}
}

658 
	$upd©eRICBoﬁ
(
ric_p
* 
de°
,Ñic_∞
§c1
,Ñic_∞
§c2
)

660 if(! (*
de°
))

661 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

662 if(! 
de°
)

663 
	`Áèl
("Out of memory");

664 if(
§c1
 && 
§c2
)

667 if(
§c1
->
°ride
 !-1 && 
§c2
->stride != -1)

669 if(
§c1
->
uµî_bound
 < 
§c2
->
lowî_bound
)

670 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 1;

672 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

673 (*
de°
)->
°ride
 = 0;

676 (*
de°
)->
lowî_bound
 = 0;

677 (*
de°
)->
uµî_bound
 = 1;

678 (*
de°
)->
°ride
 = 1;

682 (*
de°
)->
lowî_bound
 = 0;

683 (*
de°
)->
uµî_bound
 = 1;

684 (*
de°
)->
°ride
 = 1;

686 
	}
}

691 
	$upd©eRICBoﬁU
(
ric_p
* 
de°
)

693 if(! (*
de°
))

694 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

695 if(! 
de°
)

696 
	`Áèl
("Out of memory");

697 (*
de°
)->
lowî_bound
 = 0;

698 (*
de°
)->
uµî_bound
 = 1;

699 (*
de°
)->
°ride
 = 1;

700 
	}
}

704 
	$upd©eRICBoﬁImm
(
ric_p
* 
de°
,Ñic_∞
§c1
, 
imm
)

706 if(! (*
de°
))

707 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

708 if(! 
de°
)

709 
	`Áèl
("Out of memory");

710 if(
§c1
)

713 if(
§c1
->
°ride
 != -1)

715 if(
§c1
->
uµî_bound
 < 
imm
)

716 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 1;

718 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

719 (*
de°
)->
°ride
 = 0;

722 (*
de°
)->
lowî_bound
 = 0;

723 (*
de°
)->
uµî_bound
 = 1;

724 (*
de°
)->
°ride
 = 1;

728 (*
de°
)->
lowî_bound
 = 0;

729 (*
de°
)->
uµî_bound
 = 1;

730 (*
de°
)->
°ride
 = 1;

732 
	}
}

735 
	$upd©eRICAdd
(
ric_p
* 
de°
,Ñic_∞
§c1
,Ñic_∞
§c2
)

737 if(! (*
de°
))

738 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

739 if(! 
de°
)

740 
	`Áèl
("Out of memory");

741 if(
§c1
 && 
§c2
)

744 if(
§c1
->
°ride
 !-1 && 
§c2
->stride != -1)

746 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound + 
§c2
->lower_bound;

747 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound + 
§c2
->upper_bound;

750 (*
de°
)->
°ride
 = 
	`gcd
(
§c1
->°ride, 
§c2
->stride);

757 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

758 (*
de°
)->
°ride
 = -1;

762 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

763 (*
de°
)->
°ride
 = -1;

765 
	}
}

768 
ric_p
 
	$upd©eRICJoö
(
ric_p
 
§c1
,Ñic_∞
§c2
)

770 
ric_p
 
ªsu…
;

771 
diff1
, 
diff2
, 
diff3
, 
diff4
;

773 
ªsu…
 = (
ric_p
)
	`mÆloc
((
ric_s
));

775 if(! 
ªsu…
)

776 
	`Áèl
("Out of memory");

778 
	`mem£t
(
ªsu…
, 0, (
ric_s
));

780 if(
§c1
 && 
§c2
)

783 if(
§c1
->
°ride
 !-1 && 
§c2
->stride != -1)

785 if(!
§c1
->
lowî_bound
 && !§c1->
uµî_bound
 && src1->
°ride
) {

786 
ªsu…
->
lowî_bound
 = 
§c2
->lower_bound;

787 
ªsu…
->
uµî_bound
 = 
§c2
->upper_bound;

788 
ªsu…
->
°ride
 = 
§c2
->stride;

790 if(!
§c2
->
lowî_bound
 && !§c2->
uµî_bound
 && src2->
°ride
) {

791 
ªsu…
->
lowî_bound
 = 
§c1
->lower_bound;

792 
ªsu…
->
uµî_bound
 = 
§c1
->upper_bound;

793 
ªsu…
->
°ride
 = 
§c1
->stride;

797 
ªsu…
->
lowî_bound
 = 
	`möof
(2, 
§c1
->lowî_bound, 
§c2
->lower_bound);

798 
ªsu…
->
uµî_bound
 = 
	`maxof
(2, 
§c1
->uµî_bound, 
§c2
->upper_bound);

800 if(! 
§c1
->
°ride
 && !
§c2
->stride &&

801 
ªsu…
->
lowî_bound
 !ªsu…->
uµî_bound
)

802 
ªsu…
->
°ride
 = 
	`abs
(
§c1
->
lowî_bound
 - 
§c2
->lower_bound);

804 
diff1
 = 
	`abs
(
§c1
->
lowî_bound
 - 
§c2
->lower_bound);

805 
diff2
 = 
	`abs
(
§c1
->
lowî_bound
 - 
§c2
->
uµî_bound
);

806 
diff3
 = 
	`abs
(
§c1
->
uµî_bound
 - 
§c2
->
lowî_bound
);

807 
diff4
 = 
	`abs
(
§c1
->
uµî_bound
 - 
§c2
->upper_bound);

808 
ªsu…
->
°ride
 = 
	`gcd
(gcd(gcd(gcd(gcd(
diff1
, 
diff2
),

809 
diff3
), 
diff4
), 
§c1
->
°ride
), 
§c2
->stride);

818 
ªsu…
->
lowî_bound
 =Ñesu…->
uµî_bound
 = 0;

819 
ªsu…
->
°ride
 = -1;

821 } if(
§c1
 || 
§c2
)

823 
ªsu…
->
lowî_bound
 =Ñesu…->
uµî_bound
 = 0;

824 
ªsu…
->
°ride
 = -1;

826  
NULL
;

828  
ªsu…
;

829 
	}
}

832 
ric_p
 
	$ªtu∫Mem‹yAloc
(
ric_s
 
mem
, 
abs_mem_p
 
abs_mem_°
)

834 
abs_mem_p
 
ôî
;

835 
ric_p
 
ªsu…
;

836 
found
 = 0;

837 
ric_s
 
t_addr
;

838 
ric_p
 
p_addr
;

840 
ªsu…
 = (
ric_p
)
	`mÆloc
((
ric_s
));

842 if(! 
ªsu…
)

843 
	`Áèl
("Out of memory");

845 
t_addr
.
lowî_bound
 =Å_addr.
uµî_bound
 = 0;

846 
t_addr
.
°ride
 = 1;

847 
p_addr
 = &
t_addr
;

849 
	`mem£t
(
ªsu…
, 0, (
ric_s
));

850 
ªsu…
->
°ride
 = 1;

852 
ôî
 = 
abs_mem_°
; iãr; iã∏ôî->
√xt
) {

853 if(!
ôî
->
vÆid
)

855 if(
mem
.
lowî_bound
 >
ôî
->
addr
->lower_bound &&

856 
mem
.
uµî_bound
 <
ôî
->
addr
->upper_bound &&

857 
mem
.
°ride
 =
ôî
->
addr
->stride &&

858 
	`abs
(
mem
.
lowî_bound
 - 
ôî
->
addr
->lowî_boundË% mem.
°ride
 == 0) {

859 
found
 = 1;

860 
ªsu…
 = 
	`upd©eRICJoö
‘esu…, 
ôî
->
vÆue
);

862 if(
mem
.
lowî_bound
 <
ôî
->
addr
->lower_bound &&

863 
mem
.
uµî_bound
 >
ôî
->
addr
->upper_bound &&

864 
mem
.
°ride
 =
ôî
->
addr
->stride &&

865 
	`abs
(
mem
.
lowî_bound
 - 
ôî
->
addr
->lowî_boundË% mem.
°ride
 == 0) {

867 
p_addr
 = 
	`upd©eRICJoö
’_addr, 
ôî
->
addr
);

868 
ªsu…
 = 
	`upd©eRICJoö
‘esu…, 
ôî
->
vÆue
);

872 if(!
found
 && !
	`checkEquÆôy
(
p_addr
, &
mem
)) {

875 
ªsu…
->
lowî_bound
 =Ñesu…->
uµî_bound
 = 0;

876 
ªsu…
->
°ride
 = -1;

879  
ªsu…
;

880 
	}
}

883 
	$upd©eRICLﬂdIndex
(
ric_p
* 
de°
,Ñic_∞
§c1
,Ñic_∞
§c2
,

884 
abs_mem_p
 
abs_mem_°
, 
size
)

886 
ric_p
 
mem_Æoc
;

888 if(! (*
de°
))

889 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

890 if(! 
de°
)

891 
	`Áèl
("Out of memory");

893 if(
§c1
 && 
§c2
)

896 if(
§c1
->
°ride
 != -1)

898 
ric_s
 
ãmp
;

899 
	`‰ì
(*
de°
);

900 
ãmp
.
lowî_bound
 = 
§c1
->lowî_bound + 
§c2
->lower_bound;

901 
ãmp
.
uµî_bound
 = 
§c1
->uµî_bound + 
§c2
->upper_bound;

902 
ãmp
.
°ride
 = 
size
;

903 *
de°
 = 
	`ªtu∫Mem‹yAloc
(
ãmp
, 
abs_mem_°
);

906 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

907 (*
de°
)->
°ride
 = -1;

911 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

912 (*
de°
)->
°ride
 = -1;

914 
	}
}

917 
	$upd©eRICLﬂd
(
ric_p
* 
de°
,Ñic_∞
§c1
, 
imm
, 
abs_mem_p
 
abs_mem_°
,

918 
size
)

920 
ric_p
 
mem_Æoc
;

922 if(! (*
de°
))

923 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

924 if(! 
de°
)

925 
	`Áèl
("Out of memory");

927 if(
§c1
)

930 if(
§c1
->
°ride
 != -1)

932 
ric_s
 
ãmp
;

933 
	`‰ì
(*
de°
);

934 
ãmp
.
lowî_bound
 = 
§c1
->lowî_bound + 
imm
;

935 
ãmp
.
uµî_bound
 = 
§c1
->uµî_bound + 
imm
;

936 
ãmp
.
°ride
 = 
size
;

937 *
de°
 = 
	`ªtu∫Mem‹yAloc
(
ãmp
, 
abs_mem_°
);

944 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

945 (*
de°
)->
°ride
 = -1;

949 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

950 (*
de°
)->
°ride
 = -1;

952 
	}
}

956 
abs_mem_p
 
	$¸óãMem‹yAloc
(
ric_s
 
addr
, 
ric_p
 
vÆue
)

958 
abs_mem_p
 
nE¡ry
 = (abs_mem_p)
	`mÆloc
((
abs_mem_s
));

959 if(!
nE¡ry
)

960 
	`Áèl
("Out of Memory");

961 
	`mem£t
(
nE¡ry
, 0, (
abs_mem_s
));

962 
nE¡ry
->
addr
 = (
ric_p
)
	`mÆloc
((
ric_s
));

963 if(! 
nE¡ry
->
addr
)

964 
	`Áèl
("Out of Memory");

965 
nE¡ry
->
vÆue
 = (
ric_p
)
	`mÆloc
((
ric_s
));

966 if(! 
nE¡ry
->
vÆue
)

967 
	`Áèl
("Out of Memory");

968 
nE¡ry
->
addr
->
lowî_bound
 =áddr.lower_bound;

969 
nE¡ry
->
addr
->
uµî_bound
 =áddr.upper_bound;

970 
nE¡ry
->
addr
->
°ride
 =áddr.stride;

971 if(
vÆue
)

973 
nE¡ry
->
vÆue
->
lowî_bound
 = value->lower_bound;

974 
nE¡ry
->
vÆue
->
uµî_bound
 = value->upper_bound;

975 
nE¡ry
->
vÆue
->
°ride
 = value->stride;

979 
nE¡ry
->
vÆue
->
lowî_bound
 = 0;

980 
nE¡ry
->
vÆue
->
uµî_bound
 = 0;

981 
nE¡ry
->
vÆue
->
°ride
 = -1;

983 
nE¡ry
->
√xt
 = 
NULL
;

985  
nE¡ry
;

986 
	}
}

990 
	$övÆid©eMem‹yAloc
(
abs_mem_p
 
abs_mem_°
)

992 
abs_mem_p
 
ôî
;

995 
ôî
 = 
abs_mem_°
; iãr; iã∏ôî->
√xt
) {

996 if(!
ôî
->
vÆid
 || !ôî->
vÆue
)

998 
ôî
->
vÆue
->
lowî_bound
 = iãr->vÆue->
uµî_bound
 = 0;

999 
ôî
->
vÆue
->
°ride
 = -1;

1001 
	}
}

1004 
	$upd©eMem‹yAloc
(
ric_s
 
mem
, 
abs_mem_p
* 
abs_mem_°
, 
ric_p
 
vÆue
,

1005 
addr
)

1007 
abs_mem_p
 
ôî
;

1009 
ôî
 = *
abs_mem_°
; iãr; iã∏ôî->
√xt
) {

1010 if(!
ôî
->
vÆid
 && !(ôî->
ö°_addr
 =
addr
))

1012 if(
ôî
->
ö°_addr
 =
addr
)

1014 if(!
ôî
->
vÆid
)

1016 
ôî
->
vÆid
 = 1;

1017 
ôî
->
addr
 = 
	`makeRIC
(&
mem
);

1018 
ôî
->
vÆue
 = 
	`makeRIC
(value);

1022 
ôî
->
addr
->
lowî_bound
 = 
mem
.lower_bound;

1023 
ôî
->
addr
->
uµî_bound
 = 
mem
.upper_bound;

1024 
ôî
->
addr
->
°ride
 = 
mem
.stride;

1025 
ôî
->
vÆue
 = 
	`upd©eRICJoö
(value, iter->value);

1028 if(
mem
.
lowî_bound
 >
ôî
->
addr
->lower_bound &&

1029 
mem
.
uµî_bound
 <
ôî
->
addr
->upper_bound &&

1030 
mem
.
°ride
 =
ôî
->
addr
->stride &&

1031 
	`abs
(
mem
.
lowî_bound
 - 
ôî
->
addr
->lowî_boundË% mem.
°ride
 == 0) {

1033 
ôî
->
vÆue
 = 
	`upd©eRICJoö
(value, iter->value);

1035 if((! 
ôî
->
addr
->
lowî_bound
 >
mem
.
uµî_bound
 + mem.
°ride
 &&

1036 !
mem
.
lowî_bound
 >
ôî
->
addr
->
uµî_bound
 + iãr->addr->
°ride
)){

1038 
ôî
->
vÆue
->
lowî_bound
 = iãr->vÆue->
uµî_bound
 = 0;

1039 
ôî
->
vÆue
->
°ride
 = -1;

1041 
cou¡
++;

1043 
	}
}

1046 
	$upd©eRICSt‹eIndex
(
ric_p
 
vÆue
,Ñic_∞
ba£
,Ñic_∞
ödex
,

1047 
abs_mem_p
* 
abs_mem_°
, 
size
, 
addr
)

1049 
ric_p
 
mem_Æoc
;

1051 if(
ba£
)

1054 if(
ba£
->
°ride
 !-1 && 
	`gcd
(gcd(ba£->°ride, 
ödex
->stride),

1055 
size
) == size)

1057 
ric_s
 
ãmp
;

1058 
ãmp
.
lowî_bound
 = 
ba£
->lowî_bound + 
ödex
->lower_bound;

1059 
ãmp
.
uµî_bound
 = 
ba£
->uµî_bound + 
ödex
->upper_bound;

1060 
ãmp
.
°ride
 = 
size
;

1061 
	`upd©eMem‹yAloc
(
ãmp
, 
abs_mem_°
, 
vÆue
, 
addr
);

1068 
	`övÆid©eMem‹yAloc
(*
abs_mem_°
);

1072 
	`övÆid©eMem‹yAloc
(*
abs_mem_°
);

1074 
	}
}

1077 
	$upd©eRICSt‹e
(
ric_p
 
vÆue
,Ñic_∞
ba£
, 
imm
, 
abs_mem_p
* 
abs_mem_°
,

1078 
size
, 
addr
)

1080 
ric_p
 
mem_Æoc
;

1082 if(
ba£
)

1085 if(
ba£
->
°ride
 !-1 && 
	`gcd
(ba£->°ride, 
size
) == size)

1087 
ric_s
 
ãmp
;

1088 
ãmp
.
lowî_bound
 = 
ba£
->lowî_bound + 
imm
;

1089 
ãmp
.
uµî_bound
 = 
ba£
->uµî_bound + 
imm
;

1090 
ãmp
.
°ride
 = 
size
;

1091 
	`upd©eMem‹yAloc
(
ãmp
, 
abs_mem_°
, 
vÆue
, 
addr
);

1098 
	`övÆid©eMem‹yAloc
(*
abs_mem_°
);

1102 
	`övÆid©eMem‹yAloc
(*
abs_mem_°
);

1104 
	}
}

1107 
	$upd©eRICRightShi·V
(
ric_p
* 
de°
,Ñic_∞
§c1
,Ñic_∞
§c2
)

1109 if(! (*
de°
))

1110 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

1111 if(! 
de°
)

1112 
	`Áèl
("Out of memory");

1113 if(
§c1
 && 
§c2
)

1116 if(
§c1
->
°ride
 !-1 && 
§c2
->stride != -1)

1118 if(
§c1
->
uµî_bound
 <= 0) {

1119 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound >> 
§c2
->lower_bound;

1120 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound >> 
§c2
->upper_bound;

1121 } if(
§c1
->
lowî_bound
 <0 && src1->
uµî_bound
 > 0) {

1122 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound >> 
§c2
->lower_bound;

1123 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound >> 
§c2
->
lowî_bound
;

1124 } if(
§c1
->
lowî_bound
 > 0) {

1125 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound >> 
§c2
->
uµî_bound
;

1126 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound >> 
§c2
->
lowî_bound
;

1128 (*
de°
)->
°ride
 = 1;

1135 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1136 (*
de°
)->
°ride
 = -1;

1140 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1141 (*
de°
)->
°ride
 = -1;

1143 
	}
}

1146 
	$upd©eRICLe·Shi·
(
ric_p
* 
de°
,Ñic_∞
§c1
, 
imm
)

1148 if(! (*
de°
))

1149 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

1150 if(! 
de°
)

1151 
	`Áèl
("Out of memory");

1152 if(
§c1
)

1155 if(
§c1
->
°ride
 != -1)

1157 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound << 
imm
;

1158 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound << 
imm
;

1159 if(
§c1
->
°ride
 != 0)

1160 (*
de°
)->
°ride
 = 
§c1
->°ridê<< 
imm
;

1162 (*
de°
)->
°ride
 = 
§c1
->stride;

1169 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1170 (*
de°
)->
°ride
 = -1;

1174 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1175 (*
de°
)->
°ride
 = -1;

1177 
	}
}

1180 
	$upd©eRICRightShi·
(
ric_p
* 
de°
,Ñic_∞
§c1
, 
imm
)

1182 if(! (*
de°
))

1183 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

1184 if(! 
de°
)

1185 
	`Áèl
("Out of memory");

1186 if(
§c1
)

1189 if(
§c1
->
°ride
 != -1)

1191 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound >> 
imm
;

1192 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound >> 
imm
;

1193 (*
de°
)->
°ride
 = 
§c1
->°ridê>> 
imm
;

1200 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1201 (*
de°
)->
°ride
 = -1;

1205 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1206 (*
de°
)->
°ride
 = -1;

1208 
	}
}

1211 
	$upd©eRICAddImm
(
ric_p
* 
de°
,Ñic_∞
§c1
, 
imm
)

1213 if(! (*
de°
))

1214 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

1215 if(! 
de°
)

1216 
	`Áèl
("Out of memory");

1217 if(
§c1
)

1220 if(
§c1
->
°ride
 != -1)

1222 (*
de°
)->
lowî_bound
 = 
§c1
->lowî_bound + 
imm
;

1223 (*
de°
)->
uµî_bound
 = 
§c1
->uµî_bound + 
imm
;

1224 (*
de°
)->
°ride
 = 
§c1
->stride;

1231 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1232 (*
de°
)->
°ride
 = -1;

1236 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1237 (*
de°
)->
°ride
 = -1;

1239 
	}
}

1242 
	$upd©eRICImm
(
ric_p
* 
de°
, 
imm
)

1244 if(! (*
de°
))

1245 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

1246 if(! 
de°
)

1247 
	`Áèl
("Out of memory");

1249 (*
de°
)->
lowî_bound
 = 
imm
;

1250 (*
de°
)->
uµî_bound
 = 
imm
;

1251 (*
de°
)->
°ride
 = 0;

1252 
	}
}

1255 
	$upd©eRIC
(
ric_p
* 
de°
,Ñic_∞
§c1
)

1257 if(! (*
de°
))

1258 *
de°
 = (
ric_p
)
	`mÆloc
((
ric_s
));

1259 if(! *(
de°
))

1260 
	`Áèl
("Out of memory");

1262 if(
§c1
)

1265 if(
§c1
->
°ride
 != -1)

1267 (*
de°
)->
lowî_bound
 = 
§c1
->lower_bound;

1268 (*
de°
)->
uµî_bound
 = 
§c1
->upper_bound;

1269 (*
de°
)->
°ride
 = 
§c1
->stride;

1276 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1277 (*
de°
)->
°ride
 = -1;

1282 (*
de°
)->
lowî_bound
 = (*de°)->
uµî_bound
 = 0;

1283 (*
de°
)->
°ride
 = -1;

1285 
	}
}

1289 
	$å™sf‹mAloc
(
tcfg_node_t
* 
bbi
, * 
ch™ge
)

1291 
de_ö°_t
* 
ö°
;

1292 * 
iß_«me
;

1293 
rs
,
π
,
rd
,
imm
;

1294 
n_ö°
;

1295 
ric_p
* 
abs_ªg_vÆue
 = 
NULL
;

1296 
abs_mem_p
 
abs_mem_vÆue
 = 
NULL
;

1297 
abs_mem_p
 
ôî
;

1298 
i
;

1300 
	`as£π
(
bbi
);

1301 
	`as£π
(
bbi
->
bb
);

1302 
ö°
 = 
bbi
->
bb
->
code
;

1307 if(! 
bbi
->
bb
->
ö_abs_ªg_vÆue
)

1309 
bbi
->
bb
->
ö_abs_ªg_vÆue
 = (
ric_p
 *)
	`mÆloc
(
MAX_NO_REGISTERS


1310 * (
ric_p
));

1311 if(! 
bbi
->
bb
->
ö_abs_ªg_vÆue
)

1312 
	`Áèl
("Out of memory");

1313 
	`mem£t
(
bbi
->
bb
->
ö_abs_ªg_vÆue
, 0, 
MAX_NO_REGISTERS
 *

1314 (
ric_p
));

1316 
bbi
->
bb
->
ö_abs_ªg_vÆue
[0] = (
ric_p
)
	`mÆloc
((
ric_s
));

1317 
	`mem£t
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[0], 0, (
ric_s
));

1318 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28] = (
ric_p
)
	`mÆloc
((
ric_s
));

1319 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]);

1320 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
lowî_bound
 = 
GLOBAL_START
;

1321 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
uµî_bound
 = 
GLOBAL_START
;

1322 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
°ride
 = 0;

1325 if(! 
bbi
->
bb
->
out_abs_ªg_vÆue
)

1327 
bbi
->
bb
->
out_abs_ªg_vÆue
 = (
ric_p
 *)
	`mÆloc
(
MAX_NO_REGISTERS


1328 * (
ric_p
));

1330 if(! 
bbi
->
bb
->
out_abs_ªg_vÆue
)

1331 
	`Áèl
("Out of memory");

1332 
	`mem£t
(
bbi
->
bb
->
out_abs_ªg_vÆue
, 0, 
MAX_NO_REGISTERS
 *

1333 (
ric_p
));

1335 
bbi
->
bb
->
out_abs_ªg_vÆue
[0] = (
ric_p
)
	`mÆloc
((
ric_s
));

1336 
	`mem£t
(
bbi
->
bb
->
out_abs_ªg_vÆue
[0], 0, (
ric_s
));

1337 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28] = (
ric_p
)
	`mÆloc
((
ric_s
));

1338 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]);

1339 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
lowî_bound
 = 
GLOBAL_START
;

1340 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
uµî_bound
 = 
GLOBAL_START
;

1341 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
°ride
 = 0;

1345 
i
 = 0; i < 
MAX_NO_REGISTERS
; i++)

1347 if(
bbi
->
bb
->
ö_abs_ªg_vÆue
[
i
])

1348 
bbi
->
bb
->
out_abs_ªg_vÆue
[
i
] = 
	`makeRIC
(bbi->bb->
ö_abs_ªg_vÆue
[i]);

1351 
bbi
->
bb
->
out_abs_mem_vÆue
 = 
NULL
;

1353 
ôî
 = 
bbi
->
bb
->
ö_abs_mem_vÆue
; iãr; iã∏ôî->
√xt
)

1355 
abs_mem_p
 
nE¡ry
 = (abs_mem_p)
	`mÆloc
((
abs_mem_s
));

1356 
	`mem£t
(
nE¡ry
, 0, (
abs_mem_s
));

1357 
nE¡ry
->
ö°_addr
 = 
ôî
->inst_addr;

1358 
nE¡ry
->
vÆid
 = 
ôî
->valid;

1359 
nE¡ry
->
addr
 = 
	`makeRIC
(
ôî
->addr);

1360 
nE¡ry
->
vÆue
 = 
	`makeRIC
(
ôî
->value);

1361 
nE¡ry
->
√xt
 = 
bbi
->
bb
->
out_abs_mem_vÆue
;

1362 
bbi
->
bb
->
out_abs_mem_vÆue
 = 
nE¡ry
;

1366 
abs_ªg_vÆue
 = 
bbi
->
bb
->
out_abs_ªg_vÆue
;

1368 
abs_mem_vÆue
 = 
bbi
->
bb
->
out_abs_mem_vÆue
;

1370 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_ö°
;Ç_inst++)

1372 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

1376 
	`makeRICPîIn°ru˘i⁄
(
ö°
, 
abs_ªg_vÆue
);

1378 if(! 
	`°rcmp
(
iß_«me
, "add") || ! strcmp(isa_name, "addu"))

1381 
rs
 = *(
ö°
->
ö
);

1382 
π
 = *(
ö°
->
ö
 + 1);

1383 
rd
 = *(
ö°
->
out
);

1384 
	`upd©eRICAdd
(&
abs_ªg_vÆue
[
rd
],ábs_ªg_vÆue[
rs
],

1385 
abs_ªg_vÆue
[
π
]);

1386 } if(! 
	`°rcmp
(
iß_«me
, "addi") || ! strcmp(isa_name, "addiu"))

1389 
rs
 = *(
ö°
->
ö
);

1390 
imm
 = 
ö°
->imm;

1391 
rd
 = *(
ö°
->
out
);

1392 
	`upd©eRICAddImm
(&
abs_ªg_vÆue
[
rd
],ábs_ªg_vÆue[
rs
],

1393 
imm
);

1394 } if(! 
	`°rcmp
(
iß_«me
, "sub") || ! strcmp(isa_name, "subu"))

1397 
rs
 = *(
ö°
->
ö
);

1398 
π
 = *(
ö°
->
ö
 + 1);

1399 
rd
 = *(
ö°
->
out
);

1400 
	`upd©eRICSub
(&
abs_ªg_vÆue
[
rd
],ábs_ªg_vÆue[
rs
],

1401 
abs_ªg_vÆue
[
π
]);

1402 } if(! 
	`°rcmp
(
iß_«me
, "mult"))

1404 
rs
 = *(
ö°
->
ö
);

1405 
π
 = *(
ö°
->
ö
 + 1);

1406 
	`upd©eRICMul
(&
abs_ªg_vÆue
[
HI
], &abs_ªg_vÆue[
LO
],

1407 
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
]);

1408 } if(! 
	`°rcmp
(
iß_«me
, "multu")) {

1409 
rs
 = *(
ö°
->
ö
);

1410 
π
 = *(
ö°
->
ö
 + 1);

1411 } if(! 
	`°rcmp
(
iß_«me
, "div"))

1413 
rs
 = *(
ö°
->
ö
);

1414 
π
 = *(
ö°
->
ö
 + 1);

1415 } if(! 
	`°rcmp
(
iß_«me
, "divu")) {

1416 
rs
 = *(
ö°
->
ö
);

1417 
π
 = *(
ö°
->
ö
 + 1);

1418 } if(! 
	`°rcmp
(
iß_«me
, "mfhi")) {

1419 
rd
 = *(
ö°
->
out
);

1420 
	`upd©eRIC
(&(
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
HI
]);

1421 } if(! 
	`°rcmp
(
iß_«me
, "mflo")) {

1422 
rd
 = *(
ö°
->
out
);

1423 
	`upd©eRIC
(&(
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
LO
]);

1424 } if(! 
	`°rcmp
(
iß_«me
, "mthi")) {

1425 
rs
 = *(
ö°
->
ö
);

1426 
	`upd©eRIC
(&(
abs_ªg_vÆue
[
HI
]),ábs_ªg_vÆue[
rs
]);

1427 } if(! 
	`°rcmp
(
iß_«me
, "mtlo")) {

1428 
rs
 = *(
ö°
->
ö
);

1429 
	`upd©eRIC
(&(
abs_ªg_vÆue
[
LO
]),ábs_ªg_vÆue[
rs
]);

1430 } if(! 
	`°rcmp
(
iß_«me
, "lui")) {

1431 
π
 = *(
ö°
->
out
);

1432 
imm
 = 
ö°
->imm;

1433 
	`upd©eRICImm
(&(
abs_ªg_vÆue
[
π
]), 
imm
 << 16);

1434 } i‡(! 
	`°rcmp
(
iß_«me
, "slt")) {

1435 
rs
 = *(
ö°
->
ö
);

1436 
π
 = *(
ö°
->
ö
 + 1);

1437 
rd
 = *(
ö°
->
out
);

1438 
	`upd©eRICBoﬁ
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1439 
abs_ªg_vÆue
[
π
]);

1440 } i‡(! 
	`°rcmp
(
iß_«me
, "slti")) {

1441 
rs
 = *(
ö°
->
ö
);

1442 
imm
 = 
ö°
->imm;

1443 
rd
 = *(
ö°
->
out
);

1444 
	`upd©eRICBoﬁImm
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1445 
imm
);

1446 } i‡(! 
	`°rcmp
(
iß_«me
, "sltu") || ! strcmp(isa_name, "sltiu")) {

1447 
rd
 = *(
ö°
->
out
);

1448 
	`upd©eRICBoﬁU
(& (
abs_ªg_vÆue
[
rd
]));

1449 } i‡(! 
	`°rcmp
(
iß_«me
, "sra") || !strcmp(isa_name, "srl")) {

1450 
rs
 = *(
ö°
->
ö
);

1451 
imm
 = 
ö°
->imm;

1452 
rd
 = *(
ö°
->
out
);

1453 
	`upd©eRICRightShi·
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1454 
imm
);

1455 } i‡(! 
	`°rcmp
(
iß_«me
, "srav")) {

1456 
rs
 = *(
ö°
->
ö
);

1457 
π
 = *(
ö°
->
ö
 + 1);

1458 
rd
 = *(
ö°
->
out
);

1459 
	`upd©eRICRightShi·V
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1460 
abs_ªg_vÆue
[
π
]);

1461 } if(! 
	`°rcmp
(
iß_«me
, "sll")) {

1462 
rs
 = *(
ö°
->
ö
);

1463 
rd
 = *(
ö°
->
out
);

1464 
imm
 = 
ö°
->imm;

1465 
	`as£π
(
imm
 >= 0);

1466 
	`upd©eRICLe·Shi·
(&
abs_ªg_vÆue
[
rd
],ábs_ªg_vÆue[
rs
], 
imm
);

1467 } if(! 
	`°rcmp
(
iß_«me
, "lb")) {

1468 if(
ö°
->
num_ö
 <= 1) {

1469 
rs
 = *(
ö°
->
ö
);

1470 
imm
 = 
ö°
->imm;

1471 
rd
 = *(
ö°
->
out
);

1472 
	`upd©eRICLﬂd
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1473 
imm
, 
abs_mem_vÆue
, 
SIZE_OF_BYTE
);

1474 } if(
ö°
->
num_ö
 == 2) {

1475 
rs
 = *(
ö°
->
ö
);

1476 
π
 = *(
ö°
->
ö
 + 1);

1477 
rd
 = *(
ö°
->
out
);

1478 
	`upd©eRICLﬂdIndex
(& (
abs_ªg_vÆue
[
rd
]),

1479 
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1480 
abs_mem_vÆue
, 
SIZE_OF_BYTE
);

1482 } if(! 
	`°rcmp
(
iß_«me
, "lh")) {

1483 if(
ö°
->
num_ö
 <= 1) {

1484 
rs
 = *(
ö°
->
ö
);

1485 
imm
 = 
ö°
->imm;

1486 
rd
 = *(
ö°
->
out
);

1487 
	`upd©eRICLﬂd
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1488 
imm
, 
abs_mem_vÆue
, 
SIZE_OF_HALF_WORD
);

1489 } if(
ö°
->
num_ö
 == 2) {

1490 
rs
 = *(
ö°
->
ö
);

1491 
π
 = *(
ö°
->
ö
 + 1);

1492 
rd
 = *(
ö°
->
out
);

1493 
	`upd©eRICLﬂdIndex
(& (
abs_ªg_vÆue
[
rd
]),

1494 
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1495 
abs_mem_vÆue
, 
SIZE_OF_HALF_WORD
);

1497 } if(! 
	`°rcmp
(
iß_«me
, "lw")) {

1498 if(
ö°
->
num_ö
 <= 1) {

1499 
rs
 = *(
ö°
->
ö
);

1500 
imm
 = 
ö°
->imm;

1501 
rd
 = *(
ö°
->
out
);

1502 
	`upd©eRICLﬂd
(& (
abs_ªg_vÆue
[
rd
]),ábs_ªg_vÆue[
rs
],

1503 
imm
, 
abs_mem_vÆue
, 
SIZE_OF_WORD
);

1504 } if(
ö°
->
num_ö
 == 2) {

1505 
rs
 = *(
ö°
->
ö
);

1506 
π
 = *(
ö°
->
ö
 + 1);

1507 
rd
 = *(
ö°
->
out
);

1508 
	`upd©eRICLﬂdIndex
(& (
abs_ªg_vÆue
[
rd
]),

1509 
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1510 
abs_mem_vÆue
, 
SIZE_OF_WORD
);

1512 } if(!
	`°rcmp
(
iß_«me
, "lwl") || !strcmp(isa_name, "lwr")

1513 || !
	`°rcmp
(
iß_«me
, "swl") || !strcmp(isa_name, "swr") ||

1514 !
	`°rcmp
(
iß_«me
, "lhu")) {

1516 
rs
 = *(
ö°
->
ö
);

1517 
imm
 = 
ö°
->imm;

1518 
rd
 = *(
ö°
->
out
);

1519 if(! 
abs_ªg_vÆue
[
rd
])

1520 
abs_ªg_vÆue
[
rd
] = (
ric_p
)
	`mÆloc
((
ric_s
));

1521 
	`CHECK_MEM
(
abs_ªg_vÆue
[
rd
]);

1523 
abs_ªg_vÆue
[
rd
]->
lowî_bound
 =ábs_ªg_vÆue[rd]->
uµî_bound
 = 0;

1524 
abs_ªg_vÆue
[
rd
]->
°ride
 = -1;

1526 if(! 
	`°rcmp
(
iß_«me
, "sb")) {

1527 if(
ö°
->
num_ö
 <= 2) {

1528 
rs
 = *(
ö°
->
ö
);

1529 
imm
 = 
ö°
->imm;

1530 
π
 = *(
ö°
->
ö
 + 1);

1531 
	`upd©eRICSt‹e
(
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1532 
imm
, &
abs_mem_vÆue
, 
SIZE_OF_BYTE
, 
ö°
->
addr
);

1533 } if(
ö°
->
num_ö
 == 3) {

1534 
rs
 = *(
ö°
->
ö
);

1535 
rd
 = *(
ö°
->
ö
 + 1);

1536 
π
 = *(
ö°
->
ö
 + 2);

1537 
	`upd©eRICSt‹eIndex
(
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1538 
abs_ªg_vÆue
[
rd
], &
abs_mem_vÆue
, 
SIZE_OF_BYTE
,

1539 
ö°
->
addr
);

1541 } if(! 
	`°rcmp
(
iß_«me
, "sh")) {

1542 if(
ö°
->
num_ö
 <= 2) {

1543 
rs
 = *(
ö°
->
ö
);

1544 
imm
 = 
ö°
->imm;

1545 
π
 = *(
ö°
->
ö
 + 1);

1546 
	`upd©eRICSt‹e
(
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1547 
imm
, &
abs_mem_vÆue
, 
SIZE_OF_HALF_WORD
, 
ö°
->
addr
);

1548 } if(
ö°
->
num_ö
 == 3) {

1549 
rs
 = *(
ö°
->
ö
);

1550 
rd
 = *(
ö°
->
ö
 + 1);

1551 
π
 = *(
ö°
->
ö
 + 2);

1552 
	`upd©eRICSt‹eIndex
(
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1553 
abs_ªg_vÆue
[
rd
], &
abs_mem_vÆue
, 
SIZE_OF_HALF_WORD
,

1554 
ö°
->
addr
);

1556 } if(! 
	`°rcmp
(
iß_«me
, "sw")) {

1557 if(
ö°
->
num_ö
 <= 2) {

1558 
rs
 = *(
ö°
->
ö
);

1559 
imm
 = 
ö°
->imm;

1560 
π
 = *(
ö°
->
ö
 + 1);

1561 
	`upd©eRICSt‹e
(
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1562 
imm
, &
abs_mem_vÆue
, 
SIZE_OF_WORD
, 
ö°
->
addr
);

1563 } if(
ö°
->
num_ö
 == 3) {

1564 
rs
 = *(
ö°
->
ö
);

1565 
rd
 = *(
ö°
->
ö
 + 1);

1566 
π
 = *(
ö°
->
ö
 + 2);

1567 
	`upd©eRICSt‹eIndex
(
abs_ªg_vÆue
[
rs
],ábs_ªg_vÆue[
π
],

1568 
abs_ªg_vÆue
[
rd
], &
abs_mem_vÆue
, 
SIZE_OF_WORD
,

1569 
ö°
->
addr
);

1573 if(! 
	`°rcmp
(
iß_«me
, "l.d") || ! strcmp(isa_name, "s.d") ||

1574 !
	`°rcmp
(
iß_«me
, "l.s") || !strcmp(isa_name, "s.s")) {

1576 
rs
 = *(
ö°
->
ö
);

1577 
imm
 = 
ö°
->imm;

1578 
rd
 = *(
ö°
->
out
);

1579 if(! 
abs_ªg_vÆue
[
rd
])

1580 
abs_ªg_vÆue
[
rd
] = (
ric_p
)
	`mÆloc
((
ric_s
));

1581 
	`CHECK_MEM
(
abs_ªg_vÆue
[
rd
]);

1586 if(! 
	`°rcmp
(
iß_«me
, "beq")) {

1587 
rs
 = *(
ö°
->
ö
);

1588 
π
 = *(
ö°
->
ö
 + 1);

1590 } if(! 
	`°rcmp
(
iß_«me
, "bne")) {

1591 
rs
 = *(
ö°
->
ö
);

1592 
π
 = *(
ö°
->
ö
 + 1);

1599 
ö°
++;

1603 
bbi
->
bb
->
out_abs_mem_vÆue
 = 
abs_mem_vÆue
;

1605 #ifde‡
_DEBUG


1606 
	`dumpAddªss
(
bbi
);

1609 
	`upd©eSuc˚ss‹Aloc
(
bbi
, 
ch™ge
);

1610 
bbi
->
™Æ_cou¡
++;

1611 
	}
}

1614 
	$checkEquÆôy
(
ric_p
 
¨g1
,Ñic_∞
¨g2
)

1618 
	#EQUAL
(
x
,
y
Ë((x)==(y))

	)

1620  !((
¨g1
 && 
¨g2
 && 
	`EQUAL
◊rg1->
lowî_bound
,árg2->lower_bound)

1621 && 
	`EQUAL
(
¨g1
->
uµî_bound
, 
¨g2
->upper_bound)

1622 && 
¨g1
->
°ride
 =
¨g2
->stride)

1623 || (! 
¨g1
 && !
¨g2
)

1625 
	}
}

1629 
	$JoöPªdAloc
(
tcfg_node_t
* 
succ
,Åcfg_node_t* 
bbi
, * 
ch™ge_Êag
)

1631 
i
;

1632 
de_ö°_t
* 
l_ö°
, *
¥ev_ö°
;

1635 if(! 
succ
->
bb
->
ö_abs_ªg_vÆue
) {

1636 *
ch™ge_Êag
 = 1;

1637 
l_ö°
 = 
bbi
->
bb
->
code
 + bbi->bb->
num_ö°
 - 1;

1638 
¥ev_ö°
 = 
succ
->
bb
->
code
 - 1;

1640 
succ
->
bb
->
ö_abs_ªg_vÆue
 = (
ric_p
 *)
	`mÆloc
(
MAX_NO_REGISTERS
 * (ric_p));

1641 if(! 
succ
->
bb
->
ö_abs_ªg_vÆue
)

1642 
	`Áèl
("Out of memory");

1644 
	`mem£t
(
succ
->
bb
->
ö_abs_ªg_vÆue
, 0, 
MAX_NO_REGISTERS
 * (
ric_p
));

1647 
succ
->
bb
->
ö_abs_ªg_vÆue
[0] = (
ric_p
)
	`mÆloc
(
MAX_NO_REGISTERS
 * (
ric_s
));

1648 
	`mem£t
(
succ
->
bb
->
ö_abs_ªg_vÆue
[0], 0, (
ric_s
));

1650 
i
 = 1; i < 
MAX_NO_REGISTERS
; i++)

1652 if(!
	`°rcmp
(
iß
[
l_ö°
->
›_íum
].
«me
, "jr") &&

1653 !
	`°rcmp
(
iß
[
¥ev_ö°
->
›_íum
].
«me
, "jal") &&

1654 ((
i
 >
REG_START
 && i <
REG_END
Ë|| (ò=
REG_STACK
)))

1656 
succ
->
bb
->
ö_abs_ªg_vÆue
[
i
] = 
	`makeRIC
(
¥ev_ö°
->
abs_ªg
[i]);

1658 if(
bbi
->
bb
->
out_abs_ªg_vÆue
[
i
])

1659 
succ
->
bb
->
ö_abs_ªg_vÆue
[
i
] = 
	`makeRIC
(
bbi
->bb->
out_abs_ªg_vÆue
[i]);

1664 
i
 = 1; i < 
MAX_NO_REGISTERS
; i++)

1666 
ric_p
 
ãmp
;

1671 
l_ö°
 = 
bbi
->
bb
->
code
 + bbi->bb->
num_ö°
 - 1;

1672 
¥ev_ö°
 = 
succ
->
bb
->
code
 - 1;

1673 if(!
	`°rcmp
(
iß
[
l_ö°
->
›_íum
].
«me
, "jr") &&

1674 !
	`°rcmp
(
iß
[
¥ev_ö°
->
›_íum
].
«me
, "jal") &&

1675 ((
i
 >
REG_START
 && i <
REG_END
Ë|| (ò=
REG_STACK
)))

1677 
ãmp
 = 
	`makeRIC
(
¥ev_ö°
->
abs_ªg
[
i
]);

1681 
ãmp
 = 
	`upd©eRICJoö
(
succ
->
bb
->
ö_abs_ªg_vÆue
[
i
],

1682 
bbi
->
bb
->
out_abs_ªg_vÆue
[
i
]);

1685 
succ
->
bb
->
ö_abs_ªg_vÆue
[
i
] = 
ãmp
;

1689 if(! 
succ
->
bb
->
ö_abs_mem_vÆue
)

1691 
abs_mem_p
 
ôî
;

1693 
ôî
 = 
bbi
->
bb
->
out_abs_mem_vÆue
; iãr; iã∏ôî->
√xt
)

1695 
abs_mem_p
 
nE¡ry
 = 
	`¸óãMem‹yAloc
(*(
ôî
->
addr
), iãr->
vÆue
);

1696 
nE¡ry
->
√xt
 = 
succ
->
bb
->
ö_abs_mem_vÆue
;

1697 
succ
->
bb
->
ö_abs_mem_vÆue
 = 
nE¡ry
;

1702 
	`joöMem‹yAloc
(
bbi
->
bb
->
out_abs_mem_vÆue
, &(
succ
->bb->
ö_abs_mem_vÆue
));

1704 
	}
}

1706 
	$upd©eSuc˚ss‹Aloc
(
tcfg_node_t
* 
bbi
, * 
ch™ge_Êag
)

1708 
tcfg_edge_t
* 
ôî
;

1709 
found
 = 0;

1711 
ôî
 = 
bbi
->
out
; iãr; iã∏ôî->
√xt_out
)

1713 
	`JoöPªdAloc
(
ôî
->
d°
, 
bbi
, 
ch™ge_Êag
);

1715 
	}
}

1718 
¶i°_p
 
	$gëAŒLo›Nodes
(
lo›_id
)

1720 
¶i°_p
 
hód
 = 
NULL
;

1721 
lo›_t
* 
Õ¨ít
;

1722 
i
;

1724 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1726 if(!
lo›_m≠
[
i
])

1729 if(
lo›_m≠
[
i
]->
id
 =
lo›_id
)

1731 
¶i°_p
 
ãmp
 = (¶i°_p)
	`mÆloc
((
¶i°_s
));

1732 
ãmp
->
d°
 = (
tcfg_node_t
 *)
tcfg
[
i
];

1733 
ãmp
->
√xt
 = 
hód
;

1734 
hód
 = 
ãmp
;

1739 
Õ¨ít
 = 
lo›_m≠
[
i
]->
∑ª¡
;

1741 
Õ¨ít
 &&Ü∑ª¡->
id
 != 0)

1743 if(
Õ¨ít
->
id
 =
lo›_id
)

1745 
¶i°_p
 
ãmp
 = (¶i°_pË
	`mÆloc
((
¶i°_s
));

1746 
ãmp
->
d°
 = (
tcfg_node_t
 *)
tcfg
[
i
];

1747 
ãmp
->
√xt
 = 
hód
;

1748 
hód
 = 
ãmp
;

1752 
Õ¨ít
 =Ü∑ª¡->
∑ª¡
;

1757  
hód
;

1758 
	}
}

1762 
	$™Æyze
(
tcfg_node_t
* 
bbi
)

1764 
i
, 
j
, 
n
;

1765 
¶i°_p
 
l_nodes
, 
ôî
;

1766 
ch™ge
;

1769 i‡(
™Æyzed
[
bbi
->
id
] || !
lo›_m≠
[bbi->id])

1772 
i
 = 
bbi
->
id
;

1778 if(
lo›_m≠
[
i
]->
id
 != 0)

1781 
n
 = 
	`gëLo›Bound
(
lo›_m≠
[
i
]);

1783 
j
 = 0; j < 
n
; j++)

1785 
	`™Æyze_lo›_t›
(
lo›_m≠
[
i
],Üo›_m≠[i]->
id
);

1788 
l_nodes
 = 
	`gëAŒLo›Nodes
(
lo›_m≠
[
i
]->
id
);

1792 
ôî
 = 
l_nodes
; iãr; iã∏ôî->
√xt
)

1794 
™Æyzed
[((
tcfg_node_t
 *)
ôî
->
d°
)->
id
] = 1;

1799 
tcfg_edge_t
* 
edge
;

1803 
edge
 = 
bbi
->
ö
;Édge;Édgêedge->
√xt_ö
)

1805 
	`™Æyze
(
edge
->
§c
);

1809 
	`å™sf‹mAloc
(
bbi
, &
ch™ge
);

1811 
™Æyzed
[
bbi
->
id
] = 1;

1813 
	}
}

1816 
	$™Æyze_lo›
(
tcfg_node_t
* 
ôî
, 
lo›_id
)

1818 
n
, 
i
, 
ch™ge
;

1822 if(
™Æyzed_lo›
[
ôî
->
id
])

1825 if(
lo›_m≠
[
ôî
->
id
]->id !
lo›_id
)

1828 
n
 = 
	`gëLo›Bound
(
lo›_m≠
[
ôî
->
id
]);

1832 
i
 = 0; i < 
n
; i++)

1834 
	`™Æyze_lo›_t›
(
lo›_m≠
[
ôî
->
id
],

1835 
lo›_m≠
[
ôî
->
id
]->id);

1840 
tcfg_edge_t
* 
¥ed
;

1843 
¥ed
 = 
ôî
->
ö
;Öªd;Öªd =Öªd->
√xt_ö
)

1846 if(
¥ed
->
§c
->
id
 =
ôî
->id || 
	`bbi_backedge
(pred) ||

1847 !
lo›_m≠
[
¥ed
->
§c
->
id
])

1849 if(!
lo›_m≠
[
¥ed
->
§c
->
id
])

1851 
™Æyzed
[
¥ed
->
§c
->
id
] = 1;

1852 
™Æyzed_lo›
[
¥ed
->
§c
->
id
] = 1;

1859 if(
lo›_m≠
[
¥ed
->
§c
->
id
]->id == 0)

1860 
	`™Æyze
(
¥ed
->
§c
);

1863 
	`™Æyze_lo›
(
¥ed
->
§c
, 
lo›_m≠
[¥ed->§c->
id
]->id);

1870 
	`å™sf‹mAloc
(
ôî
, &
ch™ge
);

1874 
™Æyzed_lo›
[
ôî
->
id
] = 1;

1875 
	}
}

1878 
¶i°_p
 
	$™Æyze_lo›_t›
(
lo›_t
* 
lo›
, 
lo›_id
)

1880 
¶i°_p
 
ôî
;

1881 
¶i°_p
 
lo›_nodes
;

1883 
lo›_nodes
 = 
	`gëAŒLo›Nodes
(
lo›_id
);

1885 
ôî
 = 
lo›_nodes
; iãr; iã∏ôî->
√xt
)

1887 
™Æyzed_lo›
[((
tcfg_node_t
 *)
ôî
->
d°
)->
id
] = 0;

1889 
ôî
 = 
lo›_nodes
; iãr; iã∏ôî->
√xt
)

1891 
	`™Æyze_lo›
(((
tcfg_node_t
 *)
ôî
->
d°
), 
lo›_id
);

1894  
lo›_nodes
;

1895 
	}
}

1898 
	$™Æyze_t›
()

1900 
i
;

1903 
™Æyzed
 = (*Ë
	`mÆloc
(
num_tcfg_nodes
 * ());

1904 
™Æyzed_lo›
 = (*Ë
	`mÆloc
(
num_tcfg_nodes
 * ());

1905 
	`mem£t
(
™Æyzed
, 0, 
num_tcfg_nodes
 * ());

1906 
	`mem£t
(
™Æyzed_lo›
, 0, 
num_tcfg_nodes
 * ());

1908 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1910 
	`™Æyze
(
tcfg
[
i
]);

1912 
	}
}

1914 
	$joöMem‹yAloc
(
abs_mem_p
 
mem1
,ábs_mem_p* 
mem2
)

1916 
abs_mem_p
 
ôî1
;

1918 
ôî1
 = 
mem1
; iãr1; iãr1 = iãr1->
√xt
)

1920 if(!
ôî1
->
vÆid
)

1922 
	`upd©eMem‹yAloc
(*(
ôî1
->
addr
), 
mem2
, iãr1->
vÆue
, iãr1->
ö°_addr
);

1924 
	}
}

1926 
	$¸óã_Æoc
()

1928 
tcfg_node_t
* 
bbi
;

1929 
de_ö°_t
* 
ö°
;

1930 * 
iß_«me
;

1931 
ric_p
 
addr
;

1932 
i
, 
j
, 
k
;

1933 
rs
, 
π
, 
d
, 
imm
, 
ba£
, 
off£t
, 
ödex
;

1934 
FILE
* 
Â
;

1935 
x
 = 0;

1936 
ö°_addr
[4096];

1938 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1940 
ö°
 = 
tcfg
[
i
]->
bb
->
code
;

1942 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++)

1944 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

1949 if(
	`isSt‹eIn°
(
iß_«me
))

1951 
ö°_addr
[
x
++] = 
ö°
->
addr
;

1953 
ö°
++;

1956 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1958 
k
 = 0; k < 
x
; k++)

1960 
abs_mem_p
 
ãmp
 = (abs_mem_p)
	`mÆloc
((
abs_mem_s
));

1961 
	`mem£t
(
ãmp
, 0, (
abs_mem_s
));

1962 
ãmp
->
ö°_addr
 = in°_addr[
k
];

1963 
ãmp
->
vÆid
 = 0;

1964 
ãmp
->
√xt
 = 
tcfg
[
i
]->
bb
->
ö_abs_mem_vÆue
;

1965 
tcfg
[
i
]->
bb
->
ö_abs_mem_vÆue
 = 
ãmp
;

1968 
	}
}

1972 
	$™Æyze_addªss
()

1976 
tcfg_node_t
* 
bbi
 = 
tcfg
[0];

1977 
tcfg_edge_t
* 
edge
;

1978 
w‹kli°_p
 
Wli°
 = 
NULL
;

1979 
ch™ge_Êag
 = 0, 
glob_ch™ge_Êag
 = 1;

1980 
i
;

1983 
bbi
->
bb
->
ö_abs_ªg_vÆue
 = (
ric_p
 *)
	`mÆloc
(
MAX_NO_REGISTERS


1984 * (
ric_p
));

1985 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
);

1986 
	`mem£t
(
bbi
->
bb
->
ö_abs_ªg_vÆue
, 0, 
MAX_NO_REGISTERS
 *

1987 (
ric_p
));

1990 
bbi
->
bb
->
ö_abs_ªg_vÆue
[0] = (
ric_p
)
	`mÆloc
((
ric_s
));

1991 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[0]);

1992 
	`mem£t
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[0], 0, (
ric_s
));

1995 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28] = (
ric_p
)
	`mÆloc
((
ric_s
));

1996 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]);

1997 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
lowî_bound
 = 
GLOBAL_START
;

1998 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
uµî_bound
 = 
GLOBAL_START
;

1999 
bbi
->
bb
->
ö_abs_ªg_vÆue
[28]->
°ride
 = 0;

2002 
bbi
->
bb
->
ö_abs_ªg_vÆue
[29] = (
ric_p
)
	`mÆloc
((
ric_s
));

2003 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[29]);

2004 
bbi
->
bb
->
ö_abs_ªg_vÆue
[29]->
lowî_bound
 = 
STACK_START
;

2005 
bbi
->
bb
->
ö_abs_ªg_vÆue
[29]->
uµî_bound
 = 
STACK_START
;

2006 
bbi
->
bb
->
ö_abs_ªg_vÆue
[29]->
°ride
 = 0;

2009 
bbi
->
bb
->
ö_abs_ªg_vÆue
[31] = (
ric_p
)
	`mÆloc
((
ric_s
));

2010 
	`CHECK_MEM
(
bbi
->
bb
->
ö_abs_ªg_vÆue
[31]);

2011 
bbi
->
bb
->
ö_abs_ªg_vÆue
[31]->
lowî_bound
 = 
RETURN_ADDRESS
;

2012 
bbi
->
bb
->
ö_abs_ªg_vÆue
[31]->
uµî_bound
 = 
RETURN_ADDRESS
;

2013 
bbi
->
bb
->
ö_abs_ªg_vÆue
[31]->
°ride
 = 0;

2016 
	`¸óã_Æoc
();

2019 
	`™Æyze_t›
();

2021 #ifde‡
_DEBUG


2022 
	`¥ötf
("A«lysi†cou¡ = %d\¿f‹ %d BBÇodes\n", 
cou¡
, 
num_tcfg_nodes
);

2023 
	`dump_d©a_addªss
();

2024 
i
 = 0; i < 
num_tcfg_nodes
; i++)

2025 
	`dumpAddªss
(
tcfg
[
i
]);

2027 
	}
}

	@address.h

1 #i‚de‡
__ADDRESS_H_


2 
	#__ADDRESS_H_


	)

4 
	taddr_t
;

6 
	#MAX_NO_REGISTERS
 34

	)

7 
	#HI
 32

	)

8 
	#LO
 33

	)

9 
	#STACK_START
 0x7fffc000

	)

10 
	#GLOBAL_START
 0x10000000

	)

11 
	#RETURN_ADDRESS
 0

	)

13 
	#SIZE_OF_BYTE
 1

	)

14 
	#SIZE_OF_WORD
 4

	)

15 
	#SIZE_OF_HALF_WORD
 (
SIZE_OF_WORD
)/2

	)

16 
	#SIZE_OF_BLOCK
 
B


	)

17 
	#INFINITY
 0x7fffc000

	)

18 
	#WIDENING_POINT
 5

	)

19 
	#GET_MEM
(
x
Ë((xË/ 
SIZE_OF_BLOCK
)

	)

20 
	#REG_START
 16

	)

21 
	#REG_END
 23

	)

22 
	#REG_STACK
 29

	)

23 
	#REG_GLOBAL
 28

	)

26 
	s¶i°


28 * 
	md°
;

29 
¶i°
* 
	m√xt
;

32 
¶i°
* 
	t¶i°_p
;

33 
¶i°
 
	t¶i°_s
;

36 
	sric
 {

37 
addr_t
 
	mlowî_bound
;

38 
addr_t
 
	muµî_bound
;

39 
addr_t
 
	m°ride
;

41 
ric
 
	tric_s
;

42 
ric
* 
	tric_p
;

44 
	sabs_mem
 {

45 
	mvÆid
;

46 
	mö°_addr
;

47 
ric_p
 
	maddr
;

48 
ric_p
 
	mvÆue
;

49 
abs_mem
* 
	m√xt
;

51 
abs_mem
 
	tabs_mem_s
;

52 
abs_mem
* 
	tabs_mem_p
;

54 
™Æyze_addªss
();

55 
gcd
(
a
, 
b
);

	@bpred.c

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~"b¥ed.h
"

31 
num_tcfg_nodes
;

32 
num_tcfg_edges
;

33 
tcfg_node_t
 **
tcfg
;

34 
tcfg_edge_t
 **
tcfg_edges
;

35 
b¥ed_scheme
;

36 
pùe_ibuf_size
, 
pùe_iwö_size
;

38 *
	gpi_èbÀ
;

39 
bfg_node_t
 
	groŸ_bbb
, 
	gíd_bbb
;

40 
	groŸ_bbb_id
, 
	gíd_bbb_id
;

41 
bfg_node_t
 ***
	gbfg
;

42 
	gnum_bfg_nodes
;

43 
	gBHR
, 
	gBHR_PWR
, 
	gBHR_MSK
;

44 
	gBHT_SIZE
, 
	gBHT
, 
	gBHT_MSK
;

45 
bfg_node_t
 **
	gvbbb
;

53 
de_ö°_t
 ***
	gmp_ö°s
;

55 *
	gnum_mp_ö°s
;

65 
	$cﬁÀ˘_mp_ö°s
()

67 
num
 = 0, 
i
 = 0, 
j
, 
limô
;

68 
de_ö°_t
 **
tmp_ö°s
;

69 
tcfg_node_t
 *
bbi
;

70 
tcfg_edge_t
 *
e
;

72 
limô
 = 
pùe_ibuf_size
 + 
pùe_iwö_size
 - 1;

73 
mp_ö°s
 = (
de_ö°_t
 ***Ë
	`ˇŒoc
(
num_tcfg_edges
, (de_inst_t**));

74 
	`CHECK_MEM
(
mp_ö°s
);

75 
num_mp_ö°s
 = (*Ë
	`ˇŒoc
(
num_tcfg_edges
, ());

76 
	`CHECK_MEM
(
num_mp_ö°s
);

78 
tmp_ö°s
 = (
de_ö°_t
 **Ë
	`ˇŒoc
(
limô
, (de_inst_t*));

79 
	`CHECK_MEM
(
tmp_ö°s
);

80 
i
 = 0; i < 
num_tcfg_edges
; i++) {

81 
e
 = 
tcfg_edges
[
i
];

82 i‡(!
	`c⁄d_bbi
(
e
->
§c
))

85 i‡(
e
 =e->
§c
->
out
)

86 
bbi
 = 
e
->
√xt_out
->
d°
;

88 
bbi
 = 
e
->
§c
->
out
->
d°
;

89 
num
 = 0;

90 
num
 < 
limô
) {

91 
j
 = 0; (j < 
bbi
->
bb
->
num_ö°
Ë&& (
num
 < 
limô
); j++)

92 
tmp_ö°s
[
num
++] = &
bbi
->
bb
->
code
[
j
];

93 i‡((
bbi
->
out
 =
NULL
Ë|| (
	`c⁄d_bbi
(bbi)))

95 
bbi
 = bbi->
out
->
d°
;

97 
mp_ö°s
[
i
] = (
de_ö°_t
 **Ë
	`ˇŒoc
(
num
, (de_inst_t*));

98 
	`CHECK_MEM
(
mp_ö°s
[
i
]);

99 
	`memmove
(
mp_ö°s
[
i
], 
tmp_ö°s
, 
num
 * (
de_ö°_t
*));

100 
num_mp_ö°s
[
i
] = 
num
;

103 
	`‰ì
(
tmp_ö°s
);

104 
	}
}

118 
	$öô_roŸ_bbb
()

120 
roŸ_bbb
.
bbi
 = 
NULL
;

121 
roŸ_bbb
.
bhr
 = 0;

122 
roŸ_bbb
.
pi
 = 0;

123 
roŸ_bbb
.
out
 = 
NULL
;

124 
roŸ_bbb
.
ö
 = 
NULL
;

125 
roŸ_bbb
.
Êags
 = 0;

126 
	}
}

131 
	$öô_íd_bbb
()

133 
íd_bbb
.
bbi
 = 
NULL
;

134 
íd_bbb
.
pi
 = 
BHT_SIZE
 + 1;

135 
íd_bbb
.
out
 = 
NULL
;

136 
íd_bbb
.
ö
 = 
NULL
;

137 
íd_bbb
.
Êags
 = 0;

138 
	}
}

144 
	$bhr_upd©e
(
bhr
, 
bønch
)

146 i‡(
bønch
 =
TAKEN
)

147  ((
BHR_MSK
 & ((
bhr
) << 1)) | 1);

148 i‡(
bønch
 =
NOT_TAKEN
)

149  ((
BHR_MSK
 & ((
bhr
) << 1)) | 0);

151  
bhr
;

152 
	}
}

159 
	$öô_bfg
()

161 
i
;

163 
	`öô_roŸ_bbb
();

164 
	`öô_íd_bbb
();

166 
bfg
 = (
bfg_node_t
 ***Ë
	`mÆloc
(
num_tcfg_nodes
 * (bfg_node_t **));

167 
	`CHECK_MEM
(
bfg
);

168 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

169 
bfg
[
i
] = (
bfg_node_t
 **Ë
	`ˇŒoc
(
BHT_SIZE
, (bfg_node_t *));

170 
	`CHECK_MEM
(
bfg
[
i
]);

173 
pi_èbÀ
 = (*Ë
	`ˇŒoc
(
BHT_SIZE
, ());

174 
	}
}

179 
	$bhr_to_pi
(
tcfg_node_t
 *
bbi
, 
bhr
)

181 
cfg_node_t
 *
bb
 = 
bbi
->bb;

182 
addr_t
 
addr
;

184 i‡(
b¥ed_scheme
 =
GSHARE
) {

185 
addr
 = 
bb
->
code
[bb->
num_ö°
-1].addr;

186  (((
bhr
 << (
BHT
 - 
BHR
)Ë^ (
addr
 >> 3)Ë& 
BHT_MSK
);

187 } i‡(
b¥ed_scheme
 =
GAG
) {

188  
bhr
;

190 
addr
 = 
bb
->
code
[bb->
num_ö°
-1].addr;

191  ((
addr
 >> 3Ë& 
BHT_MSK
);

193 
	}
}

198 
bfg_node_t
 *

199 
	$√w_bbb
(
bbi_id
, 
bhr
)

201 
bfg_node_t
 *
x
;

203 
x
 = (
bfg_node_t
 *Ë
	`ˇŒoc
(1, (bfg_node_t));

204 
	`CHECK_MEM
(
x
);

205 
x
->
bbi
 = 
tcfg
[
bbi_id
];

206 
x
->
bhr
 = bhr;

207 
x
->
pi
 = 
	`bhr_to_pi
(x->
bbi
, 
bhr
);

209 
pi_èbÀ
[
x
->
pi
] = 1;

211  
x
;

212 
	}
}

218 
tcfg_node_t
 *

219 
	$√xt_c⁄d_bbi
(
tcfg_edge_t
 *
e
)

221 !
	`c⁄d_bbi
(
e
->
d°
)) {

222 
e
 =É->
d°
->
out
;

223 i‡(
e
 =
NULL
)

224  
NULL
;

226  
e
->
d°
;

227 
	}
}

231 
bfg_edge_t
 *

232 
	$√w_bfg_edge
(
bfg_node_t
 *
x
, bfg_node_à*
y
, 
bønch
)

234 
bfg_edge_t
 *
p
;

236 
p
 = (
bfg_edge_t
 *Ë
	`ˇŒoc
(1, (bfg_edge_t));

237 
	`CHECK_MEM
(
p
);

238 
p
->
§c
 = 
x
;Ö->
d°
 = 
y
;

239 
p
->
bønch
 = branch;

241 
p
->
¥ev_out
 = 
NULL
;Ö->
√xt_out
 = 
x
->
out
;

242 i‡(
x
->
out
 !
NULL
)

243 
x
->
out
->
¥ev_out
 = 
p
;

244 
x
->
out
 = 
p
;

246 
p
->
¥ev_ö
 = 
NULL
;Ö->
√xt_ö
 = 
y
->
ö
;

247 i‡(
y
->
ö
 !
NULL
)

248 
y
->
ö
->
¥ev_ö
 = 
p
;

249 
y
->
ö
 = 
p
;

250 
	}
}

256 
	$åav_tcfg
()

258 
bhr
, 
pi
;

259 
tcfg_node_t
 *
bbi
;

260 
Queue
 
w‹kli°
;

261 
bfg_node_t
 *
x
;

262 
tcfg_edge_t
 *
e
;

263 
bønch
;

265 
bbi
 = 
tcfg
[0];

267 
num_bfg_nodes
 = 0;

268 
	`öô_queue
(&
w‹kli°
, (
bfg_node_t
 *));

269 
bbi
 = 
tcfg
[0];

271 !
	`c⁄d_bbi
(
bbi
Ë&& (bbi->
out
 !
NULL
))

272 
bbi
 = bbi->
out
->
d°
;

273 if(
bbi
->
out
 =
NULL
)

276 
bfg
[
bbi
->
id
][0] = 
	`√w_bbb
(bbi->id, 0);

277 
bfg
[
bbi
->
id
][0]->id = 
num_bfg_nodes
++;

278 
	`√w_bfg_edge
(&
roŸ_bbb
, 
bfg
[
bbi
->
id
][0], 
NOT_TAKEN
);

279 
	`íqueue
(&
w‹kli°
, &
bfg
[
bbi
->
id
][0]);

281 !
	`queue_em±y
(&
w‹kli°
)) {

282 
x
 = *((
bfg_node_t
 **Ë
	`dequeue
(&
w‹kli°
));

283 
e
 = 
x
->
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

284 
bønch
 = 
e
->branch;

285 
bbi
 = 
	`√xt_c⁄d_bbi
(
e
);

286 i‡(
bbi
 =
NULL
) {

287 
	`√w_bfg_edge
(
x
, &
íd_bbb
, 
bønch
);

291 i‡(
bønch
 =
TAKEN
)

292 
bhr
 = 
	`bhr_upd©e
(
x
->bhr, 1);

293 i‡(
bønch
 =
NOT_TAKEN
)

294 
bhr
 = 
	`bhr_upd©e
(
x
->bhr, 0);

296 
bhr
 = 
x
->bhr;

297 
pi
 = 
	`bhr_to_pi
(
bbi
, 
bhr
);

298 i‡(
bfg
[
bbi
->
id
][
pi
] =
NULL
) {

299 
bfg
[
bbi
->
id
][
pi
] = 
	`√w_bbb
(bbi->id, 
bhr
);

300 
bfg
[
bbi
->
id
][
pi
]->id = 
num_bfg_nodes
++;

301 
	`íqueue
(&
w‹kli°
, &
bfg
[
bbi
->
id
][
pi
]);

303 
	`√w_bfg_edge
(
x
, 
bfg
[
bbi
->
id
][
pi
], 
bønch
);

307 i‡(
num_bfg_nodes
 < 77777) {

308 
roŸ_bbb_id
 = 77777;

309 
íd_bbb_id
 = 88888;

311 
	`Ârötf
(
°dîr
, "Program complexity is overánalysisÜimit!\n");

312 
	`exô
(1);

314 
roŸ_bbb
.
id
 = 
roŸ_bbb_id
;

315 
íd_bbb
.
id
 = 
íd_bbb_id
;

316 
	}
}

322 
	$cﬁÀ˘_bfg_nodes
()

324 
i
, 
j
, 
id
;

325 
tcfg_node_t
 *
p
;

327 
vbbb
 = (
bfg_node_t
 **Ë
	`mÆloc
(
num_bfg_nodes
 * (bfg_node_t *));

328 
	`CHECK_MEM
(
vbbb
);

329 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

330 
j
 = 0; j < 
BHT_SIZE
; j++) {

331 i‡(
bfg
[
i
][
j
] !
NULL
) {

332 
vbbb
[
bfg
[
i
][
j
]->
id
] = bfg[i][j];

336 
	}
}

341 
	$dump_bfg
()

343 
i
, 
j
;

344 
bfg_edge_t
 *
e
;

345 
bnum
 = 0;

347 
	`¥ötf
("\ndump bfg\n");

348 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

349 
j
 = 0; j < 
BHT_SIZE
; j++) {

350 i‡(
bfg
[
i
][
j
] =
NULL
)

352 
	`¥ötf
("%d(%d_%xË[ ", 
bfg
[
i
][
j
]->
id
, bfg[i][j]->
bbi
->id, bfg[i][j]->
pi
);

353 
e
 = 
bfg
[
i
][
j
]->
out
;É !
NULL
;É =É->
√xt_out
) {

354 i‡(
e
->
d°
->
id
 >
num_bfg_nodes
)

355 
	`¥ötf
("%d(%d_%xË", 
e
->
d°
->
id
,É->d°->id,É->d°->
pi
);

357 
	`¥ötf
("%d(%d_%xË", 
e
->
d°
->
id
,É->d°->
bbi
->id,É->d°->
pi
);

359 
	`¥ötf
(" ]\n");

360 i‡(
	`bbi_ty≥
(
bfg
[
i
][
j
]->
bbi
Ë=
CTRL_COND
)

361 
bnum
++;

364 
	}
}

369 
	$buûd_bfg
()

371 
	`öô_bfg
();

372 
	`åav_tcfg
();

373 
	`cﬁÀ˘_bfg_nodes
();

375 
	}
}

385 
btg_edge_t
 **
	gbtg_ö
, **
	gbtg_out
;

386 
btg_edge_t
 **
	gíd_bbb_ö
, **
	groŸ_bbb_out
;

391 
	$ªach
(
bfg_node_t
 *
x
, bfg_node_à*
y
, 
bønch
)

393 
btg_edge_t
 *
p
;

395 
p
 = (
btg_edge_t
 *Ë
	`mÆloc
((btg_edge_t));

396 
	`CHECK_MEM
(
p
);

398 
p
->
§c
 = 
x
;Ö->
d°
 = 
y
;

399 
p
->
bønch
 = branch;

400 
p
->
√xt_out
 = 
btg_out
[
x
->
id
];

401 
btg_out
[
x
->
id
] = 
p
;

402 
p
->
√xt_ö
 = 
btg_ö
[
y
->
id
];

403 
btg_ö
[
y
->
id
] = 
p
;

404 
	}
}

410 
	$ªach_íd
(
bfg_node_t
 *
x
, 
bønch
)

412 
btg_edge_t
 *
p
;

414 
p
 = (
btg_edge_t
 *Ë
	`mÆloc
((btg_edge_t));

415 
	`CHECK_MEM
(
p
);

417 
p
->
§c
 = 
x
;Ö->
d°
 = &
íd_bbb
;

418 
p
->
bønch
 = branch;

419 
p
->
√xt_out
 = 
btg_out
[
x
->
id
];

420 
btg_out
[
x
->
id
] = 
p
;

421 
p
->
√xt_ö
 = 
íd_bbb_ö
[
x
->
pi
];

422 
íd_bbb_ö
[
x
->
pi
] = 
p
;

423 
	}
}

428 
	$cﬁÀ˘_ªachabÀs
(
bfg_node_t
 *
bbb
, 
bønch
)

430 
ªached
, 
íd_ªached
;

431 
Queue
 
w‹kli°
;

432 
bfg_node_t
 *
x
, *
y
;

433 
bfg_edge_t
 *
e
;

435 i‡(
bbb
->
out
->
bønch
 == branch) {

436 
x
 = 
bbb
->
out
->
d°
;

437 
ªached
 = (Ë
bbb
->
out
;

439 
x
 = 
bbb
->
out
->
√xt_out
->
d°
;

440 
ªached
 = (Ë
bbb
->
out
->
√xt_out
;

443 
	`öô_queue
(&
w‹kli°
, (
bfg_node_t
 *));

444 
	`íqueue
(&
w‹kli°
, &
x
);

445 
x
->
Êags
 = 
ªached
;

446 
íd_ªached
 = 0;

448 !
	`queue_em±y
(&
w‹kli°
)) {

449 
x
 = *((
bfg_node_t
 **Ë
	`dequeue
(&
w‹kli°
));

450 i‡(
x
->
pi
 =
bbb
->pi) {

451 
	`ªach
(
bbb
, 
x
, 
bønch
);

452 } i‡(
x
->
out
 =
NULL
) {

453 i‡(!
íd_ªached
) {

454 
	`ªach_íd
(
bbb
, 
bønch
);

455 
íd_ªached
 = 1;

458 
y
 = 
x
->
out
->
d°
;

459 i‡(
y
->
Êags
 !
ªached
) {

460 
	`íqueue
(&
w‹kli°
, &
y
);

461 
y
->
Êags
 = 
ªached
;

463 
y
 = 
x
->
out
->
√xt_out
->
d°
;

464 i‡(
y
->
Êags
 !
ªached
) {

465 
	`íqueue
(&
w‹kli°
, &
y
);

466 
y
->
Êags
 = 
ªached
;

470 
	`‰ì_queue
(&
w‹kli°
);

471 
	}
}

478 
	$roŸ_ªach
(
bfg_node_t
 *
èrgë
)

480 
btg_edge_t
 *
p
;

482 
p
 = (
btg_edge_t
 *Ë
	`mÆloc
((btg_edge_t));

483 
	`CHECK_MEM
(
p
);

485 
p
->
§c
 = &
roŸ_bbb
;Ö->
d°
 = 
èrgë
;

486 
p
->
bønch
 = 
NOT_TAKEN
;

487 
p
->
√xt_out
 = 
roŸ_bbb_out
[
èrgë
->
pi
];

488 
roŸ_bbb_out
[
èrgë
->
pi
] = 
p
;

489 
p
->
√xt_ö
 = 
btg_ö
[
èrgë
->
id
];

490 
btg_ö
[
èrgë
->
id
] = 
p
;

491 
	}
}

497 
	$roŸ_ªach_íd
(
pi
)

499 
btg_edge_t
 *
p
;

501 
p
 = (
btg_edge_t
 *Ë
	`mÆloc
((btg_edge_t));

502 
	`CHECK_MEM
(
p
);

504 
p
->
§c
 = &
roŸ_bbb
;Ö->
d°
 = &
íd_bbb
;

505 
p
->
bønch
 = 
NOT_TAKEN
;

506 
p
->
√xt_out
 = 
roŸ_bbb_out
[
pi
];

507 
roŸ_bbb_out
[
pi
] = 
p
;

508 
p
->
√xt_ö
 = 
íd_bbb_ö
[
pi
];

509 
íd_bbb_ö
[
pi
] = 
p
;

510 
	}
}

517 
	$cﬁÀ˘_roŸ_ªachabÀ
(
pi
)

519 
íd_ªached
;

520 
Queue
 
w‹kli°
;

521 
bfg_node_t
 *
x
, *
y
;

522 
bfg_edge_t
 *
e
;

524 i‡(
vbbb
[0]->
pi
 ==Öi) {

525 
	`roŸ_ªach
(
vbbb
[0]);

529 
	`öô_queue
(&
w‹kli°
, (
bfg_node_t
 *));

530 
	`íqueue
(&
w‹kli°
, &
vbbb
[0]);

531 
vbbb
[0]->
Êags
 =
pi
;

532 
íd_ªached
 = 0;

534 !
	`queue_em±y
(&
w‹kli°
)) {

535 
x
 = *((
bfg_node_t
 **Ë
	`dequeue
(&
w‹kli°
));

536 i‡(
x
->
pi
 ==Öi) {

537 
	`roŸ_ªach
(
x
);

538 } i‡(
x
->
out
 =
NULL
) {

539 i‡(!
íd_ªached
) {

540 
	`roŸ_ªach_íd
(
pi
);

541 
íd_ªached
 = 1;

544 
y
 = 
x
->
out
->
d°
;

545 i‡(
y
->
Êags
 !
pi
) {

546 
	`íqueue
(&
w‹kli°
, &
y
);

547 
y
->
Êags
 = 
pi
;

549 
y
 = 
x
->
out
->
√xt_out
->
d°
;

550 i‡(
y
->
Êags
 !
pi
) {

551 
	`íqueue
(&
w‹kli°
, &
y
);

552 
y
->
Êags
 = 
pi
;

556 
	`‰ì_queue
(&
w‹kli°
);

557 
	}
}

562 
	$dump_btg
()

564 
i
, 
id
;

565 
btg_edge_t
 *
p
;

567 
	`¥ötf
("\ndump branchÅransition graph\n");

569 
i
 = 0; i < 
BHT_SIZE
; i++) {

570 i‡(
roŸ_bbb_out
[
i
] =
NULL
)

572 
	`¥ötf
("roŸ[%d]: ", 
i
);

573 
p
 = 
roŸ_bbb_out
[
i
];Ö !
NULL
;Ö =Ö->
√xt_out
)

574 
	`¥ötf
("%d ", 
p
->
d°
->
id
);

575 
	`¥ötf
("\n");

578 
i
 = 0; i < 
num_bfg_nodes
; i++) {

579 i‡(!(
	`bbi_ty≥
(
vbbb
[
i
]->
bbi
Ë=
CTRL_COND
))

581 
	`¥ötf
("OUT[%d]: ", 
i
);

583 
p
 = 
btg_out
[
i
];Ö !
NULL
;Ö =Ö->
√xt_out
)

584 
	`¥ötf
("%d(%cË", 
p
->
d°
->
id
, (p->
bønch
 =
TAKEN
) ? 'T' : 'N');

585 
	`¥ötf
("\n");

587 
	`¥ötf
("IN[%d]: ", 
i
);

588 
p
 = 
btg_ö
[
i
];Ö !
NULL
;Ö =Ö->
√xt_ö
)

589 
	`¥ötf
("%d(%cË", 
p
->
§c
->
id
, (p->
bønch
 =
TAKEN
) ? 'T' : 'N');

590 
	`¥ötf
("\n");

593 
i
 = 0; i < 
BHT_SIZE
; i++) {

594 i‡(
íd_bbb_ö
[
i
] =
NULL
)

596 
	`¥ötf
("íd[%d]: ", 
i
);

597 
p
 = 
íd_bbb_ö
[
i
];Ö !
NULL
;Ö =Ö->
√xt_ö
)

598 i‡(
p
->
§c
->
id
 =
roŸ_bbb_id
)

599 
	`¥ötf
("%d ", 
p
->
§c
->
id
);

601 
	`¥ötf
("%d(%cË", 
p
->
§c
->
id
, (p->
bønch
 =
TAKEN
) ? 'T' : 'N');

602 
	`¥ötf
("\n");

604 
	}
}

609 
	$buûd_btg
()

611 
i
;

613 
btg_ö
 = (
btg_edge_t
 **Ë
	`ˇŒoc
(
num_bfg_nodes
, (btg_edge_t *));

614 
btg_out
 = (
btg_edge_t
 **Ë
	`ˇŒoc
(
num_bfg_nodes
, (btg_edge_t *));

615 
	`CHECK_MEM
(
btg_ö
);

616 
	`CHECK_MEM
(
btg_out
);

617 
roŸ_bbb_out
 = (
btg_edge_t
**Ë
	`ˇŒoc
(
BHT_SIZE
, (btg_edge_t *));

618 
íd_bbb_ö
 = (
btg_edge_t
**Ë
	`ˇŒoc
(
BHT_SIZE
, (btg_edge_t *));

620 
i
 = 0; i < 
num_bfg_nodes
; i++) {

621 
	`cﬁÀ˘_ªachabÀs
(
vbbb
[
i
], 
TAKEN
);

622 
	`cﬁÀ˘_ªachabÀs
(
vbbb
[
i
], 
NOT_TAKEN
);

627 
i
 = 0; i< 
num_bfg_nodes
; i++)

628 
vbbb
[
i
]->
Êags
 = 
BHT_SIZE
;

629 
íd_bbb
.
Êags
 = 
BHT_SIZE
;

630 
i
=0; i < 
BHT_SIZE
; i++) {

631 i‡(
pi_èbÀ
[
i
])

632 
	`cﬁÀ˘_roŸ_ªachabÀ
(
i
);

634 
i
=0; i < 
num_bfg_nodes
; i++)

635 
vbbb
[
i
]->
Êags
 = 0;

638 
	}
}

643 
	$b¥ed_™Æysis
()

646 
	`cﬁÀ˘_mp_ö°s
();

647 
	`buûd_bfg
();

648 
	`buûd_btg
();

649 
	}
}

	@bpred.h

26 #i‚de‡
BPRED_H


27 
	#BPRED_H


	)

29 
	~"comm⁄.h
"

30 
	~"tcfg.h
"

32 
	#BP_NONE
 0

	)

33 
	#BP_CPRED
 1

	)

34 
	#BP_MPRED
 2

	)

35 
	#BP_UNCLEAR
 3

	)

37 
	#ROOT_BBB_ID
 77777

	)

38 
	#END_BBB_ID
 99999

	)

41 
	eb¥ed_scheme_t
 { 
	mNO_BPRED
, 
	mGAG
, 
	mGSHARE
, 
	mLOCAL
 };

44 
bfg_edge_t
 
	tbfg_edge_t
;

48 
tcfg_node_t
 *
	mbbi
;

49 
	mid
;

50 
	mbhr
;

51 
	mpi
;

52 
bfg_edge_t
 *
	mout
;

53 
bfg_edge_t
 *
	mö
;

55 
	mÊags
;

56 } 
	tbfg_node_t
;

61 
	sbfg_edge_t
 {

62 
	mbønch
;

63 
bfg_node_t
 *
	m§c
, *
	md°
;

64 
bfg_edge_t
 *
	m¥ev_out
, *
	m√xt_out
, *
	m¥ev_ö
, *
	m√xt_ö
;

69 
btg_edge_t
 
	tbtg_edge_t
;

71 
	sbtg_edge_t
 {

72 
bfg_node_t
 *
	m§c
, *
	md°
;

73 
	mbønch
;

74 
btg_edge_t
 *
	m√xt_ö
, *
	m√xt_out
;

80 
bbb_ö°_num
(
bfg_node_t
 *
bbb
);

83 
b¥ed_™Æys
();

86 
dump_bfg
();

	@cache.c

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~"comm⁄.h
"

26 
	~"tcfg.h
"

27 
	~"ˇche.h
"

28 
	~"b¥ed.h
"

29 
	~"lo›s.h
"

32 
¥og_t
 
¥og
;

33 
num_tcfg_nodes
;

34 
tcfg_node_t
 **
tcfg
;

35 
num_tcfg_edges
;

36 
tcfg_edge_t
 **
tcfg_edges
;

37 
pùe_ibuf_size
;

38 
pùe_iwö_size
;

39 
b¥ed_scheme
;

40 *
num_mp_ö°s
;

41 
de_ö°_t
 ***
mp_ö°s
;

42 
num_tcfg_lo›s
;

43 
lo›_t
 **
lo›_m≠
;

44 
lo›_t
 **
lo›s
;

45 
lo›_t
 ***
lo›_comm_™˚s
;

48 *
	gnum_hô_miss
;

49 
ˇche_t
 
	gˇche
;

51 
ˇche_t
 
	gˇche_l2
;

53 *
	gnum_mblks
;

58 
mem_blk_t
 **
	ggí
;

63 
mem_blk_t
 **
	gmp_gí
;

65 
èg_lök_t
 
	tèg_lök_t
;

66 
	sèg_lök_t
 {

67 
	mèg
;

68 
èg_lök_t
 *
	m√xt
;

71 
èg_lök_t
 ***
	glo›_ˇche_ègs
;

72 **
	gnum_mblk_c⁄Êi˘s
;

73 
lo›_t
 ***
	gmblk_hô_lo›
;

74 
lo›_t
 ***
	gbbi_hm_li°
;

75 *
num_hô_miss
;

80 
dump_gí
();

83 
dump_lo›_ègs
();

86 
dump_mblk_hôlo›
();

89 
dump_hm_li°
();

95 
	$£t_ˇche_basic
(
n£ts
, 
assoc
, 
bsize
, 
miss_≥«…y
)

97 
ˇche
.
ns
 = 
n£ts
;

98 
ˇche
.
«
 = 
assoc
;

99 
ˇche
.
ls
 = 
bsize
;

100 
ˇche
.
cmp
 = 
miss_≥«…y
;

101 
	}
}

106 
	$£t_l2_ˇche_basic
(
n£ts_l2
, 
assoc_l2
, 
bsize_l2
, 
miss_≥«…y
)

108 
ˇche_l2
.
ns
 = 
n£ts_l2
;

109 
ˇche_l2
.
«
 = 
assoc_l2
;

110 
ˇche_l2
.
ls
 = 
bsize_l2
;

111 
ˇche_l2
.
cmp
 = 
miss_≥«…y
;

112 
	}
}

117 
	$£t_ˇche
()

119 
i
, 
n
;

121 
ˇche
.
nsb
 = 
	`log_ba£2
(ˇche.
ns
);

122 
ˇche
.
lsb
 = 
	`log_ba£2
(ˇche.
ls
);

124 
ˇche
.
¡b
 = 
MAX_TAG_BITS
;

125 
ˇche
.
¡
 = 1 << cache.
¡b
;

127 
ˇche
.
t_sb
 = cache.
¡b
 + cache.
nsb
;

128 
ˇche
.
s_lb
 = cache.
nsb
 + cache.
lsb
;

129 
ˇche
.
¡_s
 = 1 << cache.
t_sb
;

131 
ˇche
.
l_msk
 = (1 << cache.
lsb
) - 1;

133 
ˇche
.
s_msk
 = 0;

134 
i
 = 1; i < 
ˇche
.
ns
; i <<= 1)

135 
ˇche
.
s_msk
 |
i
;

136 
ˇche
.
s_msk
 <<ˇche.
lsb
;

138 
ˇche
.
t_msk
 = 0;

139 
i
 = 1; i < 
ˇche
.
¡
; i <<= 1)

140 
ˇche
.
t_msk
 |
i
;

141 
ˇche
.
t_msk
 <<ˇche.
lsb
 + cache.
nsb
;

143 
ˇche
.
t_s_msk
 = cache.
t_msk
 | cache.
s_msk
;

144 
	}
}

149 
	$£t_ˇche_l2
()

151 
i
, 
n
;

153 
ˇche_l2
.
nsb
 = 
	`log_ba£2
(ˇche_l2.
ns
);

154 
ˇche_l2
.
lsb
 = 
	`log_ba£2
(ˇche_l2.
ls
);

156 
ˇche_l2
.
¡b
 = 
MAX_TAG_BITS
;

157 
ˇche_l2
.
¡
 = 1 << cache_l2.
¡b
;

159 
ˇche_l2
.
t_sb
 = cache_l2.
¡b
 + cache_l2.
nsb
;

160 
ˇche_l2
.
s_lb
 = cache_l2.
nsb
 + cache_l2.
lsb
;

161 
ˇche_l2
.
¡_s
 = 1 << cache_l2.
t_sb
;

163 
ˇche_l2
.
l_msk
 = (1 << cache_l2.
lsb
) - 1;

165 
ˇche_l2
.
s_msk
 = 0;

166 
i
 = 1; i < 
ˇche_l2
.
ns
; i <<= 1)

167 
ˇche_l2
.
s_msk
 |
i
;

168 
ˇche_l2
.
s_msk
 <<ˇche_l2.
lsb
;

170 
ˇche_l2
.
t_msk
 = 0;

171 
i
 = 1; i < 
ˇche_l2
.
¡
; i <<= 1)

172 
ˇche_l2
.
t_msk
 |
i
;

173 
ˇche_l2
.
t_msk
 <<ˇche_l2.
lsb
 + cache_l2.
nsb
;

175 
ˇche_l2
.
t_s_msk
 = cache_l2.
t_msk
 | cache_l2.
s_msk
;

176 
	}
}

182 
	$tcfg_node_gí
(
tcfg_node_t
 *
bbi
)

184 
addr_t
 
addr
, 
ó
;

185 
mem_blk_t
 
mblk
, *
p
;

186 
i
, 
£t
, 
èg
, 
num_upd©es
 = 0;

187 
Queue
 
w‹kli°
;

189 
	`öô_queue
(&
w‹kli°
, (
mem_blk_t
));

191 
addr
 = 
	`CLEAR_LSB
(
bbi
->
bb
->
ß
);

192 
ó
 = 
bbi
->
bb
->
ß
 + bbi->bb->
size
;

193 
addr
 < 
ó
) {

194 
mblk
.
£t
 = 
	`SET
(
addr
);

195 
mblk
.
èg
 = 
	`TAG
(
addr
);

196 
	`íqueue
(&
w‹kli°
, &
mblk
);

197 
addr
 +
ˇche
.
ls
;

198 
num_upd©es
++;

201 
gí
[
bbi
->
id
] = (
mem_blk_t
 *Ë
	`ˇŒoc
(
num_upd©es
+1, (mem_blk_t));

202 
	`CHECK_MEM
(
gí
[
bbi
->
id
]);

203 
i
 = 0; i < 
num_upd©es
; i++) {

204 
p
 = (
mem_blk_t
 *Ë
	`dequeue
(&
w‹kli°
);

205 
	`memmove
(&
gí
[
bbi
->
id
][
i
], 
p
, (
mem_blk_t
));

207 
gí
[
bbi
->
id
][
i
].
£t
 = 
MAX_CACHE_SETS
;

209 
	`‰ì_queue
(&
w‹kli°
);

210 
	}
}

216 
	$tcfg_edge_mp_gí
(
tcfg_edge_t
 *
e
)

218 
i
, 
£t
, 
èg
, 
num_upd©es
 = 0;

219 
addr_t
 
addr
, 
ó
;

220 
mem_blk_t
 
mblk
, *
p
;

221 
Queue
 
w‹kli°
;

223 
	`öô_queue
(&
w‹kli°
, (
mem_blk_t
));

225 
mblk
.
£t
 = 
MAX_CACHE_SETS
;

226 
i
 = 0; i < 
num_mp_ö°s
[
e
->
id
]; i++) {

227 
addr
 = 
	`CLEAR_LSB
(
mp_ö°s
[
e
->
id
][
i
]->addr);

228 
ó
 = 
mp_ö°s
[
e
->
id
][
i
]->
addr
 + mp_ö°s[e->id][i]->
size
;

229 
addr
 < 
ó
) {

230 
£t
 = 
	`SET
(
addr
);

231 
èg
 = 
	`TAG
(
addr
);

232 i‡((
£t
 !
mblk
.£tË|| (
èg
 != mblk.tag)) {

233 
mblk
.
£t
 = set;

234 
mblk
.
èg
 =Åag;

235 
	`íqueue
(&
w‹kli°
, &
mblk
);

236 
num_upd©es
++;

238 
addr
 +
ˇche
.
ls
;

241 
mp_gí
[
e
->
id
] = (
mem_blk_t
 *Ë
	`ˇŒoc
(
num_upd©es
+1, (mem_blk_t));

242 
	`CHECK_MEM
(
mp_gí
[
e
->
id
]);

243 
i
 = 0; i < 
num_upd©es
; i++) {

244 
p
 = (
mem_blk_t
 *Ë
	`dequeue
(&
w‹kli°
);

245 
	`memmove
(&
mp_gí
[
e
->
id
][
i
], 
p
, (
mem_blk_t
));

247 
mp_gí
[
e
->
id
][
i
].
£t
 = 
MAX_CACHE_SETS
;

249 
	`‰ì_queue
(&
w‹kli°
);

250 
	}
}

256 
	$ˇlc_gí
()

258 
i
;

261 
gí
 = (
mem_blk_t
 **Ë
	`ˇŒoc
(
num_tcfg_nodes
, (mem_blk_t *));

262 
	`CHECK_MEM
(
gí
);

263 
mp_gí
 = (
mem_blk_t
 **Ë
	`ˇŒoc
(
num_tcfg_edges
, (mem_blk_t *));

264 
	`CHECK_MEM
(
mp_gí
);

266 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

267 
	`tcfg_node_gí
(
tcfg
[
i
]);

270 i‡(
b¥ed_scheme
 =
NO_BPRED
)

273 
i
 = 0; i < 
num_tcfg_edges
; i++) {

274 i‡(
num_mp_ö°s
[
i
] > 0)

275 
	`tcfg_edge_mp_gí
(
tcfg_edges
[
i
]);

277 
	}
}

283 
	$ˇlc_num_mblks
()

285 
i
;

286 
addr_t
 
ß
, 
ó
;

288 
num_mblks
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

289 
	`CHECK_MEM
(
num_mblks
);

291 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

292 
ß
 = 
	`LSB_OFF
(
tcfg
[
i
]->
bb
->sa);

293 
ó
 = 
tcfg
[
i
]->
bb
->
ß
 +Åcfg[i]->bb->
size
;

294 
ó
 = 
	`LSB_OFF
(ea - 1);

295 
num_mblks
[
i
] = 
ó
 - 
ß
 + 1;

297 
	}
}

302 
	$gë_mblks
()

304 
	`ˇlc_num_mblks
();

305 
	`ˇlc_gí
();

306 
	}
}

309 
èg_lök_t
 *

310 
	$£¨ch_èg
(
Õ_id
, 
£t
, 
èg
)

312 
èg_lök_t
 *
èg_li°
, *
p
;

314 
èg_li°
 = 
lo›_ˇche_ègs
[
Õ_id
][
£t
];

315 
p
 = 
èg_li°
;Ö !
NULL
;Ö =Ö->
√xt
) {

316 i‡(
p
->
èg
 ==Åag)

317  
p
;

319  
NULL
;

320 
	}
}

325 
	$add_èg
(
Õ_id
, 
£t
, 
èg
)

327 
èg_lök_t
 *
x
;

329 
x
 = (
èg_lök_t
 *Ë
	`ˇŒoc
(1, (tag_link_t));

330 
x
->
èg
 =Åag;

331 
x
->
√xt
 = 
lo›_ˇche_ègs
[
Õ_id
][
£t
];

332 
lo›_ˇche_ègs
[
Õ_id
][
£t
] = 
x
;

333 
	}
}

340 
	$gë_lo›_ègs
()

342 
i
, 
j
;

343 
£t
, 
èg
;

344 
mem_blk_t
 *
mblk
;

345 
lo›_t
 *
Õ
;

346 
èg_lök_t
 *
p
;

347 
addr_t
 
addr
;

349 
lo›_ˇche_ègs
 = (
èg_lök_t
 ***Ë
	`ˇŒoc
(
num_tcfg_lo›s
, (tag_link_t **));

350 
i
 = 0; i < 
num_tcfg_lo›s
; i++)

351 
lo›_ˇche_ègs
[
i
] = (
èg_lök_t
 **Ë
	`ˇŒoc
(
ˇche
.
ns
, (tag_link_t *));

352 
num_mblk_c⁄Êi˘s
 = (**Ë
	`ˇŒoc
(
num_tcfg_lo›s
, (*));

353 
i
 = 0; i < 
num_tcfg_lo›s
; i++)

354 
num_mblk_c⁄Êi˘s
[
i
] = (*Ë
	`ˇŒoc
(
ˇche
.
ns
, ());

356 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

357 
Õ
 = 
lo›_m≠
[
i
];

358 i‡(
Õ
 =
NULL
)

360 
j
 = 0; j < 
num_mblks
[
i
]; j++) {

361 
£t
 = 
gí
[
i
][
j
].set;

362 
èg
 = 
gí
[
i
][
j
].tag;

363 i‡(
	`£¨ch_èg
(
Õ
->
id
, 
£t
, 
èg
Ë=
NULL
)

364 
	`add_èg
(
Õ
->
id
, 
£t
, 
èg
);

367 
addr
 = 
tcfg
[
i
]->
bb
->
ß
 +Åcfg[i]->bb->
size
;

368 
j
 = 0; j < 
pùe_ibuf_size
 - 1; j++) {

369 
£t
 = 
	`SET
(
addr
);

370 
èg
 = 
	`TAG
(
addr
);

371 i‡(
	`£¨ch_èg
(
Õ
->
id
, 
£t
, 
èg
Ë=
NULL
)

372 
	`add_èg
(
Õ
->
id
, 
£t
, 
èg
);

373 
addr
 +
tcfg
[
i
]->
bb
->
code
[0].
size
;

379 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

380 
Õ
 = 
lo›s
[
i
];

381 
j
 = 0; j < 
num_tcfg_lo›s
; j++) {

382 i‡(
i
 =
j
)

384 i‡(
lo›_comm_™˚s
[
i
][
j
] !
Õ
)

386 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

387 
p
 = 
lo›_ˇche_ègs
[
j
][
£t
];Ö !
NULL
;Ö =Ö->
√xt
) {

388 i‡(
	`£¨ch_èg
(
Õ
->
id
, 
£t
, 
p
->
èg
Ë=
NULL
)

389 
	`add_èg
(
Õ
->
id
, 
£t
, 
p
->
èg
);

396 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

397 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

398 
p
 = 
lo›_ˇche_ègs
[
i
][
£t
];Ö !
NULL
;Ö =Ö->
√xt
) {

399 
num_mblk_c⁄Êi˘s
[
i
][
£t
]++;

404 
	}
}

411 
	$gë_mp_c⁄Êi˘s
(
tcfg_node_t
 *
bbi
)

413 
tcfg_node_t
 *
§c
;

414 
tcfg_edge_t
 *
e
, *
mp_e
;

415 
mem_blk_t
 *
mblks
;

416 
èg0
, 
£t0
, 
c⁄Êi˘_ègs
[32];

417 
num_c⁄Êi˘s
, 
tmp
, 
i
, 
j
, 
max_c⁄Êi˘s
 = 0;

419 
èg0
 = 
	`TAG
(
bbi
->
bb
->
ß
);

420 
£t0
 = 
	`SET
(
bbi
->
bb
->
ß
);

421 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

422 
§c
 = 
e
->src;

423 i‡(!
	`c⁄d_bbi
(
§c
))

425 
mp_e
 = 
§c
->
out
;

426 i‡(
mp_e
->
d°
 =
bbi
)

427 
mp_e
 = mp_e->
√xt_out
;

428 
mblks
 = 
mp_gí
[
mp_e
->
id
];

429 
num_c⁄Êi˘s
 = 0; 
i
 = 0;

430 
mblks
[
i
].
£t
 !
MAX_CACHE_SETS
) {

431 i‡((
mblks
[
i
].
£t
 =
£t0
Ë&& (mblks[i].
èg
 !
èg0
)) {

432 
j
 = 0; j < 
num_c⁄Êi˘s
; j++) {

433 i‡(
c⁄Êi˘_ègs
[
j
] =
mblks
[
i
].
èg
)

436 i‡(
j
 =
num_c⁄Êi˘s
) {

437 
c⁄Êi˘_ègs
[
num_c⁄Êi˘s
] = 
mblks
[
i
].
èg
;

438 
num_c⁄Êi˘s
++;

439 i‡(
num_c⁄Êi˘s
 == 32)

443 
i
++;

445 i‡(
num_c⁄Êi˘s
 > 
max_c⁄Êi˘s
)

446 
max_c⁄Êi˘s
 = 
num_c⁄Êi˘s
;

448  
max_c⁄Êi˘s
;

449 
	}
}

454 
	$h™dÀ_fú°_mblk
(
bbi_id
)

456 
ts1
, 
ts2
, 
num_c⁄Êi˘s
;

457 
tcfg_edge_t
 *
e
;

458 
cfg_node_t
 *
bb
;

460 i‡(
bbi_id
 == 0)

463 
bb
 = 
tcfg
[
bbi_id
]->bb;

464 
ts1
 = 
	`TAGSET
(
bb
->
ß
);

465 
e
 = 
tcfg
[
bbi_id
]->
ö
;É !
NULL
;É =É->
√xt_ö
) {

466 
bb
 = 
e
->
§c
->bb;

467 
ts2
 = 
	`TAGSET
(
bb
->
ß
 + bb->
size
 - 1);

469 i‡(
ts1
 !
ts2
)

472 i‡(
e
 !
NULL
)

475 i‡(
b¥ed_scheme
 =
NO_BPRED
) {

476 
mblk_hô_lo›
[
bbi_id
][0] = 
lo›s
[0];

478 
num_c⁄Êi˘s
 = 
	`gë_mp_c⁄Êi˘s
(
tcfg
[
bbi_id
]);

479 i‡(
num_c⁄Êi˘s
 < 
ˇche
.
«
)

480 
mblk_hô_lo›
[
bbi_id
][0] = 
lo›s
[0];

482 
mblk_hô_lo›
[
bbi_id
][0] = 
NULL
;

485 
	}
}

490 
	$h™dÀ_Ÿhî_mblk
(
bbi_id
, 
°¨t_mb
)

492 
mb_id
, 
£t
;

493 
lo›_t
 *
Õ
;

495 
mb_id
 = 
°¨t_mb
; mb_id < 
num_mblks
[
bbi_id
]; mb_id++) {

496 
£t
 = 
gí
[
bbi_id
][
mb_id
].set;

497 
Õ
 = 
lo›_m≠
[
bbi_id
];Ü∞!
NULL
;Ü∞Õ->
∑ª¡
) {

499 i‡(
num_mblk_c⁄Êi˘s
[
Õ
->
id
][
£t
] > 
ˇche
.
«
)

501 
mblk_hô_lo›
[
bbi_id
][
mb_id
] = 
Õ
;

504 
	}
}

513 
	$föd_hôlo›
()

515 
i
, 
°¨t_mb
;

516 
lo›_t
 *
Õ
;

517 
tcfg_edge_t
 *
e
;

519 
	`gë_lo›_ègs
();

521 
mblk_hô_lo›
 = (
lo›_t
 ***Ë
	`ˇŒoc
(
num_tcfg_nodes
, (loop_t **));

522 
i
 = 0; i < 
num_tcfg_nodes
; i++)

523 
mblk_hô_lo›
[
i
] = (
lo›_t
 **Ë
	`ˇŒoc
(
num_mblks
[i], (loop_t *));

524 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

525 
°¨t_mb
 = 
	`h™dÀ_fú°_mblk
(
i
);

526 
	`h™dÀ_Ÿhî_mblk
(
i
, 
°¨t_mb
);

529 
	}
}

534 
	$bbi_ˇãg‹ize
(
tcfg_node_t
 *
bbi
, 
lo›_t
 **
bbi_hô_lo›s
, 
Àn
)

536 
i
;

538 i‡(
Àn
 == 0) {

539 
bbi_hm_li°
[
bbi
->
id
] = (
lo›_t
 **Ë
	`ˇŒoc
(1, (loop_t *));

540 
bbi_hm_li°
[
bbi
->
id
][0] = 
NULL
;

541 
num_hô_miss
[
bbi
->
id
] = 1;

544 
bbi_hm_li°
[
bbi
->
id
] = (
lo›_t
 **Ë
	`ˇŒoc
(
Àn
+1, (loop_t *));

545 
	`memmove
(
bbi_hm_li°
[
bbi
->
id
], 
bbi_hô_lo›s
, 
Àn
 * (
lo›_t
 *));

546 
bbi_hm_li°
[
bbi
->
id
][
Àn
] = bbi_hm_li°[bbi->id][Àn-1]->
∑ª¡
;

547 
num_hô_miss
[
bbi
->
id
] = 
Àn
+1;

548 
	}
}

557 
	$ˇãg‹ize
()

559 
i
, 
j
, 
Æl_miss
 = 0, 
Àn
;

560 
lo›_t
 *
queue
[
MAX_LOOP_NEST
], *
Õ
;

562 
bbi_hm_li°
 = (
lo›_t
 ***Ë
	`ˇŒoc
(
num_tcfg_nodes
, (loop_t **));

563 
num_hô_miss
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

565 
	`£t_lo›_Êags
(0);

566 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

567 
Àn
 = 0;

568 
Õ
 = 
lo›_m≠
[
i
];Ü∞!
NULL
;Ü∞Õ->
∑ª¡
) {

569 
j
 = 0; j < 
num_mblks
[
i
]; j++) {

570 i‡(
Õ
 =
mblk_hô_lo›
[
i
][
j
]) {

571 
queue
[
Àn
++] = 
Õ
;

576 
	`bbi_ˇãg‹ize
(
tcfg
[
i
], 
queue
, 
Àn
);

578 
	`£t_lo›_Êags
(0);

580 
	}
}

585 
	$ˇche_™Æysis
()

588 
	`£t_ˇche
();

589 
	`gë_mblks
();

590 
	`föd_hôlo›
();

591 
	`ˇãg‹ize
();

592 
	}
}

600 
	$gë_mblk_hômiss
(
tcfg_node_t
 *
bbi
, 
mblk_id
, 
lo›_t
 *
Õ
)

602 
lo›_t
 *
Õ1
, *
Õ2
;

604 
Õ1
 = 
mblk_hô_lo›
[
bbi
->
id
][
mblk_id
];

605 i‡((
Õ
 =
NULL
Ë|| (
Õ1
 == NULL))

606  
IC_MISS
;

607 i‡(
Õ
 =
Õ1
)

608  
IC_HIT
;

610 
Õ2
 = 
lo›_comm_™˚s
[
Õ
->
id
][
Õ1
->id];

611 i‡(
Õ2
 =
Õ1
)

612  
IC_HIT
;

614  
IC_MISS
;

616 
	}
}

620 
	$gë_mblk_hômiss
(
tcfg_node_t
* 
bbi
, 
mblk_id
, 
lo›_t
* 
Õ
)

622 
cfg_node_t
* 
bb
 = 
bbi
->bb;

623 
de_ö°_t
* 
ö°
;

624 
off£t
, 
mblk
;

625 
i
;

627 
ö°
 = 
bb
->
code
;

629 
i
 = 0; i < 
bb
->
num_ö°
; i++)

631 
mblk
 = 
	`MBLK_ID
(
bb
->
ß
, 
ö°
->
addr
);

633 if(
mblk
 =
mblk_id
)

636 i‡(
ö°
->
ö°_ac˚ss
 =
ALL_HIT
) {

637 #ifde‡
_NDEBUG_CRPD


638 
	`¥ötf
("Returning Hit\n");

640  
IC_HIT
;

642 i‡(
ö°
->
ö°_ac˚ss
 =
ALL_MISS
) {

643 #ifde‡
_NDEBUG_CRPD


644 
	`¥ötf
("Returning miss\n");

646  
IC_MISS
;

649 #ifde‡
_NDEBUG_CRPD


650 
	`¥ötf
("Returning unclear\n");

652  
IC_UNCLEAR
;

655 i‡(
ö°_chmc_l1
[
bbi
->
id
][
i
] =
ALL_HIT
)

656  
IC_HIT
;

657 i‡(
ö°_chmc_l1
[
bbi
->
id
][
i
] =
ALL_MISS
)

658  
IC_MISS
;

660  
IC_UNCLEAR
;

662 
ö°
++;

666 #ifde‡
_DEBUG_CRPD


667 
	`¥ötf
("CHMC categorizationÉrror\n");

670 
	}
}

678 
	$gë_mblk_hômiss_l2
(
tcfg_node_t
* 
bbi
, 
mblk_id
, 
lo›_t
* 
Õ
)

680 
cfg_node_t
* 
bb
 = 
bbi
->bb;

681 
de_ö°_t
* 
ö°
;

682 
off£t
, 
mblk
;

683 
i
;

685 
ö°
 = 
bb
->
code
;

687 
i
 = 0; i < 
bb
->
num_ö°
; i++)

689 
mblk
 = 
	`MBLK_ID_L2
(
bb
->
ß
, 
ö°
->
addr
);

691 if(
mblk
 =
mblk_id
)

694 i‡(
ö°
->
l2_ö°_ac˚ss
 =
ALL_HIT
) {

695 #ifde‡
_NDEBUG_CRPD


696 
	`¥ötf
("Returning Hit\n");

698  
IC_HIT
;

700 i‡(
ö°
->
l2_ö°_ac˚ss
 =
ALL_MISS
) {

701 #ifde‡
_NDEBUG_CRPD


702 
	`¥ötf
("Returning miss\n");

704  
IC_MISS
;

707 #ifde‡
_NDEBUG_CRPD


708 
	`¥ötf
("Returning unclear\n");

710  
IC_UNCLEAR
;

713 i‡(
ö°_chmc_l2
[
bbi
->
id
][
i
] =
ALL_HIT
)

714  
IC_HIT
;

715 i‡(
ö°_chmc_l2
[
bbi
->
id
][
i
] =
ALL_MISS
)

716  
IC_MISS
;

718  
IC_UNCLEAR
;

720 
ö°
++;

724 #ifde‡
_DEBUG_CRPD


725 
	`¥ötf
("L2 CHMC categorizationÉrror\n");

728 
	}
}

731 
	$dump_gí
()

733 
tcfg_node_t
 *
§c
, *
d°
;

734 
mem_blk_t
 *
mblk
;

735 
i
;

737 
i
 = 0; i < 
num_tcfg_edges
; i++) {

738 
§c
 = 
tcfg_edges
[
i
]->src;

739 
d°
 = 
tcfg_edges
[
i
]->dst;

740 
	`¥ötf
("tcfg_edge: %d.%d -> %d.%d\n", 
	`bbi_pid
(
§c
), 
	`bbi_bid
(src),

741 
	`bbi_pid
(
d°
), 
	`bbi_bid
(dst));

742 
mblk
 = 
gí
[
§c
->
id
]; mblk->
£t
 !
MAX_CACHE_SETS
; mblk++)

743 
	`¥ötf
("\t£t=%x: %x\n", 
mblk
->
£t
, mblk->
èg
);

744 i‡(
mp_gí
[
i
] =
NULL
)

746 
	`¥ötf
("\t---------------\n");

747 
mblk
 = 
mp_gí
[
i
]; mblk->
£t
 !
MAX_CACHE_SETS
; mblk++)

748 
	`¥ötf
("\t£t=%x: %x\n", 
mblk
->
£t
, mblk->
èg
);

751 
	}
}

756 
	$dump_lo›_ègs
()

758 
i
;

759 
£t
, 
èg
;

760 
èg_lök_t
 *
p
;

762 
	`¥ötf
("dumpÜoopÅags...\n");

763 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

764 
	`¥ötf
("lo›[%d]\n", 
i
);

765 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

766 
	`¥ötf
("\t%d: ", 
£t
);

767 
p
 = 
lo›_ˇche_ègs
[
i
][
£t
];Ö !
NULL
;Ö =Ö->
√xt
)

768 
	`¥ötf
("%x ", 
p
->
èg
);

769 
	`¥ötf
("\n");

772 
	}
}

777 
	$dump_mblk_hôlo›
()

779 
i
, 
j
;

780 
	`¥ötf
("\ndump_mblk_hit_loop...\n");

781 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

782 
	`¥ötf
("bbi[%d]/%d:\n", 
i
, 
num_mblks
[i]);

783 
j
 = 0; j < 
num_mblks
[
i
]; j++) {

784 i‡(
mblk_hô_lo›
[
i
][
j
] =
NULL
)

785 
	`¥ötf
("\t%d:Üo›[ ]\n", 
j
);

787 
	`¥ötf
("\t%d:Üo›[%d]\n", 
j
, 
mblk_hô_lo›
[
i
][j]->
id
);

790 
	}
}

795 
	$dump_hm_li°
()

797 
i
, 
j
;

799 
	`¥ötf
("dump bbi_hm_list...\n");

800 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

801 
	`¥ötf
("bbi[%d]: ", 
i
);

802 
j
 = 0; j < 
num_hô_miss
[
i
]; j++) {

803 i‡(
bbi_hm_li°
[
i
][
j
] =
NULL
)

804 
	`¥ötf
("\tloop[ ] ");

806 
	`¥ötf
("\éo›[%d] ", 
bbi_hm_li°
[
i
][
j
]->
id
);

808 
	`¥ötf
("\n");

810 
	}
}

	@cache.h

22 #i‚de‡
CACHE_H


23 
	#CACHE_H


	)

24 
	~"addªss.h
"

25 
	#MAX_CACHE_SETS
 1024

	)

31 
	#MAX_TAG_BITS
 14

	)

34 
	#CACHE_LINE
(
addr
Ë(◊ddrË& 
ˇche
.
l_msk
)

	)

35 
	#SET
(
addr
Ë((◊ddrË& 
ˇche
.
s_msk
Ë>> cache.
lsb
)

	)

36 
	#TAG
(
addr
Ë((◊ddrË& 
ˇche
.
t_msk
Ë>> cache.
s_lb
)

	)

37 
	#TAGSET
(
addr
Ë((◊ddrË& 
ˇche
.
t_s_msk
Ë>> cache.
lsb
)

	)

38 
	#TAGSET2
(
èg
, 
£t
Ë((—agË<< 
ˇche
.
nsb
Ë| (£t))

	)

39 
	#LSB_OFF
(
addr
Ë(◊ddrË>> 
ˇche
.
lsb
)

	)

40 
	#LSB_ON
(
addr
Ë(◊ddrË<< 
ˇche
.
lsb
)

	)

42 
	#CLEAR_LSB
(
addr
Ë((◊ddrË>> 
ˇche
.
lsb
Ë<< cache.lsb)

	)

43 
	#MBLK_ID
(
ß
, 
addr
Ë(
	`TAGSET
◊ddrË- TAGSET(ß))

	)

45 
	#TAGSET_L2
(
addr
Ë((◊ddrË& 
ˇche_l2
.
t_s_msk
Ë>> cache_l2.
lsb
)

	)

46 
	#CACHE_LINE_L2
(
addr
Ë(◊ddrË& 
ˇche_l2
.
l_msk
)

	)

47 
	#SET_L2
(
addr
Ë((◊ddrË& 
ˇche_l2
.
s_msk
Ë>> cache_l2.
lsb
)

	)

48 
	#TAG_L2
(
addr
Ë((◊ddrË& 
ˇche_l2
.
t_msk
Ë>> cache_l2.
s_lb
)

	)

49 
	#MBLK_ID_L2
(
ß
, 
addr
Ë(
	`TAGSET_L2
◊ddrË- TAGSET_L2(ß))

	)

51 
	#IC_HIT
 0

	)

52 
	#IC_MISS
 1

	)

53 
	#IC_UNCLEAR
 2

	)

54 
	#MC_INC_SIZE
 8

	)

56 
	#DC_HIT
 -1

	)

57 
	#DC_MISS
 -2

	)

58 
	#DC_UNCLEAR
 -3

	)

59 
	#DC_STORE
 -4

	)

69 íum { 
	mIC_ILP
, 
	mIC_CATEGORIZE
 };

76 
	mns
;

77 
	mls
;

78 
	mnsb
;

79 
	mlsb
;

80 
	mcmp
;

81 
	m«
;

84 
	m¡
;

85 
	m¡b
;

88 
	ms_lb
;

89 
	mt_sb
;

90 
	m¡_s
;

93 
	ml_msk
;

94 
	ms_msk
;

95 
	mt_msk
;

96 
	mt_s_msk
;

97 } 
	tˇche_t
;

103 
	m£t
;

104 
	mèg
;

105 } 
	tmem_blk_t
;

112 
	mvÆid
;

113 
	mèg
;

114 } 
	tmblk_èg_t
;

117 
	smem_blk_£t


119 
	mblock
;

120 
mem_blk_£t
* 
	m√xt
;

123 
mem_blk_£t
 
	tmem_blk_£t_t
;

126 
	sˇche_block
 {

127 
mem_blk_£t_t
* 
	mmem_blk_h
;

130 
	sovr_m≠pög
 {

131 
	mﬁd
;

132 
	m√wb
;

133 
ovr_m≠pög
* 
	m√xt
;

136 
ovr_m≠pög
* 
	tovr_m≠_p
;

137 
ovr_m≠pög
 
	tovr_m≠_s
;

139 
	#CACHE_SIZE
 (
CACHE_SET_SIZE
 * 
MAX_CACHE_SET
 * 
SIZE_OF_BLOCK
)

	)

140 
	#CACHE_SET_SIZE
 
X


	)

141 
	#MAX_CACHE_SET
 
Y


	)

142 
	#PSEUDO
 
CACHE_SET_SIZE


	)

143 
	#DATA_MISS_PENALTY
 6

	)

144 
	#L1_MISS_PENALTY
 
l1


	)

145 
	#L2_MISS_PENALTY
 
l2


	)

146 
	#GET_SET
(
x
Ë((xË% 
MAX_CACHE_SET
)

	)

147 
	#PENALTY
 119400

	)

149 
	eACCESS
 {

150 
	mALL_HIT
 = 0,

151 
	mALL_MISS
,

152 
	mPS
,

153 
	mALL_X
,

154 
	mNOT_CLASSIFIED


157 
	eANALYSIS
 {

158 
	mMUST
 = 0,

159 
	mMAY
,

160 
	mPERSISTENCE


163 
ACCESS
 
	tACCESS_T
;

164 
ANALYSIS
 
	tANALYSIS_T
;

165 
ˇche_block
* 
	tacs_p
;

166 
ˇche_block
 
	tacs_s
;

169 
£t_ˇche_basic
(
n£ts
, 
assoc
, 
bsize
, 
miss_≥«…y
);

171 ** 
	gö°_chmc_l1
;

172 ** 
	gö°_chmc_l2
;

173 ** 
	gö°_age_l1
;

174 ** 
	gö°_age_l2
;

176 
™Æyze_d©a_ˇche
();

177 
™Æyze_abs_ö°r_ˇche_Æl
();

178 
™Æyze_unifõd_ˇche
();

	@cfg.c

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~"comm⁄.h
"

26 
	~"cfg.h
"

29 
iß_t
 *
iß
;

30 
¥og_t
 
¥og
;

37 
	$lookup_addr
(
de_ö°_t
 *
code
, 
num
, 
addr_t
 
addr
)

39 
hi
 = 
num
 - 1, 
lo
 = 0, 
i
;

41 
hi
 >
lo
) {

42 
i
 = (
hi
 + 
lo
) / 2;

43 i‡(
code
[
i
].
addr
 ==áddr)

44  
i
;

45 i‡(
code
[
i
].
addr
 >áddr)

46 
hi
 = 
i
 - 1;

48 
lo
 = 
i
 + 1;

51 
	}
}

58 
	$sˇn_¥ocs
(*
¥oc_ít
)

60 
maö_id
, 
i
, 
tid
;

62 
¥og
.
num_¥ocs
 = 0;

63 
i
 = 0; i < 
¥og
.
num_ö°
; i++) {

65 i‡(
¥og
.
code
[
i
].
addr
 =¥og.
maö_addr
) {

66 i‡(
¥oc_ít
[
i
] == 0) {

67 
¥oc_ít
[
i
] = 1;

68 
¥og
.
num_¥ocs
++;

69 
maö_id
 = 
i
;

71 } i‡(
	`ö°_ty≥
(&
¥og
.
code
[
i
]Ë=
INST_CALL
) {

74 
tid
 = 
	`lookup_addr
(
¥og
.
code
,Örog.
num_ö°
,Örog.code[
i
].
èrgë
);

75 i‡(
tid
 == -1) {

79 i‡(
¥oc_ít
[
tid
] == 0) {

80 
¥oc_ít
[
tid
] = 1;

81 
¥og
.
num_¥ocs
++;

85  
maö_id
;

86 
	}
}

89 
bj±b
;

93 
	$sˇn_blocks
(*
bb_ít
, 
¥oc_t
 *
¥oc
)

95 
i
, 
ty≥
, 
tid
;

96 
de_ö°_t
 *
ö°
;

98 
bb_ít
[0] = 1;

99 
¥oc
->
num_bb
 = 1;

101 
addr_t
 
adr
;

102 
bföd
;

103 
num
;

105 
i
 = 0; i < 
¥oc
->
num_ö°
; i++) {

106 
ö°
 = &
¥oc
->
code
[
i
];

107 
ty≥
 = 
	`ö°_ty≥
(
ö°
);

108 i‡((
ty≥
 =
INST_COND
Ë|| (ty≥ =
INST_UNCOND
)) {

110 
tid
 = 
	`lookup_addr
(
¥oc
->
code
,Öroc->
num_ö°
, 
ö°
->
èrgë
);

111 i‡(
tid
 == -1) {

112 
	`Ârötf
(
°dîr
, "nÿm©ch f‹ bønchÅ¨gë: %x\n", 
ö°
->
èrgë
);

113 
	`exô
(1);

115 i‡(
bb_ít
[
tid
] == 0) {

116 
bb_ít
[
tid
] = 1;

117 
¥oc
->
num_bb
++;

121 i‡(
bb_ít
[
i
+1] == 0) {

122 
bb_ít
[
i
+1] = 1;

123 
¥oc
->
num_bb
++;

125 } i‡(
ty≥
 =
INST_CALL
) {

127 i‡(
bb_ít
[
i
+1] == 0) {

128 
bb_ít
[
i
+1] = 1;

129 
¥oc
->
num_bb
++;

131 } i‡(
ty≥
 =
INST_RET
) {

134 i‡((
i
 < 
¥oc
->
num_ö°
 - 1Ë&& (
bb_ít
[i+1] == 0)) {

135 
bb_ít
[
i
+1] = 1;

136 
¥oc
->
num_bb
++;

140 if(
bj±b
 && 
i
 < 
¥oc
->
num_ö°
 - 1){

141 
bföd
 = 
	`lookup_j±abÀ
(
ö°
->
addr
);

143 if(
bföd
 > 0){

145 
num
 = 0;

147 
bb_ít
[
i
 + 1] +(
bföd
 - 1);

148 
¥oc
->
num_bb
 +(
bföd
 - 1);

150  
num
 < 
bföd
 ){

151 
	`gë_j±abÀ
(
ö°
->
addr
, 
num
, &
adr
);

152 
tid
 = 
	`lookup_addr
(
¥oc
->
code
,Öroc->
num_ö°
, 
adr
);

153 i‡(
tid
 == -1) {

154 
	`¥ötf
("nÿid f‹ jum∞èrgë: %x\n", 
adr
);

157 i‡(
bb_ít
[
tid
] == 0) {

158 
bb_ít
[
tid
] = 1;

159 
¥oc
->
num_bb
++;

161 
num
++;

167 
	}
}

171 
cfg_node_t
 *

172 
	$lookup_bb
(
cfg_node_t
 *
cfg
, 
num
, 
addr_t
 
addr
)

174 
hi
 = 
num
 - 1, 
lo
 = 0, 
i
;

176 
hi
 >
lo
) {

177 
i
 = (
hi
 + 
lo
) / 2;

178 i‡(
cfg
[
i
].
ß
 =
addr
)

179  &
cfg
[
i
];

180 i‡(
cfg
[
i
].
ß
 > 
addr
)

181 
hi
 = 
i
 - 1;

183 
lo
 = 
i
 + 1;

185  
NULL
;

186 
	}
}

195 
	$√w_edge
(
cfg_node_t
 *
§c
, cfg_node_à*
d°
, 
èkí
)

197 
cfg_edge_t
 *
e
 = (cfg_edge_à*Ë
	`mÆloc
((cfg_edge_t));

198 
	`CHECK_MEM
(
e
);

199 
e
->
§c
 = src;É->
d°
 = dst;

200 i‡(
èkí
 =
NOT_TAKEN
)

201 
§c
->
out_n
 = 
e
;

203 
§c
->
out_t
 = 
e
;

204 
d°
->
num_ö
++;

205 
d°
->
ö
 = (
cfg_edge_t
 **Ë
	`ªÆloc
(d°->ö, d°->
num_ö
 * (cfg_edge_t *));

206 
	`CHECK_MEM
(
d°
->
ö
);

207 
d°
->
ö
[d°->
num_ö
 - 1] = 
e
;

208 
	}
}

211 
bj±b
;

217 
	$¸óã_cfg_edges
(
¥oc_t
 *
¥oc
)

219 
i
, 
ty≥
;

220 
cfg_node_t
 *
bb
, *
bb1
;

222 
addr_t
 
adr
;

223 
bföd
;

225 
i
 = 0; i < 
¥oc
->
num_bb
; i++) {

226 
bb
 = &
¥oc
->
cfg
[
i
];

227 
ty≥
 = 
	`ö°_ty≥
(&
bb
->
code
[bb->
num_ö°
-1]);

228 i‡(
ty≥
 =
INST_COND
) {

230 
bb1
 = &
¥oc
->
cfg
[
i
+1];

231 
	`√w_edge
(
bb
, 
bb1
, 
NOT_TAKEN
);

233 
bb1
 = 
	`lookup_bb
(
¥oc
->
cfg
,Öroc->
num_bb
, 
bb
->
code
[bb->
num_ö°
-1].
èrgë
);

234 i‡(
bb1
 =
NULL
) {

235 
	`Ârötf
(
°dîr
, "cannot find block start witháddr: %x\n",

236 
bb
->
code
[bb->
num_ö°
-1].
èrgë
);

237 
	`exô
(1);

239 
	`√w_edge
(
bb
, 
bb1
, 
TAKEN
);

240 
bb
->
ty≥
 = 
CTRL_COND
;

241 } i‡(
ty≥
 =
INST_UNCOND
) {

243 
bb1
 = 
	`lookup_bb
(
¥oc
->
cfg
,Öroc->
num_bb
, 
bb
->
code
[bb->
num_ö°
-1].
èrgë
);

244 i‡(
bb1
 =
NULL
) {

245 
	`Ârötf
(
°dîr
, "cannot find block start witháddr: %x\n",

246 
bb
->
code
[bb->
num_ö°
-1].
èrgë
);

247 
	`exô
(1);

249 
	`√w_edge
(
bb
, 
bb1
, 
TAKEN
);

250 
bb
->
ty≥
 = 
CTRL_UNCOND
;

251 } i‡(
ty≥
 =
INST_RET
) {

253 
bb
->
ty≥
 = 
CTRL_RET
;

257 if(
bj±b
 && 
i
 !
¥oc
->
num_bb
 - 1 ){

276 
bföd
 = 
	`gë_j±abÀ_°©ic
(
bb
->
code
[bb->
num_ö°
 - 1].
addr
, &
adr
);

277 if(
bföd
 >= 0){

279 
bb1
 = 
	`lookup_bb
(
¥oc
->
cfg
,¥oc->
num_bb
,
adr
);

280 i‡(
bb1
 =
NULL
){

281 
	`¥ötf
("ˇ¬Ÿ föd block sèπ wôháddr: %x\n",
adr
);

283 
	`√w_edge
(
bb
,
bb1
,
TAKEN
);

285 if(
bföd
){

286 
bb1
 = &
¥oc
->
cfg
[
i
+1];

287 
	`√w_edge
(
bb
, 
bb1
, 
NOT_TAKEN
);

290 
bb
->
ty≥
 = 
CTRL_UNCOND
;

296 i‡(
i
 < 
¥oc
->
num_bb
 - 1) {

297 
bb1
 = &
¥oc
->
cfg
[
i
+1];

298 
	`√w_edge
(
bb
, 
bb1
, 
NOT_TAKEN
);

300 i‡(
ty≥
 =
INST_CALL
)

301 
bb
->
ty≥
 = 
CTRL_CALL
;

303 
bb
->
ty≥
 = 
CTRL_SEQ
;

306 
	}
}

311 
¥oc_t
 *

312 
	$lookup_¥oc
(
addr_t
 
addr
)

314 
hi
 = 
¥og
.
num_¥ocs
 - 1, 
lo
 = 0, 
i
;

316 
hi
 >
lo
) {

317 
i
 = (
hi
 + 
lo
) / 2;

318 i‡(
¥og
.
¥ocs
[
i
].
ß
 =
addr
)

319  &
¥og
.
¥ocs
[
i
];

320 i‡(
¥og
.
¥ocs
[
i
].
ß
 > 
addr
)

321 
hi
 = 
i
 - 1;

323 
lo
 = 
i
 + 1;

325  
NULL
;

326 
	}
}

330 
ölöe
 

331 
	$bb_is_lo›_hód
(
cfg_node_t
 *
bb
)

333  (
bb
->
lo›_rﬁe
 & 
LOOP_HEAD
);

334 
	}
}

338 
ölöe
 

339 
	$bb_is_lo›_èû
(
cfg_node_t
 *
bb
)

341  (
bb
->
lo›_rﬁe
 & 
LOOP_TAIL
);

342 
	}
}

347 
	$lo›_check
(
¥oc_t
 *
¥oc
, 
°¨t
, 
íd
)

349 
is_lo›
;

350 
bb_id
;

351 
cfg_node_t
 *
bb
;

352 
cfg_edge_t
 *
e
;

353 
Queue
 
w‹kli°
;

355 
bb
 = &
¥oc
->
cfg
[
°¨t
];

356 i‡(
	`bb_is_lo›_hód
(
bb
))

358 i‡(
°¨t
 =
íd
) {

359 
¥oc
->
cfg
[
°¨t
].
lo›_rﬁe
 = 
LOOP_HEAD
 | 
LOOP_TAIL
;

363 
	`öô_queue
(&
w‹kli°
, (
cfg_node_t
 *));

364 
	`íqueue
(&
w‹kli°
, &
bb
);

365 
bb
->
Êags
 = 
íd
;

366 !
	`queue_em±y
(&
w‹kli°
)) {

367 
bb
 = *((
cfg_node_t
 **Ë
	`dequeue
(&
w‹kli°
));

368 i‡(
bb
->
id
 =
íd
) {

369 
¥oc
->
cfg
[
°¨t
].
lo›_rﬁe
 = 
LOOP_HEAD
;

370 
¥oc
->
cfg
[
íd
].
lo›_rﬁe
 = 
LOOP_TAIL
;

373 i‡((
bb
->
out_n
 !
NULL
Ë&& (bb->out_n->
d°
->
Êags
 !
íd
)) {

374 
	`íqueue
(&
w‹kli°
, &
bb
->
out_n
->
d°
);

375 
bb
->
out_n
->
d°
->
Êags
 = 
íd
;

377 i‡((
bb
->
out_t
 !
NULL
Ë&& (bb->out_t->
d°
->
Êags
 !
íd
)) {

378 
	`íqueue
(&
w‹kli°
, &
bb
->
out_t
->
d°
);

379 
bb
->
out_t
->
d°
->
Êags
 = 
íd
;

382 
	`‰ì_queue
(&
w‹kli°
);

383 
	}
}

388 
	$idítify_lo›s
(
¥oc_t
 *
¥oc
)

390 
i
;

391 
cfg_node_t
 *
bb
;

392 
cfg_edge_t
 *
e
;

394 
i
 = 
¥oc
->
num_bb
 - 1; i >= 0; i--) {

395 
bb
 = &
¥oc
->
cfg
[
i
];

396 i‡(
bb
->
out_t
 =
NULL
)

398 i‡(
bb
->
out_t
->
d°
->
id
 <
i
)

399 
	`lo›_check
(
¥oc
, 
bb
->
out_t
->
d°
->
id
, 
i
);

401 
i
 = 0; i < 
¥oc
->
num_bb
; i++)

402 
¥oc
->
cfg
[
i
].
Êags
 = 0;

403 
	}
}

412 
	$¸óã_cfg
(
¥oc_t
 *
¥oc
)

414 *
bb_ít
, 
i
, 
bb_id
 = 0;

415 
num
;

417 
cfg_node_t
 *
bb
;

418 
addr_t
 
addr
;

419 
¥oc_t
 *
ˇŒì
;

423 
bb_ít
 = (*Ë
	`ˇŒoc
(
¥oc
->
num_ö°
, ());

424 
	`CHECK_MEM
(
bb_ít
);

427 
	`sˇn_blocks
(
bb_ít
, 
¥oc
);

428 
¥oc
->
cfg
 = (
cfg_node_t
 *Ë
	`ˇŒoc
’roc->
num_bb
, (cfg_node_t));

429 
	`CHECK_MEM
(
¥oc
->
cfg
);

432 
i
 = 0; i < 
¥oc
->
num_ö°
; i++) {

433 i‡(
bb_ít
[
i
]) {

435 
num
 = 
bb_ít
[
i
];

436 
num
 > 1){

438 
bb
 = &
¥oc
->
cfg
[
bb_id
];

439 
bb
->
id
 = 
bb_id
;

440 
bb
->
¥oc
 =Öroc;

441 
bb
->
ß
 = 
¥oc
->
code
[
i
 - 1].
addr
;

442 
bb
->
size
 = 
¥oc
->
code
[
i
 - 1].size;

443 
bb
->
num_ö°
 = 1;

444 
bb
->
code
 = &
¥oc
->code[
i
 - 1];

445 
bb_id
++;

446 
num
--;

448 
bb
 = &
¥oc
->
cfg
[
bb_id
];

449 
bb
->
id
 = 
bb_id
;

450 
bb
->
¥oc
 =Öroc;

451 
bb
->
ß
 = 
¥oc
->
code
[
i
].
addr
;

452 
bb
->
size
 = 
¥oc
->
code
[
i
].size;

453 
bb
->
num_ö°
 = 1;

454 
bb
->
code
 = &
¥oc
->code[
i
];

455 
bb_id
++;

458 
bb
->
size
 +
¥oc
->
code
[
i
].size;

459 
bb
->
num_ö°
++;

462 
	`‰ì
(
bb_ít
);

465 
	`¸óã_cfg_edges
(
¥oc
);

468 
i
 = 0; i < 
¥oc
->
num_bb
; i++) {

469 
bb
 = &
¥oc
->
cfg
[
i
];

470 i‡(
bb
->
ty≥
 =
CTRL_CALL
) {

471 
addr
 = 
bb
->
code
[bb->
num_ö°
-1].
èrgë
;

472 
ˇŒì
 = 
	`lookup_¥oc
(
addr
);

473 i‡(
ˇŒì
 =
NULL
) {

476 
bb
->
ty≥
 = 
CTRL_SEQ
;

478 
bb
->
ˇŒì
 = callee;

483 
	`idítify_lo›s
(
¥oc
);

484 
	}
}

490 
	$buûd_cfgs
()

492 *
¥oc_ít
, 
i
, 
¥oc_id
 = 0, 
maö_id
;

493 
¥oc_t
 *
¥oc
;

495 
¥oc_ít
 = (*Ë
	`ˇŒoc
(
¥og
.
num_ö°
, ());

496 
	`CHECK_MEM
(
¥oc_ít
);

499 
maö_id
 = 
	`sˇn_¥ocs
(
¥oc_ít
);

500 
¥og
.
¥ocs
 = (
¥oc_t
 *Ë
	`ˇŒoc
’rog.
num_¥ocs
, (proc_t));

501 
	`CHECK_MEM
(
¥og
.
¥ocs
);

504 
i
 = 0; i < 
¥og
.
num_ö°
; i++) {

505 i‡(
¥oc_ít
[
i
]) {

507 
¥oc
 = &
¥og
.
¥ocs
[
¥oc_id
];

508 
¥oc
->
id
 = 
¥oc_id
;

509 
¥oc
->
ß
 = 
¥og
.
code
[
i
].
addr
;

510 
¥oc
->
size
 = 
¥og
.
code
[
i
].size;

511 
¥oc
->
num_ö°
 = 1;

512 
¥oc
->
code
 = &
¥og
.code[
i
];

513 i‡(
i
 =
maö_id
)

514 
¥og
.
maö_¥oc
 = 
¥oc_id
;

515 
¥oc_id
++;

518 
¥oc
->
size
 +
¥og
.
code
[
i
].size;

519 
¥oc
->
num_ö°
++;

522 
	`‰ì
(
¥oc_ít
);

525 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

526 
	`¸óã_cfg
(&
¥og
.
¥ocs
[
i
]);

529 
	}
}

541 
	$dump_cfg
(
FILE
 *
Â
, 
¥oc_t
 *
¥oc
)

543 
cfg_node_t
 *
bb
;

544 
i
;

546 
	`Ârötf
(
Â
, "\≈roc[%d] cfg:\n", 
¥oc
->
id
);

547 
i
 = 0; i < 
¥oc
->
num_bb
; i++) {

548 
bb
 = &
¥oc
->
cfg
[
i
];

549 
	`Ârötf
(
Â
, " %d : %08x : [ ", 
bb
->
id
, bb->
ß
);

550 i‡(
bb
->
out_n
 !
NULL
)

551 
	`Ârötf
(
Â
, " %d", 
bb
->
out_n
->
d°
->
id
);

553 
	`Ârötf
(
Â
, " ");

554 
	`Ârötf
(
Â
, " , ");

555 i‡(
bb
->
out_t
 !
NULL
)

556 
	`Ârötf
(
Â
, " %d ", 
bb
->
out_t
->
d°
->
id
);

558 
	`Ârötf
(
Â
, " ");

559 
	`Ârötf
(
Â
, " ] ");

560 i‡(
bb
->
ˇŒì
 !
NULL
) {

561 
	`Ârötf
(
Â
, " P%d", 
bb
->
ˇŒì
->
id
);

564 i‡(
	`bb_is_lo›_hód
(
bb
))

565 
	`Ârötf
(
Â
, "/");

566 i‡(
	`bb_is_lo›_èû
(
bb
))

567 
	`Ârötf
(
Â
, "\\");

569 
	`Ârötf
(
Â
, "\n");

571 
	}
}

	@cfg.h

22 #i‚de‡
CFG_H


23 
	#CFG_H


	)

26 
	~<°dio.h
>

27 
	~"iß.h
"

30 
	#NOT_TAKEN
 0

	)

31 
	#TAKEN
 1

	)

32 
	#BOTH_BRANCHES
 2

	)

33 
	#LOOP_HEAD
 1

	)

34 
	#LOOP_TAIL
 2

	)

37 íum {
	mCTRL_SEQ
, 
	mCTRL_COND
, 
	mCTRL_UNCOND
, 
	mCTRL_CALL
, 
	mCTRL_RET
} 
	tbb_ty≥_t
;

40 
cfg_edge_t
 
	tcfg_edge_t
;

41 
¥oc_t
 
	t¥oc_t
;

45 
	mid
;

46 
¥oc_t
 *
	m¥oc
;

47 
addr_t
 
	mß
;

48 
	msize
;

49 
	mnum_ö°
;

50 
de_ö°_t
 *
	mcode
;

52 
bb_ty≥_t
 
	mty≥
;

53 
cfg_edge_t
 *
	mout_n
, *
	mout_t
;

54 
	mnum_ö
;

55 
cfg_edge_t
 **
	mö
;

57 
¥oc_t
 *
	mˇŒì
;

59 
	mlo›_rﬁe
;

61 
	mÊags
;

64 
ric_p
* 
	mö_abs_ªg_vÆue
;

65 
ric_p
* 
	mout_abs_ªg_vÆue
;

67 
abs_mem_p
 
	mö_abs_mem_vÆue
;

68 
abs_mem_p
 
	mout_abs_mem_vÆue
;

72 *
	md_ö°li°
;

73 
	mnum_d_ö°
;

75 } 
	tcfg_node_t
;

80 
	scfg_edge_t
 {

81 
cfg_node_t
 *
	m§c
, *
	md°
;

87 
	s¥oc_t
 {

88 
	mid
;

89 
addr_t
 
	mß
;

90 
	msize
;

91 
	mnum_ö°
;

92 
de_ö°_t
 *
	mcode
;

94 
	mnum_bb
;

95 
cfg_node_t
 *
	mcfg
;

97 
	mÊags
;

102 * 
	m«me
;

103 
addr_t
 
	maddr
;

104 
	msize
;

105 } 
	tsymbﬁ_i
;

110 
de_ö°_t
 *
	mcode
;

111 
	mcode_size
;

112 
	mnum_ö°
;

113 
addr_t
 
	m°¨t_addr
, 
	míd_addr
, 
	mmaö_addr
;

114 
¥oc_t
 *
	m¥ocs
;

115 
symbﬁ_i
 *
	mp_öfo
;

116 
symbﬁ_i
 *
	mv_öfo
;

117 
	mnum_v¨s
;

118 
	mnum_¥ocs
;

119 
	mmaö_¥oc
;

120 } 
	t¥og_t
;

122 
	#MAX_OVRL_NODES
 1024

	)

123 
	#OPT
 1

	)

125 
	scﬁ_d©a


128 
¥oc_t
* 
	m¥oc
;

129 
de_ö°_t
* 
	mö°
;

130 }
	mu
;

131 
	mty≥
;

132 
cﬁ_d©a
* 
	m√xt
;

135 
cﬁ_d©a
* 
	tcﬁ_d©a_p
;

136 
cﬁ_d©a
 
	tcﬁ_d©a_s
;

139 
	sovæ_gøph
 {

141 
¥oc_t
* 
	m¥oc
;

142 
de_ö°_t
* 
	mö°
;

143 
cﬁ_d©a_p
 
	m¥ef
;

144 }
	mu
;

145 
	mty≥
;

146 
	mövÆid
;

148 
	m‰eq
;

149 
ovæ_gøph
* 
	m√xt
;

151 
ovæ_gøph
* 
	tovæ_gøph_p
;

152 
ovæ_gøph
 
	tovæ_gøph_s
;

156 
dump_cfg
(
FILE
 *
Â
, 
¥oc_t
 *
¥oc
);

	@common.c

23 
	~"comm⁄.h
"

24 
	~<as£π.h
>

25 
	~<°rög.h
>

26 
	~<°dlib.h
>

28 
	$hexVÆue
–*
hexSå
 ) {

29 
vÆ
;

30 
	`ssˇnf
–
hexSå
, "%x", &
vÆ
 );

31  
vÆ
;

32 
	}
}

34 
ticks
 
	$gëticks
() {

35 
a
, 
d
;

36 
asm
 vﬁ©ûe("rdtsc" : "˜" (
a
), "=d" (
d
));

37  ((
ticks
)
a
Ë| ((—icks)
d
) << 32);

38 
	}
}

43 
my_b£¨ch
(c⁄° *
key
, c⁄° *
ba£
, 
size_t
 
n
, size_à
size
,

44 (*
cmp
)(c⁄° *
k
, c⁄° *
d©um
))

46 
low
, 
high
, 
mid
;

47 
c
;

49 i‡(
n
 == 0)

50  
ba£
;

52 
low
 = 0; 
high
 = 
n
 - 1;

53 
low
 <
high
) {

54 
mid
 = (
low
 + 
high
) / 2;

55 i‡(
cmp
 =
NULL
)

56 
c
 = (*((*Ë
key
Ë- *((*Ë(
ba£
 + 
mid
 * 
size
)));

58 
c
 = 
	`cmp
(
key
, (c⁄° *)(
ba£
 + 
mid
 * 
size
));

59 i‡(
c
 < 0)

60 
high
 = 
mid
 - 1;

61 i‡(
c
 > 0)

62 
low
 = 
mid
 + 1;

64  (c⁄° *)(
ba£
 + 
mid
 * 
size
);

67  (c⁄° *)(
ba£
 + 
low
 * 
size
);

68 
	}
}

75 
	$my_ö£π
(c⁄° *
x
, *
ba£
, *
y
, *
√Àm
, 
size
)

77 
nbyãs
;

78 *
p
;

80 
nbyãs
 = (*
√Àm
Ë* 
size
 - (()
y
 - ()
ba£
);

81 
	`as£π
(
nbyãs
 >= 0);

82 
	`memmove
(
y
+
size
, y, 
nbyãs
);

83 
	`mem˝y
(
y
, 
x
, 
size
);

84 (*
√Àm
)++;

85 
	}
}

92 
	$öô_°ack
(
Sèck
 *
°ack
, 
ñem_size
)

94 
°ack
->
ba£
 = (*Ë
	`mÆloc
(
STACK_ELEMS
 * 
ñem_size
);

95 i‡(
°ack
->
ba£
 =
NULL
) {

96 
	`Ârötf
(
°dîr
, "out of memory (__FILE__:__LINE__)\n");

97 
	`exô
(1);

99 
°ack
->
esize
 = 
ñem_size
;

100 
°ack
->
ˇ±
 = 
STACK_ELEMS
 * 
ñem_size
;

101 
°ack
->
t›
 = sèck->
ba£
;

102 
	}
}

107 
	$‰ì_°ack
(
Sèck
 *
°ack
)

109 i‡(
°ack
->
ba£
 !
NULL
) {

110 
	`‰ì
(
°ack
->
ba£
);

111 
°ack
->
ba£
 = 
NULL
;

113 
°ack
->
ˇ±
 = sèck->
esize
 = 0;

114 
°ack
->
t›
 = 
NULL
;

115 
	}
}

120 
	$°ack_push
(
Sèck
 *
°ack
, *
x
)

122 i‡((
°ack
->
t›
 + sèck->
esize
Ë> (°ack->
ba£
 + sèck->
ˇ±
)) {

123 
°ack
->
ˇ±
 *= 2;

124 
°ack
->
ba£
 = (*Ë
	`ªÆloc
(°ack->ba£, sèck->
ˇ±
);

125 i‡(
°ack
->
ba£
 =
NULL
) {

126 
	`Ârötf
(
°dîr
, "out of memory (__FILE__:__LINE__)\n");

127 
	`exô
(1);

130 
	`mem˝y
(
°ack
->
t›
, 
x
, sèck->
esize
);

131 
°ack
->
t›
 +°ack->
esize
;

132 
	}
}

137 
	$°ack_em±y
(
Sèck
 *
°ack
)

139 
	`as£π
(
°ack
->
t›
 >°ack->
ba£
);

140  (
°ack
->
t›
 =°ack->
ba£
) ? 1 : 0;

141 
	}
}

146 
	$°ack_p›
(
Sèck
 *
°ack
)

148 i‡(
	`°ack_em±y
(
°ack
))

149  
NULL
;

150 
°ack
->
t›
 -°ack->
esize
;

151  
°ack
->
t›
;

152 
	}
}

158 
	$˛ór_°ack
(
Sèck
 *
°ack
)

160 
°ack
->
t›
 = sèck->
ba£
;

161 
	}
}

167 
	$c›y_°ack
(
Sèck
 *
y
, Sèck *
x
)

170 
	`‰ì_°ack
(
y
);

172 
y
->
ba£
 = (*Ë
	`mÆloc
(
x
->
ˇ±
);

173 i‡(
y
->
ba£
 =
NULL
) {

174 
	`Ârötf
(
°dîr
, "out of memory (__FILE__:__LINE__)\n");

175 
	`exô
(1);

177 
	`mem˝y
(
y
->
ba£
, 
x
->ba£, (x->
t›
 - x->base));

178 
y
->
esize
 = 
x
->esize;

179 
y
->
ˇ±
 = 
x
->capt;

180 
y
->
t›
 = y->
ba£
 + (
x
->top - x->base);

181 
	}
}

187 
	$öô_queue
(
Queue
 *
queue
, 
ñem_size
)

189 
queue
->
ba£
 = (*Ë
	`mÆloc
(
QUEUE_ELEMS
 * 
ñem_size
);

190 i‡(
queue
->
ba£
 =
NULL
) {

191 
	`Ârötf
(
°dîr
, "out of memory (__FILE__:__LINE__)\n");

192 
	`exô
(1);

194 
queue
->
esize
 = 
ñem_size
;

195 
queue
->
ˇ±
 = 
QUEUE_ELEMS
 * 
ñem_size
;

196 
queue
->
hód
 = queue->
èû
 = queue->
ba£
;

197 
	}
}

202 
	$‰ì_queue
(
Queue
 *
queue
)

204 i‡(
queue
->
ba£
 !
NULL
) {

205 
	`‰ì
(
queue
->
ba£
);

206 
queue
->
ba£
 = 
NULL
;

208 
queue
->
ˇ±
 = queue->
esize
 = 0;

209 
queue
->
hód
 = queue->
èû
 = 
NULL
;

210 
	}
}

215 
	$íqueue
(
Queue
 *
queue
, *
x
)

217 *
√wba£
;

218 
n
;

220 
	`mem˝y
(
queue
->
èû
, 
x
, queue->
esize
);

221 
queue
->
èû
 +queue->
esize
;

222 i‡(
queue
->
èû
 =(queue->
ba£
 + queue->
ˇ±
))

223 
queue
->
èû
 = queue->
ba£
;

224 i‡(
queue
->
èû
 !queue->
hód
)

228 
√wba£
 = (*Ë
	`mÆloc
(
queue
->
ˇ±
 * 2);

229 i‡(
√wba£
 =
NULL
) {

230 
	`Ârötf
(
°dîr
, "out of memory (__FILE__:__LINE__)\n");

231 
	`exô
(1);

233 
n
 = 
queue
->
ba£
 + queue->
ˇ±
 - queue->
hód
;

234 
	`mem˝y
(
√wba£
, 
queue
->
hód
, 
n
);

235 i‡(
queue
->
èû
 > queue->
ba£
)

236 
	`mem˝y
(
√wba£
 + 
n
, 
queue
->
ba£
, queue->
èû
 - queue->base);

237 
	`‰ì
(
queue
->
ba£
);

238 
queue
->
ba£
 = 
√wba£
;

239 
queue
->
hód
 = queue->
ba£
;

240 
queue
->
èû
 = queue->
ba£
 + queue->
ˇ±
;

241 
queue
->
ˇ±
 *= 2;

242 
	}
}

247 
	$queue_em±y
(
Queue
 *
queue
)

249  (
queue
->
hód
 =queue->
èû
) ? 1 : 0;

250 
	}
}

255 
	$dequeue
(
Queue
 *
queue
)

257 *
p
;

258 i‡(
	`queue_em±y
(
queue
))

259  
NULL
;

260 
p
 = 
queue
->
hód
;

261 
queue
->
hód
 +queue->
esize
;

262 i‡(
queue
->
hód
 =(queue->
ba£
 + queue->
ˇ±
))

263 
queue
->
hód
 = queue->
ba£
;

264  
p
;

265 
	}
}

271 
	$˛ór_queue
(
Queue
 *
queue
)

273 
queue
->
hód
 = queue->
èû
 = queue->
ba£
;

274 
	}
}

279 
	$bôs
(
x
)

281 
i
 = 0;

283 i‡(
x
 == 0)

285 
x
 > 0) {

286 
i
++;

287 
x
 >>= 1;

289  
i
;

290 
	}
}

295 
	$ønge_i£˘
(
ønge_t
 *
x
,Ñ™ge_à*
y
)

297 i‡(
x
->
lo
 < 
y
->lo)

298 
x
->
lo
 = 
y
->lo;

299 i‡(
x
->
hi
 > 
y
->hi)

300 
x
->
hi
 = 
y
->hi;

301 i‡(
x
->
lo
 > x->
hi
)

302  
BAD_RANGE
;

304  
GOOD_RANGE
;

305 
	}
}

311 
	$ønge_uni⁄
(
ønge_t
 *
x
,Ñ™ge_à*
y
)

313 i‡(
x
->
lo
 > 
y
->lo)

314 
x
->
lo
 = 
y
->lo;

315 i‡(
x
->
hi
 < 
y
->hi)

316 
x
->
hi
 = 
y
->hi;

317 
	}
}

320 
	$p_íqueue
(
P_Queue
 **
hódLi°
, *
√wIãm
, 
key
) {

321 
P_Queue
 *
cur
, *
¥ev
, *
qEÀm
;

322 
qEÀm
 = (
P_Queue
*Ë
	`mÆloc
((P_Queue));

323 
qEÀm
->
√xt
 = 
NULL
;

324 
qEÀm
->
key
 = key;

325 
qEÀm
->
ñem
 = 
√wIãm
;

327 
cur
 = *
hódLi°
; 
¥ev
 = 
NULL
;

328  
cur
!=
NULL
 && (cur->
key
 < key) ) {

330 
¥ev
 = 
cur
;

331 
cur
 = cur->
√xt
;

333 i‡(
¥ev
!=
NULL
) {

334 
¥ev
->
√xt
 = 
qEÀm
;

335 
qEÀm
->
√xt
 = 
cur
;

338 
qEÀm
->
√xt
 = (*
hódLi°
);

339 (*
hódLi°
Ë
qEÀm
;

341 
	}
}

342 * 
	$p_dequeue
(
P_Queue
 **
hódLi°
) {

343 *
ªsu…
;

344 
P_Queue
* 
ôem
;

345 i‡–(*
hódLi°
)==
NULL
 ) {

346 
	`¥ötf
("\nQueuêem±y");
	`fÊush
(
°dout
);

347  
NULL
;

349 
ôem
 = *
hódLi°
;

350 *
hódLi°
 = (*hódLi°)->
√xt
;

351 
ªsu…
 = 
ôem
->
ñem
;

352 
	`‰ì
(
ôem
);

353  
ªsu…
;

354 
	}
}

355 
	$p_queue_em±y
(
P_Queue
 **
hódLi°
) {

356  ( (*
hódLi°
)==
NULL
 );

357 
	}
}

360 * 
	$ªmoveO√FromW‹kLi°
(
w‹kli°_p
* 
Wli°
)

362 
w‹kli°_p
 
ãmp
 = *
Wli°
;

363 *
Wli°
 = (*Wli°)->
√xt
;

365  
ãmp
->
d©a
;

366 
	}
}

369 
	$addToW‹kLi°
(
w‹kli°_p
* 
Wli°
, * 
d©a
)

371 
w‹kli°_p
 
ãmp
 = (w‹kli°_p)
	`mÆloc
((
w‹kli°_s
));

372 
ãmp
->
√xt
 = 
NULL
;

373 
ãmp
->
d©a
 = data;

374 
ãmp
->
√xt
 = *
Wli°
;

375 *
Wli°
 = 
ãmp
;

376 
	}
}

379 
	$isEm±y
(
w‹kli°_p
 
Wli°
)

381  (
Wli°
 =
NULL
);

382 
	}
}

383 
	$addA·îNode
(*
d©a
, 
w‹kli°_p
 *
¥vNode
, w‹kli°_∞*
hódNode
) {

384 
w‹kli°_p
 
√wNode
;

385 
√wNode
 = (
w‹kli°_p
Ë
	`mÆloc
((
w‹kli°_s
));

386 
√wNode
->
d©a
 = data;

387 
√wNode
->
√xt
 = 
NULL
;

388 i‡(*
¥vNode
) {

389 
√wNode
->
√xt
 = (*
¥vNode
)->next;

390 (*
¥vNode
)->
√xt
 = 
√wNode
;

391 (*
¥vNode
Ë
√wNode
;

394 
√wNode
->
√xt
 = *
hódNode
;

395 *
hódNode
 = 
√wNode
;

396 *
¥vNode
 = 
√wNode
;

398 
	}
}

399 
	$ªmA·îNode
(
w‹kli°_p
 *
¥vNode
, w‹kli°_∞*
hódNode
) {

400 
w‹kli°_p
 
tmpNode
;

401 i‡((*
¥vNode
)!=
NULL
) {

402 
tmpNode
 = (*
¥vNode
)->
√xt
;

403 i‡(
tmpNode
) {

404 (*
¥vNode
)->
√xt
 = 
tmpNode
->next;

405 
	`‰ì
(
tmpNode
->
d©a
);

406 
	`‰ì
(
tmpNode
);

413 
tmpNode
 = (*
hódNode
);

414 i‡(
tmpNode
) {

415 (*
hódNode
Ë(*hódNode)->
√xt
;

416 
	`‰ì
(
tmpNode
->
d©a
);

417 
	`‰ì
(
tmpNode
);

423 
	}
}

424 
	$‰ìLi°
(
w‹kli°_p
 *
Wli°
) {

425 
w‹kli°_p
 
sNode
, 
¥vNode
;

426 
¥vNode
 = 
NULL
;

427 
sNode
 = *
Wli°
;

428 
sNode
) {

429 
¥vNode
 = 
sNode
;

430 
sNode
 = sNode->
√xt
;

431 
	`‰ì
(
¥vNode
);

433 (*
Wli°
Ë
NULL
;

434 
	}
}

437 
	$isDecNum
(
c
) {

438  ('0'<=
c
 && c<='9');

439 
	}
}

440 
	$isHexNum
(
c
) {

441  ( ('0'<=
c
 && c<='9') || (c=='x')

442 || ('a'<=
c
 && c<='f') || ('A'<=c && c<='F') );

443 
	}
}

444 
	$gëNextEÀm
(*
°r
, *
pos
, *
tokí
) {

445 
i
;

446 
tokí
[0] = '\0';

447 
i
=0;

448 
°r
[*
pos
]!='\0') {

450 i‡(
°r
[*
pos
]=='(') {

451 *
pos
 = *pos+1;

452 
	`°r˝y
(
tokí
,"(");

455 i‡(
°r
[*
pos
]==')') {

456 *
pos
 = *pos+1;

457 
	`°r˝y
(
tokí
,")");

461 i‡(
°r
[*
pos
]=='$') {

462 
tokí
[
i
++]=
°r
[*
pos
];

463 *
pos
 = *pos+1;

464 
	`isDecNum
(
°r
[*
pos
])) {

465 
tokí
[
i
++]=
°r
[*
pos
];

466 *
pos
 = *pos+1;

467 i‡(
°r
[*
pos
]=='\0') ;

469 
tokí
[
i
]='\0';

473 i‡–
	`isHexNum
(
°r
[*
pos
]) ) {

474  
	`isHexNum
(
°r
[*
pos
]) ) {

475 
tokí
[
i
++]=
°r
[*
pos
];

476 *
pos
 = *pos+1;

477 i‡(
°r
[*
pos
]=='\0') ;

479 
tokí
[
i
]='\0';

482 i‡(
°r
[*
pos
]=='T') {

483 
tokí
[
i
++]=
°r
[*
pos
];

484 
tokí
[
i
]='\0';

485 *
pos
 = *pos+1;

489 i‡(
°r
[*
pos
]!=' ') {

490 
°r
[*
pos
]!='$' && !
	`isHexNum
(str[*pos]) && str[*pos]!='T'

491 && 
°r
[*
pos
]!='(' && str[*pos]!=')' && str[*pos]!=' ') {

492 
tokí
[
i
++]=
°r
[*
pos
];

493 *
pos
 = *pos+1;

494 i‡(
°r
[*
pos
]=='\0') ;

496 
tokí
[
i
]='\0';

500 *
pos
 = *pos + 1;

503 
	}
}

505 
	$gëNextTokí
(*
tokí
, *
°r
, *
pos
, *
dñim
) {

506 *
pch
;

507 
Àn
, 
found
;

508 
tokí
[0]='\0';

509 
Àn
 = 0;

510 
found
 = 0;

511 
°r
[*
pos
]!='\0') {

512 i‡(
	`°rchr
(
dñim
,
°r
[*
pos
])!=
NULL
) {

513 
tokí
[
Àn
++]='\0';

514 
	`°rchr
(
dñim
,
°r
[*
pos
])!=
NULL
) {

515 *
pos
 = *pos + 1;

517  
found
;

520 
tokí
[
Àn
] = 
°r
[*
pos
];

521 
Àn
++;

522 
found
 = 1;

523 *
pos
 = *pos + 1;

526 
tokí
[
Àn
++]='\0';

527  
found
;

528 
	}
}

	@common.h

22 #i‚de‡
COMMON_H


23 
	#COMMON_H


	)

25 
	~<°dio.h
>

26 
	~<as£π.h
>

28 
	#TARGET_SS


29 

	)

30 
	#SHOW_PROGRESS
 0

	)

32 
	#BAD_RANGE
 0

	)

33 
	#GOOD_RANGE
 1

	)

34 
	#MAX_INST
 5120

	)

35 
	#MAX_BB
 1024

	)

36 
	#STACK_ELEMS
 1024

	)

37 
	#QUEUE_ELEMS
 1024

	)

38 
	#HEAP_ELEMS
 16

	)

39 
	#INFTY
 99999

	)

41 
	#CHECK_MEM
(
p
Ë\

	)

42 i‡((
	gp
Ë=
NULL
) { \

43 
Ârötf
(
°dîr
, "ouào‡mem‹y\n", 
__FILE__
, 
__LINE__
); \

44 
exô
(1); \

47 
	#ö°_num
(
code
, 
size
Ë((sizeË/ 
SS_INST_SIZE
)

	)

48 
	#ö°_size
(
code
, 
n
Ë(“Ë* 
SS_INST_SIZE
)

	)

49 
	#BETWEEN
(
x
, 
a
, 
b
Ë(((xË>◊)Ë&& ((xË<(b)))

	)

50 
	#INSIDE
(
x
, 
a
, 
b
Ë( (((xË> (a)Ë&& ((xË< (b))))

	)

51 
	#max
(
x
, 
y
Ë((xË> (yË? (xË: (y))

	)

52 
	#mö
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

53 
	#SET_FLAG
(
x
, 
Êag_msk
Ë((xË|(Êag_msk))

	)

54 
	#RESET_FLAG
(
x
, 
Êag_msk
Ë((xË&(~(Êag_msk)))

	)

55 
	#TEST_FLAG
(
x
, 
Êag_msk
Ë((xË& (Êag_msk))

	)

57 
	#mem_‰ì
(
p
Ë(’Ë? 
	`‰ì
’Ë: 0)

	)

59 
	tticks
;

60 
	#CPU_MHZ
 2200000000

	)

62 
hexVÆue
 (*
hexSå
);

66 
	mlo
, 
	mhi
;

67 } 
	tønge_t
;

71 
	mlo
, 
	mhi
;

72 } 
	tønge16_t
;

75 
	mlo
, 
	mhi
;

76 } 
	tønge8_t
;

80 
cmp_gíîÆ
(
ønge_t
 *
x
,Ñ™ge_à*
y
);

84 
ønge_i£˘
(
ønge_t
 *
x
,Ñ™ge_à*
y
);

88 
ønge_uni⁄
(
ønge_t
 *
x
,Ñ™ge_à*
y
);

92 
	s°ack_t
 {

93 *
	mba£
;

94 *
	mt›
;

95 
	mesize
;

96 
	mˇ±
;

97 } 
	tSèck
;

101 #i‚de‡
QUEUE


102 
	#QUEUE


	)

103 
	squeue_t
 {

104 *
	mba£
;

105 *
	mhód
, *
	mèû
;

106 
	mesize
;

107 
	mˇ±
;

108 } 
	tQueue
;

111 #i‚de‡
PRIORITY_QUEUE


112 
	#PRIORITY_QUEUE


	)

113 
	s¥i‹ôy_queue_t
 {

114 
¥i‹ôy_queue_t
 *
	m√xt
;

115 *
	mñem
;

116 
	mkey
;

117 } 
	tP_Queue
;

119 
p_íqueue
(
P_Queue
 **
hódLi°
, *
√wIãm
, 
key
);

120 * 
p_dequeue
(
P_Queue
 **
hódLi°
);

121 
p_queue_em±y
(
P_Queue
 **
hódLi°
);

124 
my_b£¨ch
(c⁄° *
key
, c⁄° *
ba£
, 
size_t
 
n
, size_à
size
,

125 (*
cmp
)(c⁄° *
k
, c⁄° *
d©um
));

128 
	`my_ö£π
(c⁄° *
x
, *
ba£
, *
y
, *
√Àm
, 
size
);

133 
	`bôs
(
x
);

136 
	sw‹kli°
 {

137 * 
d©a
;

138 
w‹kli°
* 
√xt
;

140 
w‹kli°
 
	tw‹kli°_s
;

141 
w‹kli°
* 
	tw‹kli°_p
;

143 
	`isEm±y
(
w‹kli°_p
 
Wli°
);

144 
	`addToW‹kLi°
(
w‹kli°_p
* 
Wli°
, * 
d©a
);

145 
	`addA·îNode
(*
d©a
, 
w‹kli°_p
 *
¥vNode
, w‹kli°_∞*
hódNode
);

146 * 
	`ªmoveO√FromW‹kLi°
(
w‹kli°_p
* 
Wli°
);

147 
	`‰ìLi°
(
w‹kli°_p
 *
Wli°
);

150 
	`isDecNum
(
c
);

151 
	`isHexNum
(
c
);

152 
	`gëNextEÀm
(*
°r
, *
pos
, *
tokí
);

155 
	`bôs
(
x
);

157 
	shashèb
 {

158 * 
íåy
;

159 
hashèb
* 
√xt
;

161 
hashèb
 
	thashèb_s
;

162 
hashèb
* 
	thashèb_p
;

	@conflicts.c

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~"iß.h
"

26 
	~"cfg.h
"

27 
	~"tcfg.h
"

28 
	~"lo›s.h
"

29 
	~"ö„asibÀ.h
"

31 
¥og_t
 
¥og
;

32 
iß_t
 *
iß
;

34 
tcfg_∆ök_t
 ***
bbi_m≠
;

35 
lo›_t
 **
lo›_m≠
;

38 
	$√g
–
a
 ) {

40 if–
a
 =
GT
 )  
LE
;

41 if–
a
 =
GE
 )  
LT
;

42 if–
a
 =
LE
 )  
GT
;

43 if–
a
 =
LT
 )  
GE
;

44 if–
a
 =
EQ
 )  
NE
;

45 if–
a
 =
NE
 )  
EQ
;

46  
NA
;

47 
	}
}

53 
	$ã°C⁄Êi˘
–
a
, 
rhs_a
, 
b
, 
rhs_b
 ) {

55 if–
a
 =
GT
 ) {

56 if–
b
 =
LT
 || b =
LE
 || b =
EQ
 ) {

57 if–
rhs_a
 < 
rhs_b
 )  0;

62 if–
a
 =
LT
 ) {

63 if–
b
 =
GT
 || b =
GE
 || b =
EQ
 ) {

64 if–
rhs_a
 > 
rhs_b
 )  0;

69 if–
a
 =
GE
 ) {

70 if–
b
 =
LT
 ) {

71 if–
rhs_a
 < 
rhs_b
 )  0;

74 if–
b
 =
LE
 || b =
EQ
 ) {

75 if–
rhs_a
 <
rhs_b
 )  0;

80 if–
a
 =
LE
 ) {

81 if–
b
 =
GT
 ) {

82 if–
rhs_a
 > 
rhs_b
 )  0;

85 if–
b
 =
GE
 || b =
EQ
 ) {

86 if–
rhs_a
 >
rhs_b
 )  0;

91 if–
a
 =
EQ
 ) {

92 if–
b
 =
NE
 ) {

93 if–
rhs_a
 !
rhs_b
 )  0;

96 if–
b
 =
EQ
 ) {

97 if–
rhs_a
 =
rhs_b
 )  0;

100 if–
b
 =
LT
 ) {

101 if–
rhs_a
 < 
rhs_b
 )  0;

104 if–
b
 =
GT
 ) {

105 if–
rhs_a
 > 
rhs_b
 )  0;

108 if–
b
 =
LE
 ) {

109 if–
rhs_a
 <
rhs_b
 )  0;

112 if–
b
 =
GE
 ) {

113 if–
rhs_a
 >
rhs_b
 )  0;

117 if–
a
 =
NE
 ) {

118 if–
b
 =
EQ
 && ( 
rhs_a
 =
rhs_b
 ))

123 
	}
}

131 
	$isBBC⁄Êi˘
–
bønch_t
 *
A
, bønch_à*
B
, 
r1
, 
r2
 ) {

132  
	`ã°C⁄Êi˘
–
r1
, 
A
->
rhs
, 
r2
, 
B
->rhs );

133 
	}
}

135 
	$isBAC⁄Êi˘
–
assign_t
 *
A
, 
bønch_t
 *
B
, 
r
 ) {

136 if–
A
->
rhs_v¨
 )  0;

137  
	`ã°C⁄Êi˘
–
EQ
, 
A
->
rhs
, 
r
, 
B
->rhs );

138 
	}
}

141 
	$addNuŒifõr
–
assign_t
 *
as
,ássign_à***
nuŒifõr_li°
, *
num_nuŒifõrs
 ) {

143 
i
, 
Àn
;

146  
i
 = 0; i < *
num_nuŒifõrs
; i++ )

147 if–(*
nuŒifõr_li°
)[
i
] =
as
 )

150 (*
num_nuŒifõrs
)++;

151 
Àn
 = *
num_nuŒifõrs
;

152 (*
nuŒifõr_li°
Ë(
assign_t
**Ë
	`ªÆloc
–*nuŒifõr_li°, 
Àn
 * (assign_t*) );

153 (*
nuŒifõr_li°
)[
Àn
-1] = 
as
;

156 
	}
}

162 
	$ªachabÀNoC™˚l
–*
ªs
, 
assign_t
 ***
nuŒifõr_li°
, *
num_nuŒifõrs
,

163 
pid
, 
§cid
, 
de°id
, *
dîôªe
,

164 
assign_t
 *
assg
, 
cfg_node_t
 *
bbli°
, 
num_bb
, **
visôed
 ) {

165 
i
, 
id
;

166 
cfg_node_t
 *
bb
;

167 
öf_node_t
 *
ib
;

170 if–
§cid
 =
de°id
 ) {

171 *
ªs
 |= 1;

176 
bb
 = &(
bbli°
[
§cid
]);

177 
ib
 = &(
öf_¥ocs
[
pid
].
öf_cfg
[
bb
->
id
]);

178 (*
visôed
)[
bb
->
id
] = 1;

181 if–
assg
 =
NULL
 || 
bb
->
id
 !=ássg->bb->id ) {

182  
i
 = 0; i < 
ib
->
num_assign
; i++ ) {

186 if–
	`°rcmp
–
dîôªe
, 
ib
->
assig∆i°
[
i
]->deritree ) == 0 ) {

187 
k
;

188 *
ªs
 |= 0;

189 
	`addNuŒifõr
–
ib
->
assig∆i°
[
i
], 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

207 if–
bb
->
out_n
 !
NULL
 ) {

208 
id
 = 
bb
->
out_n
->
d°
->id;

210 if–!(*
visôed
)[
id
] )

211 
	`ªachabÀNoC™˚l
–
ªs
, 
nuŒifõr_li°
, 
num_nuŒifõrs
, 
pid
, 
id
, 
de°id
, 
dîôªe
, 
assg
, 
bbli°
, 
num_bb
, 
visôed
 );

213 if–
bb
->
out_t
 !
NULL
 ) {

214 
id
 = 
bb
->
out_t
->
d°
->id;

216 if–!(*
visôed
)[
id
] )

217 
	`ªachabÀNoC™˚l
–
ªs
, 
nuŒifõr_li°
, 
num_nuŒifõrs
, 
pid
, 
id
, 
de°id
, 
dîôªe
, 
assg
, 
bbli°
, 
num_bb
, 
visôed
 );

220 
	}
}

230 
	$ã°RóchabÀNoC™˚l
–*
ªs
, 
assign_t
 ***
nuŒifõr_li°
, *
num_nuŒifõrs
,

231 
pid
, 
§cid
, 
de°id
, *
dîôªe
,

232 
assign_t
 *
assg
, 
cfg_node_t
 *
bbli°
, 
num_bb
 ) {

234 *
visôed
;

238 if–
§cid
 =
de°id
 )

239 *
ªs
 = 1;

241 
visôed
 = (*Ë
	`ˇŒoc
–
¥og
.
¥ocs
[
pid
].
num_bb
, () );

242 
	`ªachabÀNoC™˚l
–
ªs
, 
nuŒifõr_li°
, 
num_nuŒifõrs
, 
pid
, 
§cid
, 
de°id
, 
dîôªe
, 
assg
, 
bbli°
, 
num_bb
, &
visôed
 );

244 
	`‰ì
–
visôed
 );

246 
	}
}

252 
	$£tBAC⁄Êi˘
–
assign_t
 *
assg
, 
bønch_t
 *
br
, 
dú
,ássign_à**
nuŒifõr_li°
, 
num_nuŒifõrs
 ) {

254 
i
, 
n
;

256 
br
->
num_BA_c⁄Êi˘s
++;

257 
n
 = 
br
->
num_BA_c⁄Êi˘s
;

258 
br
->
BA_c⁄Êi˘_li°
 = (
BA_c⁄Êi˘_t
*Ë
	`ªÆloc
–br->BA_c⁄Êi˘_li°, 
n
 * (BA_conflict_t) );

259 
br
->
BA_c⁄Êi˘_li°
[
n
-1].
c⁄Êi˘_§c
 = 
assg
;

260 
br
->
BA_c⁄Êi˘_li°
[
n
-1].
c⁄Êi˘_dú
 = 
dú
;

261 
br
->
BA_c⁄Êi˘_li°
[
n
-1].
num_nuŒifõrs
 =Çum_nullifiers;

262 
br
->
BA_c⁄Êi˘_li°
[
n
-1].
nuŒifõr_li°
 = 
NULL
;

264 if–
num_nuŒifõrs
 > 0 ) {

265 
br
->
BA_c⁄Êi˘_li°
[
n
-1].
nuŒifõr_li°
 = (
assign_t
**Ë
	`mÆloc
–
num_nuŒifõrs
 * (assign_t*) );

266  
i
 = 0; i < 
num_nuŒifõrs
; i++ )

267 
br
->
BA_c⁄Êi˘_li°
[
n
-1].
nuŒifõr_li°
[
i
] =Çullifier_list[i];

270 
	}
}

276 
	$£tBBC⁄Êi˘
–
bønch_t
 *
br1
, bønch_à*
br2
, 
dú
, 
assign_t
 **
nuŒifõr_li°
, 
num_nuŒifõrs
 ) {

278 
i
, 
n
;

280 
br2
->
num_BB_c⁄Êi˘s
++;

281 
n
 = 
br2
->
num_BB_c⁄Êi˘s
;

282 
br2
->
BB_c⁄Êi˘_li°
 = (
BB_c⁄Êi˘_t
*Ë
	`ªÆloc
–br2->BB_c⁄Êi˘_li°, 
n
 * (BB_conflict_t) );

283 
br2
->
BB_c⁄Êi˘_li°
[
n
-1].
c⁄Êi˘_§c
 = 
br1
;

284 
br2
->
BB_c⁄Êi˘_li°
[
n
-1].
c⁄Êi˘_dú
 = 
dú
;

285 
br2
->
BB_c⁄Êi˘_li°
[
n
-1].
num_nuŒifõrs
 =Çum_nullifiers;

286 
br2
->
BB_c⁄Êi˘_li°
[
n
-1].
nuŒifõr_li°
 = 
NULL
;

288 if–
num_nuŒifõrs
 > 0 ) {

289 
br2
->
BB_c⁄Êi˘_li°
[
n
-1].
nuŒifõr_li°
 = (
assign_t
**Ë
	`mÆloc
–
num_nuŒifõrs
 * (assign_t*) );

290  
i
 = 0; i < 
num_nuŒifõrs
; i++ )

291 
br2
->
BB_c⁄Êi˘_li°
[
n
-1].
nuŒifõr_li°
[
i
] =Çullifier_list[i];

294 
	}
}

297 
	$isLo›Bønch
–
cfg_node_t
 *
bb
 ) {

299 
tcfg_ñök_t
 *
ñök
;

300 
tcfg_node_t
 *
node
 = 
bbi_m≠
[
bb
->
¥oc
->
id
][bb->id]->
bbi
;

302  
ñök
 = 
lo›_m≠
[
node
->
id
]->
exôs
;Élök !
NULL
;Élök =Élök->
√xt
 ) {

303 if–
node
 =
ñök
->
edge
->
§c
 )

307 
	}
}

315 
	$lo›EquÆ
–
cfg_node_t
 *
b1
, cfg_node_à*
b2
 ) {

317 
nd1
 = 
bbi_m≠
[
b1
->
¥oc
->
id
][b1->id]->
bbi
->id;

318 
nd2
 = 
bbi_m≠
[
b2
->
¥oc
->
id
][b2->id]->
bbi
->id;

319  (
lo›_m≠
[
nd1
] =lo›_m≠[
nd2
]);

320 
	}
}

326 
	$dëe˘C⁄Êi˘s
() {

328 
i
, 
j
, 
k
, 
n
;

331 
num_BA
 = 0;

332 
num_BB
 = 0;

335  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ ) {

336 
¥oc_t
 *
p
 = &(
¥og
.
¥ocs
[
i
]);

337 
öf_¥oc_t
 *
ù
 = &(
öf_¥ocs
[
i
]);

339 if–!
ö˛ude_¥oc
[
i
] )

342  
j
 = 0; j < 
ù
->
num_bb
; j++ ) {

343 
öf_node_t
 *
ib
 = &(
ù
->
öf_cfg
[
j
]);

344 
bønch_t
 *
br
 = 
ib
->
bønch
;

346 if–
br
 =
NULL
 )

351 if–
	`isLo›Bønch
–
ib
->
bb
 ))

355  
k
 = 0; k < 
ib
->
num_assign
; k++ ) {

356 
assign_t
 *
as
 = 
ib
->
assig∆i°
[
k
];

360 if–
	`°ªq
–
br
->
dîôªe
, 
as
->deritree )) {

362 if–
	`isBAC⁄Êi˘
–
as
, 
br
, br->
jump_c⁄d
 )) {

363 
	`£tBAC⁄Êi˘
–
as
, 
br
, 
JUMP
, 
NULL
, 0 );

365 
num_BA
++;

367 if–
	`isBAC⁄Êi˘
–
as
, 
br
, 
	`√g
–br->
jump_c⁄d
 ))) {

368 
	`£tBAC⁄Êi˘
–
as
, 
br
, 
FALL
, 
NULL
, 0 );

370 
num_BA
++;

379  
k
 = 0; k < 
j
; k++ ) {

380 
öf_node_t
 *
ibk
 = &(
ù
->
öf_cfg
[
k
]);

381 
bønch_t
 *
brk
 = 
ibk
->
bønch
;

383 if–
j
 =
k
 )

387 if–!
	`lo›EquÆ
–
ib
->
bb
, 
ibk
->bb ))

391  
n
 = 0;Ç < 
ibk
->
num_assign
;Ç++ ) {

392 
assign_t
 *
as
 = 
ibk
->
assig∆i°
[
n
];

395 if–
	`°ªq
–
as
->
dîôªe
, 
br
->deritree )) {

396 
ªs
 = 0;

397 
num_nuŒifõrs
 = 0;

398 
assign_t
 **
nuŒifõr_li°
 = 
NULL
;

401 
	`ã°RóchabÀNoC™˚l
–&
ªs
, &
nuŒifõr_li°
, &
num_nuŒifõrs
, 
p
->
id
, 
k
, 
j
, 
br
->
dîôªe
, 
as
,Ö->
cfg
,Ö->
num_bb
 );

403 if–
ªs
 ) {

404 if–
	`isBAC⁄Êi˘
–
as
, 
br
, br->
jump_c⁄d
 )) {

405 
	`£tBAC⁄Êi˘
–
as
, 
br
, 
JUMP
, 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

407 
num_BA
++;

409 if–
	`isBAC⁄Êi˘
–
as
, 
br
, 
	`√g
–br->
jump_c⁄d
 ))) {

410 
	`£tBAC⁄Êi˘
–
as
, 
br
, 
FALL
, 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

412 
num_BA
++;

415 
	`‰ì
–
nuŒifõr_li°
 );

422 if–
brk
 =
NULL
 )

426 if–
	`°ªq
–
brk
->
dîôªe
, 
br
->deritree )) {

428 
jump
 = 
p
->
cfg
[
k
].
out_t
->
d°
->
id
;

429 
ÁŒ
 = 
p
->
cfg
[
k
].
out_n
->
d°
->
id
;

432 
ªs
 = 0;

433 
num_nuŒifõrs
 = 0;

434 
assign_t
 **
nuŒifõr_li°
 = 
NULL
;

437 
	`ã°RóchabÀNoC™˚l
–&
ªs
, &
nuŒifõr_li°
, &
num_nuŒifõrs
, 
p
->
id
, 
jump
, 
j
, 
br
->
dîôªe
, 
NULL
,Ö->
cfg
,Ö->
num_bb
 );

439 if–
ªs
 ) {

440 if–
	`isBBC⁄Êi˘
–
brk
, 
br
, brk->
jump_c⁄d
, br->jump_cond )) {

441 
	`£tBBC⁄Êi˘
–
brk
, 
br
, 
JJ
, 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

443 
num_BB
++;

445 if–
	`isBBC⁄Êi˘
–
brk
, 
br
, brk->
jump_c⁄d
, 
	`√g
( br->jump_cond ))) {

446 
	`£tBBC⁄Êi˘
–
brk
, 
br
, 
JF
, 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

448 
num_BB
++;

451 
	`‰ì
–
nuŒifõr_li°
 );

453 
ªs
 = 0;

454 
num_nuŒifõrs
 = 0;

455 
nuŒifõr_li°
 = 
NULL
;

458 
	`ã°RóchabÀNoC™˚l
–&
ªs
, &
nuŒifõr_li°
, &
num_nuŒifõrs
, 
p
->
id
, 
ÁŒ
, 
j
, 
br
->
dîôªe
, 
NULL
,Ö->
cfg
,Ö->
num_bb
 );

460 if–
ªs
 ) {

461 if–
	`isBBC⁄Êi˘
–
brk
, 
br
, 
	`√g
–brk->
jump_c⁄d
 ), br->jump_cond )) {

462 
	`£tBBC⁄Êi˘
–
brk
, 
br
, 
FJ
, 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

464 
num_BB
++;

466 if–
	`isBBC⁄Êi˘
–
brk
, 
br
, 
	`√g
–brk->
jump_c⁄d
 ),Çeg( br->jump_cond ))) {

467 
	`£tBBC⁄Êi˘
–
brk
, 
br
, 
FF
, 
nuŒifõr_li°
, 
num_nuŒifõrs
 );

469 
num_BB
++;

472 
	`‰ì
–
nuŒifõr_li°
 );

481 
	}
}

	@dump.c

8 
	$cﬁÀ˘OuãrPS
(
lo›_t
 *
Õ
) {

12 
dbg
 = 0;

13 
i
;

14 
tcfg_node_t
 *
hód
, *
§c
;

15 
tcfg_edge_t
 *
ö_e
, *
cur_e
;

16 
w‹kli°_p
 
£tNode
,
ÕNode
,
¥vNode
;

17 
sblk_p
 
£tBlk
,
ÕBlk
;

18 
m∑_acs
 
ÕIn
;

19 
lo›_t
 *
tmpLp
, *
∑rLp
;

21 
hód
 = 
Õ
->head;

22 
ÕIn

ÕPîsIn
[
Õ
->
id
];

23 i‡(
dbg
Ë
	`Ârötf
(
dbgM∑
,"\nPîs.blk whíÉ¡îög L%d",
Õ
->
id
);

25 
ö_e
 = 
hód
->
ö
; in_e; in_êö_e->
√xt_ö
) {

26 
§c
 = 
ö_e
->src;

27 i‡(
	`bbi_Õ
(
§c
)->
id
==
Õ
->id) ;

28 i‡(
dbg
) {

29 
	`Ârötf
(
dbgM∑
,"\nEnter L%d from (%d,%d)",

30 
Õ
->
id
,
	`bbi_pid
(
§c
),
	`bbi_bid
(src));

32 
i
=0; i<
MAX_CACHE_SET
; i++) {

33 
¥vNode
 = 
NULL
;

34 i‡(
dbg
) {

35 
	`Ârötf
(
dbgM∑
,"\nS[%d] ",
i
);

36 
	`¥ötCacheSë
(
dbgM∑
,
§c
->
acs_out
[
i
]);

38 
£tNode
 = 
§c
->
acs_out
[
i
]; sëNode; sëNodê£tNode->
√xt
) {

39 
£tBlk
 = (
sblk_p
)(
£tNode
->
d©a
);

40 i‡(
£tBlk
->
age
 < 
PSEUDO
) {

41 
	`addA·îNode
(
£tBlk
,&
¥vNode
,&(
ÕIn
[
i
]));

44 i‡(
dbg
) {

45 
	`Ârötf
(
dbgM∑
,"\n->S[%d] ",
i
);
	`¥ötCacheSë
(dbgM∑,
ÕIn
[i]);

49 
	}
}

56 
	$e°im©eNodeAŒMiss
(
tcfg_node_t
* 
bbi
) {

57 
dbg
 = 1;

58 
d©_ö°_t
* 
d_ö°
;

59 
ö¢_t
* 
ö¢
;

60 
n_ö°
,
cs
;

61 
num_PS
, 
max_miss
, 
max_exec
, 
cou¡2x
;

63 
w‹kli°_p
 
c⁄fS˝
, 
PS_£t
, 
miss_£t
, 
LPS_ªq
;

64 
w‹kli°_p
 
addrNode
, 
£tNode
, 
csNode
, 
¥vReqNode
, 
¥vNode
;

65 
ßddr_p
 
addrBlk
;

66 
sblk_p
 
£tBlk
;

68 
lo›_t
 *
Õ
, *
tmpLp
, *
∑rLp
;

70 
bbi
->
max_miss
 = 0;

71 
bbi
->
dˇche_dñay
 = 0;

72 
Õ
 = 
	`bbi_Õ
(
bbi
);

73 
max_exec
 = 
Õ
->
exec
;

74 
	`joö2acs
(
bbi
->
acs_ö
, bbi->
acs_out
);

75 i‡(
dbg
) {

76 
	`Ârötf
(
dbgM∑
,"\n\nEst induced miss in bbi (%d,%d), L%d, ME: %d",

77 
	`bbi_pid
(
bbi
),
	`bbi_bid
(bbi),
	`bbi_Õ
(bbi)->
id
, 
max_exec
);

79 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_d_ö°
;Ç_inst++) {

80 
d_ö°
 = &(
bbi
->
bb
->
d_ö°li°
[
n_ö°
]);

81 
ö¢
 = 
d_ö°
->insn;

82 
max_miss
 = 0; 
num_PS
 = 0;

83 
¥vNode
 = 
NULL
; 
LPS_ªq
 = NULL;

84 i‡(
dbg
){
miss_£t
 = 
NULL
; 
PS_£t
 = NULL;}

85 
d_ö°
->
max_exec
 = max_exec;

86 
tŸÆD©aExec
 +=
max_exec
;

88 i‡(
	`isSt‹eIn°
(
iß
[
d_ö°
->
ö°
->
›_íum
].
«me
)) {

89 
d_ö°
->
max_miss
 = 
max_exec
;

90 
tŸÆNPîsMiss
 +
d_ö°
->
max_miss
;

92 
	`¥ötf
("\n\nD©aRef: ");
	`¥ötIn°r
(
d_ö°
->
ö¢
);

93 
	`¥ötf
("maxPS: %d, maxMs: %d, maxExec: %d",

94 
num_PS
, 
d_ö°
->
max_miss
, 
max_exec
);

95 
	`fÊush
(
°dout
);

101 
addrNode
 = 
d_ö°
->
addr_£t
;áddrNode;áddrNodêaddrNode->
√xt
) {

102 
addrBlk
 = (
ßddr_p
)(
addrNode
->
d©a
);

103 
cs
 = 
	`GET_SET
(
addrBlk
->
blkAddr
);

104 
£tNode
=
bbi
->
acs_out
[
cs
]; sëNode; sëNodê£tNode->
√xt
) {

105 
£tBlk
 = (
sblk_p
)(
£tNode
->
d©a
);

106 i‡(
addrBlk
->
blkAddr
 > 
£tBlk
->
m
->blkAddr) ;

107 i‡(
addrBlk
->
blkAddr
 =
£tBlk
->
m
->blkAddr) {

108 i‡(
	`com∑ªMemS˝
(
addrBlk
,
£tBlk
->
m
,
Õ
)==0) {

109 i‡(
£tBlk
->
age
==
PSEUDO
) {

111 
max_miss
+=
	`e°Sc›eSize
(
£tBlk
->
m
->
accS˝
,
Õ
);

112 i‡(
dbg
Ë
	`addToW‹kLi°
(&
miss_£t
, 
addrBlk
);

115 
	`addA·îNode
(
addrBlk
,&
¥vNode
,&
LPS_ªq
);

116 
num_PS
++;

124 
	`addA·îNode
(
addrBlk
,&
¥vNode
, &
LPS_ªq
);

125 
num_PS
++;

131 i‡(
max_miss
 < 
max_exec
) {

132 
d_ö°
->
max_miss
 = max_miss;

133 
¥vReqNode
 = 
NULL
;

134 
£tNode
 = 
LPS_ªq
; sëNode; sëNode=£tNode->
√xt
) {

135 
addrBlk
 = (
ßddr_p
)(
£tNode
->
d©a
);

136 
	`addToIncSë
(
addrBlk
,&
¥vReqNode
,&(
ÕReqPS
[
Õ
->
id
]),lp);

137 i‡(
dbg
Ë
	`addToW‹kLi°
(&
PS_£t
, 
addrBlk
);

139 !
	`isEm±y
(
LPS_ªq
)Ë
	`ªmoveO√FromW‹kLi°
(&LPS_req);

142 
max_miss
 = 
max_exec
;

143 
d_ö°
->
max_miss
 = max_miss;

146 
bbi
->
max_miss
 +
d_ö°
->max_miss;

147 
tŸÆNPîsMiss
 +
d_ö°
->
max_miss
;

149 i‡(
dbg
) {

150 
	`Ârötf
(
dbgM∑
,"\n\nDataRef: ");

151 
	`ÂrötIn°r
(
dbgM∑
,
d_ö°
->
ö¢
);

152 
	`Ârötf
(
dbgM∑
,"\n#PS: %d, max_miss: %d, max_exec: %d",

153 
num_PS
, 
d_ö°
->
max_miss
, 
max_exec
);

154 
	`Ârötf
(
dbgM∑
,"\nList of PS.req :");

155 
	`¥ötMemS˝Së
(
dbgM∑
,
PS_£t
,0);

156 !
	`isEm±y
(
PS_£t
)Ë
	`ªmoveO√FromW‹kLi°
(&PS_set);

157 
	`Ârötf
(
dbgM∑
,"\nList of miss.blk :");

158 
	`¥ötMemS˝Së
(
dbgM∑
,
miss_£t
,0);

159 !
	`isEm±y
(
miss_£t
)Ë
	`ªmoveO√FromW‹kLi°
(&miss_set);

164 
	`¥ötf
("\n\nD©aRef: ");
	`¥ötIn°r
(
d_ö°
->
ö¢
);

165 
	`¥ötf
("maxPS: %d, maxMs: %d, maxExec: %d",

166 
num_PS
, 
d_ö°
->
max_miss
, 
max_exec
);

167 
	`fÊush
(
°dout
);

169 
	`PS_upd©e
(
bbi
->
acs_out
,
d_ö°
->
addr_£t
,
Õ
);

171 
	}
}

175 
	$e°LpMissPS
(
lo›_t
 *
Õ
) {

176 
dbg
 = 0;

177 
i
, 
s
;

178 
w‹kli°_p
 
öNode
, 
ªqNode
, 
¥vNode
;

179 
ßddr_p
 
ªqBlk
;

180 
sblk_p
 
öBlk
;

181 
w‹kli°_p
 *
¥vInNode
;

182 
w‹kli°_p
 
¥vReqNode
;

183 
lo›_t
 *
∑rLp
;

184 
found
, 
ÕMiss
;

185 
ÕE¡ry
;

186 
ac˚ssNum
;

188 i‡(
dbg
) {

189 
	`Ârötf
(
dbgM∑
,"\n\nE° cﬁd mis†ö L%d",
Õ
->
id
);

190 
	`Ârötf
(
dbgM∑
,"\n LPS set:");

191 
	`¥ötMemS˝Së
(
dbgM∑
,
ÕReqPS
[
Õ
->
id
],0);

192 
	`Ârötf
(
dbgM∑
,"\nÜpPS_in set");

193 
i
=0; i<
MAX_CACHE_SET
; i++) {

194 
	`Ârötf
(
dbgM∑
,"\¿S[%d]: ",
i
);

195 
	`¥ötCacheSë
(
dbgM∑
,
ÕPîsIn
[
Õ
->
id
][
i
]);

197 
	`Ârötf
(
dbgM∑
,"\n MissÉst: ");

199 
¥vReqNode
 = 
NULL
;

200 
¥vInNode
 = 
	`ˇŒoc
(
MAX_CACHE_SET
,(
w‹kli°_p
));

202 
Õ_cﬁdms
[
Õ
->
id
] = 0;

203 
ªqNode
 = 
ÕReqPS
[
Õ
->
id
];ÑeqNode;ÑeqNodêªqNode->
√xt
) {

204 
ªqBlk
 = (
ßddr_p
)(
ªqNode
->
d©a
);

206 
found
 = 0;

208 
s
 = 
	`GET_SET
(
ªqBlk
->
blkAddr
);

209 
¥vNode
 = 
¥vInNode
[
s
];

210 i‡(
¥vNode
Ë
öNode
 =ÖrvNode->
√xt
;

211 
öNode
 = 
ÕPîsIn
[
Õ
->
id
][
s
];

213  ; 
öNode
; inNodêöNode->
√xt
 ) {

214 
öBlk
 = (
sblk_p
)(
öNode
->
d©a
);

215 i‡(
öBlk
->
m
->
blkAddr
 < 
ªqBlk
->blkAddr) {

216 
¥vNode
 = 
öNode
;

218 i‡(
öBlk
->
m
->
blkAddr
 =
ªqBlk
->blkAdd∏&& 
Õ
->
∑ª¡
) {

219 i‡(
	`com∑ªMemS˝
(
öBlk
->
m
, 
ªqBlk
,
Õ
)==0) {

221 
found
 = 1;

222 
	`addToIncSë
(
ªqBlk
,&
¥vReqNode
,&(
ÕReqPS
[
Õ
->
∑ª¡
->
id
]),lp);

223 i‡(
dbg
Ë{
	`Ârötf
(
dbgM∑
," U:%x ",
ªqBlk
->
blkAddr
);}

227 
¥vNode
 = 
öNode
;

232 
found
 = 1;

233 i‡(
Õ
->
∑ª¡
Ë
ÕMiss
=
	`e°Sc›eSize
(
ªqBlk
->
accS˝
,lp->parent);

234 
ÕMiss
 = 1;

235 
Õ_cﬁdms
[
Õ
->
id
]+=
ÕMiss
;

236 i‡(
dbg
Ë{
	`Ârötf
(
dbgM∑
," C:%x:%d ",
ªqBlk
->
blkAddr
, 
ÕMiss
);}

240 i‡(!
found
) {

241 i‡(
Õ
->
∑ª¡
Ë
ÕMiss
 = 
	`e°Sc›eSize
(
ªqBlk
->
accS˝
,lp->parent);

242 
ÕMiss
 = 1;

243 
Õ_cﬁdms
[
Õ
->
id
]+=
ÕMiss
;

244 i‡(
dbg
Ë{
	`Ârötf
(
dbgM∑
," C:%x:%d ",
ªqBlk
->
blkAddr
,
ÕMiss
);}

246 
¥vInNode
[
s
] = 
¥vNode
;

248 
	`‰ì
(
¥vInNode
);

250 i‡(
Õ
->
∑ª¡
Ë
ÕE¡ry
 =Üp->∑ª¡->
exec
;

251 
ÕE¡ry
 = 1;

256 
tŸÆPîsMiss
 +
Õ_cﬁdms
[
Õ
->
id
];

258 i‡(
dbg
) {

259 
	`Ârötf
(
dbgM∑
,"\nCﬁd mis†ö L%d: %d",
Õ
->
id
, 
Õ_cﬁdms
[lp->id]);

262 
	`¥ötf
("\nL%d, Cold miss %d, Entry %d, Exec %d",

263 
Õ
->
id
,
Õ_cﬁdms
[Õ->id],
ÕE¡ry
,Üp->
exec
);

264 
	`fÊush
(
°dout
);

266 
	}
}

268 
	$e°C⁄fSc›e
(
mems˝_p
 
m
, 
w‹kli°_p
 
acs
, 
lo›_t
 *
curLp
) {

269 
dbg
 = 0;

270 
tŸÆC⁄f
, 
s˝C⁄f
, 
maxLw
, 
möUp
;

271 
w‹kli°_p
 
£tNode
, 
mAsNode
, 
cAsNode
;

272 
accS˝_p
 
mAs
,
cAs
;

273 
m∑blk_ù
 
£tBlk
;

274 
ÕOrdî
;

275 
c⁄fSize
, 
PSSize
;

276 
‰agmíãd_sc›e
 *
‰agSc›e
;

277 
tŸÆC⁄f
 = 0;

278 
‰agSc›e
 = 
	`ˇŒoc
(
num_tcfg_lo›s
,(
‰agmíãd_sc›e
));

279 
£tNode
 = 
acs
; sëNode; sëNode=£tNode->
√xt
) {

280 
£tBlk
 = (
m∑blk_ù
Ë(
£tNode
->
d©a
);

281 i‡(
	`com∑ªMemS˝
(
£tBlk
->
m
, m, 
curLp
)!=1) ;

283 
s˝C⁄f
 = 1;

284 i‡(
dbg
) {

285 
	`Ârötf
(
dbgM∑
,"\nConfScope: ");

286 
	`¥ötMemS˝
(
dbgM∑
,
m
,1);

287 
	`¥ötMemS˝
(
dbgM∑
,
£tBlk
->
m
,1);

288 
	`Ârötf
(
dbgM∑
,"\n--> ");

290 
mAsNode
 = 
m
->
accS˝
;

291 
cAsNode
 = 
£tBlk
->
m
->
accS˝
;

292 
mAsNode
 && 
cAsNode
) {

293 
mAs
 = (
accS˝_p
Ë(
mAsNode
->
d©a
);

294 
cAs
 = (
accS˝_p
Ë(
cAsNode
->
d©a
);

295 i‡(
dbg
 && 0) {

296 
	`Ârötf
(
dbgM∑
," (mL%d,cL%d)",

297 
mAs
->
lo›_id
, 
cAs
->loop_id);

299 
ÕOrdî
 = 
	`cmpLpOrdî
(
mAs
->
lo›_id
,
cAs
->loop_id);

300 i‡(
ÕOrdî
==1) {

301 
mAsNode
 = mAsNode->
√xt
;

303 i‡(
ÕOrdî
==-1) {

304 
cAsNode
 = cAsNode->
√xt
;

307 i‡(
	`isPªde˚ss‹
(
curLp
, 
lo›s
[
mAs
->
lo›_id
])) {

308 
maxLw
 = 
	`max
(
mAs
->
lw
, 
cAs
->lw);

309 
möUp
 = 
	`mö
(
mAs
->
up
, 
cAs
->up);

310 i‡(
dbg
) {

311 
	`Ârötf
(
dbgM∑
," (L%d,%d,%d) ",

312 
mAs
->
lo›_id
, 
maxLw
,
möUp
);

314 
s˝C⁄f
 *(
möUp
-
maxLw
)+1;

316 
mAsNode
 = mAsNode->
√xt
; 
cAsNode
 = cAsNode->next;

319 i‡(
dbg
Ë{
	`Ârötf
(
dbgM∑
," = %d",
s˝C⁄f
);}

320 
tŸÆC⁄f
 +
s˝C⁄f
;

322  
tŸÆC⁄f
;

323 
	}
}

325 
	$e°UnknownMiss
() {

327 i‡(
addrBlk
->
blkAddr
 =
UNKNOWN_ADDR
) {

329 i‡(
USE_DOUBLE_MISS
) {

330 
max_miss
 = 2*
max_exec
;

331 
Æl_PS
 = 0;

332 
d_ö°
->
max_miss
 += max_miss;

333 
cou¡2x
 = 1;

334 i‡(
dbg
) {

335 
	`Ârötf
(
dbgM∑
,"\nDataRef: ");

336 
	`ÂrötIn°r
(
dbgM∑
,
d_ö°
->
ö¢
);

337 
	`Ârötf
(
dbgM∑
," DOUBLE MISS : %d",
d_ö°
->
max_miss
);

338 
	`fÊush
(
dbgM∑
);

342 
max_miss
 = 
max_exec
;

343 
Æl_PS
 = 0;

344 
cou¡2x
 = 0;

345 i‡(
dbg
) {

346 
	`Ârötf
(
dbgM∑
,"\nDataRef: ");

347 
	`ÂrötIn°r
(
dbgM∑
,
d_ö°
->
ö¢
);

348 
	`Ârötf
(
dbgM∑
," ALL MISS : %d",
d_ö°
->
max_miss
);

349 
	`fÊush
(
dbgM∑
);

356 
	}
}

357 
	$e°im©eIndu˚dMiss
(
tcfg_node_t
* 
bbi
, 
ty≥
) {

358 
dbg
 = 1;

359 
d©_ö°_t
* 
d_ö°
;

360 
ö¢_t
* 
ö¢
;

361 
n_ö°
,
cs
;

362 
num_PS
, 
max_miss
, 
max_exec
, 
cou¡2x
;

363 
Æl_PS
;

365 
w‹kli°_p
 
c⁄fS˝
, 
PS_£t
, 
miss_£t
, 
PS_ªq
;

366 
w‹kli°_p
 
addrNode
, 
£tNode
, 
csNode
, 
¥vReqNode
, 
¥vNode
;

367 
ßddr_p
 
addrBlk
;

368 
sblk_p
 
£tBlk
;

370 
lo›_t
 *
Õ
, *
tmpLp
, *
∑rLp
;

372 
bbi
->
max_miss
 = 0;

373 
bbi
->
dˇche_dñay
 = 0;

374 
Õ
 = 
	`bbi_Õ
(
bbi
);

375 
max_exec
 = 
Õ
->
exec
;

376 
	`joö2acs
(
bbi
->
acs_ö
, bbi->
acs_out
);

379 i‡(
dbg
) {

380 
	`Ârötf
(
dbgM∑
,"\n****\nEstÇon-PS miss in bbi (%d,%d), L%d, ME: %d",

381 
	`bbi_pid
(
bbi
),
	`bbi_bid
(bbi),
	`bbi_Õ
(bbi)->
id
, 
max_exec
);

383 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_d_ö°
;Ç_inst++) {

384 
d_ö°
 = &(
bbi
->
bb
->
d_ö°li°
[
n_ö°
]);

385 
ö¢
 = 
d_ö°
->insn;

386 
num_PS
 = 0;

387 
PS_£t
 = 
NULL
;

389 
max_miss
 = 0;

390 
miss_£t
 = 
NULL
;

393 
d_ö°
->
max_exec
 = max_exec;

394 
tŸÆD©aExec
 +=
max_exec
;

397 
PS_ªq
 = 
NULL
;

398 
¥vNode
 = 
NULL
;

399 
Æl_PS
 = 1;

400 i‡(
dbg
) {

401 
	`Ârötf
(
dbgM∑
,"\n\nDataRef: ");

402 
	`ÂrötIn°r
(
dbgM∑
,
d_ö°
->
ö¢
);

404 
addrNode
 = 
d_ö°
->
addr_£t
;áddrNode;áddrNodêaddrNode->
√xt
) {

405 
addrBlk
 = (
ßddr_p
)(
addrNode
->
d©a
);

406 
cs
 = 
	`GET_SET
(
addrBlk
->
blkAddr
);

407 i‡(0Ë
	`Ârötf
(
dbgM∑
," %x:",
addrBlk
->
blkAddr
);

408 
£tNode
=
bbi
->
acs_out
[
cs
]; sëNode; sëNodê£tNode->
√xt
) {

409 
£tBlk
 = (
sblk_p
)(
£tNode
->
d©a
);

410 i‡(
addrBlk
->
blkAddr
 > 
£tBlk
->
m
->blkAddr) ;

411 i‡(
addrBlk
->
blkAddr
 =
£tBlk
->
m
->blkAddr) {

412 i‡(
£tBlk
->
age
==
PSEUDO
) {

414 i‡(0Ë
	`Ârötf
(
dbgM∑
,"m",
addrBlk
->
blkAddr
);

415 
Æl_PS
 = 0;

418 i‡(
dbg
Ë
	`addToW‹kLi°
(&
miss_£t
, 
addrBlk
);

422 i‡(0Ë
	`Ârötf
(
dbgM∑
,"p",
addrBlk
->
blkAddr
);

423 
	`addA·îNode
(
addrBlk
,&
¥vNode
, &
PS_ªq
);

425 
num_PS
++;

432 i‡(1Ë
	`Ârötf
(
dbgM∑
,"p",
addrBlk
->
blkAddr
);

433 
	`addA·îNode
(
addrBlk
,&
¥vNode
, &
PS_ªq
);

434 
num_PS
++;

441 i‡(
Æl_PS
) {

443 
∑rLp
 = 
Õ
;

444 
∑rLp
!=
NULL
) {

445 
Õ_Ælms
[
∑rLp
->
id
]+=
max_exec
;

446 
∑rLp
 =Ö¨Lp->
∑ª¡
;

448 
max_miss
 = 0;

449 
¥vReqNode
 = 
NULL
;

450 
£tNode
 = 
PS_ªq
; sëNode; sëNodê£tNode->
√xt
) {

451 
addrBlk
 = (
ßddr_p
)(
£tNode
->
d©a
);

452 
	`addToIncSë
(
addrBlk
, &
¥vReqNode
, &(
ÕReqPS
[
Õ
->
id
]));

456 
max_miss
 = 
max_exec
;

458 
d_ö°
->
max_miss
 = max_miss;

459 
bbi
->
max_miss
 +
d_ö°
->max_miss;

460 
tŸÆNPîsMiss
 +
d_ö°
->
max_miss
;

462 i‡(
dbg
) {

463 
	`Ârötf
(
dbgM∑
,"\n#PS: %d, max_miss: %d, max_exec: %d",

464 
num_PS
, 
max_miss
, 
max_exec
);

465 
	`Ârötf
(
dbgM∑
,"\nList of PS.req :");

466 
	`¥ötMemS˝Së
(
dbgM∑
,
PS_ªq
,0);

467 !
	`isEm±y
(
PS_ªq
)Ë
	`ªmoveO√FromW‹kLi°
(&PS_req);

468 
	`Ârötf
(
dbgM∑
,"\nList of miss.blk :");

469 
	`¥ötMemS˝Së
(
dbgM∑
,
miss_£t
,0);

470 !
	`isEm±y
(
miss_£t
)Ë
	`ªmoveO√FromW‹kLi°
(&miss_set);

473 
	`¥ötf
("\n\nD©aRef: ");
	`¥ötIn°r
(
d_ö°
->
ö¢
);

474 
	`¥ötf
("#PS: %d, max_miss: %d, max_exec: %d",

475 
num_PS
, 
max_miss
, 
max_exec
);

476 
	`fÊush
(
°dout
);

478 
	`PS_upd©e
(
bbi
->
acs_out
,
d_ö°
->
addr_£t
,
Õ
);

480 
	}
}

482 
	$Oœp
(
sblk_p
 
acsBlk
, 
w‹kli°_p
 
acsSë
, 
lo›_t
 *
Õ
) {

483 
dbg
 = 0; 
Êag
;

484 
˙t
 = 0;

485 
w‹kli°_p
 
acsNode
;

486 
sblk_p
 
˙fBlk
;

487 
Êag
 = 0;

488 
acsNode
=
acsSë
;ácsNode;ácsNode˜csNode->
√xt
) {

489 
˙fBlk
 = (
sblk_p
Ë(
acsNode
->
d©a
);

490 i‡(
	`com∑ªMemS˝
(
acsBlk
->
m
, 
˙fBlk
->m, 
Õ
)==1) {

491 
˙t
++;

492 i‡(
dbg
 && !
Êag
) {

493 
	`Ârötf
(
dbgM∑
,"\nS˝C⁄Êi˘ wôh %x:",
acsBlk
->
m
->
blkAddr
);

494 
Êag
 = 1;

496 i‡(
dbg
)
	`Ârötf
(
dbgM∑
," %x",
˙fBlk
->
m
->
blkAddr
,˙fBlk->
age
);

498 i‡(
˙t
 =
PSEUDO
)  cnt;

500  
˙t
;

501 
	}
}

503 
	$mîgeI¬îLo›A«lysis
() {

505 i‡(
	`cmpLpOrdî
(
hdLpId
,
blkLpId
)==1) {

506 i‡(
dbg
) {

507 
	`Ârötf
(
dbgM∑
,"\nA«lyzêö√∏L%d o‡L%d",
blkLpId
,
hdLpId
);

508 
	`fÊush
(
dbgM∑
);

511 
	`™Æyze_lo›_ps
(
blk_Õ
);

513 
ö√r_èû
 = 
blk_Õ
->
èû
;

514 
ö_edge
 = 
cur
->
ö
; in_edge; in_edgêö_edge->
√xt_ö
) {

515 i‡(
	`bbi_ÕId
(
ö_edge
->
§c
)!=
hdLpId
) ;

517 
ch™ge
 = 0;

518 
out_edge
 = 
ö√r_èû
->
out
;

519 
out_edge
; out_edgêout_edge->
√xt_out
) {

520 
tmp
 = 
out_edge
->
d°
;

521 i‡(
	`bbi_ÕId
(
tmp
)==
hdLpId
) {

522 i‡(
dbg
) {

523 
	`Ârötf
(
dbgM∑
,"\nMerge L%d: (%d,%d)-> L%d -> (%d,%d)",

524 
hdLpId
, 
	`bbi_pid
(
ö_edge
->
§c
),
	`bbi_bid
(in_edge->src),

525 
blkLpId
, 
	`bbi_pid
(
tmp
),
	`bbi_bid
(tmp));

526 
	`fÊush
(
dbgM∑
);

529 
ch™ge
 = 
	`PS_mîge
(
ö_edge
->
§c
->
acs_out
,

530 
tmp
->
acs_ö
,
blk_Õ
);

531 i‡(
visôed
[
tmp
->
id
]==0) {

532 
ch™ge
 = 1; 
visôed
[
tmp
->
id
]=1;

534 i‡(
ch™ge
) {

536 
	`å™sf‹m_bbi_dˇche
(
tmp
,
lo›
,
PERSISTENCE
);

537 
tmp_edge

tmp
->
out
;

538 
tmp_edge
;Åmp_edgêtmp_edge->
√xt_out
){

539 
	`p_íqueue
(&
pQueue
,
tmp_edge
->
d°
,tmp_edge->d°->
id
);

547 
	}
}

549 
	$PS_upd©e_Old
(
s˝_acs
 
acs_out
, 
w‹kli°_p
 
addr_£t
, 
lo›_t
 *
curLo›
) {

550 
dbg
 = 0;

551 
i
;

552 
w‹kli°_p
 
addrNode
, 
c⁄fNode
;

553 
w‹kli°_p
 
acsNode
, 
curNode
, 
¥vNode
;

554 
w‹kli°_p
 
ª√wLi°
, 
¥vRíew
;

555 
w‹kli°_p
 
√wLi°
, 
¥vNew
;

556 
w‹kli°_p
 
agedLi°
, 
¥vAged
;

558 
ßddr_p
 
addrBlk
;

559 
sblk_p
 
tmpBlk
, 
acsBlk
,
c⁄fBlk
;

560 
s
;

561 
Êag
, 
found
, 
£lfC⁄f
, 
ch™ge
, 
added
, 
maxAge
;

564 
ª√wLi°
 = 
NULL
;

568 i‡(
dbg
) {

570 
	`Ârötf
(
dbgM∑
,"\n\nAddrSë: ");
	`¥ötMemS˝Së
(dbgM∑,
addr_£t
,1);

571 
i
=0; i<
MAX_CACHE_SET
; i++) {

572 
	`Ârötf
(
dbgM∑
,"\nS[%d] ",
i
);
	`¥ötCacheSë
(dbgM∑,
acs_out
[i]);

577 
i
=0;i<
MAX_CACHE_SET
;i++Ë
¥vAcsNode
[i]=
NULL
;

578 
addrNode
 = 
addr_£t
;áddrNode;áddrNode˜ddrNode->
√xt
) {

579 
addrBlk
 = (
ßddr_p
)(
addrNode
->
d©a
);

580 i‡(
addrBlk
->
blkAddr
==
UNKNOWN_ADDR
) ;

581 
s
 = 
	`GET_SET
(
addrBlk
->
blkAddr
);

583 
¥vNode
 = 
¥vAcsNode
[
s
];

584 i‡(
¥vNode
 =
NULL
Ë
acsNode
 = 
acs_out
[
s
];

585 
acsNode
 = 
¥vNode
->
√xt
;

587 
found
 = 0;

588 
acsNode
) {

589 
acsBlk
 = (
sblk_p
)(
acsNode
->
d©a
);

593 i‡(
acsBlk
->
m
->
blkAddr
 =
addrBlk
->blkAddr

594 && 
	`com∑ªMemS˝
(
acsBlk
->
m
,
addrBlk
,
curLo›
)==0) {

595 i‡(
addrBlk
->
Êag
==1Ë
acsBlk
->
age
 = 0;

596 
found
 = 1;

599 i‡(
acsBlk
->
m
->
blkAddr
 > 
addrBlk
->blkAddr ) {

608 
¥vNode
 = 
acsNode
;

609 
acsNode
 =ácsNode->
√xt
;

612 i‡(!
found
) {

614 
tmpBlk
 = 
	`mÆloc
((
sblk_s
));

615 
tmpBlk
->
m
 = 
addrBlk
;

616 
tmpBlk
->
age
 = 0;

617 
tmpBlk
->
Êag
 = 
addrBlk
->flag;

618 
	`addA·îNode
(
tmpBlk
,&
¥vNode
, &(
acs_out
[
s
]));

620 
¥vAcsNode
[
s
] = 
¥vNode
;

624 
agedLi°
=
NULL
;

625 
addrNode
 = 
addr_£t
;áddrNode;áddrNode˜ddrNode->
√xt
) {

626 
addrBlk
 = (
ßddr_p
)(
addrNode
->
d©a
);

627 i‡(
addrBlk
->
blkAddr
==
UNKNOWN_ADDR
) {

628 
	`upd©eUnknownAddr
();

631 
s
 = 
	`GET_SET
(
addrBlk
->
blkAddr
);

632 
acsNode
=
acs_out
[
s
];ácsNode;ácsNode˜csNode->
√xt
) {

633 
acsBlk
 = (
sblk_p
)(
acsNode
->
d©a
);

634 i‡(!
acsBlk
->
wasAged
 &&ácsBlk->
age
<
PSEUDO


635 && 
acsBlk
->
age
 < 
	`maxC⁄Êi˘
◊csBlk, 
acs_out
[
s
], 
curLo›
)

636 && 
	`com∑ªMemS˝
(
acsBlk
->
m
,
addrBlk
, 
curLo›
)==1) {

637 
acsBlk
->
wasAged
 = 1;

638 
acsBlk
->
age
++;

639 
	`addToW‹kLi°
(&
agedLi°
, 
acsBlk
);

644 !
	`isEm±y
(
agedLi°
)) {

645 
acsBlk
 = 
	`ªmoveO√FromW‹kLi°
(&
agedLi°
);

646 
acsBlk
->
wasAged
 = 0;

648 i‡(
dbg
) {

649 
i
=0; i<
MAX_CACHE_SET
; i++) {

650 
	`Ârötf
(
dbgM∑
,"\n-->S[%d] ",
i
);
	`¥ötCacheSë
(dbgM∑,
acs_out
[i]);

653 
	}
}

656 
	$upd©eUnknownAddr
() {

658 i‡(
addrBlk
->
blkAddr
==
UNKNOWN_ADDR
) {

659 i‡(
USE_DOUBLE_MISS
) {

664 
i
=0; i<
MAX_CACHE_SET
; i++) {

665 
¥vNode
 = 
NULL
;

666 
acsNode
 = 
acs_out
[
i
];ácsNode;ácsNode˜csNode->
√xt
){

667 
acsBlk
 = (
sblk_p
)(
acsNode
->
d©a
);

668 
acsBlk
->
age
 = 
	`mö
◊csBlk->age+1, 
PSEUDO
);

669 
¥vNode
 = 
acsNode
;

671 i‡(
¥vNode
) {

672 
acsBlk
 = (
sblk_p
)(
¥vNode
->
d©a
);

673 i‡(
acsBlk
->
m
->
blkAddr
 !
UNKNOWN_ADDR
) {

674 
tmpBlk
 = 
	`mÆloc
((
m∑blk_i
));

675 
tmpBlk
->
m
 = 
addrBlk
;

678 
tmpBlk
->
age
 = 
PSEUDO
;

679 
tmpBlk
->
Êag
 = 
addrBlk
->flag;

680 
	`addA·îNode
(
tmpBlk
,&
¥vNode
, &(
acs_out
[
i
]));

688 
	}
}

689 
	$cmp_m∑In°
(
sblk_p
 
§c
, sblk_∞
d°
) {

690 i‡(
§c
->
age
 !
d°
->age)  1;

691 i‡(
§c
->
m
->
blkAddr
 !
d°
->m->blkAddr)  2;

693 
	}
}

695 
	$PS_joö_Old
(
s˝_acs
 
§c
, s˝_ac†
d°
 ) {

696 
dbg
 = 0;

697 
i
;

698 
w‹kli°_p
 
sNode
, 
dNode
, 
¥vNode
, 
tmpNode
;

699 
sblk_p
 
sBlk
, 
dBlk
, 
tmpBlk
;

700 
ch™ge
;

702 i‡(
dbg
Ë
	`Ârötf
(
dbgM∑
,"\nPersistent join");

703 
ch™ge
 = 0;

704 
i
=0; i<
MAX_CACHE_SET
; i++) {

705 i‡(
dbg
) {

706 
	`Ârötf
(
dbgM∑
,"\nS[%d]: ",
i
);
	`¥ötCacheSë
(dbgM∑,
§c
[i]);

707 
	`Ârötf
(
dbgM∑
,"\nD[%d]: ",
i
);
	`¥ötCacheSë
(dbgM∑,
d°
[i]);

709 
sNode
 = 
§c
[
i
];

710 
dNode
 = 
d°
[
i
]; 
¥vNode
 = 
NULL
;

713 
sNode
) {

714 
sBlk
 = (
sblk_p
)(
sNode
->
d©a
);

715 i‡(
dNode
) {

716 
dBlk
 = (
sblk_p
)(
dNode
->
d©a
);

717 i‡(
sBlk
->
m
->
blkAddr
 =
dBlk
->m->blkAddr

718 && 
sBlk
->
m
->
ö°Addr
==
dBlk
->m->instAddr) {

719 i‡(
sBlk
->
age
 > 
dBlk
->age) {

720 
ch™ge
 = 1;

721 
dBlk
->
age
 = 
sBlk
->age;

723 i‡(
sBlk
->
Êag
==0 && 
dBlk
->flag!=0) {

724 
ch™ge
 = 1;

725 
dBlk
->
Êag
 = 0;

727 
¥vNode
 = 
dNode
;

728 
sNode
 = sNode->
√xt
;

729 
dNode
 = dNode->
√xt
;

731 i‡(
sBlk
->
m
->
blkAddr
 > 
dBlk
->m->blkAddr) {

733 
¥vNode
 = 
dNode
;

734 
dNode
 = dNode->
√xt
;

739 
tmpBlk
 = 
	`mÆloc
((
m∑blk_i
));

740 
	`c›y_m∑In°
(
sBlk
, 
tmpBlk
);

741 
	`addA·îNode
(
tmpBlk
, &
¥vNode
, &(
d°
[
i
]));

742 
sNode
 = sNode->
√xt
;

743 
ch™ge
 = 1;

747 
tmpBlk
 = 
	`mÆloc
((
m∑blk_i
));

748 
	`c›y_m∑In°
(
sBlk
, 
tmpBlk
);

749 
	`addA·îNode
(
tmpBlk
,&
¥vNode
,&(
d°
[
i
]));

750 
sNode
 = sNode->
√xt
;

751 
ch™ge
 = 1;

754 i‡(
dbg
 && 
ch™ge
) {

755 
	`Ârötf
(
dbgM∑
,"\n--> D[%d]: ",
i
);
	`¥ötCacheSë
(dbgM∑,
d°
[i]);

757 i‡(
dbg
) {

758 
	`Ârötf
(
dbgM∑
,"\n--> ");

761  
ch™ge
;

762 
	}
}

765 * 
	$ex∑ndInV¨
–
ªg_t
 *
ªgLi°
, * 
dîôªe
) {

766 
dbg
 = 0;

767 *
°r
, *
tmpSå
;

768 
tmp
[256], 
ªgVÆ
[256], 
tokí
[256];

769 
pos
, 
ªgNum
, 
curReg
;

770 
˙t
,
Êag
;

771 
biv_p
 
biV¨
;

772 
°r
 = (*)
	`ˇŒoc
(256,());

773 
pos
 = 0;

774 
˙t
 = 0;

775 i‡(
dbg
Ë{
	`Ârötf
(
dbgAddr
,"\nEx∑nd dîi:%†",
dîôªe
);
	`fÊush
(dbgAddr);}

776 
°r
[0]='\0';

777 
	`gëNextEÀm
(
dîôªe
,&
pos
,
tokí
)!=0) {

779 i‡(
tokí
[0]=='$') {

780 
ªgNum
 = 
	`födReg
(
tokí
);

781 i‡(
dbg
) {

782 
	`Ârötf
(
dbgAddr
,"\nExpand inReg: ");

783 
	`¥ötRegVÆ
(
dbgAddr
,
ªgLi°
[
ªgNum
]);

785 i‡(
ªgNum
<0 || 
ªgLi°
[ªgNum].
öV¨
==
NULL
) {

786 
	`¥ötf
("\nInvÆid Reg o∏nŸ BIV: dîi:%†tk:%s",
dîôªe
,
tokí
);

787 
	`fÊush
(
°dout
);

788 
	`exô
(1);

791 
biV¨
 = (
biv_p
)
ªgLi°
[
ªgNum
].
öV¨
;

792 
tmpSå
 = 
	`ex∑ndInV¨
(
ªgLi°
,
biV¨
->
öô
);

793 i‡(
tmpSå
==
NULL
) {

794 
	`¥ötf
("\nNULLÉx∑ndInV¨(%s)",
biV¨
->
öô
);
	`fÊush
(
°dout
);

795 
	`exô
(1);

797 
	`°rˇt
(
°r
,"(");

798 
	`°rˇt
(
°r
,
tmpSå
);

799 
	`‰ì
(
tmpSå
);

801 
	`°rˇt
(
°r
,"+");°rˇt(°r,
ªgLi°
[
ªgNum
].
«me
);

802 
	`°rˇt
(
°r
,")");

805 
	`°rˇt
(
°r
,
tokí
);

807 
˙t
++;

809 i‡(
dbg
Ë{
	`Ârötf
(
dbgAddr
,"\nEx∑ndedÑeg:%†",
°r
);
	`fÊush
(dbgAddr);}

810  
°r
;

811 
	}
}

815 
biv_p
 
	$födLpBIV
(
lo›_t
 *
Õ
, 
biv_p
 
bivA
) {

816 
w‹kli°_p
 
ôem
;

817 
biv_p
 
tmpBiv
;

818 i‡(
Õ
==
NULL
)  NULL;

819 
ôem
 = (
w‹kli°_p
)(
Õ
->
biv_li°
); iãm; iãm = iãm->
√xt
) {

820 
tmpBiv
 = (
biv_p
)(
ôem
->
d©a
);

821 i‡(
	`ªgEq
(
tmpBiv
,
biv
))  biv;

823  
NULL
;

824 
	}
}

825 
	$™Æyze_ªguœr_ac˚ss_ﬁd
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
) {

826 
dbg
 = 0, *
visôed
;

827 
i
,
j
,
k
,
pos
, 
möC€f
;

828 
°r
[
DERI_LEN
],
des
[DERI_LEN];

829 *
tmpSå
;

831 
öc
;

832 
m⁄Ÿ⁄e
;

833 
ö‹dî
;

834 
pﬁy_ex¥_t
 *
addrEq
, *
maxEq
, *
tmpEq
, *
curEq
, *
¥vEq
;

836 
pﬁy_ex¥_t
 
bufEq
;

837 
accS˝_s
 
bufS˝
;

838 
lo›_t
 *
lo›
, *
curLp
, *
ouãrMo°
, *
tmpLp
;

839 
accS˝_p
 
curS˝
, 
tmpS˝
, 
√xtS˝
;

840 
w‹kli°_p
 
curTSNode
, 
‹gTSNode
, 
tmpTSNode
, 
maxTSNode
;

841 
w‹kli°_p
 
addrNode
, 
¥vNode
;

842 
biv_p
 
öV¨
;

844 
visôed
 = 
	`ˇŒoc
(
num_tcfg_lo›s
,());

845 
i
=0;

846 
	`°r˝y
(
°r
,
d_ö°
->
dîôªe
);

849 
pos
 = 0;
°r
[0]='\0';

850 
tmpSå
 = 
	`ex∑ndInV¨
(
ib
->
ªgLi°In
,
d_ö°
->
dîôªe
);

851 i‡(
tmpSå
Ë{
	`•rötf
(
°r
,"%s%",tmpSå);
	`‰ì
(tmpStr);}

852 {
	`Ârötf
(
dbgAddr
,"\nNULL dîôªê%s",
d_ö°
->
dîôªe
);}

853 i‡(
dbg
) {

854 
	`Ârötf
(
dbgAddr
,"\nEx∑nded infix så: %s",
°r
);

855 
	`fÊush
(
dbgAddr
);

859 i‡(
	`°rchr
(
°r
,'T')!=
NULL
) {

860 
	`™Æyze_hÆf_ªguœr_ac˚ss
(
d_ö°
,
ib
,
°r
);

865 
	`c⁄vît2Pªfix
(
°r
,
des
);

867 
pos
 = 0;

868 i‡(0Ë
	`Ârötf
(
dbgAddr
,"\nCompute Prefix");

869 
addrEq
 = 
	`compuãPªfix
(
°r
,&
pos
);

872 i‡(
dbg
) {

873 
	`Ârötf
(
dbgAddr
, "\n AffineárrayÉxpr: ");

874 
	`¥ötEx¥essi⁄
(
dbgAddr
,
addrEq
);
	`fÊush
(dbgAddr);

880 
‹gTSNode
 = 
NULL
; 
curTSNode
 = NULL;

881 
¥vEq
 = 
NULL
;

882 
curEq
 = 
addrEq
; curEq; curEq = curEq->
√xt
) {

883 i‡(
curEq
->
ªgName
[0]=='1') {

885 
tmpS˝
 = 
	`mÆloc
((
accS˝_s
));

886 
tmpS˝
->
lo›_id
 = -1;

887 
tmpS˝
->
lw
 = 0;ÅmpS˝->
up
 = 0;ÅmpS˝->
Êag
 = 0;

888 
	`addA·îNode
(
tmpS˝
,&
curTSNode
,&(
‹gTSNode
));

890 i‡(
curEq
->
ªgName
[0]=='T') {

893 i‡(
curEq
->
ªgName
[0]=='$') {

894 
found
;

895 
lökedli°_p
 
ôem
;

896 
found
 = 0;

897 
lo›
 = 
	`gëIbLo›
(
ib
);

899 
found
==0 && 
lo›
) {

900 i‡(
dbg
 & 0) {

901 
	`Ârötf
(
dbgAddr
,"\¿BIVÜi° o‡L%d ",
lo›
->
id
);

902 
ôem
 = 
lo›
->
biv_li°
; iãm; iãm = iãm->
√xt
) {

903 
biv_p
 
biv
 = (biv_p)(
ôem
->
d©a
);

904 
	`Ârötf
(
dbgAddr
," (%s,%s,%d) ",

905 
biv
->
ªgName
,biv->
öô
,biv->
°ride
);

907 
	`fÊush
(
dbgAddr
);

909 
öV¨
 = 
	`födLpBIV
(
lo›
,
curEq
->
ªgName
);

910 i‡(
öV¨
==
NULL
Ë
lo›
 =Üo›->
∑ª¡
;

911 
found
=1;

913 i‡(
found
) {

914 
curEq
->
c€f
 *
öV¨
->
°ride
;

915 i‡(
dbg
 & 1) {

916 
	`Ârötf
(
dbgAddr
,"\n%d:%†i†ö L%d,Üb %d", 
curEq
->
c€f
,

917 
curEq
->
ªgName
, 
lo›
->
id
,Üo›->
bound
);

918 
	`Ârötf
(
dbgAddr
,", (%s,%s,%d) ",

919 
öV¨
->
ªgName
,öV¨->
öô
,öV¨->
°ride
);

920 
	`fÊush
(
dbgAddr
);

924 
found
 = 0;

926 
tmpEq
 = 
addrEq
;

927 
tmpTSNode
=
‹gTSNode
;tmpTSNode;tmpTSNodeÒmpTSNode->
√xt
) {

928 
tmpS˝
 = (
accS˝_p
)(
tmpTSNode
->
d©a
);

929 i‡(
tmpS˝
->
lo›_id
 =
lo›
->
id
) {

930 
found
 = 1;

933 
tmpEq
 =ÅmpEq->
√xt
;

936 i‡(!
found
) {

937 
tmpS˝
 = 
	`mÆloc
((
accS˝_s
));

938 
tmpS˝
->
lo›_id
 = 
lo›
->
id
;

939 
visôed
[
lo›
->
id
] = 1;

940 
tmpS˝
->
lw
 = 0;ÅmpS˝->
up
 = 0;ÅmpS˝->
Êag
 = 0;

941 
	`addA·îNode
(
tmpS˝
,&
curTSNode
,&(
‹gTSNode
));

944 
tmpEq
->
c€f
 +
curEq
->c€f*
öV¨
->
°ride
;

945 
¥vEq
->
√xt
 = 
curEq
->next;

949 
	`¥ötf
("\nC™nŸ födÜo› f‹Ñeg: %s",
curEq
->
ªgName
);

950 
	`fÊush
(
°dout
);
	`exô
(1);

955 
	`¥ötf
("\nEº‹: badÑegName: %s",
curEq
->
ªgName
);
	`fÊush
(
°dout
);

956 
	`exô
(1);

958 
¥vEq
 = 
curEq
;

960 i‡(
dbg
 & 0) {

961 
	`Ârötf
(
dbgAddr
,"\nAddressÉxpression ");

962 
	`¥ötEx¥essi⁄
(
dbgAddr
,
addrEq
);

963 
	`Ârötf
(
dbgAddr
,"\nAccess scope ");

964 
	`¥ötAccS˝Së
(
dbgAddr
,
‹gTSNode
);

967 
tmpEq
=
addrEq
; 
tmpTSNode
 = 
‹gTSNode
;

968 
tmpEq
) {

969 
maxEq
 = 
tmpEq
;

970 
maxTSNode
 = 
tmpTSNode
;

971 
curTSNode
 = 
tmpTSNode
->
√xt
;

973 
curEq
 = 
tmpEq
->
√xt
 ; curEq; curEq = curEq->next) {

974 i‡(
dbg
 && 0) {

975 
tmpS˝
 = (
accS˝_p
)(
curTSNode
->
d©a
);

976 
	`Ârötf
(
dbgAddr
,"\n %d:%s , L%d ",

977 
curEq
->
c€f
,curEq->
ªgName
, 
tmpS˝
->
lo›_id
);

978 
	`fÊush
(
dbgAddr
);

980 i‡–
	`abs
(
curEq
->
c€f
Ë>ábs(
maxEq
->coef) ) {

981 
maxEq
 = 
curEq
;

982 
maxTSNode
 = 
curTSNode
;

984 
curTSNode
 = curTSNode->
√xt
;

986 i‡(0Ë
	`Ârötf
(
dbgAddr
,"\nmaxEq: %x:%s",
maxEq
->
c€f
, maxEq->
ªgName
);

987 
bufEq
.
c€f
 = 
maxEq
->coef;

988 
	`°r˝y
(
bufEq
.
ªgName
,
maxEq
->regName);

989 
maxEq
->
c€f
 = 
tmpEq
->coef;

990 
	`°r˝y
(
maxEq
->
ªgName
, 
tmpEq
->regName);

991 
tmpEq
->
c€f
 = 
bufEq
.coef;

992 
	`°r˝y
(
tmpEq
->
ªgName
,
bufEq
.regName);

994 
tmpS˝
 = (
accS˝_p
)(
maxTSNode
->
d©a
);

995 
curS˝
 = (
accS˝_p
)(
tmpTSNode
->
d©a
);

996 
	`c›y_accS˝
(
tmpS˝
,&
bufS˝
);

997 
	`c›y_accS˝
(
curS˝
,
tmpS˝
);

998 
	`c›y_accS˝
(&
bufS˝
,
curS˝
);

1000 
tmpEq
 =ÅmpEq->
√xt
;

1001 
tmpTSNode
 =ÅmpTSNode->
√xt
;

1004 
¥vNode
 = 
NULL
;

1005 
curTSNode
 = 
‹gTSNode
; curTSNode; curTSNode=curTSNode->
√xt
) {

1006 
curS˝
 = (
accS˝_p
Ë(
curTSNode
->
d©a
);

1007 i‡(
curS˝
->
lo›_id
 == -1) {

1008 i‡(
¥vNode
Ë¥vNode->
√xt
 = 
curTSNode
->next;

1009 
‹gTSNode
 = orgTSNode->
√xt
;

1011 
¥vNode
 = 
curTSNode
;

1013 i‡(
dbg
) {

1014 
	`Ârötf
(
dbgAddr
,"\nRóº™gedÉx¥: ");
	`fÊush
(dbgAddr);

1015 
	`¥ötEx¥essi⁄
(
dbgAddr
,
addrEq
);
	`fÊush
(dbgAddr);

1016 
	`Ârötf
(
dbgAddr
,"\nRearrangedáccess scope ");

1017 
	`¥ötAccS˝Së
(
dbgAddr
,
‹gTSNode
);

1018 
	`Ârötf
(
dbgAddr
,"\nAdd∏ex¥Ör›îty: ");
	`fÊush
(dbgAddr);

1022 
m⁄Ÿ⁄e
 = 1; 
ö‹dî
 = 1; 
öc
 = 1;

1023 
curTSNode
 = 
‹gTSNode
;

1024 
curEq
 = 
addrEq
; curEq; curEq = curEq->
√xt
) {

1025 i‡(
curEq
->
ªgName
[0]!='$') ;

1027 i‡(
curEq
->
c€f
<0Ë
öc
 = 0;

1029 
curS˝
 = (
accS˝_p
)(
curTSNode
->
d©a
);

1030 
curLp
 = 
lo›s
[
curS˝
->
lo›_id
];

1033 
tmpTSNode
 = 
curTSNode
->
√xt
; i‡—mpTSNode==
NULL
) ;

1034 
tmpEq
 = 
curEq
->
√xt
; i‡—mpEq==
NULL
) ;

1035 
tmpS˝
 = (
accS˝_p
)(
tmpTSNode
->
d©a
);

1036 
tmpLp
 = 
lo›s
[
tmpS˝
->
lo›_id
];

1042 i‡(
curLp
->
id
 <
tmpLp
->idË
ö‹dî
 = 0;

1048 i‡(
	`abs
(
tmpEq
->
c€f
*
tmpLp
->
bound
Ë>ábs(
curEq
->coef)) {

1049 i‡(
dbg
Ë
	`Ârötf
(
dbgAddr
," |%d*%d|>%d Monotone:0",

1050 
tmpEq
->
c€f
,
tmpLp
->
bound
, 
curEq
->coef);

1051 
m⁄Ÿ⁄e
 = 0;

1053 
curTSNode
 = curTSNode->
√xt
;

1061 
curTSNode
 = 
‹gTSNode
; curTSNode; curTSNodêcurTSNode->
√xt
){

1062 
curS˝
 = (
accS˝_p
)(
curTSNode
->
d©a
);

1063 
curS˝
->
Êag
 = 
m⁄Ÿ⁄e
 && 
ö‹dî
;

1067 
curTSNode
=
‹gTSNode
; curTSNode->
√xt
; curTSNode=curTSNode->next);

1068 
lo›
 = 
	`gëIbLo›
(
ib
);Üo›;Üo›ˆo›->
∑ª¡
) {

1069 i‡(
visôed
[
lo›
->
id
]==0) {

1070 
tmpS˝
 = 
	`mÆloc
((
accS˝_s
));

1071 
tmpS˝
->
lo›_id
 = 
lo›
->
id
;

1072 
tmpS˝
->
lw
 = 0;ÅmpS˝->
up
 = 
	`max
(
lo›
->
bound
-1,0);ÅmpS˝->
Êag
 = 0;

1073 
	`addA·îNode
(
tmpS˝
,&
curTSNode
,&(
‹gTSNode
));

1074 
visôed
[
lo›
->
id
]=1;

1078 i‡(
dbg
) {

1079 
	`Ârötf
(
dbgAddr
,"\nTS: ");

1080 
	`¥ötAccS˝Së
(
dbgAddr
,
‹gTSNode
);

1082 
curTSNode
 = 
‹gTSNode
;

1083 
tmpTSNode
 = 
NULL
;

1084 
curEnumBlk
 = 
NULL
;

1085 
i
=0; i<
num_tcfg_lo›s
; i++Ë
ôîVÆue
[i]=
lo›s
[i]->
bound
;

1086 
	`íumAfföeEq
(
d_ö°
, 
addrEq
,0,
öc
,
m⁄Ÿ⁄e
&
ö‹dî
,
‹gTSNode
,
curTSNode
,

1087 &(
d_ö°
->
addr_£t
),&
tmpTSNode
,
ib
);

1090 
öc
 = in¯&& 
m⁄Ÿ⁄e
;

1091 
addrNode
 = 
d_ö°
->
addr_£t
;áddrNode;áddrNode˜ddrNode->
√xt
) {

1092 
	`¨øngeTSfﬁlowLPHG
(
addrNode
->
d©a
);

1096 
	`Ârötf
(
dbgAddr
,"\nAddress setáfterÑearranging TS: ");

1097 
	`¥ötSAddrSë
(
dbgAddr
,
d_ö°
->
addr_£t
,1);

1101 
	}
}

1104 *
	gôîVÆue
;

1105 
	$íumAfföeEq
(
d©_ö°_t
 *
d_ö°
, 
pﬁy_ex¥_t
 *
eq
,

1106 
addr
, 
öc
, 
£q
,

1107 
w‹kli°_p
 
‹gTS
, w‹kli°_∞
curTS
,

1108 
w‹kli°_p
 *
£tHód
, w‹kli°_∞*
£tCur
, 
öf_node_t
 *
ib
) {

1109 
dbg
 = 1;

1110 
w‹kli°_p
 
tmpNode
;

1111 
mems˝_p
 
tmpBlk
;

1113 
i
,
lb
;

1114 
lo›_t
 *
Õ
;

1115 
pﬁy_ex¥_t
 *
√xt
;

1116 
accS˝_p
 
ÕTS
;

1117 
biv_p
 
biv
;

1119 i‡(
eq
 =
NULL
) {

1120 i‡(
dbg
 && 0) {

1121 
	`Ârötf
(
dbgAddr
,"\¿Mem: %x, TS:",
	`GET_MEM
(
addr
));

1122 
	`¥ötAccS˝Së
(
dbgAddr
,
‹gTS
);

1124 i‡(
curEnumBlk
 && 
	`GET_MEM
(
addr
)==curEnumBlk->
blkAddr
) {

1125 
	`mîgeTS
(
curEnumBlk
->
accS˝
,
‹gTS
,-1);

1128 i‡(*
£tCur
Ë
tmpBlk
=(*£tCur)->
d©a
;

1129 
tmpBlk
 = 
NULL
;

1130 i‡(
tmpBlk
 && 
	`GET_MEM
(
addr
)>tmpBlk->
blkAddr
) {

1131 
tmpNode
 = 
	`födAddrBlk
(
	`GET_MEM
(
addr
),*
£tCur
);

1134 
tmpNode
 = 
	`födAddrBlk
(
	`GET_MEM
(
addr
),*
£tHód
);

1136 i‡(
tmpNode
) {

1137 
tmpBlk
 = (
mems˝_p
)(
tmpNode
->
d©a
);

1138 i‡(
tmpBlk
->
blkAddr
==
	`GET_MEM
(
addr
)) {

1139 
	`mîgeTS
(
tmpBlk
->
accS˝
, 
‹gTS
,-1);

1142 
tmpBlk
 = 
	`¸óãMemS˝
(
	`GET_MEM
(
addr
),

1143 
d_ö°
->
ö°
->
addr
,
£q
, 
‹gTS
);

1144 
	`addA·îNode
(
tmpBlk
, &
tmpNode
, 
£tHód
);

1145 
£tCur
 = &
tmpNode
;

1149 
tmpBlk
 = 
	`¸óãMemS˝
(
	`GET_MEM
(
addr
),
d_ö°
->
ö°
->addr,

1150 
£q
, 
‹gTS
);

1151 
	`addA·îNode
(
tmpBlk
, &
tmpNode
, 
£tHód
);

1152 
£tCur
 = &
tmpNode
;

1154 
curEnumBlk
 = 
tmpBlk
;

1158 i‡(
eq
->
ªgName
[0]=='1') {

1159 
	`íumAfföeEq
(
d_ö°
,
eq
->
√xt
,
addr
+eq->
c€f
, 
öc
, 
£q
,

1160 
‹gTS
, 
curTS
, 
£tHód
, 
£tCur
, 
ib
);

1163 
ÕTS
 = (
accS˝_p
)(
curTS
->
d©a
);

1164 
Õ
 = 
lo›s
[
ÕTS
->
lo›_id
];

1165 
biv
 = 
	`födLpBIV
(
Õ
,
eq
->
ªgName
);

1166 i‡(
Õ
->
rbId
==-1Ë
lb
 =Üp->
bound
;

1168 
Õ
->
rbTy≥
) {

1169 
EQL_LB
:

1170 
lb
 = 
ôîVÆue
[
Õ
->
rbId
];

1172 
INV_LB
:

1173 
lb
 = 
Õ
->
rbBound
 - 
ôîVÆue
[Õ->
rbId
];

1175 
FIX_LB
:

1176 
lb
 = 
Õ
->
rbBound
;

1179 
	`Ârötf
(
dbgAddr
,"\n UnknownÑelative boundÅype: %d",

1180 
Õ
->
rbTy≥
);

1181 
	`fÊush
(
dbgAddr
);
	`exô
(1);

1185 i‡(
dbg
 && 0) {

1186 
	`Ârötf
(
dbgAddr
,"\n Enum: %d*L%d ,LB: %d",

1187 
eq
->
c€f
, 
Õ
->
id
, 
lb
);

1188 
	`fÊush
(
dbgAddr
);

1190 
i
=0; i<
lb
; i++) {

1191 
ôîVÆue
[
Õ
->
id
] = 
i
;

1192 
ÕTS
->
lw
 = 
i
;

1193 
ÕTS
->
up
 = 
i
;

1194 
	`íumAfföeEq
(
d_ö°
, 
eq
->
√xt
,
addr
+eq->
c€f
*
i
, 
öc
, 
£q
,

1195 
‹gTS
, 
curTS
->
√xt
, 
£tHód
, 
£tCur
,
ib
);

1198 
	}
}

	@estimate.c

22 
	~"comm⁄.h
"

23 
	~"b¥ed.h
"

24 
	~"pùñöe.h
"

25 
	~"exegøph.h
"

26 
	~"ss/machöe.h
"

27 
	~"ss/ss_machöe.h
"

29 
	#LATE
 0

	)

30 
	#EARLY
 1

	)

31 
	#STEP_SEP
 0

	)

32 
	#STEP_EST
 1

	)

33 
	#MAX_ITERS
 16

	)

34 
	#SHADED
 1

	)

37 
pùe_°ages
;

38 
egøph_node_t
 **
egøph
;

39 
eg_Àn
, 
∂og_Àn
, 
ñog_Àn
, 
body_Àn
;

40 
ønge16_t
 *
c€xi°
;

41 *
eg_ö°_succ
;

42 
eg_chaö_t
 *
eg_chaö
;

43 
mas_ö°_t
 **
eg_ö°s
;

44 
ruu_issue_width
;

45 
ruu_commô_width
;

46 
pùe_iwö_size
;

47 
b¥ed_ty≥
;

50 
	g°ï
 = 
STEP_SEP
;

51 
	gch™ged
;

54 
	gœ°_p
, 
	gœ°_≈
, 
	gfú°_b
, 
	gœ°_b
, 
	gfú°_e
;

58 
dump_egøph_times
(
°¨t
, 
íd
);

61 
check_„tch_times
();

67 
	$öô_shaded_≤ode
(
egøph_edge_t
 *
e
)

69 
hi
, 
°r
, 
fö
;

70 
egøph_node_t
 *
§c
, *
d°
;

72 
§c
 = 
e
->§c; 
d°
 =É->dst;

73 
°r
 = 
d°
->
rdy
.
hi
 - 
e
->
œt
.
lo
;

75 i‡((
§c
->
Êag
 !
SHADED
Ë|| (§c->
°r
.
hi
 > str)) {

76 
§c
->
rdy
.
hi
 = src->
°r
.hi = str;

77 i‡(
§c
->
œt
.
lo
 =
e
->lat.lo)

78 
§c
->
fö
.
hi
 = 
d°
->
rdy
.hi;

79 i‡(
§c
->
Êag
 !
SHADED
)

80 
§c
->
fö
.
hi
 = 
°r
 + src->
œt
.hi;

82 
§c
->
fö
.
hi
 = 
	`mö
(§c->fö.hi, 
°r
 + src->
œt
.hi);

83 i‡(
§c
->
Êag
 !
SHADED
) {

84 
§c
->
Êag
 = 
SHADED
;

85 
§c
->
rdy
.
lo
 = src->
°r
.lÿ§c->
fö
.lÿ-
INFTY
;

87 
e
 = 
§c
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

88 i‡(
e
->
n‹mÆ
 =
EG_NORM_EDGE
)

89 
	`öô_shaded_≤ode
(
e
);

92 
	}
}

97 
	$ª£t_nodes_Êags
(
fú°
, 
œ°
)

99 
ö°
, 
°age
, 
evít
;

101 
ö°
 = 
fú°
; in° <
œ°
; inst++) {

102 
°age
 = 0; sègê< 
pùe_°ages
; stage++)

103 
egøph
[
ö°
][
°age
].
Êag
 = 0;

105 
	}
}

112 
	$öô_£p
()

114 
ö°
, 
°age
;

115 
egøph_node_t
 *
vb
, *
v
;

116 
egøph_edge_t
 *
e
;

119 
vb
 = &
egøph
[
fú°_b
][0];

120 
vb
->
rdy
.
lo
 = vb->rdy.
hi
 = 0;

121 
vb
->
°r
.
lo
 = vb->
fö
.lo = 0;

122 
vb
->
°r
.
hi
 = vb->
fö
.hò
INFTY
;

123 
e
 = 
vb
->
ö
;É !
NULL
;É =É->
√xt_ö
)

124 
	`öô_shaded_≤ode
(
e
);

126 
ö°
 = 0; in° < 
eg_Àn
; inst++) {

127 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

128 
v
 = &
egøph
[
ö°
][
°age
];

129 i‡((
v
->
Êag
 =
SHADED
Ë|| (v =
vb
))

131 i‡(
v
->
ö°
 >
fú°_b
) {

132 
v
->
rdy
.
lo
 = v->
°r
.lo = 0;

133 
v
->
fö
.
lo
 = v->
œt
.lo;

135 
v
->
rdy
.
lo
 = v->
°r
.lÿv->
fö
.lÿ-
INFTY
;

137 
v
->
rdy
.
hi
 = v->
°r
.hòv->
fö
.hò
INFTY
;

140 
	}
}

145 
	$lc⁄td_dñay
(
egøph_node_t
 *
v
)

147 
√w_hi
, 
tmp
;

148 
egøph_node_t
 *
u
;

149 
egøph_edge_t
 *
e
;

151 i‡(
v
->
l_c⁄td
 =
NULL
)

152  
v
->
rdy
.
hi
;

154 i‡(
v
->
ö°
 >
fú°_e
) {

155 i‡(
v
->
œt
.
hi
 > 1)

156  
v
->
rdy
.
hi
 + v->
œt
.hi - 1;

159 
√w_hi
 = 
v
->
rdy
.
hi
;

160 
e
 = 
v
->
l_c⁄td
;É !
NULL
;É =É->
√xt_out
) {

161 i‡(
e
->
c⁄td_ty≥
 !
BI_DELAY
)

163 
u
 = 
e
->
d°
;

164 
tmp
 = 
	`mö
(
u
->
fö
.
hi
, 
v
->
rdy
.hò+ u->
œt
.hi - 1);

165 
√w_hi
 = 
	`max
“ew_hi, 
tmp
);

167  
√w_hi
;

168 
	}
}

173 
	$ec⁄td_dñay
(
egøph_node_t
 *
v
, 
√w_hi
)

175 
egøph_node_t
 *
u
;

176 
egøph_edge_t
 *
e
;

177 
max_u
 = 
√w_hi
, 
sum_d
 = 0;

179 i‡(
v
->
e_c⁄td
 =
NULL
)

180  
√w_hi
;

182 
e
 = 
v
->
e_c⁄td
;É !
NULL
;É =É->
√xt_ö
) {

183 i‡(
e
->
c⁄td_ty≥
 =
NO_DELAY
)

185 
u
 = 
e
->
§c
;

186 i‡(
u
->
fö
.
hi
 <
√w_hi
)

188 
sum_d
 +
	`mö
(
u
->
fö
.
hi
 - 
√w_hi
, u->
œt
.hi);

189 
max_u
 = 
	`max
(max_u, 
u
->
fö
.
hi
);

191 
√w_hi
 = 
	`mö
(
max_u
,Çew_hò+ 
sum_d
 / 
v
->
num_fu
);

192  
√w_hi
;

193 
	}
}

198 
	$sˇœr_dñay
(
egøph_node_t
 *
v
, 
√w_hi
)

202 
	#PEERS_WIN
 6

	)

203 
ö°
, 
i
, 
d
, 
ª°_≥îs
, 
mª°
, 
tmp
;

211 
≥îs
[
PEERS_WIN
], 
m≥îs
[PEERS_WIN];

212 
egøph_node_t
 *
u
, *
um
;

214 
i
 = 0; i < 
PEERS_WIN
; i++)

215 
≥îs
[
i
] = 
m≥îs
[i] = 0;

218 
ö°
 = 
v
->inst;

219 
i
 = 1; i < 
pùe_iwö_size
 - 1; i++) {

220 
ö°
 = 
eg_chaö
[ö°].
¥ed
;

221 i‡(
ö°
 < 0)

223 
u
 = &
egøph
[
ö°
][
v
->
°age
];

224 
d
 = 
u
->
°r
.
hi
 - 
√w_hi
;

225 i‡(
d
 < 0) {

226 i‡((
u
->
fu
 =
RdP‹t
Ë|| (u->fu =
WrP‹t
)) {

227 
um
 = &
egøph
[
ö°
][
u
->
°age
+1];

228 
d
 = 
um
->
°r
.
hi
 - 
√w_hi
;

229 i‡(
d
 >= 0) {

230 
d
 = 
	`mö
(d, 
PEERS_WIN
-1);

231 
≥îs
[
d
]++;

235 
d
 = 
	`mö
(d, 
PEERS_WIN
-1);

236 i‡((
u
->
fu
 =
RdP‹t
Ë|| (u->fu =
WrP‹t
))

237 
m≥îs
[
d
]++;

239 
≥îs
[
d
]++;

242 
d
 = 
PEERS_WIN
-1; d > 0; d--) {

243 
≥îs
[
d
-1] +=Öeers[d];

244 
m≥îs
[
d
-1] += mpeers[d];

246 
ª°_≥îs
 = 
≥îs
[0] + 
m≥îs
[0];

247 
mª°
 = 0;

248 
d
 = 0; d < 
PEERS_WIN
-1; d++) {

249 i‡((
ª°_≥îs
 + 
mª°
Ë< 
ruu_issue_width
)

250  
√w_hi
 + 
d
;

251 
tmp
 = 
ª°_≥îs
;

252 
ª°_≥îs
 =Ñe°_≥î†- 
	`max
(
ruu_issue_width
 - 
mª°
, 0);

253 
ª°_≥îs
 = 
	`mö
‘e°_≥îs, 
≥îs
[
d
+1] + 
m≥îs
[d+1]);

254 
mª°
 = 
	`mö
(
m≥îs
[
d
], 
tmp
Ë- mö(m≥îs[d+1], 
ª°_≥îs
);

256 
√w_hi
 +
d
 + (
ª°_≥îs
 + 
	`mö
(
m≥îs
[d],Ñe°_≥îsË+ 
mª°
Ë/ 
ruu_issue_width
;

257  
√w_hi
;

258 
	}
}

263 
	$„tch_dï
(
egøph_edge_t
 *
e
)

265  
	`mö
(
e
->
§c
->
°r
.
hi
 +É->
œt
.hi,É->§c->
fö
.hi);

266 
	}
}

271 
	$œã°_time
(
egøph_node_t
 *
v
)

273 
√w_hi
;

274 
egøph_node_t
 *
u
;

275 
egøph_edge_t
 *
e
;

277 i‡(
v
->
ö
 =
NULL
) {

278 i‡((
v
->
l_c⁄td
 =
NULL
Ë&& v->
°r
.
hi
 !v->
rdy
.hi) {

279 
v
->
°r
.
hi
 = v->
rdy
.hi;

280 
v
->
fö
.
hi
 = v->
°r
.hò+ v->
œt
.hi;

285 
√w_hi
 = -
INFTY
;

286 
e
 = 
v
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

288 i‡(
v
->
°age
 =0 && 
e
->
§c
->stage == 0)

289 
√w_hi
 = 
	`max
“ew_hi, 
	`„tch_dï
(
e
));

291 
√w_hi
 = 
	`max
“ew_hi, 
e
->
§c
->
°r
.
hi
 +É->
œt
.hi);

293 
u
 = &
egøph
[0][
pùe_°ages
-1];

294 i‡((
∂og_Àn
 > 0Ë&& (
v
->
ö°
 > 0Ë&& 
c€xi°
[v->ö°].
lo
 == 0)

295 
v
->
rdy
.
hi
 = 
	`max
(v->rdy.hi, 
u
->rdy.hi - 1);

297 
v
->
rdy
.
hi
 = 
√w_hi
;

298 i‡(
v
->
fu
 != 0) {

299 i‡(
v
->
œt
.
hi
 > 1) {

300 i‡(
v
->
ö°
 >
fú°_e
)

301 
√w_hi
 +
v
->
œt
.
hi
 - 1;

303 
√w_hi
 = 
	`lc⁄td_dñay
(
v
);

305 
√w_hi
 = 
	`ec⁄td_dñay
(
v
,Çew_hi);

308 i‡(
v
->
°age
 =
STAGE_EX
)

309 
√w_hi
 = 
	`sˇœr_dñay
(
v
,Çew_hi);

310 i‡(
√w_hi
 < 
v
->
°r
.
hi
) {

311 
v
->
°r
.
hi
 = 
√w_hi
;

312 
v
->
fö
.
hi
 = 
√w_hi
 + v->
œt
.hi;

313 
ch™ged
 = 1;

314 i‡((
v
->
e_c⁄td
 !
NULL
Ë|| (v->
l_c⁄td
 != NULL))

318 
	}
}

323 
	$óæõ°_time
(
egøph_node_t
 *
v
)

325 
√w_lo
;

326 
egøph_edge_t
 *
e
;

328 i‡(
v
->
ö
 =
NULL
)

331 
√w_lo
 = -
INFTY
;

332 
e
 = 
v
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

333 i‡(
e
->
n‹mÆ
 !
EG_NORM_EDGE
)

335 
√w_lo
 = 
	`max
“ew_lo, 
e
->
§c
->
°r
.
lo
 +É->
œt
.lo);

337 i‡(
√w_lo
 > 
v
->
rdy
.
lo
) {

338 
v
->
rdy
.
lo
 = v->
°r
.lÿ
√w_lo
;

339 
v
->
fö
.
lo
 = 
√w_lo
 + v->
œt
.lo;

340 
ch™ged
 = 1;

344 
	}
}

354 
	$upd©e_c⁄td
(
egøph_node_t
 *
v
)

356 
egøph_node_t
 *
u
;

357 
egøph_edge_t
 *
e
;

359 
e
 = 
v
->
e_c⁄td
;É !
NULL
;É =É->
√xt_ö
) {

360 i‡(
e
->
c⁄td_ty≥
 =
NO_DELAY
)

362 
u
 = 
e
->
§c
;

363 i‡((
v
->
rdy
.
lo
 >
u
->
fö
.
hi
) || (u->rdy.lo >= v->fin.hi))

364 
e
->
c⁄td_ty≥
 = 
NO_DELAY
;

365 i‡(
v
->
°r
.
lo
 >
u
->
rdy
.
hi
)

366 
e
->
c⁄td_ty≥
 = 
UNI_DELAY
;

368 
e
 = 
v
->
l_c⁄td
;É !
NULL
;É =É->
√xt_out
) {

369 i‡(
e
->
c⁄td_ty≥
 =
NO_DELAY
)

371 
u
 = 
e
->
d°
;

372 i‡((
v
->
rdy
.
lo
 >
u
->
fö
.
hi
) || (u->rdy.lo >= v->fin.hi))

373 
e
->
c⁄td_ty≥
 = 
NO_DELAY
;

374 i‡(
u
->
°r
.
lo
 >
v
->
rdy
.
hi
)

375 
e
->
c⁄td_ty≥
 = 
UNI_DELAY
;

377 
	}
}

382 
	$föd_£p
()

384 
ö°
, 
°age
, 
ech™ged
, 
lch™ged
;

385 
egøph_node_t
 *
v
;

387 
	`öô_£p
();

389 
ch™ged
 = 0;

390 
ö°
 = 0; in° < 
eg_Àn
; inst++) {

391 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

392 
v
 = &
egøph
[
ö°
][
°age
];

393 i‡(
ö°
 >
fú°_b
)

394 
ech™ged
 = 
	`óæõ°_time
(
v
);

395 
lch™ged
 = 
	`œã°_time
(
v
);

396 i‡(
ech™ged
 || 
lch™ged
)

397 
	`upd©e_c⁄td
(
v
);

400 } 
ch™ged
);

401 
	}
}

406 
	$∂og_backåack
(
egøph_edge_t
 *
e
)

408 
°r
, 
fö
, 
ö°
, 
°age
;

409 
egøph_node_t
 *
§c
, *
d°
, *
v
;

410 
egøph_edge_t
 *
e1
;

412 i‡(
e
->
n‹mÆ
 =
EG_COND_EDGE
)

415 
§c
 = 
e
->§c; 
d°
 =É->dst;

416 
§c
->
rdy
.
lo
 = src->
°r
.lÿ§c->
fö
.lÿ-
INFTY
;

419 
°r
 = 
d°
->
rdy
.
hi
 - 
e
->
œt
.
lo
;

421 i‡(
§c
->
°r
.
hi
 > str) {

422 
§c
->
rdy
.
hi
 = src->
°r
.hi = str;

423 i‡(
§c
->
œt
.
lo
 =
e
->lat.lo)

424 
§c
->
fö
.
hi
 = 
d°
->
rdy
.hi;

426 
§c
->
fö
.
hi
 = 
	`mö
(§c->fö.hi, 
°r
 + src->
œt
.hi);

429 i‡((
eg_chaö
[
§c
->
ö°
].
succ
 > src->ö° + 1Ë&& src->
°age
 == 3) {

430 
ö°
 = 
§c
->ö°+1; in° < 
eg_chaö
[§c->ö°].
succ
; inst++) {

431 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

432 
v
 = &
egøph
[
ö°
][
°age
];

433 
v
->
rdy
.
hi
 = v->
°r
.hòv->
fö
.hò
§c
->fin.hi;

437 
e
 = 
§c
->
ö
;É !
NULL
;É =É->
√xt_ö
)

438 
	`∂og_backåack
(
e
);

440 
	}
}

447 
	$öô_e°_∂og
()

449 
ö°
, 
°age
, 
i
;

450 
egøph_node_t
 *
v
;

451 
egøph_edge_t
 *
e
;

454 
ö°
 = 0; in° <
œ°_p
; inst++) {

455 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

456 
v
 = &
egøph
[
ö°
][
°age
];

457 
v
->
rdy
.
lo
 = v->
°r
.lÿ-
INFTY
;

458 
v
->
rdy
.
hi
 = v->
°r
.hi = 0;

461 
v
 = &
egøph
[
œ°_≈
][
pùe_°ages
-1];

462 
v
->
fö
.
hi
 = v->fö.
lo
 = 0;

463 
v
->
rdy
.
lo
 = -
INFTY
;

464 
v
->
°r
.
lo
 = 0 - v->
œt
.
hi
;

465 
v
->
rdy
.
hi
 = v->
°r
.hò0 - v->
œt
.
lo
;

466 
e
 = 
v
->
ö
;É !
NULL
;É =É->
√xt_ö
)

467 
	`∂og_backåack
(
e
);

469 i‡(
b¥ed_ty≥
 =
BP_CPRED
)

472 
ö°
 = 
œ°_≈
 + 1; in° <
œ°_p
; inst++) {

473 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

474 
v
 = &
egøph
[
ö°
][
°age
];

475 
v
->
rdy
.
hi
 = v->
°r
.hòv->
fö
.hò
egøph
[
œ°_≈
][3].fin.hi;

478 
	}
}

483 
	$öô_e°_body
()

485 
ö°
, 
°age
;

486 
egøph_node_t
 *
v
;

489 
ö°
 = 
fú°_b
; in° < 
eg_Àn
; inst++) {

490 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

491 
v
 = &
egøph
[
ö°
][
°age
];

492 
v
->
rdy
.
lo
 = v->
°r
.lo = 0;

493 
v
->
rdy
.
hi
 = v->
°r
.hò
INFTY
;

496 
	}
}

503 
	$di°™˚
(
egøph_node_t
 *
v
,Égøph_node_à*
u
)

505 
Àn
 = 0, 
tmp
;

506 
egøph_edge_t
 *
e
;

508 i‡(
v
 =
u
)

511 
e
 = 
v
->
out
;É !
NULL
;É =É->
√xt_out
) {

512 i‡(
e
->
d°
->
ö°
 > 
u
->inst)

514 
tmp
 = 
e
->
œt
.
lo
 + 
	`di°™˚
”->
d°
, 
u
);

515 i‡(
tmp
 > 
Àn
)

516 
Àn
 = 
tmp
;

518  
Àn
;

519 
	}
}

526 
	$mö_ovîœp
(
egøph_node_t
 *
v
,Égøph_node_à*
u
)

528 
d
, 
mo
 = 
INFTY
;

529 
egøph_edge_t
 *
e
;

531 
e
 = 
v
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

532 
d
 = 
	`di°™˚
(
e
->
§c
, 
u
Ë-É->
œt
.
hi
;

533 i‡(
d
 < 
mo
)

534 
mo
 = 
d
;

536  
mo
;

537 
	}
}

542 
	$öô_e°
()

544 
	`öô_e°_∂og
();

545 
	`öô_e°_body
();

546 
	}
}

552 
	$make_e°
()

554 
ö°
, 
°age
;

555 
egøph_node_t
 *
v
;

557 
	`öô_e°
();

559 
ch™ged
 = 0;

560 
ö°
 = 
fú°_b
; in° < 
eg_Àn
; inst++) {

561 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

562 
v
 = &
egøph
[
ö°
][
°age
];

563 
	`óæõ°_time
(
v
);

564 
	`œã°_time
(
v
);

567 } 
ch™ged
);

568 
	}
}

573 
	$e°_egøph
()

575 
tm
, 
mö_ov
;

576 
egøph_node_t
 *
v
, *
u
, *
w
;

578 
fú°_b
 = 
∂og_Àn
;

579 
œ°_p
 = 
fú°_b
 - 1;

580 
œ°_≈
 = 
eg_chaö
[
fú°_b
].
¥ed
;

581 
fú°_e
 = 
∂og_Àn
 + 
body_Àn
;

582 
œ°_b
 = 
fú°_e
 - 1;

584 
	`föd_£p
();

590 
v
 = &
egøph
[
œ°_b
][
pùe_°ages
-1];

591 
tm
 = 
v
->
°r
.
hi
 + v->
œt
.hi;

593 i‡(
∂og_Àn
 == 0)

594  
tm
;

596 
u
 = &
egøph
[
fú°_b
][0];

597 
w
 = &
egøph
[
œ°_≈
][
pùe_°ages
-1];

598 
mö_ov
 = 
	`mö_ovîœp
(
w
, 
u
);

599 
tm
 -
mö_ov
;

600 
	`make_e°
();

601 
tm
 = 
	`mö
—m, 
v
->
°r
.
hi
 + v->
œt
.hi);

602  
tm
;

603 
	}
}

608 
	$check_„tch_times
()

610 
ö°
, 
t1
, 
t2
;

612 
ö°
 = 1; in° < 
eg_Àn
; inst++) {

613 
t1

egøph
[
ö°
-1][0].
°r
.
hi
 +Égøph[ö°-1][0].
œt
.hi;

614 
t2

egøph
[
ö°
][0].
°r
.
hi
 +Égøph[ö°][0].
œt
.hi;

615 i‡(
t1
 > 
t2
)

616 
	`¥ötf
("IF[%d]: %d %d\n", 
ö°
-1, 
t1
, 
t2
);

618 
	}
}

623 
	$dump_egøph_times
(
°¨t
, 
íd
)

625 
ö°
, 
°age
;

626 
egøph_node_t
 *
v
;

628 i‡((
°¨t
 =0Ë&& (
íd
 == 0))

629 
íd
 = 
∂og_Àn
 + 
body_Àn
 + 
ñog_Àn
;

630 
	`¥ötf
("dumpÉxecution graphÅimes [%d %d]: %d, %d, %d\n",

631 
°¨t
, 
íd
, 
∂og_Àn
, 
body_Àn
, 
ñog_Àn
);

632 
ö°
 = 
°¨t
; in° < 
íd
; inst++) {

633 i‡((
ö°
 =
fú°_b
Ë|| (ö° =
fú°_e
))

634 
	`¥ötf
("----------------------------------------------------------\n");

635 
	`¥ötf
("%3d[%x]", 
ö°
, 
eg_ö°s
[ö°]->ö°->
addr
 & 0xffff);

636 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
)

637 
	`¥ötf
("c");

638 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_MPRED
)

639 
	`¥ötf
("m");

641 
	`¥ötf
("u");

642 i‡((
eg_ö°s
[
ö°
]->
ic_Êag
 =
IC_HIT
Ë|| (
egøph
[ö°][0].
œt
.
hi
 == 1))

643 
	`¥ötf
("/H");

644 i‡(
eg_ö°s
[
ö°
]->
ic_Êag
 =
IC_MISS
)

645 
	`¥ötf
("/M");

647 
	`¥ötf
("/U");

648 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

649 
v
 = &
egøph
[
ö°
][
°age
];

650 
	`¥ötf
(" * %3d %3d %3d", 
v
->
rdy
.
hi
, v->
°r
.hi, v->
fö
.hi);

652 
	`¥ötf
("\n");

654 
	`¥ötf
("\n");

655 
	}
}

660 
	$dump_egøph_óæõ°
(
°¨t
, 
íd
)

662 
ö°
, 
°age
, 
evít
;

663 
egøph_node_t
 *
v
;

665 i‡((
°¨t
 =0Ë&& (
íd
 == 0))

666 
íd
 = 
∂og_Àn
 + 
body_Àn
 + 
ñog_Àn
;

667 
	`¥ötf
("dum∞executi⁄ gøph EARLIEST [%d %d]: %d, %d, %d\n", 
°¨t
, 
íd
,

668 
∂og_Àn
, 
body_Àn
, 
ñog_Àn
);

669 
ö°
 = 
°¨t
; in° < 
íd
; inst++) {

670 i‡((
ö°
 =
fú°_b
Ë|| (ö° =
fú°_e
))

671 
	`¥ötf
("------------------------------------------------------------------------\n");

672 
	`¥ötf
("%3d[%x]", 
ö°
, 
eg_ö°s
[ö°]->ö°->
addr
 & 0xffff);

673 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
)

674 
	`¥ötf
("c");

675 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_MPRED
)

676 
	`¥ötf
("m");

678 
	`¥ötf
("u");

679 i‡((
eg_ö°s
[
ö°
]->
ic_Êag
 =
IC_HIT
Ë|| (
egøph
[ö°][0].
œt
.
hi
 == 1))

680 
	`¥ötf
("/H");

681 i‡(
eg_ö°s
[
ö°
]->
ic_Êag
 =
IC_MISS
)

682 
	`¥ötf
("/M");

684 
	`¥ötf
("/U");

685 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

686 
v
 = &
egøph
[
ö°
][
°age
];

687 
	`¥ötf
(" * %3d %3d %3d", 
v
->
rdy
.
lo
, v->
°r
.lo, v->°r.lÿ+ v->
œt
.lo);

689 
	`¥ötf
("\n");

691 
	`¥ötf
("\n");

692 
	}
}

696 
	$dump_ec⁄td
(
egøph_node_t
 *
v
)

698 
egøph_edge_t
 *
e
;

700 
	`¥ötf
("ec⁄td[%d]\n", 
v
->
ö°
);

701 
e
 = 
v
->
e_c⁄td
;É !
NULL
;É =É->
√xt_ö
) {

702 
	`¥ötf
("<-[%d]: %d\n", 
e
->
§c
->
ö°
,É->
c⁄td_ty≥
);

704 
	}
}

	@exegraph.c

23 
	~<°dlib.h
>

24 
	~"comm⁄.h
"

25 
	~"lo›s.h
"

26 
	~"b¥ed.h
"

27 
	~"ˇche.h
"

28 
	~"pùñöe.h
"

29 
	~"exegøph.h
"

32 *
num_mp_ö°s
;

33 
pùe_°ages
;

35 
mas_ö°_t
 **
	geg_ö°s
;

36 
egøph_node_t
 **
	gegøph
;

37 
	geg_Àn
 = 0, 
	g∂og_Àn
 = 0, 
	gñog_Àn
 = 0, 
	gbody_Àn
 = 0;

39 
egøph_edge_t
 *
	gegøph_edges
 = 
NULL
;

40 
	gnum_eg_edges
 = 0;

44 
ønge16_t
 *
	gc€xi°
;

50 
eg_chaö_t
 *
	geg_chaö
;

52 
	gb¥ed_ty≥
;

53 
lo›_t
 *
	gbody_lo›
;

58 
dump_egøph
();

63 
	$Æloc_mem
()

65 
i
;

67 
egøph_edges
 = (
egøph_edge_t
 *Ë
	`ˇŒoc
(
MAX_EG_EDGES
, (egraph_edge_t));

68 
eg_ö°s
 = (
mas_ö°_t
 **Ë
	`ˇŒoc
(
MAX_EG_LEN
, (mas_inst_t *));

69 
egøph
 = (
egøph_node_t
 **Ë
	`ˇŒoc
(
MAX_EG_LEN
, (egraph_node_t *));

70 
i
 = 0; i < 
MAX_EG_LEN
; i++)

71 
egøph
[
i
] = (
egøph_node_t
 *Ë
	`ˇŒoc
(
pùe_°ages
, (egraph_node_t));

72 
c€xi°
 = (
ønge16_t
 *Ë
	`ˇŒoc
(
MAX_EG_LEN
, (range16_t));

73 
eg_chaö
 = (
eg_chaö_t
 *Ë
	`ˇŒoc
(
MAX_EG_LEN
, (eg_chain_t));

74 
	}
}

103 
	$¸óã_egøph
(
mas_ö°_t
 *
∂og
, 
≈
, mas_ö°_à*
ñog
, 
√
,

104 
mas_ö°_t
 *
body
, 
nb
, 
bp
, 
lo›_t
 *
Õ
)

106 
i
, 
n
;

107 
fú°
 = 1;

109 
∂og_Àn
 = 
≈
;

110 
ñog_Àn
 = 
√
;

111 
body_Àn
 = 
nb
;

112 
eg_Àn
 = 
≈
 + 
√
 + 
nb
;

113 
b¥ed_ty≥
 = 
bp
;

114 
body_lo›
 = 
Õ
;

116 i‡(
fú°
) {

117 
	`Æloc_mem
();

118 
fú°
 = 0;

122 
i
 = 0; i < 
∂og_Àn
; i++)

123 
eg_ö°s
[
i
] = &
∂og
[i];

124 
n
 = 
∂og_Àn
;

125 
i
 = 0; i < 
body_Àn
; i++)

126 
eg_ö°s
[
i
+
n
] = &
body
[i];

127 
n
 +
body_Àn
;

128 
i
 = 0; i < 
ñog_Àn
; i++)

129 
eg_ö°s
[
i
+
n
] = &
ñog
[i];

131 
	`¸óã_egøph_ss
();

134 
	}
}

139 
	$dump_egøph_dïíds
(
ö°
)

141 
egøph_node_t
 *
n1
, *
n2
;

142 
egøph_edge_t
 *
e
;

143 
°age
;

145 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

146 
	`¥ötf
(" sège[%d]: in:", 
°age
);

147 
n1
 = &
egøph
[
ö°
][
°age
];

148 
e
 = 
n1
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

149 i‡(
e
->
n‹mÆ
 =
EG_COND_EDGE
)

150 
	`¥ötf
("*");

151 
n2
 = 
e
->
§c
;

152 
	`¥ötf
(" %d.%d(%d)", 
n2
->
ö°
,Ç2->
°age
, 
e
->
œt
.
hi
);

154 
	`¥ötf
("; out:");

155 
e
 = 
n1
->
out
;É !
NULL
;É =É->
√xt_out
) {

156 i‡(
e
->
n‹mÆ
 =
EG_COND_EDGE
)

157 
	`¥ötf
("*");

158 
n2
 = 
e
->
d°
;

159 
	`¥ötf
(" %d.%d", 
n2
->
ö°
,Ç2->
°age
, 
e
->
œt
.
hi
);

161 
	`¥ötf
("\n");

163 
	}
}

168 
	$dump_egøph_c⁄ãnds
(
ö°
)

170 
egøph_node_t
 *
n1
, *
n2
;

171 
egøph_edge_t
 *
e
;

172 
°age
;

174 
	`¥ötf
(" E_CONTEND:");

175 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

176 
n1
 = &
egøph
[
ö°
][
°age
];

177 
e
 = 
n1
->
e_c⁄td
;É !
NULL
;É =É->
√xt_ö
) {

178 
n2
 = 
e
->
§c
;

179 
	`¥ötf
(" %d.%d", 
n2
->
ö°
,Ç2->
°age
);

180 i‡(
e
->
n‹mÆ
 =
EG_COND_EDGE
)

181 
	`¥ötf
("*");

184 
	`¥ötf
("\n L_CONTEND:");

185 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

186 
n1
 = &
egøph
[
ö°
][
°age
];

187 
e
 = 
n1
->
l_c⁄td
;É !
NULL
;É =É->
√xt_out
) {

188 
n2
 = 
e
->
d°
;

189 
	`¥ötf
(" %d.%d", 
n2
->
ö°
,Ç2->
°age
);

190 i‡(
e
->
n‹mÆ
 =
EG_COND_EDGE
)

191 
	`¥ötf
("*");

194 
	`¥ötf
("\n");

195 
	}
}

200 
	$dump_egøph
()

202 
ö°
;

204 
	`¥ötf
("\√xe¯gøph: [P=%d; B=%d; E=%d]\n", 
∂og_Àn
, 
body_Àn
, 
ñog_Àn
);

205 
	`¥ötf
("#edges: %d;ávg: %d\n", 
num_eg_edges
,Çum_eg_edges/
eg_Àn
);

206 
ö°
 = 0; in° < 
eg_Àn
; inst++) {

207 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_MPRED
)

208 
	`¥ötf
("ö°[%d]:%x(m)\n", 
ö°
, 
eg_ö°s
[ö°]->ö°->
addr
);

209 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_UNCLEAR
)

210 
	`¥ötf
("ö°[%d]:%x(u)\n", 
ö°
, 
eg_ö°s
[ö°]->ö°->
addr
);

212 
	`¥ötf
("ö°[%d]:%x \n", 
ö°
, 
eg_ö°s
[ö°]->ö°->
addr
);

214 
	`dump_egøph_dïíds
(
ö°
);

215 
	`dump_egøph_c⁄ãnds
(
ö°
);

217 
	}
}

	@exegraph.h

22 #i‚de‡
EXE_GRAPH_H


23 
	#EXE_GRAPH_H


	)

26 
	~"comm⁄.h
"

27 
	~"b¥ed.h
"

28 
	~"ˇche.h
"

29 
	~"pùñöe.h
"

31 
	#MAX_EG_LEN
 1000

	)

32 
	#MAX_EG_EDGES
 20000

	)

35 íum { 
	mEG_NORM_EDGE
, 
	mEG_COND_EDGE
 };

40 íum { 
	mBI_DELAY
, 
	mUNI_DELAY
, 
	mNO_DELAY
 };

46 íum { 
	mEG_DEP_NONE
, 
	mEG_DEP_NORM
, 
	mEG_DEP_COND
 };

50 
egøph_edge_t
 
	tegøph_edge_t
;

53 
	mö°
, 
	m°age
;

54 
	mfu
, 
	mnum_fu
;

55 
ønge16_t
 
	mœt
;

56 
ønge_t
 
	mrdy
, 
	m°r
, 
	mfö
;

57 
	mbp_ty≥
;

58 
	mÊag
;

59 
egøph_edge_t
 *
	mö
, *
	mout
;

60 
egøph_edge_t
 *
	me_c⁄td
, *
	ml_c⁄td
;

61 } 
	tegøph_node_t
;

64 
	segøph_edge_t
 {

65 
egøph_node_t
 *
	m§c
, *
	md°
;

66 
ønge16_t
 
	mœt
;

68 
	mn‹mÆ
;

73 
	mc⁄td_ty≥
;

74 
egøph_edge_t
 *
	m√xt_ö
, *
	m√xt_out
;

80 
	m¥ed
;

81 
	msucc
;

82 } 
	teg_chaö_t
;

	@ilp.c

66 
	~<°rög.h
>

67 
	~<°dlib.h
>

68 
	~"tcfg.h
"

69 
	~"lo›s.h
"

70 
	~"ˇche.h
"

71 
	~"pùñöe.h
"

72 
	~"symexec.h
"

73 
	~"b¥ed.h
"

74 
	~"s˝_addªss.h
"

76 
PROGRESS_STEP
;

78 
	#NOSIGN
 0

	)

79 
	#PLUS
 1

	)

80 
	#MINUS
 2

	)

81 
	#NO_PREFIX
 ""

	)

82 
	#NO_SUFFIX
 ""

	)

83 
	#BMP
 5

	)

85 
	#IC_NONE
 
IC_UNCLEAR


	)

87 
tcfg_∆ök_t
 ***
bbi_m≠
;

88 **
˝ªd_times
, **
m¥ed_times
, 
°¨t_time
;

89 *
num_hô_miss
;

90 
tcfg_edge_t
 **
tcfg_edges
;

91 
íabÀ_iˇche
;

93 
íabÀ_dˇche
;

95 
íabÀ_û2ˇche
;

96 
íabÀ_ul2ˇche
;

98 
íabÀ_abs_ö°_ˇche
;

99 
b¥ed_scheme
;

100 
num_tcfg_edges
;

101 
num_tcfg_nodes
;

102 
tcfg_node_t
 **
tcfg
;

103 
bfg_node_t
 
°¨t_bbb
, 
íd_bbb
;

104 
num_bbi_bbb
;

105 
bfg_node_t
 ***
bfg
, **
vbbb
;

106 
roŸ_bbb_id
, 
íd_bbb_id
;

107 
num_bfg_nodes
;

108 
btg_edge_t
 **
btg_out
, **
btg_ö
;

109 
num_tcfg_lo›s
;

110 
BHT_SIZE
;

111 
ˇche_t
 
ˇche
;

112 ***
hô_miss
;

113 
iˇche_™Æy_mëhod
;

114 
lo›_t
 **
lo›_m≠
;

115 
lo›_t
 **
lo›s
;

116 
lo›_t
 ***
mblk_hô_lo›
;

117 
lo›_t
 ***
bbi_hm_li°
;

118 *
num_mblks
;

119 
lo›_t
 ***
lo›_comm_™˚s
;

120 
mem_blk_t
 **
gí
;

122 
FILE
 *
	gfûp
, *
	gfu§
;

123 
	gtŸÆ_c⁄s
 = 0, 
	gtŸÆ_v¨s
 = 0;

124 
	g°¨t_°r
[] = "Sè", 
	gíd_°r
[] = "End";

126 
	#NUM_VAR_GRP
 256

	)

127 
	#VAR_GRP_SIZE
 1024

	)

128 **
	gv¨_gΩs
[256];

129 
	gcuº_gΩ
 = 0, 
	gcuº_idx
 = 0;

130 
	g°r
[32], 
	gãrm
[32];

132 
¥og_t
 
¥og
;

133 
tcfg_edge_˘x_ãrm
(
FILE
 *
Â
, 
tcfg_edge_t
 *
e
, 
c⁄ãxt
,

134 
uµîBound
, 
b¥ed
, *
¥efix
, *
suffix
);

135 
	$öô_v¨_gΩs
() {

136 
v¨_gΩs
[0] = (**Ë
	`ˇŒoc
(
VAR_GRP_SIZE
, (*));

137 
	}
}

139 
	$add_v¨
(*
v¨
) {

140 
Àn
 = 
	`°æí
(
v¨
) + 1;

142 i‡(
cuº_idx
 =
VAR_GRP_SIZE
) {

143 
v¨_gΩs
[++
cuº_gΩ
] = (**Ë
	`ˇŒoc
(
VAR_GRP_SIZE
, (*));

144 
cuº_idx
 = 0;

146 
v¨_gΩs
[
cuº_gΩ
][
cuº_idx
] = (*Ë
	`mÆloc
(
Àn
);

147 
	`°r˝y
(
v¨_gΩs
[
cuº_gΩ
][
cuº_idx
], 
v¨
);

148 
cuº_idx
++;

149 
	}
}

151 
	$√w_ãrm
(
FILE
 *
Â
) {

152 i‡(
Â
 =
NULL


154 
	`add_v¨
(
ãrm
);

156 
	`Ârötf
(
Â
, "%s", 
ãrm
);

157 
	}
}

159 
	$tcfg_node_°r
(
tcfg_node_t
 *
bbi
) {

160 
	`•rötf
(
°r
, "%d", 
bbi
->
id
);

161 
	}
}

164 
	$tcfg_node_ãrm
(
FILE
 *
Â
, 
tcfg_node_t
 *
bbi
, *
¥efix
,

165 *
suffix
) {

166 
	`tcfg_node_°r
(
bbi
);

167 
	`•rötf
(
ãrm
, "%sb%s%s", 
¥efix
, 
°r
, 
suffix
);

168 
	`√w_ãrm
(
Â
);

169 
	}
}

172 
	$tcfg_node_hm_ãrm
(
FILE
 *
Â
, 
tcfg_node_t
 *
bbi
, 
hm
, *
¥efix
,

173 *
suffix
) {

174 
	`tcfg_node_°r
(
bbi
);

175 
	`•rötf
(
ãrm
, "%sb%s.%d%s", 
¥efix
, 
°r
, 
hm
, 
suffix
);

176 
	`√w_ãrm
(
Â
);

177 
	}
}

179 
	$tcfg_edge_°r
(
tcfg_edge_t
 *
e
, 
b¥ed
) {

180 
°r1
[32], 
°r2
[32];

182 
	`tcfg_node_°r
(
e
->
§c
);

183 
	`°r˝y
(
°r1
, 
°r
);

184 
	`tcfg_node_°r
(
e
->
d°
);

185 
	`°r˝y
(
°r2
, 
°r
);

186 i‡(
b¥ed
 =
BP_NONE


188 
	`•rötf
(
°r
, "%s_%s", 
°r1
, 
°r2
);

189 i‡(
b¥ed
 =
BP_CPRED


191 
	`•rötf
(
°r
, "c%s_%s", 
°r1
, 
°r2
);

192 i‡(
b¥ed
 =
BP_MPRED


194 
	`•rötf
(
°r
, "m%s_%s", 
°r1
, 
°r2
);

195 
	}
}

198 
	$tcfg_edge_ãrm
(
FILE
 *
Â
, 
tcfg_edge_t
 *
e
, 
b¥ed
, *
¥efix
,

199 *
suffix
) {

200 
	`tcfg_edge_°r
(
e
, 
b¥ed
);

201 
	`•rötf
(
ãrm
, "%sd%s%s", 
¥efix
, 
°r
, 
suffix
);

202 
	`√w_ãrm
(
Â
);

203 
	}
}

207 
	$e°_unô_ãrm
(
FILE
 *
Â
, 
tcfg_edge_t
 *
e
, 
b¥ed
, 
hm
,

208 *
¥efix
, *
suffix
) {

209 
	`tcfg_edge_°r
(
e
, 
b¥ed
);

210 i‡(
íabÀ_iˇche
 || 
íabÀ_abs_ö°_ˇche
)

211 
	`•rötf
(
ãrm
, "%sd%s.%d%s", 
¥efix
, 
°r
, 
hm
, 
suffix
);

213 
	`•rötf
(
ãrm
, "%sd%s%s", 
¥efix
, 
°r
, 
suffix
);

214 
	`√w_ãrm
(
Â
);

215 
	}
}

219 
	$bfg_node_°r
(
bfg_node_t
 *
bbb
) {

220 i‡(
bbb
->
id
 =
roŸ_bbb_id
)

221 
	`•rötf
(
°r
, "%s", 
°¨t_°r
);

222 i‡(
bbb
->
id
 =
íd_bbb_id
)

223 
	`•rötf
(
°r
, "%s", 
íd_°r
);

225 
	`•rötf
(
°r
, "%d", 
bbb
->
id
);

226 
	}
}

229 
	$bfg_node_ãrm
(
FILE
 *
Â
, 
bfg_node_t
 *
bbb
, *
¥efix
, *
suffix
) {

230 
	`bfg_node_°r
(
bbb
);

231 
	`•rötf
(
ãrm
, "%sc%s%s", 
¥efix
, 
°r
, 
suffix
);

232 
	`√w_ãrm
(
Â
);

233 
	}
}

235 
	$bfg_edge_°r
(
bfg_edge_t
 *
e
, 
b¥ed
) {

236 
°r1
[32], 
°r2
[32], 
br
;

238 
	`bfg_node_°r
(
e
->
§c
);

239 
	`°r˝y
(
°r1
, 
°r
);

240 
	`bfg_node_°r
(
e
->
d°
);

241 
	`°r˝y
(
°r2
, 
°r
);

242 i‡(
e
->
bønch
 =
TAKEN


244 
br
 = 'T';

246 
br
 = 'N';

247 i‡(
b¥ed
 =
BP_NONE


249 
	`•rötf
(
°r
, "%s_%s%c", 
°r1
, 
°r2
, 
br
);

250 i‡(
b¥ed
 =
BP_CPRED


252 
	`•rötf
(
°r
, "c%s_%s%c", 
°r1
, 
°r2
, 
br
);

253 i‡(
b¥ed
 =
BP_MPRED


255 
	`•rötf
(
°r
, "m%s_%s%c", 
°r1
, 
°r2
, 
br
);

256 
	}
}

259 
	$bfg_edge_ãrm
(
FILE
 *
Â
, 
bfg_edge_t
 *
e
, 
b¥ed
, *
¥efix
,

260 *
suffix
) {

261 
	`bfg_edge_°r
(
e
, 
b¥ed
);

262 
	`•rötf
(
ãrm
, "%sf%s%s", 
¥efix
, 
°r
, 
suffix
);

263 
	`√w_ãrm
(
Â
);

264 
	}
}

266 
	$btg_edge_°r
(
btg_edge_t
 *
e
) {

267 
°r1
[32], 
°r2
[32];

269 
	`bfg_node_°r
(
e
->
§c
);

270 
	`°r˝y
(
°r1
, 
°r
);

271 
	`bfg_node_°r
(
e
->
d°
);

272 
	`°r˝y
(
°r2
, 
°r
);

274 i‡(
e
->
bønch
 =
BOTH_BRANCHES


276 
	`•rötf
(
°r
, "%s_%s", 
°r1
, 
°r2
);

277 i‡(
e
->
bønch
 =
NOT_TAKEN


279 
	`•rötf
(
°r
, "%s_%sN", 
°r1
, 
°r2
);

280 i‡(
e
->
bønch
 =
TAKEN


282 
	`•rötf
(
°r
, "%s_%sT", 
°r1
, 
°r2
);

283 
	}
}

286 
	$btg_edge_ãrm
(
FILE
 *
Â
, 
btg_edge_t
 *
e
, *
¥efix
, *
suffix
) {

287 
	`btg_edge_°r
(
e
);

288 
	`•rötf
(
ãrm
, "%•%s%s", 
¥efix
, 
°r
, 
suffix
);

289 
	`√w_ãrm
(
Â
);

290 
	}
}

292 
	$hm_°r
(
edge_id
, 
hm
) {

293 
	`•rötf
(
°r
, "%d.%d", 
edge_id
, 
hm
);

294 
	}
}

297 
	$hm_ãrm
(
FILE
 *
Â
, 
edge_id
, 
hm
, *
¥efix
, *
suffix
) {

298 
	`hm_°r
(
edge_id
, 
hm
);

299 
	`•rötf
(
ãrm
, "%shm%s%s", 
¥efix
, 
°r
, 
suffix
);

300 
	`√w_ãrm
(
Â
);

301 
	}
}

303 
	$mp£t_°r
(
tcfg_edge_t
 *
edge
, 
Õ_id
, 
£t
) {

304 
tmp_°r
[32];

306 
	`tcfg_edge_°r
(
edge
, 
BP_NONE
);

307 
	`•rötf
(
tmp_°r
, "%s.%d.%d", 
°r
, 
Õ_id
, 
£t
);

308 
	`°r˝y
(
°r
, 
tmp_°r
);

309 
	}
}

312 
	$mp£t_ãrm
(
FILE
 *
Â
, 
tcfg_edge_t
 *
edge
, 
Õ_id
, 
£t
,

313 *
¥efix
, *
suffix
) {

314 
	`mp£t_°r
(
edge
, 
Õ_id
, 
£t
);

315 
	`•rötf
(
ãrm
, "%smp%s%s", 
¥efix
, 
°r
, 
suffix
);

316 
	`√w_ãrm
(
Â
);

317 
	}
}

319 
	$mpunô_°r
(
tcfg_edge_t
 *
edge
, 
hm
, 
£t
) {

320 
tmp_°r
[32];

322 
	`tcfg_edge_°r
(
edge
, 
BP_NONE
);

323 
	`•rötf
(
tmp_°r
, "%s.%d.%d", 
°r
, 
hm
, 
£t
);

324 
	`°r˝y
(
°r
, 
tmp_°r
);

325 
	}
}

328 
	$mpunô_ãrm
(
FILE
 *
Â
, 
tcfg_edge_t
 *
edge
, 
hm
, 
£t
,

329 *
¥efix
, *
suffix
) {

330 
	`mpunô_°r
(
edge
, 
hm
, 
£t
);

331 
	`•rötf
(
ãrm
, "%sd%s%s", 
¥efix
, 
°r
, 
suffix
);

332 
	`√w_ãrm
(
Â
);

333 
	}
}

337 
	$m≠_bb_bbi
(
¥oc
, 
bb
, 
fú°
, 
sign
, 
c€ff
) {

338 
i
, 
j
;

339 
tcfg_∆ök_t
 *
∆
;

340 
tcfg_node_t
 *
bbi
;

341 
sign_s
[3] = "", 
tmp
[3], 
c€ff_s
[8] = "", 
¥efix_°r
[32];

343 i‡(
bbi_m≠
[
¥oc
][
bb
] =
NULL


349 i‡(
sign
 =
PLUS


351 
	`°r˝y
(
tmp
, "+ ");

353 
	`°r˝y
(
tmp
, "- ");

354 i‡(!
fú°
)

355 
	`°r˝y
(
sign_s
, 
tmp
);

357 i‡(
c€ff
 != 1)

358 
	`•rötf
(
c€ff_s
, "%d ", 
c€ff
);

362 
∆
 = 
bbi_m≠
[
¥oc
][
bb
];Ç»!
NULL
;Ç»∆->
√xt
) {

363 
bbi
 = 
∆
->bbi;

365 
	`•rötf
(
¥efix_°r
, "%s%s", 
sign_s
, 
c€ff_s
);

366 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
¥efix_°r
, 
NO_SUFFIX
);

367 i‡(
fú°
) {

368 
fú°
 = 0;

369 
	`°r˝y
(
sign_s
, 
tmp
);

373 
	}
}

377 
	$m≠_bb_bbi_c⁄ãxt
(
¥oc
, 
bb
, 
fú°
, 
sign
, 
c€ff
,

378 
k
) {

379 
tcfg_∆ök_t
 *
∆
;

380 
tcfg_node_t
 *
bbi
;

381 
sign_s
[3] = "", 
tmp
[3], 
c€ff_s
[8] = "", 
¥efix_°r
[32];

382 
cou¡
;

384 i‡(
bbi_m≠
[
¥oc
][
bb
] =
NULL


390 i‡(
sign
 =
PLUS


392 
	`°r˝y
(
tmp
, "+ ");

394 
	`°r˝y
(
tmp
, "- ");

395 i‡(!
fú°
)

396 
	`°r˝y
(
sign_s
, 
tmp
);

398 i‡(
c€ff
 != 1)

399 
	`•rötf
(
c€ff_s
, "%d ", 
c€ff
);

402 
cou¡
 = 0, 
∆
 = 
bbi_m≠
[
¥oc
][
bb
]; cou¡ < 
k
 &&Ç»!
NULL
;

403 
cou¡
++, 
∆
 =Çl->
√xt
)

406 
bbi
 = 
∆
->bbi;

408 
	`•rötf
(
¥efix_°r
, "%s%s", 
sign_s
, 
c€ff_s
);

409 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
¥efix_°r
, 
NO_SUFFIX
);

410 i‡(
fú°
) {

411 
fú°
 = 0;

412 
	`°r˝y
(
sign_s
, 
tmp
);

415 
	}
}

418 
	$u£r_c⁄s
() {

419 
löe
[128], *
rhs
, *
p
, 
tmp
[128];

420 
¥oc
, 
bb
, 
i
, 
övÆid
 = 0;

421 
sign
, 
fú°
, 
c€ff
;

422 
nom©ch
 = 0;

424 
	`fgës
(
löe
, 128, 
fu§
Ë!
NULL
) {

425 i‡((
rhs
 = 
	`°rchr
(
löe
, '<')Ë=
NULL
) {

426 i‡((
rhs
 = 
	`°rchr
(
löe
, '>')Ë=
NULL


428 i‡((
rhs
 = 
	`°rchr
(
löe
, '=')Ë=
NULL
) {

429 
	`Ârötf
(
°dîr
, "1. invÆid c⁄°øöt:\n%s", 
löe
);

430 
	`exô
(1);

433 
fú°
 = 1;

434 
c€ff
 = 1;

435 
sign
 = 
PLUS
;

436 
p
 = 
löe
;Ö !
rhs
;Ö++) {

437 i‡(*
p
 == 'c') {

438 
i
 = 
	`ssˇnf
(
p
 + 1, "%d.%d", &
¥oc
, &
bb
);

439 i‡(
i
 != 2) {

440 
övÆid
 = 1;

444 
nom©ch
 = 
	`m≠_bb_bbi
(
¥oc
, 
bb
, 
fú°
, 
sign
, 
c€ff
);

445 i‡(
nom©ch
)

448 
	`•rötf
(
tmp
, "%d.%d", 
¥oc
, 
bb
);

449 
p
 +
	`°æí
(
tmp
);

450 
fú°
 = 0;

451 
c€ff
 = 1;

452 } i‡(*
p
 == '+') {

453 
sign
 = 
PLUS
;

454 } i‡(*
p
 == '-') {

455 
sign
 = 
MINUS
;

456 } i‡((*
p
 >= '1') && (*p <= '9')) {

457 
	`ssˇnf
(
p
, "%d", &
c€ff
);

458 
	`•rötf
(
tmp
, "%d", 
c€ff
);

459 
p
 +
	`°æí
(
tmp
) - 1;

460 } i‡(*
p
 == ' ' || *p == '\t') {

463 
övÆid
 = 1;

467 i‡(
övÆid
) {

468 
	`Ârötf
(
°dîr
, "2. invÆid c⁄°øöts:\n%s", 
löe
);

471 i‡(
nom©ch
)

474 
	`Ârötf
(
fûp
, " %s", 
rhs
);

475 
tŸÆ_c⁄s
++;

477 
	}
}

483 
	$u£r_c⁄s_c⁄ãxt
() {

484 
löe
[128], *
rhs
, *
p
, 
tmp
[128];

485 
¥oc
, 
bb
, 
i
, 
k
, 
övÆid
 = 0;

486 
sign
, 
fú°
, 
c€ff
;

488 
nom©ch
 = 0;

490 
num_c⁄ãxts
;

491 
tcfg_∆ök_t
 *
∆
;

492 
cou¡
 = 0;

494 
	`Ârötf
(
fûp
, "\n\\ === User constraints (e.g.Üoop bound) ====\n");

495 
	`fgës
(
löe
, 128, 
fu§
Ë!
NULL
) {

497 i‡((
rhs
 = 
	`°rchr
(
löe
, '<')Ë=
NULL
) {

498 i‡((
rhs
 = 
	`°rchr
(
löe
, '>')Ë=
NULL
) {

499 i‡((
rhs
 = 
	`°rchr
(
löe
, '=')Ë=
NULL
) {

500 
	`Ârötf
(
°dîr
, "1. invÆid c⁄°øöt:\n%s", 
löe
);

501 
	`exô
(1);

507 i‡(
	`°rchr
(
löe
, '<'Ë=
NULL
 && strchr(line, '>') == NULL) {

508 
fú°
 = 1;

509 
c€ff
 = 1;

510 
sign
 = 
PLUS
;

511 
p
 = 
löe
;Ö !
rhs
;Ö++) {

513 i‡(*
p
 == 'c') {

514 
i
 = 
	`ssˇnf
(
p
 + 1, "%d.%d", &
¥oc
, &
bb
);

515 i‡(
i
 != 2) {

516 
övÆid
 = 1;

520 
nom©ch
 = 
	`m≠_bb_bbi
(
¥oc
, 
bb
, 
fú°
, 
sign
, 
c€ff
);

521 i‡(
nom©ch
)

524 
	`•rötf
(
tmp
, "%d.%d", 
¥oc
, 
bb
);

525 
p
 +
	`°æí
(
tmp
);

526 
fú°
 = 0;

527 
c€ff
 = 1;

528 } i‡(*
p
 == '+') {

529 
sign
 = 
PLUS
;

530 } i‡(*
p
 == '-') {

531 
sign
 = 
MINUS
;

532 } i‡((*
p
 >= '1') && (*p <= '9')) {

533 
	`ssˇnf
(
p
, "%d", &
c€ff
);

534 
	`•rötf
(
tmp
, "%d", 
c€ff
);

535 
p
 +
	`°æí
(
tmp
) - 1;

536 } i‡(*
p
 == ' ' || *p == '\t') {

539 
övÆid
 = 1;

543 i‡(
övÆid
) {

544 
	`Ârötf
(
°dîr
, "2. invÆid c⁄°øöts:\n%s", 
löe
);

547 i‡(
nom©ch
)

550 
	`Ârötf
(
fûp
, " %s", 
rhs
);

551 
tŸÆ_c⁄s
++;

558 
p
 = 
löe
;Ö !
rhs
;Ö++) {

559 i‡(*
p
 == 'c') {

560 
i
 = 
	`ssˇnf
(
p
 + 1, "%d.%d", &
¥oc
, &
bb
);

561 i‡(
i
 != 2) {

562 
övÆid
 = 1;

565 
num_c⁄ãxts
 = 0;

566 
∆
 = 
bbi_m≠
[
¥oc
][
bb
];Ç»!
NULL
;Ç»∆->
√xt
)

567 
num_c⁄ãxts
++;

572 i‡(
övÆid
) {

573 
	`Ârötf
(
°dîr
, "2a. invÆid c⁄°øöts:\n%s", 
löe
);

578 
k
 = 0; k < 
num_c⁄ãxts
; k++) {

579 
fú°
 = 1;

580 
c€ff
 = 1;

581 
sign
 = 
PLUS
;

582 
p
 = 
löe
;Ö !
rhs
;Ö++) {

583 i‡(*
p
 == 'c') {

584 
i
 = 
	`ssˇnf
(
p
 + 1, "%d.%d", &
¥oc
, &
bb
);

585 i‡(
i
 != 2) {

586 
övÆid
 = 1;

590 
nom©ch
 = 
	`m≠_bb_bbi_c⁄ãxt
(
¥oc
, 
bb
, 
fú°
, 
sign
, 
c€ff
,

591 
k
);

592 i‡(
nom©ch
)

595 
	`•rötf
(
tmp
, "%d.%d", 
¥oc
, 
bb
);

596 
p
 +
	`°æí
(
tmp
);

597 
fú°
 = 0;

598 
c€ff
 = 1;

599 } i‡(*
p
 == '+') {

600 
sign
 = 
PLUS
;

601 } i‡(*
p
 == '-') {

602 
sign
 = 
MINUS
;

603 } i‡((*
p
 >= '1') && (*p <= '9')) {

604 
	`ssˇnf
(
p
, "%d", &
c€ff
);

605 
	`•rötf
(
tmp
, "%d", 
c€ff
);

606 
p
 +
	`°æí
(
tmp
) - 1;

607 } i‡(*
p
 == ' ' || *p == '\t') {

610 
övÆid
 = 1;

614 i‡(
övÆid
) {

615 
	`Ârötf
(
°dîr
, "2b. invÆid c⁄°øöts:\n%s", 
löe
);

618 i‡(
nom©ch
)

621 
	`Ârötf
(
fûp
, " %s", 
rhs
);

622 
tŸÆ_c⁄s
++;

625 
	`¥ötf
("\n");

626 
	}
}

628 
	$v°¨t_co°_ãrm
() {

629 
	`Ârötf
(
fûp
, "%d d%s_0", 
°¨t_time
, 
°¨t_°r
);

630 
	}
}

632 
	$co°_ãrm
(
edge_id
, 
b¥ed
) {

633 
i
, 
tm
, 
num_hm
;

634 
tcfg_edge_t
 *
e
;

635 
l1
, 
l2
;

637 
e
 = 
tcfg_edges
[
edge_id
];

638 
	`tcfg_edge_°r
(
e
, 
b¥ed
);

640 i‡(
íabÀ_iˇche
)

641 
num_hm
 = 
num_hô_miss
[
tcfg_edges
[
edge_id
]->
d°
->
id
];

643 
num_hm
 = 1;

645 
i
 = 0; i < 
num_hm
; i++) {

646 i‡(
b¥ed
 =
BP_MPRED


648 
tm
 = 
m¥ed_times
[
edge_id
][
i
];

650 
tm
 = 
˝ªd_times
[
edge_id
][
i
];

651 i‡(
íabÀ_iˇche
) {

652 
	`Ârötf
(
fûp
, " + %d d%s.%d", 
tm
, 
°r
, 
i
);

654 
	`Ârötf
(
fûp
, " + %d d%s", 
tm
, 
°r
);

660 i‡(
íabÀ_dˇche
) {

661 
tcfg_node_t
* 
bbi
 = 
tcfg_edges
[
edge_id
]->
§c
;

662 
	`Ârötf
(
fûp
, " + %d d%s", 
bbi
->
dˇche_dñay
, 
°r
);

663 
	`Ârötf
(
fûp
, " + %d d%s.0", 
L1_MISS_PENALTY
 * 
bbi
->
n_d©a_≥rsi°í˚
,

664 
°r
);

665 i‡(
íabÀ_ul2ˇche
)

666 
	`Ârötf
(
fûp
, " + %d d%s.0",

667 
L2_MISS_PENALTY
 * 
bbi
->
n_u1_d©a_≥rsi°í˚
, 
°r
);

671 i‡(
íabÀ_abs_ö°_ˇche
) {

672 
tcfg_node_t
* 
bbi
 = 
tcfg_edges
[
edge_id
]->
§c
;

673 
	`Ârötf
(
fûp
, " + %d d%s", 
bbi
->
ö°_ˇche_dñay
, 
°r
);

674 
	`Ârötf
(
fûp
, " + %d d%s.0", 
L1_MISS_PENALTY
 * 
bbi
->
n_≥rsi°í˚
, 
°r
);

675 i‡(
íabÀ_û2ˇche
)

676 
	`Ârötf
(
fûp
, " + %d d%s.0",

677 
L2_MISS_PENALTY
 * 
bbi
->
n_l2_≥rsi°í˚
, 
°r
);

678 i‡(
íabÀ_ul2ˇche
)

679 
	`Ârötf
(
fûp
, " + %d d%s.0",

680 
L2_MISS_PENALTY
 * 
bbi
->
n_u1_≥rsi°í˚
, 
°r
);

682 
	}
}

686 
	$tcfg_node_c⁄s
(
tcfg_node_t
 *
bbi
) {

687 
tcfg_edge_t
 *
e
;

689 
	`tcfg_node_ãrm
(
NULL
, 
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

691 i‡(
bbi
->
out
 !
NULL
) {

692 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

693 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

694 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

695 
	`tcfg_edge_ãrm
(
NULL
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

697 
	`Ârötf
(
fûp
, " = 0\n");

698 
tŸÆ_c⁄s
++;

702 i‡(
bbi
->
ö
 !
NULL
) {

703 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

704 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
)

705 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

707 i‡(
bbi
->
id
 == 0)

708 
	`Ârötf
(
fûp
, " - d%s_0", 
°¨t_°r
);

709 
	`Ârötf
(
fûp
, " = 0\n");

710 
tŸÆ_c⁄s
++;

711 } i‡(
bbi
->
id
 == 0) {

712 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

713 
	`Ârötf
(
fûp
, " - d%s_0 = 0\n", 
°¨t_°r
);

714 
tŸÆ_c⁄s
++;

716 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
NO_PREFIX
, " = 0\n");

717 
tŸÆ_c⁄s
++;

719 
	}
}

722 
	$tcfg_c⁄s
() {

723 
i
;

725 
	`Ârötf
(
fûp
, "\\ ===Åcfg constraints ===\n");

727 i‡(
íabÀ_abs_ö°_ˇche
) {

728 
edge_id
;

729 
tcfg_edge_t
* 
e
;

742 
	`Ârötf
(
fûp
, "d%s_0 = 1\n", 
°¨t_°r
);

743 
tŸÆ_c⁄s
++;

744 
	`•rötf
(
°r
, "d%s_0", 
°¨t_°r
);

745 
	`add_v¨
(
°¨t_°r
);

747 
i
 = 0; i < 
num_tcfg_nodes
; i++)

748 
	`tcfg_node_c⁄s
(
tcfg
[
i
]);

749 
	`Ârötf
(
fûp
, "\n");

750 
	}
}

754 
	$bfg_c⁄s
() {

755 
i
, 
has_roŸ
, 
has_íd
;

756 
bfg_node_t
 *
bbb
;

757 
bfg_edge_t
 *
e
;

758 
tcfg_node_t
 *
bbi
;

759 
tcfg_edge_t
 *
tcfg_e
;

761 
i
 = 0; i < 
num_bfg_nodes
; i++) {

762 
bbb
 = 
vbbb
[
i
];

763 
	`bfg_node_ãrm
(
NULL
, 
bbb
, 
NO_PREFIX
, 
NO_SUFFIX
);

765 
	`bfg_node_ãrm
(
fûp
, 
bbb
, 
NO_PREFIX
, 
NO_SUFFIX
);

766 
has_íd
 = 0;

767 
e
 = 
bbb
->
out
;É !
NULL
;É =É->
√xt_out
) {

768 i‡(
e
->
d°
->
id
 =
íd_bbb_id
) {

769 
has_íd
 = 1;

772 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

773 
	`bfg_edge_ãrm
(
NULL
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

775 
	`Ârötf
(
fûp
, " <%d\n", 
has_íd
);

776 
tŸÆ_c⁄s
++;

777 
	`bfg_node_ãrm
(
fûp
, 
bbb
, 
NO_PREFIX
, 
NO_SUFFIX
);

778 
has_íd
 = 0;

779 
e
 = 
bbb
->
out
;É !
NULL
;É =É->
√xt_out
) {

780 i‡(
e
->
d°
->
id
 =
íd_bbb_id
) {

783 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

784 
	`bfg_edge_ãrm
(
NULL
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

786 
	`Ârötf
(
fûp
, " >= 0\n");

787 
tŸÆ_c⁄s
++;

790 
	`bfg_node_ãrm
(
fûp
, 
bbb
, 
NO_PREFIX
, 
NO_SUFFIX
);

791 
has_roŸ
 = 0;

792 
e
 = 
bbb
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

793 i‡(
e
->
§c
->
id
 =
roŸ_bbb_id
) {

794 
has_roŸ
 = 1;

797 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

799 
	`Ârötf
(
fûp
, " <%d\n", 
has_roŸ
);

800 
tŸÆ_c⁄s
++;

801 
	`bfg_node_ãrm
(
fûp
, 
bbb
, 
NO_PREFIX
, 
NO_SUFFIX
);

802 
has_roŸ
 = 0;

803 
e
 = 
bbb
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

804 i‡(
e
->
§c
->
id
 =
roŸ_bbb_id
) {

807 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

809 
	`Ârötf
(
fûp
, " >= 0\n");

810 
tŸÆ_c⁄s
++;

812 
	`Ârötf
(
fûp
, "\n");

813 
	}
}

821 
	$btg_c⁄s
() {

822 
i
, 
pi
, 
has_roŸ
, 
has_íd
;

823 
bfg_node_t
 *
x
, *
y
;

824 
bfg_edge_t
 *
e
;

825 
btg_edge_t
 *
p
;

828 
	`Ârötf
(
fûp
, "\n");

829 
i
 = 0; i < 
num_bfg_nodes
; i++) {

830 
x
 = 
vbbb
[
i
];

831 
e
 = 
x
->
out
;É !
NULL
;É =É->
√xt_out
) {

832 i‡(
e
->
d°
->
id
 =
íd_bbb_id
)

834 
	`bfg_edge_ãrm
(
NULL
, 
e
, 
BP_CPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

835 
	`bfg_edge_ãrm
(
NULL
, 
e
, 
BP_MPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

836 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

837 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_CPRED
, " - ", 
NO_SUFFIX
);

838 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_MPRED
, " - ", " = 0\n");

839 
tŸÆ_c⁄s
++;

844 
	`Ârötf
(
fûp
, "\n");

847 
i
 = 0; i < 
num_bfg_nodes
; i++) {

848 
x
 = 
vbbb
[
i
];

850 
	`bfg_node_ãrm
(
fûp
, 
x
, 
NO_PREFIX
, 
NO_SUFFIX
);

851 
has_roŸ
 = 0;

852 
p
 = 
btg_ö
[
i
];Ö !
NULL
;Ö =Ö->
√xt_ö
) {

853 i‡(
p
->
§c
->
id
 =
roŸ_bbb_id
) {

854 
has_roŸ
 = 1;

857 
	`btg_edge_ãrm
(
fûp
, 
p
, " - ", 
NO_SUFFIX
);

859 
	`Ârötf
(
fûp
, " <%d\n", 
has_roŸ
);

860 
tŸÆ_c⁄s
++;

861 
	`bfg_node_ãrm
(
fûp
, 
x
, 
NO_PREFIX
, 
NO_SUFFIX
);

862 
p
 = 
btg_ö
[
i
];Ö !
NULL
;Ö =Ö->
√xt_ö
) {

863 i‡(
p
->
§c
->
id
 =
roŸ_bbb_id
) {

866 
	`btg_edge_ãrm
(
fûp
, 
p
, " - ", 
NO_SUFFIX
);

868 
	`Ârötf
(
fûp
, " >= 0\n");

869 
tŸÆ_c⁄s
++;

874 
	`Ârötf
(
fûp
, "\n");

875 
i
 = 0; i < 
num_bfg_nodes
; i++) {

876 
x
 = 
vbbb
[
i
];

877 
e
 = 
x
->
out
;É !
NULL
;É =É->
√xt_out
) {

878 i‡(
e
->
d°
->
id
 =
íd_bbb_id
)

880 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

881 
has_íd
 = 0;

882 
p
 = 
btg_out
[
i
];Ö !
NULL
;Ö =Ö->
√xt_out
) {

883 i‡(
e
->
bønch
 !
p
->branch)

885 i‡(
p
->
d°
->
id
 =
íd_bbb_id
) {

886 
has_íd
 = 1;

889 
	`btg_edge_ãrm
(
fûp
, 
p
, " - ", 
NO_SUFFIX
);

891 
	`Ârötf
(
fûp
, " <%d\n", 
has_íd
);

892 
tŸÆ_c⁄s
++;

893 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

894 
p
 = 
btg_out
[
i
];Ö !
NULL
;Ö =Ö->
√xt_out
) {

895 i‡(
e
->
bønch
 !
p
->branch)

897 i‡(
p
->
d°
->
id
 =
íd_bbb_id
) {

900 
	`btg_edge_ãrm
(
fûp
, 
p
, " - ", 
NO_SUFFIX
);

902 
	`Ârötf
(
fûp
, " >= 0\n");

903 
tŸÆ_c⁄s
++;

908 
	`Ârötf
(
fûp
, "\n");

909 
i
 = 0; i < 
num_bfg_nodes
; i++) {

910 
x
 = 
vbbb
[
i
];

911 
e
 = 
x
->
out
;É !
NULL
;É =É->
√xt_out
) {

913 i‡(
e
->
d°
->
id
 =
íd_bbb_id
)

915 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_MPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

916 
has_roŸ
 == 0;

917 
p
 = 
btg_ö
[
i
];Ö !
NULL
;Ö =Ö->
√xt_ö
) {

918 i‡(
e
->
bønch
 =
p
->branch)

920 i‡(
p
->
§c
->
id
 =
roŸ_bbb_id
) {

921 
has_roŸ
 = 1;

924 
	`btg_edge_ãrm
(
fûp
, 
p
, " - ", 
NO_SUFFIX
);

926 
	`Ârötf
(
fûp
, " <%d\n", 
has_roŸ
);

927 
tŸÆ_c⁄s
++;

930 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_MPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

931 
	`bfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", " <= 0\n");

932 
tŸÆ_c⁄s
++;

936 
	`Ârötf
(
fûp
, "\n");

937 
	}
}

943 
	$tcfg_bfg_c⁄s
() {

944 
i
, 
j
, 
pi
, 
bønch
, 
bp
[2] = { 
BP_NONE
, 
BP_MPRED
 };

945 
tcfg_node_t
 *
bbi
;

946 
tcfg_edge_t
 *
e
;

947 
bfg_node_t
 *
x
, *
y
;

948 
bfg_edge_t
 *
bbb_e
;

951 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

952 i‡(
	`bbi_ty≥
(
tcfg
[
i
]Ë!
CTRL_COND
)

954 
	`tcfg_node_ãrm
(
fûp
, 
tcfg
[
i
], 
NO_PREFIX
, 
NO_SUFFIX
);

955 
pi
 = 0;Öò< 
BHT_SIZE
;Öi++) {

956 i‡(
bfg
[
i
][
pi
] !
NULL


958 
	`bfg_node_ãrm
(
fûp
, 
bfg
[
i
][
pi
], " - ", 
NO_SUFFIX
);

960 
	`Ârötf
(
fûp
, " = 0\n");

961 
tŸÆ_c⁄s
++;

966 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

967 
bbi
 = 
tcfg
[
i
];

968 i‡(
	`bbi_ty≥
(
bbi
Ë!
CTRL_COND
)

970 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

971 
j
 = 
e
->
d°
->
id
;

972 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

973 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_CPRED
, " - ", 
NO_SUFFIX
);

974 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_MPRED
, " - ", " = 0\n");

975 
tŸÆ_c⁄s
++;

976 
	`tcfg_edge_ãrm
(
NULL
, 
e
, 
BP_CPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

977 
	`tcfg_edge_ãrm
(
NULL
, 
e
, 
BP_MPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

981 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

982 
bbi
 = 
tcfg
[
i
];

983 i‡(
	`bbi_ty≥
(
bbi
Ë!
CTRL_COND
)

986 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

987 
j
 = 0; j < 2; j++) {

988 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
bp
[
j
], 
NO_PREFIX
, 
NO_SUFFIX
);

989 
bønch
 = 
e
->branch;

990 
pi
 = 0;Öò< 
BHT_SIZE
;Öi++) {

991 i‡((
x
 = 
bfg
[
i
][
pi
]Ë=
NULL


994 i‡(
x
->
out
->
bønch
 == branch)

995 
bbb_e
 = 
x
->
out
;

997 
bbb_e
 = 
x
->
out
->
√xt_out
;

998 i‡(
bbb_e
->
d°
->
id
 =
íd_bbb_id
) {

1001 
	`bfg_edge_ãrm
(
fûp
, 
bbb_e
, 
bp
[
j
], " - ", 
NO_SUFFIX
);

1003 i‡(
pi
 < 
BHT_SIZE
)

1004 
	`Ârötf
(
fûp
, " <= 1\n");

1006 
	`Ârötf
(
fûp
, " = 0\n");

1007 
tŸÆ_c⁄s
++;

1011 
	`Ârötf
(
fûp
, "\n");

1012 
	}
}

1014 
	$tcfg_e°unô_c⁄s_ps
() {

1015 
edge_id
, 
hm
, 
num
;

1016 
tcfg_edge_t
* 
e
;

1018 
	`Ârötf
(
fûp
, "\n\\ ===Åcfg_estunit_cons_ps ===\n");

1020 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1021 
e
 = 
tcfg_edges
[
edge_id
];

1022 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1023 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 0, " - ", 
NO_SUFFIX
);

1024 
	`Ârötf
(
fûp
, " >= 0\n");

1025 
tŸÆ_c⁄s
++;

1026 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 0, 
NO_PREFIX
, 
NO_SUFFIX
);

1027 
	`Ârötf
(
fûp
, " <= 1\n");

1028 
tŸÆ_c⁄s
++;

1030 
	}
}

1035 
íabÀ_s˝_dˇche
;

1036 
Õ_cﬁdms
[36];

1037 
l1
;

1039 
	$tcfg_dö°_°r
(
d_ö°_id
, 
tcfg_node_t
 *
bbi
) {

1040 
	`•rötf
(
°r
, "b%d.d%d", 
bbi
->
id
, 
d_ö°_id
);

1041 
	}
}

1042 
	$s˝_dˇche_co°
() {

1043 
i
, 
j
;

1044 
lo›_t
 *
Õ
;

1045 
tcfg_node_t
 *
bbi
;

1046 
cfg_node_t
 *
bb
;

1047 
tcfg_edge_t
 *
edge
;

1048 
d©_ö°_t
 *
d_ö°
;

1049 
cﬁdms
 = 0;

1051 
i
 = 1; i < 
num_tcfg_lo›s
; i++) {

1052 
Õ
 = 
lo›s
[
i
];

1053 
cﬁdms
 +
Õ_cﬁdms
[
i
];

1055 
	`Ârötf
(
fûp
, " + %d d%s_0", 
cﬁdms
 * 
l1
, 
°¨t_°r
);

1057 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1058 
bbi
 = 
tcfg
[
i
];

1059 
bb
 = 
bbi
->bb;

1060 
j
 = 0; j < 
bb
->
num_d_ö°
; j++) {

1061 
d_ö°
 = ((
d©_ö°_t
*Ë
bb
->
d_ö°li°
Ë+ 
j
;

1062 
	`tcfg_dö°_°r
(
j
, 
bbi
);

1063 
	`Ârötf
(
fûp
, " + %d %s", 
l1
, 
°r
);

1066 
	}
}

1070 
	$s˝_dˇche_c⁄s
() {

1071 
i
, 
j
;

1072 
tcfg_node_t
 *
bbi
;

1073 
cfg_node_t
 *
bb
;

1074 
d©_ö°_t
 *
d_ö°
;

1075 
bb_°r
[10];

1077 
	`Ârötf
(
fûp
, "\n\\ ==== scope-aware dcache miss constraints ===\n");

1078 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1079 
bbi
 = 
tcfg
[
i
];

1080 
bb
 = 
bbi
->bb;

1081 
	`tcfg_node_°r
(
bbi
);

1082 
	`°r˝y
(
bb_°r
, 
°r
);

1083 
j
 = 0; j < 
bb
->
num_d_ö°
; j++) {

1084 
d_ö°
 = ((
d©_ö°_t
*Ë
bb
->
d_ö°li°
Ë+ 
j
;

1085 
	`tcfg_dö°_°r
(
j
, 
bbi
);

1086 
	`Ârötf
(
fûp
, "%†- b%†<0\n", 
°r
, 
bb_°r
);

1087 
	`Ârötf
(
fûp
, "%†<%d\n", 
°r
, 
d_ö°
->
max_miss
);

1090 
	}
}

1092 
	$tcfg_e°unô_c⁄s
() {

1093 
edge_id
, 
hm
, 
num
;

1094 
tcfg_edge_t
 *
e
;

1096 
	`Ârötf
(
fûp
, "\n\\ ===Åcfg_estunit_cons ===\n");

1097 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1098 
e
 = 
tcfg_edges
[
edge_id
];

1099 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1100 
num
 = 
num_hô_miss
[
tcfg_edges
[
edge_id
]->
d°
->
id
];

1101 
hm
 = 0; hm < 
num
; hm++)

1102 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
hm
, " - ", 
NO_SUFFIX
);

1103 
	`Ârötf
(
fûp
, " = 0\n");

1104 
tŸÆ_c⁄s
++;

1105 i‡((
b¥ed_scheme
 =
NO_BPRED
Ë|| !
	`c⁄d_bbi
(
e
->
§c
))

1108 
hm
 = 0; hm < 
num
; hm++) {

1109 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1110 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_CPRED
, 
hm
, " - ", 
NO_SUFFIX
);

1111 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_MPRED
, 
hm
, " - ", " = 0\n");

1112 
tŸÆ_c⁄s
++;

1116 
e
 = 
tcfg_edges
[
edge_id
];

1117 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_CPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

1118 
hm
 = 0; hm < 
num
; hm++)

1119 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_CPRED
, 
hm
, " - ", 
NO_SUFFIX
);

1120 
	`Ârötf
(
fûp
, " = 0\n");

1121 
tŸÆ_c⁄s
++;

1123 
e
 = 
tcfg_edges
[
edge_id
];

1124 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_MPRED
, 
NO_PREFIX
, 
NO_SUFFIX
);

1125 
hm
 = 0; hm < 
num
; hm++)

1126 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_MPRED
, 
hm
, " - ", 
NO_SUFFIX
);

1127 
	`Ârötf
(
fûp
, " = 0\n");

1128 
tŸÆ_c⁄s
++;

1130 
	`Ârötf
(
fûp
, "\n");

1131 
i
;

1132 *
numbîofC⁄ãxt
;

1133 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1134 
tcfg_edge_t
* 
e
 = 
tcfg_edges
[
i
];

1135 
tcfg_node_t
* 
§c
 = 
e
->src;

1136 
tcfg_node_t
* 
d°
 = 
e
->dst;

1137 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
§c
->
id
];

1138 
Êag
 = (
num_c⁄ãxt
 > 1);

1139 
hm
 = 0;

1140 
num_hm
 = 
num_hô_miss
[
d°
->
id
];

1141 
suffix
[100];

1142 
	`tcfg_edge_°r
(
e
, 
BP_NONE
);

1143 
hm
 = 0; hm < 
num_hm
; hm++) {

1144 
	`•rötf
(
suffix
, ".i%d", 
hm
);

1145 
	`Ârötf
(
fûp
, "d%s.%d", 
°r
, 
hm
);

1146 
vC⁄ãxt
;

1147 
vC⁄ãxt
 = 0; vC⁄ãxà< 
num_c⁄ãxt
; vContext++) {

1148 i‡(
Êag
) {

1149 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
vC⁄ãxt
, 
num_c⁄ãxt
, 
BP_NONE
,

1150 " - ", 
suffix
);

1152 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
suffix
);

1155 
	`Ârötf
(
fûp
, " = 0\n");

1158 
	}
}

1160 
	$b¥ed_mis£s
() {

1161 
i
;

1162 
tcfg_node_t
 *
bbi
;

1163 
tcfg_edge_t
 *
e
;

1165 
	`Ârötf
(
fûp
, "bm");

1166 
	`add_v¨
("bm");

1167 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1168 
bbi
 = 
tcfg
[
i
];

1169 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

1170 i‡(
	`c⁄d_bbi
(
e
->
§c
))

1171 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_MPRED
, " - ", 
NO_SUFFIX
);

1174 
	`Ârötf
(
fûp
, " = 0\n");

1175 
tŸÆ_c⁄s
++;

1176 
	}
}

1179 
mpˇche_mis£s
();

1181 
	$ˇche_mis£s
() {

1182 
i
, 
j
, 
hm
, 
num
, 
cﬁd_mis£s
 = 0, 
ts0
, 
ts1
;

1183 
¥efix_°r
[32];

1184 
lo›_t
 *
Õ1
, *
Õ2
, *
Õ3
;

1185 
tcfg_node_t
 *
Õ_hód
;

1186 
tcfg_edge_t
 *
e
;

1188 
	`Ârötf
(
fûp
, "cm");

1189 
	`add_v¨
("cm");

1191 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1192 
ts0
 = 
	`TAGSET
(
tcfg
[
i
]->
bb
->
ß
);

1193 
hm
 = 0; hm < 
num_hô_miss
[
i
]; hm++) {

1194 
Õ1
 = 
bbi_hm_li°
[
i
][
hm
];

1195 
e
 = 
tcfg
[
i
]->
ö
;É !
NULL
;É =É->
√xt_ö
) {

1196 
num
 = 0;

1197 
j
 = 0; j < 
num_mblks
[
i
]; j++) {

1198 
Õ2
 = 
mblk_hô_lo›
[
i
][
j
];

1199 i‡((
Õ1
 =
NULL
Ë|| (
Õ2
 == NULL))

1200 
num
++;

1201 i‡(
Õ1
 !
Õ2
) {

1202 
Õ3
 = 
lo›_comm_™˚s
[
Õ1
->
id
][
Õ2
->id];

1203 i‡(
Õ3
 =
Õ1
)

1204 
num
++;

1207 i‡(
num
 > 1) {

1208 
	`•rötf
(
¥efix_°r
, " - %d ", 
num
);

1209 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
hm
, 
¥efix_°r
, 
NO_SUFFIX
);

1210 } i‡(
num
 == 1) {

1211 
	`•rötf
(
¥efix_°r
, " - ", 
num
);

1212 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
hm
, 
¥efix_°r
, 
NO_SUFFIX
);

1217 i‡(
b¥ed_scheme
 !
BP_NONE


1219 
	`mpˇche_mis£s
();

1220 
	`Ârötf
(
fûp
, " = %d\n", 
num_mblks
[0]);

1221 
tŸÆ_c⁄s
++;

1222 
	}
}

1229 
	$ˇche_c⁄s
() {

1230 
i
, 
j
, 
hm
, 
hm1
;

1231 
tcfg_node_t
 *
bbi
, *
Õ_hód
;

1232 
tcfg_edge_t
 *
e
;

1233 
lo›_t
 *
Õ
;

1235 
	`Ârötf
(
fûp
, "\n\\ === cache_cons ===\n");

1237 
	`tcfg_node_hm_ãrm
(
fûp
, 
tcfg
[0], 0, 
NO_PREFIX
, " <= 1\n");

1238 
	`tcfg_node_hm_ãrm
(
NULL
, 
tcfg
[0], 0, 
NO_PREFIX
, 
NO_SUFFIX
);

1239 
i
 = 1; i < 
num_tcfg_nodes
; i++) {

1240 
	`tcfg_node_ãrm
(
fûp
, 
tcfg
[
i
], 
NO_PREFIX
, 
NO_SUFFIX
);

1241 
hm
 = 0; hm < 
num_hô_miss
[
i
]; hm++) {

1242 
	`tcfg_node_hm_ãrm
(
fûp
, 
tcfg
[
i
], 
hm
, " - ", 
NO_SUFFIX
);

1243 
	`tcfg_node_hm_ãrm
(
NULL
, 
tcfg
[
i
], 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1245 
	`Ârötf
(
fûp
, " = 0\n");

1246 
tŸÆ_c⁄s
++;

1248 
	`Ârötf
(
fûp
, "\n");

1250 
	`tcfg_node_hm_ãrm
(
fûp
, 
tcfg
[0], 0, 
NO_PREFIX
, " <= 1\n");

1251 
tŸÆ_c⁄s
++;

1252 
	`tcfg_node_hm_ãrm
(
NULL
, 
tcfg
[0], 0, 
NO_PREFIX
, 
NO_SUFFIX
);

1253 
i
 = 1; i < 
num_tcfg_nodes
; i++) {

1254 
bbi
 = 
tcfg
[
i
];

1255 i‡(
bbi
->
ö
 =
NULL


1258 
hm
 = 0; hm < 
num_hô_miss
[
i
]; hm++) {

1259 
	`tcfg_node_hm_ãrm
(
fûp
, 
bbi
, 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1260 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
)

1261 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
hm
, " - ", 
NO_SUFFIX
);

1262 
	`Ârötf
(
fûp
, " = 0\n");

1263 
tŸÆ_c⁄s
++;

1264 
	`tcfg_node_hm_ãrm
(
NULL
, 
bbi
, 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1267 
	`Ârötf
(
fûp
, "\n");

1269 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1270 
bbi
 = 
tcfg
[
i
];

1272 
hm
 = 
num_hô_miss
[
i
] - 1;

1273 i‡(
hm
 == 0) {

1274 
	`tcfg_node_hm_ãrm
(
fûp
, 
bbi
, 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1275 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, " - ", " = 0\n");

1276 
tŸÆ_c⁄s
++;

1279 
Õ
 = 
bbi_hm_li°
[
bbi
->
id
][
hm
];

1280 i‡((
Õ
 =
NULL
Ë|| (Õ->
hód
 == NULL)) {

1281 
	`tcfg_node_hm_ãrm
(
fûp
, 
bbi
, 
hm
, 
NO_PREFIX
, " <= 1\n");

1282 
tŸÆ_c⁄s
++;

1284 
	`tcfg_node_hm_ãrm
(
fûp
, 
bbi
, 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1285 
	`tcfg_node_ãrm
(
fûp
, 
Õ
->
hód
, " - ", " <= 0\n");

1286 
tŸÆ_c⁄s
++;

1289 
hm
--; hm > 0; hm--) {

1290 
	`tcfg_node_hm_ãrm
(
fûp
, 
bbi
, 
hm
, 
NO_PREFIX
, 
NO_SUFFIX
);

1291 
Õ
 = 
bbi_hm_li°
[
bbi
->
id
][
hm
 - 1];

1292 
Õ_hód
 = 
Õ
->
hód
;

1293 
e
 = 
Õ_hód
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

1294 i‡(
lo›_m≠
[
e
->
§c
->
id
] =
Õ
->
∑ª¡
)

1295 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

1297 
hm1
 = 
hm
 + 1; hm1 < 
num_hô_miss
[
i
]; hm1++) {

1298 
	`tcfg_node_hm_ãrm
(
fûp
, 
bbi
, 
hm1
, " + ", 
NO_SUFFIX
);

1300 
	`Ârötf
(
fûp
, " <= 0\n");

1301 
tŸÆ_c⁄s
++;

1306 
	`Ârötf
(
fûp
, "\n");

1307 
i
 = 1; i < 
num_tcfg_lo›s
; i++) {

1308 
Õ_hód
 = 
lo›s
[
i
]->
hód
;

1309 
e
 = 
Õ_hód
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

1310 i‡(
lo›_m≠
[
e
->
§c
->
id
] !
lo›s
[
i
])

1312 
hm
 = 1; hm < 
num_hô_miss
[
Õ_hód
->
id
]; hm++) {

1313 
	`e°_unô_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
hm
, 
NO_PREFIX
, " = 0\n");

1314 
tŸÆ_c⁄s
++;

1320 
	}
}

1322 
tcfg_ñök_t
 ***
mp_af„˘ed_£ts
;

1323 ***
mp_times
;

1325 
	$edge_mp£t_c⁄s
(
Õ_id
, 
tcfg_edge_t
 *
edge
) {

1326 
£t
, 
af„˘ed
 = 0;

1327 
tcfg_ñök_t
 **
mp_afs
, *
ñök
;

1329 
mp_afs
 = 
mp_af„˘ed_£ts
[
Õ_id
];

1330 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1331 
ñök
 = 
mp_afs
[
£t
];Élök !
NULL
;Élök =Élök->
√xt
) {

1332 i‡(
ñök
->
edge
 ==Édge)

1335 i‡(
ñök
 !
NULL
) {

1336 i‡(
af„˘ed
 == 0) {

1337 
af„˘ed
 = 1;

1338 
	`mp£t_ãrm
(
fûp
, 
edge
, 
Õ_id
, 
£t
, 
NO_PREFIX
, 
NO_SUFFIX
);

1340 
	`mp£t_ãrm
(
fûp
, 
edge
, 
Õ_id
, 
£t
, " + ", 
NO_SUFFIX
);

1342 
	`mp£t_ãrm
(
NULL
, 
edge
, 
Õ_id
, 
£t
, 
NO_PREFIX
, 
NO_SUFFIX
);

1345 i‡(
af„˘ed
) {

1346 
	`tcfg_edge_ãrm
(
fûp
, 
edge
, 
BP_MPRED
, " - ", " <= 0\n");

1347 
tŸÆ_c⁄s
++;

1349 
	}
}

1351 
	$föd_c⁄d_exô
(
Õ_id
, 
tcfg_edge_t
 *
edge
) {

1352 
tcfg_ñök_t
 *
ñök
;

1354 i‡(
	`c⁄d_bbi
(
edge
->
§c
)) {

1355 i‡(
edge
->
§c
->
out
 ==Édge)

1356 
	`edge_mp£t_c⁄s
(
Õ_id
, 
edge
->
√xt_out
);

1358 
	`edge_mp£t_c⁄s
(
Õ_id
, 
edge
->
§c
->
out
);

1360 
edge
 =Édge->
§c
->
ö
;Édgê!
NULL
;Édgêedge->
√xt_ö
)

1361 
	`föd_c⁄d_exô
(
Õ_id
, 
edge
);

1363 
	}
}

1368 
	$mp£t_c⁄s
() {

1369 
Õ_id
;

1370 
tcfg_ñök_t
 *
ñök
;

1372 
	`Ârötf
(
fûp
, "\n\\ === mpset_cons ===\n");

1373 
Õ_id
 = 1;Üp_id < 
num_tcfg_lo›s
;Üp_id++) {

1374 
ñök
 = 
lo›s
[
Õ_id
]->
exôs
;Élök !
NULL
;Élök =Élök->
√xt
) {

1375 
	`föd_c⁄d_exô
(
Õ_id
, 
ñök
->
edge
);

1378 
	}
}

1380 
	$£t_mpunô_c⁄s
(
bbi_id
, 
hm
, 
Õ_id
) {

1381 
£t
;

1382 
tcfg_ñök_t
 *
ñök
;

1383 
tcfg_edge_t
 *
edge
;

1385 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1386 
ñök
 = 
mp_af„˘ed_£ts
[
Õ_id
][
£t
];

1387 i‡(
ñök
 =
NULL


1390 
edge
 = 
tcfg
[
bbi_id
]->
ö
;

1391 
	`mpunô_ãrm
(
fûp
, 
edge
, 
hm
, 
£t
, 
NO_PREFIX
, 
NO_SUFFIX
);

1392 
	`mpunô_ãrm
(
NULL
, 
edge
, 
hm
, 
£t
, 
NO_PREFIX
, 
NO_SUFFIX
);

1393 
edge
 =Édge->
√xt_ö
;Édgê!
NULL
;Édge =Édge->next_in) {

1394 
	`mpunô_ãrm
(
fûp
, 
edge
, 
hm
, 
£t
, " + ", 
NO_SUFFIX
);

1395 
	`mpunô_ãrm
(
NULL
, 
edge
, 
hm
, 
£t
, 
NO_PREFIX
, 
NO_SUFFIX
);

1397 ; 
ñök
 !
NULL
;Élök =Élök->
√xt
) {

1398 
	`mp£t_ãrm
(
fûp
, 
ñök
->
edge
, 
Õ_id
, 
£t
, " - ", " <= 0\n");

1399 
tŸÆ_c⁄s
++;

1402 
	}
}

1404 
	$e°unô_mpunô_c⁄s
(
bbi_id
, 
hm
, 
Õ_id
) {

1405 
£t
, 
fú°
;

1406 
tcfg_ñök_t
 *
ñök
;

1407 
tcfg_edge_t
 *
edge
;

1409 
edge
 = 
tcfg
[
bbi_id
]->
ö
;Édgê!
NULL
;Édgêedge->
√xt_ö
) {

1410 
fú°
 = 1;

1411 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1412 
ñök
 = 
mp_af„˘ed_£ts
[
Õ_id
][
£t
];

1413 i‡(
ñök
 =
NULL


1416 i‡(
fú°
) {

1417 
	`mpunô_ãrm
(
fûp
, 
edge
, 
hm
, 
£t
, 
NO_PREFIX
, 
NO_SUFFIX
);

1418 
fú°
 = 0;

1420 
	`mpunô_ãrm
(
fûp
, 
edge
, 
hm
, 
£t
, " + ", 
NO_SUFFIX
);

1423 i‡(
fú°
 == 0) {

1424 
	`e°_unô_ãrm
(
fûp
, 
edge
, 
BP_NONE
, 
hm
, " - ", " <= 0\n");

1425 
tŸÆ_c⁄s
++;

1428 
	}
}

1430 
	$mpunô_c⁄s
() {

1431 
£t
, 
i
, 
num_hm
, 
hm
, 
fú°
;

1432 
tcfg_edge_t
 *
edge
;

1433 
lo›_t
 *
hm_Õ
;

1435 
	`Ârötf
(
fûp
, "\n\\ === mpunit_cons ===\n");

1436 
i
 = 1; i < 
num_tcfg_nodes
; i++) {

1437 i‡(
lo›_m≠
[
i
] == 0)

1439 
num_hm
 = 
num_hô_miss
[
i
];

1440 
hm
 = 0; hm < 
num_hm
; hm++) {

1441 
hm_Õ
 = 
bbi_hm_li°
[
i
][
hm
];

1442 i‡((
hm_Õ
 =
NULL
Ë|| (hm_Õ->
id
 == 0))

1444 
	`£t_mpunô_c⁄s
(
i
, 
hm
, 
hm_Õ
->
id
);

1445 
	`e°unô_mpunô_c⁄s
(
i
, 
hm
, 
hm_Õ
->
id
);

1448 
	}
}

1451 
	$mp_ˇche_c⁄s
() {

1452 
	`mp£t_c⁄s
();

1453 
	`mpunô_c⁄s
();

1454 
	}
}

1456 
	$e°unô_mpco°_func
(
bbi_id
, 
hm
, 
Õ_id
) {

1457 
£t
, 
≥«…y
;

1458 
¥efix_°r
[16];

1459 
tcfg_edge_t
 *
edge
;

1460 
tcfg_ñök_t
 *
ñök
;

1462 
edge
 = 
tcfg
[
bbi_id
]->
ö
;Édgê!
NULL
;Édgêedge->
√xt_ö
) {

1463 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1464 
ñök
 = 
mp_af„˘ed_£ts
[
Õ_id
][
£t
];

1465 i‡(
ñök
 =
NULL


1468 
≥«…y
 = 
mp_times
[
edge
->
id
][
hm
][
£t
] - 
˝ªd_times
[edge->id][hm];

1469 
	`•rötf
(
¥efix_°r
, " + %d ", 
≥«…y
);

1470 
	`mpunô_ãrm
(
fûp
, 
edge
, 
hm
, 
£t
, 
¥efix_°r
, 
NO_SUFFIX
);

1473 
	}
}

1475 
	$mpco°_func
() {

1476 
£t
, 
i
, 
num_hm
, 
hm
, 
≥«…y
;

1477 
tcfg_edge_t
 *
edge
;

1478 
lo›_t
 *
hm_Õ
;

1480 
i
 = 1; i < 
num_tcfg_nodes
; i++) {

1481 i‡(
lo›_m≠
[
i
] == 0)

1483 
num_hm
 = 
num_hô_miss
[
i
];

1484 
hm
 = 0; hm < 
num_hm
; hm++) {

1485 
hm_Õ
 = 
bbi_hm_li°
[
i
][
hm
];

1486 i‡((
hm_Õ
 =
NULL
Ë|| (hm_Õ->
id
 == 0))

1488 
	`e°unô_mpco°_func
(
i
, 
hm
, 
hm_Õ
->
id
);

1491 
	}
}

1493 
	$mpunô_ˇche_mis£s
(
bbi_id
, 
hm
, 
Õ_id
) {

1494 
£t
, 
i
, 
num_ègs
;

1495 
tcfg_ñök_t
 *
ñök
;

1496 
tcfg_edge_t
 *
edge
;

1497 
¥efix_°r
[8];

1499 
edge
 = 
tcfg
[
bbi_id
]->
ö
;Édgê!
NULL
;Édgêedge->
√xt_ö
) {

1500 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1501 
ñök
 = 
mp_af„˘ed_£ts
[
Õ_id
][
£t
];

1502 i‡(
ñök
 =
NULL


1505 
num_ègs
 = 0;

1506 
i
 = 0; i < 
num_mblks
[
bbi_id
]; i++) {

1507 i‡(
gí
[
bbi_id
][
i
].
£t
 == set)

1508 
num_ègs
++;

1510 i‡(
num_ègs
 == 1)

1511 
	`•rötf
(
¥efix_°r
, " - ");

1513 
	`•rötf
(
¥efix_°r
, " - %d ", 
num_ègs
);

1514 
	`mpunô_ãrm
(
fûp
, 
edge
, 
hm
, 
£t
, 
¥efix_°r
, 
NO_SUFFIX
);

1517 
	}
}

1519 
	$mpˇche_mis£s
() {

1520 
£t
, 
i
, 
num_hm
, 
hm
;

1521 
tcfg_edge_t
 *
edge
;

1522 
lo›_t
 *
hm_Õ
;

1524 
i
 = 1; i < 
num_tcfg_nodes
; i++) {

1525 i‡(
lo›_m≠
[
i
] == 0)

1527 
num_hm
 = 
num_hô_miss
[
i
];

1528 
hm
 = 0; hm < 
num_hm
; hm++) {

1529 
hm_Õ
 = 
bbi_hm_li°
[
i
][
hm
];

1530 i‡((
hm_Õ
 =
NULL
Ë|| (hm_Õ->
id
 == 0))

1532 
	`mpunô_ˇche_mis£s
(
i
, 
hm
, 
hm_Õ
->
id
);

1535 
	}
}

1539 
	$co°_func
()

1541 
i
;

1543 
	`Ârötf
(
fûp
, "%d b%d", 
tcfg
[0]->
bb
->
num_ö°
, 0);

1544 
i
 = 1; i < 
num_tcfg_nodes
; i++)

1545 
	`Ârötf
(
fûp
, " + %d b%d", 
tcfg
[
i
]->
bb
->
num_ö°
, i);

1546 
	}
}

1550 
	$co°_func
() {

1551 
edge_id
 = 0;

1553 
	`v°¨t_co°_ãrm
();

1554 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1555 i‡((
b¥ed_scheme
 =
NO_BPRED
Ë|| !
	`c⁄d_bbi
(
tcfg_edges
[
edge_id
]->
§c
))

1556 
	`co°_ãrm
(
edge_id
, 
BP_NONE
);

1558 
	`co°_ãrm
(
edge_id
, 
BP_CPRED
);

1559 
	`co°_ãrm
(
edge_id
, 
BP_MPRED
);

1562 i‡((
b¥ed_scheme
 !
NO_BPRED
Ë&& 
íabÀ_iˇche
)

1563 
	`mpco°_func
();

1566 i‡(
íabÀ_s˝_dˇche
) {

1567 
	`s˝_dˇche_co°
();

1569 
	`Ârötf
(
fûp
, "\n");

1570 
	}
}

1572 
	$wrôe_v¨s
() {

1573 
gid
;

1574 
i
, 
j
;

1575 
tcfg_node_t
 *
bbi
;

1576 
cfg_node_t
 *
bb
;

1577 
d©_ö°_t
 *
d_ö°
;

1579 
	`Ârötf
(
fûp
, "\nGenerals\n\n");

1581 
gid
 = 0; gid < 
cuº_gΩ
; gid++) {

1582 
i
 = 0; i < 
VAR_GRP_SIZE
; i++)

1583 
	`Ârötf
(
fûp
, "%s\n", 
v¨_gΩs
[
gid
][
i
]);

1585 
i
 = 0; i < 
cuº_idx
; i++)

1586 
	`Ârötf
(
fûp
, "%s\n", 
v¨_gΩs
[
cuº_gΩ
][
i
]);

1588 
tŸÆ_v¨s
 = 
cuº_gΩ
 * 
VAR_GRP_SIZE
 + 
cuº_idx
;

1590 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1591 
bbi
 = 
tcfg
[
i
];

1592 
bb
 = 
bbi
->bb;

1593 
j
 = 0; j < 
bb
->
num_d_ö°
; j++) {

1594 
d_ö°
 = ((
d©_ö°_t
*Ë
bb
->
d_ö°li°
Ë+ 
j
;

1595 
	`tcfg_dö°_°r
(
j
, 
bbi
);

1596 
	`Ârötf
(
fûp
, "%s\n", 
°r
);

1597 
tŸÆ_v¨s
++;

1600 * 
numbîofC⁄ãxt
;

1601 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1602 
tcfg_edge_t
* 
e
 = 
tcfg_edges
[
i
];

1603 
tcfg_node_t
* 
§c
 = 
e
->src;

1604 
tcfg_node_t
* 
d°
 = 
e
->dst;

1605 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
§c
->
id
];

1606 
Êag
 = (
num_c⁄ãxt
 > 1);

1607 
vC⁄ãxt
;

1609 
vC⁄ãxt
 = 0; vC⁄ãxà< 
num_c⁄ãxt
; vContext++) {

1610 i‡(
Êag
) {

1611 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
vC⁄ãxt
, 
num_c⁄ãxt
, 
BP_NONE
,

1612 
NO_PREFIX
, 
NO_SUFFIX
);

1614 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1616 
	`Ârötf
(
fûp
, "\n");

1619 
	`Ârötf
(
fûp
, "\nEnd\n");

1620 
	`Ârötf
(
fûp
, "\\ÅŸÆ_c⁄s: %d \âŸÆ_v¨s: %d\n", 
tŸÆ_c⁄s
,

1621 
tŸÆ_v¨s
);

1622 
	}
}

1625 
	~"ö„asibÀ.h
"

1627 
íabÀ_ö„as
;

1636 
	$ö„as_nuŒifõrs
(
assign_t
 **
nuŒifõr_li°
, 
num_nuŒifõrs
, 
pid
,

1637 
˘xt
) {

1638 
i
, 
cou¡
;

1640 
i
 = 0; i < 
num_nuŒifõrs
; i++) {

1641 
tcfg_∆ök_t
 *
ndlök
 = 
bbi_m≠
[
pid
][
nuŒifõr_li°
[
i
]->
bb
->
id
];

1644 
cou¡
 = 0;

1645 
cou¡
 < 
˘xt
 && 
ndlök
 !
NULL
) {

1646 
ndlök
 =Çdlök->
√xt
;

1647 
cou¡
++;

1649 i‡(
ndlök
 =
NULL


1651 
	`¥ötf
(

1653 
˘xt
, 
cou¡
 - 1, 
pid
, 
nuŒifõr_li°
[
i
]->
bb
->
id
), 
	`exô
(1);

1655 
	`Ârötf
(
fûp
, " - ");

1656 
	`tcfg_node_ãrm
(
fûp
, 
ndlök
->
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

1659 
	}
}

1667 
	$ö„as_blockcou¡
(
tcfg_node_t
 *
ib
, 
˘xt
) {

1668 
cou¡
;

1669 
tcfg_∆ök_t
 *
ndlök
;

1671 
Õid
 = 
ib
->
lo›_id
;

1672 
öf_lo›_t
 *
Õ
;

1674 i‡(
Õid
 == -1) {

1676 i‡(
ib
->
exec_cou¡
 > -1)

1677 
	`Ârötf
(
fûp
, " <%d\n", 
ib
->
exec_cou¡
);

1679 
	`Ârötf
(
fûp
, " <= 1\n");

1684 
Õ
 = &(
öf_lo›s
[
Õid
]);

1687 
ndlök
 = 
bbi_m≠
[
Õ
->
pid
][Õ->
íåy
];

1690 
cou¡
 = 0;

1691 
cou¡
 < 
˘xt
 && 
ndlök
 !
NULL
) {

1692 
ndlök
 =Çdlök->
√xt
;

1693 
cou¡
++;

1695 i‡(
ndlök
 =
NULL


1697 
	`¥ötf
(

1699 
˘xt
, 
ib
->
bb
->
¥oc
->
id
, ib->bb->id, 
cou¡
 - 1, 
Õ
->
pid
,

1700 
Õ
->
íåy
), 
	`exô
(1);

1702 
	`Ârötf
(
fûp
, " - %d ", 
Õ
->
bound
);

1703 
	`tcfg_node_ãrm
(
fûp
, 
ndlök
->
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

1704 
	`Ârötf
(
fûp
, " <= 0\n");

1707 
	}
}

1712 
	$ö„as_c⁄s
() {

1713 
i
, 
j
, 
k
;

1715 
öf_¥oc_t
 *
ù
;

1716 
pid
;

1718 
	`Ârötf
(
fûp
, "\n\\ === infeasibleÖath constraints ===\n");

1720 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

1722 i‡(!
ö˛ude_¥oc
[
i
])

1725 
ù
 = &(
öf_¥ocs
[
i
]);

1726 
pid
 = 
ù
->
¥oc
->
id
;

1728 
j
 = 0; j < 
ù
->
num_bb
; j++) {

1729 
öf_node_t
 *
ib
 = &(
ù
->
öf_cfg
[
j
]);

1730 
bønch_t
 *
br
 = 
ib
->
bønch
;

1732 i‡(
br
 =
NULL


1737 
k
 = 0; k < 
br
->
num_BA_c⁄Êi˘s
; k++) {

1738 
BA_c⁄Êi˘_t
 *
cf
 = &(
br
->
BA_c⁄Êi˘_li°
[
k
]);

1740 
cf_§c
 = 
cf
->
c⁄Êi˘_§c
->
bb
->
id
;

1741 
br_d°
 =

1742 (
cf
->
c⁄Êi˘_dú
 =
JUMP
) ?

1743 
br
->
bb
->
out_t
->
d°
->
id
 : br->bb->
out_n
->dst->id;

1746 
tcfg_∆ök_t
 *
cÊök
 = 
bbi_m≠
[
pid
][
cf_§c
];

1747 
tcfg_∆ök_t
 *
bæök
 = 
bbi_m≠
[
pid
][
br
->
bb
->
id
];

1748 
˘xt
 = 0;

1750 
cÊök
 !
NULL
 && 
bæök
 != NULL) {

1753 
tcfg_edge_t
 *
br_out
 = 
bæök
->
bbi
->
out
;

1754 
br_out
 !
NULL
 && 
	`bbi_bid
(br_out->
d°
Ë!
br_d°
)

1755 
br_out
 = br_out->
√xt_out
;

1756 i‡(
br_out
 =
NULL


1758 
	`¥ötf
("EdgênŸ found.\n"), 
	`exô
(1);

1761 
	`tcfg_node_ãrm
(
fûp
, 
cÊök
->
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

1762 
	`Ârötf
(
fûp
, " + ");

1763 
	`tcfg_edge_ãrm
(
fûp
, 
br_out
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1764 
	`ö„as_nuŒifõrs
(
cf
->
nuŒifõr_li°
, cf->
num_nuŒifõrs
,

1765 
pid
, 
˘xt
);

1767 
	`ö„as_blockcou¡
(
cÊök
->
bbi
, 
˘xt
);

1770 
cÊök
 = cÊök->
√xt
;

1771 
bæök
 = bæök->
√xt
;

1772 
˘xt
++;

1777 
k
 = 0; k < 
br
->
num_BB_c⁄Êi˘s
; k++) {

1778 
BB_c⁄Êi˘_t
 *
cf
 = &(
br
->
BB_c⁄Êi˘_li°
[
k
]);

1779 
cfg_node_t
 *
cfbb
 = 
cf
->
c⁄Êi˘_§c
->
bb
;

1781 
cf_§c
 = 
cfbb
->
id
;

1782 
cf_d°
 =

1783 (
cf
->
c⁄Êi˘_dú
 =
JJ
 || cf->c⁄Êi˘_dú =
JF
) ?

1784 
cfbb
->
out_t
->
d°
->
id
 : cfbb->
out_n
->dst->id;

1785 
br_d°
 =

1786 (
cf
->
c⁄Êi˘_dú
 =
JJ
 || cf->c⁄Êi˘_dú =
FJ
) ?

1787 
br
->
bb
->
out_t
->
d°
->
id
 : br->bb->
out_n
->dst->id;

1790 
tcfg_∆ök_t
 *
cÊök
 = 
bbi_m≠
[
pid
][
cf_§c
];

1791 
tcfg_∆ök_t
 *
bæök
 = 
bbi_m≠
[
pid
][
br
->
bb
->
id
];

1792 
˘xt
 = 0;

1794 
cÊök
 !
NULL
 && 
bæök
 != NULL) {

1797 
tcfg_edge_t
 *
cf_out
 = 
cÊök
->
bbi
->
out
;

1798 
cf_out
 !
NULL
 && 
	`bbi_bid
(cf_out->
d°
Ë!
cf_d°
)

1799 
cf_out
 = cf_out->
√xt_out
;

1800 i‡(
cf_out
 =
NULL


1802 
	`¥ötf
("EdgênŸ found.\n"), 
	`exô
(1);

1805 
tcfg_edge_t
 *
br_out
 = 
bæök
->
bbi
->
out
;

1806 
br_out
 !
NULL
 && 
	`bbi_bid
(br_out->
d°
Ë!
br_d°
)

1807 
br_out
 = br_out->
√xt_out
;

1808 i‡(
br_out
 =
NULL


1810 
	`¥ötf
("EdgênŸ found.\n"), 
	`exô
(1);

1813 
	`tcfg_edge_ãrm
(
fûp
, 
cf_out
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1814 
	`Ârötf
(
fûp
, " + ");

1815 
	`tcfg_edge_ãrm
(
fûp
, 
br_out
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1816 
	`ö„as_nuŒifõrs
(
cf
->
nuŒifõr_li°
, cf->
num_nuŒifõrs
,

1817 
pid
, 
˘xt
);

1819 
	`ö„as_blockcou¡
(
cÊök
->
bbi
, 
˘xt
);

1822 
cÊök
 = cÊök->
√xt
;

1823 
bæök
 = bæök->
√xt
;

1824 
˘xt
++;

1829 
	`Ârötf
(
fûp
, "\n");

1832 
	}
}

1833 
	$¥ötC⁄ãxt
(
c⁄ãxt
, 
Àngth
, * 
°
) {

1834 
i
;

1835 
i
 = 
Àngth
 - 1; i >= 0; i--) {

1836 i‡((
c⁄ãxt
 & 1) == 0)

1837 
°
[
i
] = '0';

1839 
°
[
i
] = '1';

1840 
c⁄ãxt
 = context >> 1;

1842 
°
[
Àngth
] = '\0';

1843 
	}
}

1844 
	$gëLígth
(
x
) {

1845 
™s
 = 0;

1846 
x
 > 0) {

1847 
™s
++;

1848 
x
 = x >> 1;

1850  
™s
;

1851 
	}
}

1852 
	$tcfg_edge_˘x_ãrm
(
FILE
 *
Â
, 
tcfg_edge_t
 *
e
, 
c⁄ãxt
,

1853 
uµîBound
, 
b¥ed
, *
¥efix
, *
suffix
) {

1854 
l
 = 
	`gëLígth
(
uµîBound
 - 1);

1855 
c⁄ãxtSå
[
l
 + 10];
¥ötC⁄ãxt


1856 (
c⁄ãxt
, 
l
, 
c⁄ãxtSå
);

1857 
	`tcfg_edge_°r
(
e
, 
b¥ed
);

1858 
	`•rötf
(
ãrm
, "%sd%s.v%s%s", 
¥efix
, 
°r
, 
c⁄ãxtSå
, 
suffix
);

1859 
	`√w_ãrm
(
Â
);

1860 
	}
}

1861 
	$tcfg_node_˘x_ãrm
(
FILE
* 
Â
, 
tcfg_node_t
* 
bbi
, 
c⁄ãxt
,

1862 
uµîBound
, 
b¥ed
, * 
¥efix
, * 
suffix
) {

1863 i‡(
c⁄ãxt
 >
uµîBound
) {

1864 
	`¥ötf
("BUGGGGGGG\n");

1865 
	`exô
(0);

1867 
l
 = 
	`gëLígth
(
uµîBound
 - 1);

1868 
c⁄ãxtSå
[
l
];

1869 
	`¥ötC⁄ãxt
(
c⁄ãxt
, 
l
, 
c⁄ãxtSå
);

1870 
	`tcfg_node_°r
(
bbi
);

1871 
	`•rötf
(
ãrm
, "%sb%s.v%s%s", 
¥efix
, 
°r
, 
c⁄ãxtSå
, 
suffix
);

1872 
	`√w_ãrm
(
Â
);

1873 
	}
}

1875 
	$numbîofLﬂdIn°
(
tcfg_node_t
* 
bbi
) {

1876 
i
;

1877 
™s
 = 0;

1878 
i
 = 0; i < 
bbi
->
bb
->
num_d_ö°
; i++) {

1879 
d©_ö°_t
* 
dö°
 = (d©_ö°_t*Ë
bbi
->
bb
->
d_ö°li°
;

1880 
dö°
 = dö° + 
i
;

1881 
ö¢_t
* 
ö¢
 = (ö¢_t*Ë
dö°
->insn;

1882 i‡(
	`isLﬂdIn°
(
ö¢
->
›
)) {

1883 
™s
++;

1886  
™s
;

1887 
	}
}

1888 
	$öãrvÆLígth
(
lw
, 
up
, 
f
) {

1890 i‡(
f
 == 0) {

1891 i‡(
lw
 > 0)

1896 i‡(
lw
 < 1)

1897 
lw
 = 1;

1898 i‡(
up
 >
lw
)

1899  
up
 - 
lw
 + 1;

1903 
	}
}

1905 
	$cou¡Miss
(
w‹kli°_p
 
tsSë
, 
c⁄ãxt
, 
lo›_t
* 
Õ
) {

1906 
™s
 = 1;

1907 
w‹kli°_p
 
tsNode
 = 
tsSë
;

1908 
Õ
 !
NULL
) {

1909 
tsNode
 !
NULL
) {

1910 
ts_p
 
ts
 = (ts_pË
tsNode
->
d©a
;

1911 i‡(
	`cmpLpOrdî
(
Õ
->
id
, 
ts
->
lo›_id
) > 0)

1912 
tsNode
 =ÅsNode->
√xt
;

1916 i‡(
tsNode
 !
NULL
) {

1917 
ts_p
 
ts
 = (ts_pË
tsNode
->
d©a
;

1918 i‡(
	`cmpLpOrdî
(
Õ
->
id
, 
ts
->
lo›_id
) == 0) {

1919 
™s
 *
	`öãrvÆLígth
(
ts
->
lw
,Ås->
up
, 
c⁄ãxt
 & 1);

1921 
™s
 *
	`öãrvÆLígth
(0, 
Õ
->
bound
 - 1, 
c⁄ãxt
 & 1);

1924 
c⁄ãxt
 = context >> 1;

1925 
Õ
 =Üp->
∑ª¡
;

1927  
™s
;

1928 
	}
}

1930 
	$s˝_c⁄°_func
() {

1931 *** 
exãnd_˝ªd_times
;

1932 * 
numbîofC⁄ãxt
;

1933 
	`Ârötf
(
fûp
, "%d d%s_0", 
°¨t_time
, 
°¨t_°r
);

1934 
i
;

1935 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1936 
tcfg_edge_t
* 
e
 = 
tcfg_edges
[
i
];

1937 
tcfg_node_t
* 
§c
 = 
e
->src;

1938 
tcfg_node_t
* 
d°
 = 
e
->dst;

1939 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
§c
->
id
];

1940 
Êag
 = (
num_c⁄ãxt
 > 1);

1941 
vC⁄ãxt
;

1943 
vC⁄ãxt
 = 0; vC⁄ãxà< 
num_c⁄ãxt
; vContext++) {

1944 i‡(
Êag
) {

1945 
	`Ârötf
(
fûp
, " + %d ", 
exãnd_˝ªd_times
[
i
][
vC⁄ãxt
][0]);

1946 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
vC⁄ãxt
, 
num_c⁄ãxt
, 
BP_NONE
,

1947 
NO_PREFIX
, 
NO_SUFFIX
);

1949 
	`Ârötf
(
fûp
, " + %d ", 
exãnd_˝ªd_times
[
i
][
vC⁄ãxt
][0]);

1950 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1956 
	`Ârötf
(
fûp
, "\n");

1957 
	}
}

1958 
	$s˝_c⁄ãxt_c⁄s
() {

1959 
	`Ârötf
(
fûp
, "\n\\ === context constraints ===\n");

1960 * 
numbîofC⁄ãxt
;

1961 
i
;

1963 
	`Ârötf
(
fûp
, "\n\\(a)\n");

1965 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1966 
tcfg_edge_t
* 
e
 = 
tcfg_edges
[
i
];

1967 
tcfg_node_t
* 
§c
 = 
e
->src;

1968 
tcfg_node_t
* 
d°
 = 
e
->dst;

1969 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
§c
->
id
];

1970 i‡(
num_c⁄ãxt
 > 1) {

1971 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

1972 
cId
;

1973 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

1974 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
, " - ",

1975 
NO_SUFFIX
);

1977 
	`Ârötf
(
fûp
, " = 0\n");

1978 
tŸÆ_c⁄s
++;

1982 
	`Ârötf
(
fûp
, "\n\\(b)\n");

1984 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1985 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1986 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
bbi
->
id
];

1987 i‡(
num_c⁄ãxt
 > 1) {

1988 
cId
;

1989 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

1990 
	`tcfg_node_˘x_ãrm
(
fûp
, 
bbi
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
,

1991 
NO_PREFIX
, 
NO_SUFFIX
);

1992 
tcfg_edge_t
* 
e
;

1993 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

1994 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
,

1995 " - ", 
NO_SUFFIX
);

1997 
	`Ârötf
(
fûp
, " = 0\n");

1998 
tŸÆ_c⁄s
++;

2004 
	`Ârötf
(
fûp
, "\n\\(c)\n");

2006 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2007 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

2008 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
bbi
->
id
];

2009 i‡(
num_c⁄ãxt
 > 1) {

2010 
	`tcfg_node_ãrm
(
fûp
, 
bbi
, 
NO_PREFIX
, 
NO_SUFFIX
);

2011 
cId
;

2012 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

2013 
	`tcfg_node_˘x_ãrm
(
fûp
, 
bbi
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
, " - ",

2014 
NO_SUFFIX
);

2016 
	`Ârötf
(
fûp
, " = 0\n");

2017 
tŸÆ_c⁄s
++;

2020 
	`Ârötf
(
fûp
, "\n\\(d)\n");

2021 *
numbîOfLo›
;

2022 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

2023 
lo›_t
* 
Õ
 = 
lo›s
[
i
];

2024 
tcfg_node_t
* 
ÕHód
 = 
Õ
->
hód
;

2025 
num_c⁄ãxt
 = (
numbîOfLo›
[
ÕHód
->
id
] - 2);

2026 i‡(
num_c⁄ãxt
 >= 0) {

2027 
num_c⁄ãxt
 = 1 <<Çum_context;

2028 
cId
;

2029 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

2030 
	`tcfg_node_˘x_ãrm
(
fûp
, 
ÕHód
, 
cId
 << 1, 
num_c⁄ãxt
 << 1,

2031 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

2032 
tcfg_edge_t
* 
e
;

2033 
e
 = 
ÕHód
->
ö
;É !
NULL
;É =É->
√xt_ö
)

2034 i‡(
	`s˝_cmpLpOrdî
(
lo›_m≠
[
e
->
§c
->
id
]->id, 
Õ
->id) > 0) {

2035 i‡(
num_c⁄ãxt
 > 1)

2036 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
, 
num_c⁄ãxt
,

2037 
BP_NONE
, " - ", 
NO_SUFFIX
);

2039 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, " - ", 
NO_SUFFIX
);

2041 
	`Ârötf
(
fûp
, " = 0\n");

2042 
tŸÆ_c⁄s
++;

2047 
	`Ârötf
(
fûp
, "\n\\(e)\n");

2049 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

2050 
lo›_t
* 
Õ
 = 
lo›s
[
i
];

2051 
tcfg_node_t
* 
ÕHód
 = 
Õ
->
hód
;

2052 
num_c⁄ãxt
 = (
numbîOfLo›
[
ÕHód
->
id
] - 2);

2053 i‡(
num_c⁄ãxt
 >= 0) {

2054 
num_c⁄ãxt
 = 1 <<Çum_context;

2055 
cId
;

2056 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

2057 
	`tcfg_node_˘x_ãrm
(
fûp
, 
ÕHód
, (
cId
 << 1) | 1,

2058 
num_c⁄ãxt
 << 1, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

2059 
tcfg_edge_t
* 
e
;

2060 
e
 = 
ÕHód
->
ö
;É !
NULL
;É =É->
√xt_ö
)

2061 i‡(
	`s˝_cmpLpOrdî
(
lo›_m≠
[
e
->
§c
->
id
]->id, 
Õ
->id) <= 0) {

2062 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
 << 1, 
num_c⁄ãxt
 << 1,

2063 
BP_NONE
, " - ", 
NO_SUFFIX
);

2064 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, (
cId
 << 1) | 1,

2065 
num_c⁄ãxt
 << 1, 
BP_NONE
, " - ", 
NO_SUFFIX
);

2067 
	`Ârötf
(
fûp
, " = 0\n");

2068 
tŸÆ_c⁄s
++;

2070 
	`tcfg_node_˘x_ãrm
(
fûp
, 
ÕHód
, (
cId
 << 1) | 1,

2071 
num_c⁄ãxt
 << 1, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

2072 
e
 = 
ÕHód
->
ö
;É !
NULL
;É =É->
√xt_ö
)

2073 i‡(
	`s˝_cmpLpOrdî
(
lo›_m≠
[
e
->
§c
->
id
]->id, 
Õ
->id) <= 0) {

2074 
	`Ârötf
(
fûp
, " - %d ", 
Õ
->
bound
 - 1);

2075 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
 << 1, 
num_c⁄ãxt
 << 1,

2076 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

2078 
	`Ârötf
(
fûp
, " <= 0\n");

2079 
tŸÆ_c⁄s
++;

2084 
	`Ârötf
(
fûp
, "\n\\(f)\n");

2086 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

2087 
lo›_t
* 
Õ
 = 
lo›s
[
i
];

2088 
tcfg_ñök_t
* 
lök
;

2089 
num_c⁄ãxt
 = 
numbîOfLo›
[
Õ
->
hód
->
id
] - 2;

2090 i‡(
num_c⁄ãxt
 >= 0) {

2091 
num_c⁄ãxt
 = 1 <<Çum_context;

2092 
cId
;

2093 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

2094 
lök
 = 
Õ
->
exôs
;Üök !
NULL
;Üök =Üök->
√xt
) {

2095 
tcfg_edge_t
* 
e
 = 
lök
->
edge
;

2096 
tcfg_node_t
* 
§c
 = 
e
->src;

2097 
tcfg_node_t
* 
d°
 = 
e
->dst;

2098 i‡(
num_c⁄ãxt
 > 1)

2099 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
,

2100 
NO_PREFIX
, 
NO_SUFFIX
);

2102 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

2103 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
 << 1, 
num_c⁄ãxt
 << 1,

2104 
BP_NONE
, " - ", 
NO_SUFFIX
);

2105 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, (
cId
 << 1) | 1,

2106 
num_c⁄ãxt
 << 1, 
BP_NONE
, " - ", 
NO_SUFFIX
);

2107 
	`Ârötf
(
fûp
, " = 0\n");

2108 
tŸÆ_c⁄s
++;

2114 
	`Ârötf
(
fûp
, "\n\\(g)\n");

2116 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2117 i‡(
numbîofC⁄ãxt
[
i
] <= 1)

2119 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

2120 
tcfg_edge_t
* 
e
;

2121 
Êag
 = 1;

2122 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

2123 i‡(
lo›_m≠
[
e
->
§c
->
id
]->id =lo›_m≠[
bbi
->id]->id) {

2127 
lo›_t
* 
Õ
 = 
lo›_m≠
[
e
->
§c
->
id
];

2128 i‡(
Õ
->
∑ª¡
 !
NULL
 &&Üp->∑ª¡->
id
 =
lo›_m≠
[
bbi
->id]->id) {

2131 
Êag
 = 0;

2134 i‡(
Êag
) {

2135 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
bbi
->
id
];

2136 
cId
;

2137 
cId
 = 0; cId < 
num_c⁄ãxt
; cId++) {

2138 
	`tcfg_node_˘x_ãrm
(
fûp
, 
bbi
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
,

2139 
NO_PREFIX
, 
NO_SUFFIX
);

2140 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

2141 
	`tcfg_edge_˘x_ãrm
(
fûp
, 
e
, 
cId
, 
num_c⁄ãxt
, 
BP_NONE
,

2142 " - ", 
NO_SUFFIX
);

2144 
	`Ârötf
(
fûp
, " = 0\n");

2145 
tŸÆ_c⁄s
++;

2277 
	`Ârötf
(
fûp
, "\n\\ === header constraints ===\n");

2278 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

2279 
lo›_t
* 
Õ
 = 
lo›s
[
i
];

2280 
tcfg_node_t
* 
hód
 = 
Õ
->head;

2281 i‡(
Õ
->
id
 == 0) {

2282 
	`tcfg_node_ãrm
(
fûp
, 
hód
, 
NO_PREFIX
, " <= 1");

2283 
	`Ârötf
(
fûp
, "\n");

2285 
lo›_t
* 
∑ª¡
 = 
Õ
->parent;

2286 
tcfg_node_t
* 
pHód
 = 
∑ª¡
->
hód
;

2287 
	`tcfg_node_ãrm
(
fûp
, 
hód
, 
NO_PREFIX
, 
NO_SUFFIX
);

2288 
	`Ârötf
(
fûp
, " - %d ", 
Õ
->
bound
);

2289 
	`tcfg_node_ãrm
(
fûp
, 
pHód
, 
NO_PREFIX
, 
NO_SUFFIX
);

2290 
	`Ârötf
(
fûp
, " <= 0\n");

2291 
tŸÆ_c⁄s
++;

2293 
	`tcfg_node_ãrm
(
fûp
, 
hód
, 
NO_PREFIX
, 
NO_SUFFIX
);

2294 
tcfg_edge_t
* 
e
;

2295 
e
 = 
hód
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

2296 
tcfg_node_t
* 
§c
 = 
e
->src;

2297 i‡(
	`s˝_cmpLpOrdî
(
lo›_m≠
[
§c
->
id
]->id, 
Õ
->id) > 0) {

2298 
	`Ârötf
(
fûp
, " - %d ", 
Õ
->
bound
);

2299 
	`tcfg_edge_ãrm
(
fûp
, 
e
, 
BP_NONE
, 
NO_PREFIX
, 
NO_SUFFIX
);

2302 
	`Ârötf
(
fûp
, " <= 0\n");

2303 
tŸÆ_c⁄s
++;

2307 
	}
}

2308 
	$c⁄°øöts
() {

2309 
	`öô_v¨_gΩs
();

2311 
	`Ârötf
(
fûp
, "Maximize\n\n");

2313 
	`s˝_c⁄°_func
();

2314 
	`Ârötf
(
fûp
, "\n\nSubjectÅo\n\n");

2316 i‡(
b¥ed_scheme
 !
NO_BPRED
)

2317 
	`b¥ed_mis£s
();

2320 
	`Ârötf
(
fûp
, "\n");

2323 
	`tcfg_c⁄s
();

2325 i‡(
b¥ed_scheme
 !
NO_BPRED
) {

2326 
	`bfg_c⁄s
();

2327 
	`btg_c⁄s
();

2328 
	`tcfg_bfg_c⁄s
();

2341 
	`s˝_c⁄ãxt_c⁄s
();

2354 
	`wrôe_v¨s
();

2355 
	}
}

2357 #unde‡
PLUS


2358 #unde‡
MINUS


	@infdump.c

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~"iß.h
"

26 
	~"cfg.h
"

27 
	~"ö„asibÀ.h
"

30 
¥og_t
 
¥og
;

35 
	$¥ötIn°r
–
ö¢_t
 *
is
 ) {

36 
	`¥ötf
–"0x%†%†%†%†%s", 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
 );

37 
	`fÊush
–
°dout
 );

38 
	}
}

39 
	$ÂrötIn°r
(
FILE
 *
Â
, 
ö¢_t
 *
is
 ) {

40 
	`Ârötf
(
Â
, "0x%†%†%†%†%s", 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
 );

41 
	`fÊush
–
Â
 );

42 
	}
}

45 
	$¥ötIn°ru˘i⁄s
() {

47 
i
, 
j
, 
k
;

48 
öf_¥oc_t
 *
ù
;

49 
öf_node_t
 *
ib
;

50 
ö¢_t
 *
is
;

52  
i
 = 0; i < 
num_ö¢_°
; i++ ) {

53 
is
 = &(
ö¢li°_°
[
i
]);

54 
	`¥ötf
–"[°,--,%2d] 0x%†%†%†%†%s\n", 
i
, 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
 );

57  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ ) {

58 
ù
 = &(
öf_¥ocs
[
i
]);

59  
j
 = 0; j < 
ù
->
num_bb
; j++ ) {

60 
ib
 = &(
ù
->
öf_cfg
[
j
]);

61  
k
 = 0; k < 
ib
->
num_ö¢
; k++ ) {

62 
is
 = &(
ib
->
ö¢li°
[
k
]);

63 
	`¥ötf
–"[%2d,%2d,%2d] 0x%†%†%†%†%s\n", 
i
, 
j
, 
k
, 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
 );

68 
	}
}

71 *
	$gëDúName
–
dú
 ) {

73  
dú
 ) {

74 
GT
:  "GT";

75 
GE
:  "GE";

76 
LT
:  "LT";

77 
LE
:  "LE";

78 
EQ
:  "EQ";

79 
NE
:  "NE";

80 
NA
:  "NA";

84 
	}
}

87 
	$¥ötBAC⁄Êi˘
–
BA_c⁄Êi˘_t
 *
cf
 ) {

89 
i
;

91 if–
cf
->
c⁄Êi˘_dú
 =
JUMP
 )

92 
	`¥ötf
–"-- <%d::%d> JUMP", 
cf
->
c⁄Êi˘_§c
->
bb
->
id
, cf->c⁄Êi˘_§c->
löío
 );

93 if–
cf
->
c⁄Êi˘_dú
 =
FALL
 )

94 
	`¥ötf
–"-- <%d::%d> FALL", 
cf
->
c⁄Êi˘_§c
->
bb
->
id
, cf->c⁄Êi˘_§c->
löío
 );

96  
i
 = 0; i < 
cf
->
num_nuŒifõrs
; i++ )

97 
	`¥ötf
–" _<%d::%d> ", 
cf
->
nuŒifõr_li°
[
i
]->
bb
->
id
, cf->nuŒifõr_li°[i]->
löío
 );

98 
	`¥ötf
( "\n" );

101 
	}
}

103 
	$¥ötBBC⁄Êi˘
–
BB_c⁄Êi˘_t
 *
cf
 ) {

105 
i
;

107 if–
cf
->
c⁄Êi˘_dú
 =
JJ
 )

108 
	`¥ötf
–"-- <%d> JUMP/JUMP", 
cf
->
c⁄Êi˘_§c
->
bb
->
id
 );

109 if–
cf
->
c⁄Êi˘_dú
 =
JF
 )

110 
	`¥ötf
–"-- <%d> JUMP/FALL", 
cf
->
c⁄Êi˘_§c
->
bb
->
id
 );

111 if–
cf
->
c⁄Êi˘_dú
 =
FJ
 )

112 
	`¥ötf
–"-- <%d> FALL/JUMP", 
cf
->
c⁄Êi˘_§c
->
bb
->
id
 );

113 if–
cf
->
c⁄Êi˘_dú
 =
FF
 )

114 
	`¥ötf
–"-- <%d> FALL/FALL", 
cf
->
c⁄Êi˘_§c
->
bb
->
id
 );

116  
i
 = 0; i < 
cf
->
num_nuŒifõrs
; i++ )

117 
	`¥ötf
–" _<%d::%d>", 
cf
->
nuŒifõr_li°
[
i
]->
bb
->
id
, cf->nuŒifõr_li°[i]->
löío
 );

118 
	`¥ötf
( "\n" );

121 
	}
}

124 
	$¥ötBønch
–
bønch_t
 *
br
, 
¥ötcf
 ) {

126 
i
, 
k
;

128 if–
br
 =
NULL
 )

131 
	`¥ötf
–"B <%d,%3d>", 
br
->
bb
->
¥oc
->
id
, br->bb->id );

132 
	`¥ötf
( "Ñhs:" );

133 if–
br
->
rhs_v¨
 )

134 
	`¥ötf
( "var" );

136 
	`¥ötf
–"%3d", 
br
->
rhs
 );

138 
	`¥ötf
–" jump:%s", 
	`gëDúName
–
br
->
jump_c⁄d
 ));

139 
	`¥ötf
–" dîi:%s\n", 
br
->
dîôªe
 );

141 if–!
¥ötcf
 )

163 if–
br
->
num_BA_c⁄Êi˘s
 > 0 ) {

164 
	`¥ötf
( "- BA conflicts:\n" );

165  
i
 = 0; i < 
br
->
num_BA_c⁄Êi˘s
; i++ )

166 
	`¥ötBAC⁄Êi˘
–&(
br
->
BA_c⁄Êi˘_li°
[
i
]) );

168 if–
br
->
num_BB_c⁄Êi˘s
 > 0 ) {

169 
	`¥ötf
( "- BB conflicts:\n" );

170  
i
 = 0; i < 
br
->
num_BB_c⁄Êi˘s
; i++ )

171 
	`¥ötBBC⁄Êi˘
–&(
br
->
BB_c⁄Êi˘_li°
[
i
]) );

175 
	}
}

178 
	$¥ötAssign
–
assign_t
 *
assg
, 
¥ötcf
 ) {

180 
i
;

182 
	`¥ötf
–"A <%d,%3d,%3d> ", 
assg
->
bb
->
¥oc
->
id
,ássg->bb->id,ássg->
löío
 );

183 
	`¥ötf
( "rhs:" );

184 if–
assg
->
rhs_v¨
 )

185 
	`¥ötf
( "var " );

187 
	`¥ötf
–"%3d ", 
assg
->
rhs
 );

188 
	`¥ötf
–"dîi:%s\n", 
assg
->
dîôªe
 );

190 if–!
¥ötcf
 )

202 
	}
}

205 
	$¥ötEf„˘s
–
¥ötcf
 ) {

207 
i
, 
j
, 
k
;

208 
öf_node_t
 *
ib
;

210 
	`¥ötf
( "--------------------------------\n" );

211  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ ) {

212  
j
 = 0; j < 
öf_¥ocs
[
i
].
num_bb
; j++ ) {

213 
ib
 = &(
öf_¥ocs
[
i
].
öf_cfg
[
j
]);

214  
k
 = 0; k < 
ib
->
num_assign
; k++ )

215 
	`¥ötAssign
–
ib
->
assig∆i°
[
k
], 
¥ötcf
 );

216 
	`¥ötBønch
–
ib
->
bønch
, 
¥ötcf
 );

219 
	`¥ötf
( "--------------------------------\n" );

221 
	}
}

	@infeasible.c

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~"iß.h
"

32 
	~"cfg.h
"

33 
	~"tcfg.h
"

34 
	~"lo›s.h
"

35 
	~"ö„asibÀ.h
"

37 
	#MD_INST_SIZE
 0x8

	)

39 
¥og_t
 
¥og
;

40 
iß_t
 *
iß
;

42 
num_tcfg_nodes
;

43 
tcfg_node_t
 **
tcfg
;

45 
tcfg_∆ök_t
 ***
bbi_m≠
;

46 
lo›_t
 **
lo›_m≠
;

52 
	$t›o_ˇŒ
–**
ˇŒìs
, *
num_ˇŒì
 ) {

54 
i
, 
cuºp
;

56 *
come‰om
;

57 
come‰omsize
;

58 *
m¨kfö
;

59 
fö
;

61 
cou¡d⁄e
;

63 
come‰om
 = 
NULL
;

64 
come‰omsize
 = 0;

65 
m¨kfö
 = (*Ë
	`ˇŒoc
–
¥og
.
num_¥ocs
, () );

66 
ˇŒgøph
 = (*Ë
	`ˇŒoc
–
¥og
.
num_¥ocs
, () );

68 
cou¡d⁄e
 = 0;

71 
cuºp
 = 
¥og
.
maö_¥oc
;

73  
cou¡d⁄e
 < 
¥og
.
num_¥ocs
 ) {

75 
fö
 = 1;

76  
i
 = 0; 
fö
 && i < 
num_ˇŒì
[
cuºp
]; i++ )

77 if–
m¨kfö
[ 
ˇŒìs
[
cuºp
][
i
] ] != 2 )

78 
fö
 = 0;

80 if–
num_ˇŒì
[
cuºp
] <0 || 
fö
 ) {

81 
m¨kfö
[
cuºp
] = 2;

82 
ˇŒgøph
[
cou¡d⁄e
++] = 
cuºp
;

85 if–!
come‰omsize
 )

88 
cuºp
 = 
come‰om
[--
come‰omsize
];

92 
m¨kfö
[
cuºp
] = 1;

93 
come‰om
 = (*Ë
	`ªÆloc
–come‰om, (
come‰omsize
+1) * () );

94 
come‰om
[
come‰omsize
++] = 
cuºp
;

97 
fö
 = 1;

98  
i
 = 0; 
fö
 && i < 
num_ˇŒì
[
cuºp
]; i++ ) {

99 if–
m¨kfö
[
ˇŒìs
[
cuºp
][
i
]] != 2 ) {

100 
cuºp
 = 
ˇŒìs
[cuºp][
i
];

101 
fö
 = 0;

104 if–
fö
 )

105 
	`¥ötf
–"Unvisôed cÆÀdÖro˚duªÇŸ dëe˘ed.\n" ), 
	`exô
(1);

109 
	`‰ì
–
come‰om
 );

110 
	`‰ì
–
m¨kfö
 );

113 
	}
}

116 
	$edôAsmSå
(*
tmp
) {

117 
dbg
 = 0;

118 
j
, 
Êag
;

119 
FILE
 *
dbgExec
=
°dout
;

120 
Êag
 = 0;

121 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"\nPro˚s†%†->",
tmp
);

122 
j
=0; j<
	`°æí
(
tmp
); j++) {

123 i‡(
tmp
[
j
]==',' ||Åmp[j]=='\\' ||Åmp[j]=='(' ||Åmp[j]==')')

124 
tmp
[
j
]=' ';

125 i‡(
tmp
[
j
]=='<'Ë{ 
Êag
=1;Åmp[j]=' '; }

126 i‡(
tmp
[
j
]=='>'Ë{ 
Êag
=0;Åmp[j]=' '; }

127 i‡(
Êag
==1Ë
tmp
[
j
]=' ';

129 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"%s",
tmp
);

130 
	}
}

131 
	$ªadIn¢
 ( *
obj_fûe
 ) {

132 
dbg
 = 0;

133 
i
,
j
,
k
, 
Êag
;

134 
FILE
 *
f
;

135 
tmp
[120],
°r
[120];

136 
tmpAddr
, 
curAddr
;

137 
curIn¢
;

138 
¥oc_t
 *
p
;

139 
cfg_node_t
 *
b
;

140 
de_ö°_t
 *
d
;

142 
öf_¥oc_t
 *
ù
;

143 
öf_node_t
 *
ib
;

144 
ö¢_t
 *
is
, *
tmpIs
;

146 
n
, 
Àn
;

147 *
num_ˇŒì
 = (*Ë
	`ˇŒoc
(
¥og
.
num_¥ocs
, ());

148 **
ˇŒìs
 = (**Ë
	`mÆloc
(
¥og
.
num_¥ocs
*(*));

150 
	`•rötf
(
tmp
,"%s.dis",
obj_fûe
);

151 
f
 = 
	`f›í
(
tmp
,"r");

152 
ö¢_t
 *
isLi°
;

154 
num_ö¢_°
 = 0;

155 
ö¢li°_°
 = 
NULL
;

156 i‡(
dbg
Ë
	`¥ötf
("\nPreprocessing instructions");

157 
	`fgës
(
tmp
,120,
f
)) {

158 i‡(
	`°r°r
(
tmp
,"0040")==
NULL
) ;

159 
	`edôAsmSå
(
tmp
);

160 
num_ö¢_°
++;

161 
ö¢li°_°
 = (
ö¢_t
*Ë
	`ªÆloc
( insnlist_st,

162 
num_ö¢_°
 * (
ö¢_t
) );

163 
is
 = &(
ö¢li°_°
[
num_ö¢_°
-1]);

164 
is
->
r1
[0]='\0';is->
r2
[0]='\0';is->
r3
[0]='\0';

165 
	`ssˇnf
–
tmp
, "%x %s %s %s %s\n",

166 &
tmpAddr
, 
is
->
›
, is->
r1
, is->
r2
, is->
r3
 );

167 
	`•rötf
(
is
->
addr
,"%x",
tmpAddr
);

168 i‡(
dbg
Ë
	`¥ötf
("\n\tInsn:áddr:%s op:%sÑ1:%sÑ2:%sÑ3:%s",

169 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
);

170 i‡(
tmpAddr
 =
¥og
.
°¨t_addr
 - 
MD_INST_SIZE
) ;

172 
isLi°
 = 
	`ˇŒoc
(
¥og
.
num_ö°
,(
ö¢_t
));

174 i‡(
dbg
Ë
	`¥ötf
("\nProgram instructions");

175 
curAddr
 = 
¥og
.
°¨t_addr
;

176 
i
=0; i<
¥og
.
num_ö°
; i++) {

177 
is
 = &(
isLi°
[
i
]);

178 
	`•rötf
(
is
->
addr
,"%x",
curAddr
);

180 
	`fgës
(
tmp
,120,
f
)) {

181 i‡(
	`°r°r
(
tmp
,"0040")==
NULL
) ;

184 
	`edôAsmSå
(
tmp
);

185 
is
->
r1
[0]='\0';is->
r2
[0]='\0';is->
r3
[0]='\0';

186 
	`ssˇnf
–
tmp
, "%x %s %s %s %s\n",

187 &
tmpAddr
, 
is
->
›
, is->
r1
, is->
r2
, is->
r3
 );

188 
	`•rötf
(
is
->
addr
,"%x",
tmpAddr
);

189 i‡(
dbg
Ë
	`¥ötf
("\n\tInsn:áddr:%s op:%sÑ1:%sÑ2:%sÑ3:%s",

190 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
);

194 
i
=0; i<
¥og
.
num_¥ocs
; i++Ë
ˇŒìs
[i] = 
NULL
;

196 
curIn¢
 = 0;

197 
öf_¥ocs
 = (
öf_¥oc_t
*Ë
	`mÆloc
(
¥og
.
num_¥ocs
*(inf_proc_t));

198 
i
=0; i<
¥og
.
num_¥ocs
; i++) {

199 
p
 = &(
¥og
.
¥ocs
[
i
]);

200 
ù
&(
öf_¥ocs
[
i
]);

202 
ù
->
¥oc
 = 
p
;

203 
ù
->
num_bb
 = 
p
->num_bb;

204 
ù
->
öf_cfg
 = (
öf_node_t
*Ë
	`mÆloc
(ù->
num_bb
*(inf_node_t));

206 
j
=0; j<
ù
->
num_bb
; j++) {

207 
b
 = &(
p
->
cfg
[
j
]);

208 
ib
&(
ù
->
öf_cfg
[
j
]);

210 
ib
->
bb
 = 
b
;

211 
ib
->
num_ö¢
 = 
b
->
num_ö°
;

212 
ib
->
ö¢li°
 = (
ö¢_t
*Ë
	`mÆloc
 (ib->
num_ö¢
*(insn_t));

213 
ib
->
num_assign
 = 0;

214 
ib
->
assig∆i°
 = 
NULL
;

215 
ib
->
bønch
 = 
NULL
;

216 
ib
->
lo›_id
 = -1;

217 
ib
->
exec_cou¡
 = -1;

218 
ib
->
lo›_rﬁe
 = 
b
->loop_role;

220 
k
=0; k<
ib
->
num_ö¢
; k++) {

221 
d
 = &(
b
->
code
[
k
]);

222 
is
&(
ib
->
ö¢li°
[
k
]);

223 i‡(0Ë
	`¥ötf
("\nFöd in¢ %x: ",
d
->
addr
);

226 
tmpIs
 = &(
isLi°
[
curIn¢
]);

227 
curIn¢
 = (curIn¢+1)%
¥og
.
num_ö°
;

228 
	`ssˇnf
(
tmpIs
->
addr
,"%x",&
curAddr
);

229 i‡(0Ë
	`¥ötf
(" %x",
curAddr
);

230 } 
d
->
addr
!=
curAddr
);

232 
	`°r˝y
(
is
->
addr
, 
tmpIs
->addr);

233 
	`°r˝y
(
is
->
›
, 
tmpIs
->op);

234 
	`°r˝y
(
is
->
r1
, 
tmpIs
->r1);

235 
	`°r˝y
(
is
->
r2
, 
tmpIs
->r2);

236 
	`°r˝y
(
is
->
r3
, 
tmpIs
->r3);

237 i‡(
dbg
Ë
	`¥ötf
("\n\tInsn:áddr:%s op:%sÑ1:%sÑ2:%sÑ3:%s",

238 
is
->
addr
, is->
›
, is->
r1
, is->
r2
, is->
r3
);

242 
	`t›o_ˇŒ
–
ˇŒìs
, 
num_ˇŒì
 );

245 
n
 = 
¥og
.
num_¥ocs
 - 1;

246 
Àn
 = 
¥og
.
num_¥ocs
 / 2;

247  
i
 = 0; i < 
Àn
; i++ ) {

248 
tmp
 = 
ˇŒgøph
[
i
];

249 
ˇŒgøph
[
i
] = cÆlgøph[
n
-i];

250 
ˇŒgøph
[
n
-
i
] = 
tmp
;

253 
	`‰ì
–
num_ˇŒì
 );

254  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ )

255 
	`‰ì
–
ˇŒìs
[
i
] );

256 
	`‰ì
–
ˇŒìs
 );

257 i‡(
dbg
Ë
	`fÊush
(
°dout
);

258 
	}
}

260 
	$ªadIn°r
–*
obj_fûe
 ) {

262 
i
, 
j
, 
k
;

264 
FILE
 *
f
;

265 
tmp
[120];

266 
addr
;

268 
¥oc_t
 *
p
;

269 
cfg_node_t
 *
b
;

270 
de_ö°_t
 *
d
;

272 
öf_¥oc_t
 *
ù
;

273 
öf_node_t
 *
ib
;

274 
ö¢_t
 *
is
;

277 
n
, 
Àn
;

278 *
num_ˇŒì
 = (*Ë
	`ˇŒoc
–
¥og
.
num_¥ocs
, () );

279 **
ˇŒìs
 = (**Ë
	`mÆloc
–
¥og
.
num_¥ocs
 * (*) );

280  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ )

281 
ˇŒìs
[
i
] = 
NULL
;

284 
öf_¥ocs
 = (
öf_¥oc_t
*Ë
	`mÆloc
–
¥og
.
num_¥ocs
 * (inf_proc_t) );

285  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ ) {

286 
p
 = &(
¥og
.
¥ocs
[
i
]);

287 
ù
 = &(
öf_¥ocs
[
i
]);

289 
ù
->
¥oc
 = 
p
;

290 
ù
->
num_bb
 = 
p
->num_bb;

291 
ù
->
öf_cfg
 = (
öf_node_t
*Ë
	`mÆloc
–ù->
num_bb
 * (inf_node_t) );

293  
j
 = 0; j < 
ù
->
num_bb
; j++ ) {

294 
b
 = &(
p
->
cfg
[
j
]);

295 
ib
 = &(
ù
->
öf_cfg
[
j
]);

297 
ib
->
bb
 = 
b
;

298 
ib
->
num_ö¢
 = 
b
->
num_ö°
;

299 
ib
->
ö¢li°
 = (
ö¢_t
*Ë
	`mÆloc
–ib->
num_ö¢
 * (insn_t) );

300 
ib
->
num_assign
 = 0;

301 
ib
->
assig∆i°
 = 
NULL
;

302 
ib
->
bønch
 = 
NULL
;

303 
ib
->
lo›_id
 = -1;

304 
ib
->
exec_cou¡
 = -1;

306  
k
 = 0; k < 
ib
->
num_ö¢
; k++ ) {

307 
d
 = &(
b
->
code
[
k
]);

308 
is
 = &(
ib
->
ö¢li°
[
k
]);

310 
	`•rötf
–
is
->
addr
, "%x", 
d
->addr );

311 
	`°r˝y
–
is
->
›
, 
iß
[
d
->
›_íum
].
«me
 );

312 
is
->
r1
[0] = '\0';

313 
is
->
r2
[0] = '\0';

314 
is
->
r3
[0] = '\0';

317 
	`•rötf
–
tmp
, "£d -¿'/^00%s/p' %s.di†|áwk '{¥öà$4}' >Ålöe", 
is
->
addr
, 
obj_fûe
 );

318 
	`sy°em
–
tmp
 );

319 
	`sy°em
( "catÅline |År ',' '\\ ' |År '(' '\\ ' |År ')' '\\ ' >Åopr" );

321 
f
 = 
	`f›í
( "topr", "r" );

322 
	`fsˇnf
–
f
, "%†%†%s", 
is
->
r1
, is->
r2
, is->
r3
 );

323 
	`f˛o£
–
f
 );

330 
	`•rötf
–
tmp
, "gª∞__°¨à%s.di†|áwk '{¥öà$1,$3,$4}' > st.dis", 
obj_fûe
 );

331 
	`sy°em
–
tmp
 );

332 
	`•rötf
–
tmp
, "ˇà°.di†|Å∏',' '\\ ' |Å∏'(' '\\ ' |Å∏')' '\\ ' >Öª", 
obj_fûe
 );

333 
	`sy°em
–
tmp
 );

335 
num_ö¢_°
 = 0;

336 
ö¢li°_°
 = 
NULL
;

338 
f
 = 
	`f›í
( "pre", "r" );

339  
	`fgës
–
tmp
, 
INSN_LEN
, 
f
 )) {

340 
num_ö¢_°
++;

341 
ö¢li°_°
 = (
ö¢_t
*Ë
	`ªÆloc
–ö¢li°_°, 
num_ö¢_°
 * (insn_t) );

343 
is
 = &(
ö¢li°_°
[
num_ö¢_°
-1]);

344 
is
->
r1
[0] = '\0';

345 
is
->
r2
[0] = '\0';

346 
is
->
r3
[0] = '\0';

347 
	`ssˇnf
–
tmp
, "%x %†%†%†%s\n", &
addr
, 
is
->
›
, is->
r1
, is->
r2
, is->
r3
 );

348 
	`•rötf
–
is
->
addr
, "%x",áddr );

350 
	`f˛o£
–
f
 );

352 
	`sy°em
( "rm -fÅlineÅoprÖre st.dis" );

354 
	`t›o_ˇŒ
–
ˇŒìs
, 
num_ˇŒì
 );

357 
n
 = 
¥og
.
num_¥ocs
 - 1;

358 
Àn
 = 
¥og
.
num_¥ocs
 / 2;

359  
i
 = 0; i < 
Àn
; i++ ) {

360 
tmp
 = 
ˇŒgøph
[
i
];

361 
ˇŒgøph
[
i
] = cÆlgøph[
n
-i];

362 
ˇŒgøph
[
n
-
i
] = 
tmp
;

365 
	`‰ì
–
num_ˇŒì
 );

366  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ )

367 
	`‰ì
–
ˇŒìs
[
i
] );

368 
	`‰ì
–
ˇŒìs
 );

369 
	}
}

376 
	$isDì≥r
–
∑·
, 
pbef
 ) {

378 
i
;

379  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ ) {

380 if–
ˇŒgøph
[
i
] =
∑·
 )

382 if–
ˇŒgøph
[
i
] =
pbef
 )

386 
	}
}

389 
	$£tCou¡Rec
–
tcfg_node_t
 *
bbi
, 
cou¡
, 
ªtu∫_pid
 ) {

391 
tcfg_edge_t
 *
e
;

393 if–
bbi
->
exec_cou¡
 >
cou¡
 ) {

394 
	`¥ötf
–"Exi°ög cou¡Åcfg %d(%d::%dË%d\n", 
bbi
->
id
, bbi->
bb
->
¥oc
->id, bbi->bb->id, bbi->
exec_cou¡
 );

397 
bbi
->
exec_cou¡
 = 
cou¡
;

398 
	`¥ötf
–"Së cou¡Åcfg %d(%d::%dË%d\n", 
bbi
->
id
, bbi->
bb
->
¥oc
->id, bbi->bb->id, 
cou¡
 );

400  
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
 ) {

401 if–
e
->
d°
->
bb
->
¥oc
->
id
 !
ªtu∫_pid
 )

402 
	`£tCou¡Rec
–
e
->
d°
, 
cou¡
, 
ªtu∫_pid
 );

405 
	}
}

408 
	$£tCou¡
–
tcfg_node_t
 *
bbi
, 
cou¡
 ) {

410 if–
bbi
->
exec_cou¡
 >
cou¡
 ) {

411 
	`¥ötf
–"Exi°ög cou¡Åcfg %d(%d::%dË%d\n", 
bbi
->
id
, bbi->
bb
->
¥oc
->id, bbi->bb->id, bbi->
exec_cou¡
 );

414 
bbi
->
exec_cou¡
 = 
cou¡
;

418 if–
bbi
->
bb
->
ˇŒì
 !
NULL
 && bbi->
out
 != NULL )

419 
	`£tCou¡Rec
–
bbi
->
out
->
d°
, 
cou¡
, bbi->
bb
->
¥oc
->
id
 );

422 
	}
}

425 
	$£tLo›IDRec
–
tcfg_node_t
 *
bbi
, 
Õid
, 
ªtu∫_pid
 ) {

426 
dbg
 = 0;

427 
tcfg_edge_t
 *
e
;

428 
öf_lo›_t
 *
Õ
 = &(
öf_lo›s
[
Õid
]);

430 if–
bbi
->
lo›_id
 =
Õid
 || 
	`isDì≥r
–
öf_lo›s
[bbi->lo›_id].
pid
, 
Õ
->pid ))

433 
bbi
->
lo›_id
 = 
Õid
;

434 i‡(
dbg
Ë
	`¥ötf
( "SetÅcfg %d(%d::%d)Üoop:%dÉntry:(%d::%d) bound:%d\n",

435 
bbi
->
id
, bbi->
bb
->
¥oc
->id, bbi->bb->id, 
Õid
, 
Õ
->
pid
,Üp->
íåy
,Üp->
bound
 );

437  
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
 ) {

438 if–
e
->
d°
->
bb
->
¥oc
->
id
 !
ªtu∫_pid
 )

439 
	`£tLo›IDRec
–
e
->
d°
, 
Õid
, 
ªtu∫_pid
 );

442 
	}
}

445 
	$£tLo›ID
–
tcfg_node_t
 *
bbi
, 
Õid
 ) {

446 
dbg
 = 0;

448 
öf_lo›_t
 *
Õ
 = &(
öf_lo›s
[
Õid
]);

450 if–
bbi
->
lo›_id
 =
Õid
 || 
	`isDì≥r
–
öf_lo›s
[bbi->lo›_id].
pid
, 
Õ
->pid ))

453 
bbi
->
lo›_id
 = 
Õid
;

454 i‡(
dbg
Ë
	`¥ötf
( "SetÅcfg %d(%d::%d)Üoop:%dÉntry:(%d::%d) bound:%d\n",

455 
bbi
->
id
, bbi->
bb
->
¥oc
->id, bbi->bb->id, 
Õid
, 
Õ
->
pid
,Üp->
íåy
,Üp->
bound
 );

458 if–
bbi
->
bb
->
ˇŒì
 !
NULL
 && bbi->
out
 != NULL )

459 
	`£tLo›IDRec
–
bbi
->
out
->
d°
, 
Õid
, bbi->
bb
->
¥oc
->
id
 );

462 
	}
}

468 
	$m¨kLo›
–
öf_¥oc_t
 *
ù
, 
öf_node_t
 *
hód
, inf_node_à*
ib
, 
Õid
, **
checked
 ) {

470 
i
;

471 
tcfg_∆ök_t
 *
ndlök
;

472 
öf_lo›_t
 *
Õ
 = &(
öf_lo›s
[
Õid
]);

476 if–
ib
->
lo›_id
 =-1 || 
öf_lo›s
[ib->lo›_id].
íåy
 < 
Õ
->entry ) {

478 
ib
->
lo›_id
 = 
Õid
;

481  
ndlök
 = 
bbi_m≠
[
ù
->
¥oc
->
id
][
ib
->
bb
->id];Çdlök !
NULL
;Çdlök =Çdlök->
√xt
 )

482 
	`£tLo›ID
–
ndlök
->
bbi
, 
Õid
 );

485 
	`¥ötf
–"Ne°ed (%d.%dËÜo›:%dÉ¡ry:%d (nŸ upd©ed)\n", 
ù
->
¥oc
->
id
, 
ib
->
bb
->id, ib->
lo›_id
, 
öf_lo›s
[ib->lo›_id].
íåy
 );

487 (*
checked
)[
ib
->
bb
->
id
] = 1;

489 if–
ib
 =
hód
 ) {

493  
i
 = 0; i < 
ib
->
bb
->
num_ö
; i++ ) {

494 
¥e
 = 
ib
->
bb
->
ö
[
i
]->
§c
->
id
;

497 if–!(*
checked
)[
¥e
] &&Öª >
Õ
->
íåy
 )

498 
	`m¨kLo›
–
ù
, 
hód
, &(ù->
öf_cfg
[
¥e
]), 
Õid
, 
checked
 );

500 
	}
}

507 
	$ªadBlockCou¡s
–*
obj_fûe
 ) {

509 
FILE
 *
f
;

510 
tmp
[256];

511 
i
, 
pid
, 
bid
, 
pid2
, 
íåy
, 
cou¡
;

513 
öf_¥oc_t
 *
ù
;

514 
öf_node_t
 *
ib
;

516  
i
 = 0; i < 
num_tcfg_nodes
; i++ ) {

517 
tcfg
[
i
]->
lo›_id
 = -1;

518 
tcfg
[
i
]->
exec_cou¡
 = -1;

522 
	`•rötf
–
tmp
, "ˇà%s.c⁄†|Å∏'c' '\\ ' |áwk '$2 ~ \"=\" {¥öà$1,$NF}' |Å∏'.' '\\ ' > cou¡s", 
obj_fûe
 );

523 
	`sy°em
–
tmp
 );

524 
f
 = 
	`f›í
( "counts", "r" );

525  
	`fsˇnf
–
f
, "%d %d %d", &
pid
, &
bid
, &
cou¡
 ) !
EOF
 ) {

527 
tcfg_∆ök_t
 *
ndlök
;

530 if–!
ö˛ude_¥oc
[
pid
] ) {

531 
	`¥ötf
( "Ignoring count forÉxcluded function.\n" );

534 
öf_¥ocs
[
pid
].
öf_cfg
[
bid
].
exec_cou¡
 = 
cou¡
;

537  
ndlök
 = 
bbi_m≠
[
pid
][
bid
];Çdlök !
NULL
;Çdlök =Çdlök->
√xt
 )

538 
	`£tCou¡
–
ndlök
->
bbi
, 
cou¡
 );

540 
	`f˛o£
–
f
 );

543 
	`•rötf
–
tmp
, "gª∞\\< %s.c⁄†| sed '/+/d' |Å∏'-' '\\ ' |Å∏'=' '\\ ' |Å∏'\\<' '\\ ' >Åmp", 
obj_fûe
 );

544 
	`sy°em
–
tmp
 );

545 
	`sy°em
( "awk '{if(NF==4)Örint $1,$3,$2}'Åmp |År 'c' '\\ ' |År '.' '\\ ' > bounds" );

547 
num_öf_lo›s
 = 0;

548 
öf_lo›s
 = 
NULL
;

550  
pid
 = 0;Öid < 
¥og
.
num_¥ocs
;Öid++ ) {

551 if–
ö˛ude_¥oc
[
pid
] ) {

552 
ù
 = &(
öf_¥ocs
[
pid
]);

553  
bid
 = 0; bid < 
ù
->
num_bb
; bid++ )

554 
ù
->
öf_cfg
[
bid
].
lo›_id
 = -1;

558 
f
 = 
	`f›í
( "bounds", "r" );

559  
	`fsˇnf
–
f
, "%d %d %d %d %d", &
pid
, &
bid
, &
pid2
, &
íåy
, &
cou¡
 ) !
EOF
 ) {

561 
Õid
, 
hód
, 
èû
;

562 
lo›_t
 *
Õn
;

563 
öf_lo›_t
 *
Õ
;

564 
öf_node_t
 *
hd
, *
è
;

566 *
checked
;

570 if–!
ö˛ude_¥oc
[
pid
] || !ö˛ude_¥oc[
pid2
] ) {

571 
	`¥ötf
( "Ignoring bound forÉxcluded function.\n" );

575 
ù
 = &(
öf_¥ocs
[
pid
]);

576 
ib
 = &(
ù
->
öf_cfg
[
bid
]);

578 
Õid
 = 
num_öf_lo›s
++;

579 
öf_lo›s
 = (
öf_lo›_t
*Ë
	`ªÆloc
–öf_lo›s, 
num_öf_lo›s
 * (inf_loop_t) );

580 
Õ
 = &(
öf_lo›s
[
Õid
]);

581 
Õ
->
pid
 =Öid;

582 
Õ
->
íåy
 =Éntry;

583 
Õ
->
bound
 = 
cou¡
;

587 
Õn
 = 
lo›_m≠
[
bbi_m≠
[
pid
][
bid
]->
bbi
->
id
];

588 
Õ
->
lo›_id
 = 
Õn
->
id
;

590 
hód
 = 
	`bbi_bid
–
Õn
->head );

592 
hód
 = 
	`bbi_bid
–
Õn
->head );

593 i‡(
Õn
->
èû
!=
NULL
)

594 
èû
 = 
	`bbi_bid
–
Õn
->tail );

596 
èû
 = 
	`bbi_bid
(
tcfg
[
num_tcfg_nodes
-1]);

597 
hd
 = &(
ù
->
öf_cfg
[
hód
]);

598 
è
 = &(
ù
->
öf_cfg
[
èû
]);

599 
checked
 = (*Ë
	`ˇŒoc
–
ù
->
num_bb
, () );

600 
	`m¨kLo›
–
ù
, 
hd
, 
è
, 
Õid
, &
checked
 );

601 
	`‰ì
–
checked
 );

603 
	`f˛o£
–
f
 );

605 
	`sy°em
( "rmÅmp counts bounds" );

607 
	}
}

610 
	$ö„as_™Æysis
–*
obj_fûe
 ) {

611 
dbg
 = 0;

612 i‡(
dbg
) {

613 
	`¥ötf
("\nA«lyzêfûê|%s|\n",
obj_fûe
);
	`fÊush
(
°dout
);

614 
	`¥ötf
–"Ród In°r...\n" ); 
	`fÊush
(
°dout
);

615 
	`¥ötf
–"Ród Block Cou¡s...\n" ); 
	`fÊush
(
°dout
);

617 
	`ªadIn¢
–
obj_fûe
 );

618 
	`ªadBlockCou¡s
–
obj_fûe
 );

622 i‡(
dbg
Ë
	`¥ötf
–"Sèπög symbﬁi¯executi⁄...\n" ); 
	`fÊush
(
°dout
);

623 
	`execuã
();

630 
	}
}

	@infeasible.h

22 #i‚de‡
__INFEASIBLE


23 
	#__INFEASIBLE


	)

24 
	~"comm⁄.h
"

25 
	~"cfg.h
"

26 
	~"symexec.h
"

28 
DEBUG_INFEAS
;

30 
¥og_t
 
¥og
;

31 
iß_t
 *
iß
;

33 *
ö˛ude_¥oc
;

36 
	#REG_RETURN
 
ªgLi°
[2].
«me


	)

39 
	#°ªq
(
a
, 
b
Ë◊[0] !'\0' && 
	`°rcmp
◊,bË=0)

	)

43 
	#INVALID
 0

	)

44 
	#VALID
 1

	)

45 
	#CONST
 0

	)

46 
	#VAR
 1

	)

47 
	#DEF_VAL
 0

	)

48 
	#DEF_DERI
 ""

	)

51 
	#OP_LEN
 9

52 
	#DERI_LEN
 128

53 
	#INSN_LEN
 50

54 

	)

55 
	#NONE
 0

	)

56 
	#JUMP
 1

	)

57 
	#FALL
 2

	)

59 
	#JJ
 3

60 
	#JF
 4

61 
	#FJ
 5

62 
	#FF
 6

63 

	)

65 
	#GT
 1

66 
	#GE
 2

67 
	#LT
 3

68 
	#LE
 4

69 
	#EQ
 5

70 
	#NE
 6

71 
	#NA
 0

72 

	)

75 
	#KO
 -2

76 
	#NIL
 -1

	)

77 
	#SLTI
 1

	)

78 
	#SLT
 2

	)

84 
	m«me
[
OP_LEN
];

85 
	mdîôªe
[
DERI_LEN
];

86 
	mvÆue
;

87 
	mvÆid
;

88 
	mÊag
;

89 } 
	tªg_t
;

93 
	#BIV_INST
 0x®

	)

95 
	maddr
[
OP_LEN
];

96 
	m›
[
OP_LEN
];

97 
	mr1
[
OP_LEN
];

98 
	mr2
[
OP_LEN
];

99 
	mr3
[
OP_LEN
];

100 
	mÊag
;

101 } 
	tö¢_t
;

104 
bønch_t
 
	tbønch_t
;

107 
cfg_node_t
 *
	mbb
;

108 
	mdîôªe
[
DERI_LEN
];

109 
	mrhs
;

110 
	mrhs_v¨
;

111 
	mlöío
;

112 } 
	tassign_t
;

115 
assign_t
 *
	mc⁄Êi˘_§c
;

116 
	mc⁄Êi˘_dú
;

117 
	mnum_nuŒifõrs
;

118 
assign_t
 **
	mnuŒifõr_li°
;

119 } 
	tBA_c⁄Êi˘_t
;

122 
bønch_t
 *
	mc⁄Êi˘_§c
;

123 
	mc⁄Êi˘_dú
;

124 
	mnum_nuŒifõrs
;

125 
assign_t
 **
	mnuŒifõr_li°
;

126 } 
	tBB_c⁄Êi˘_t
;

128 
	sbønch_t
 {

129 
cfg_node_t
 *
	mbb
;

130 
	mdîôªe
[
DERI_LEN
];

131 
	mrhs
;

132 
	mrhs_v¨
;

133 
	mjump_c⁄d
;

134 
	mnum_BA_c⁄Êi˘s
;

135 
BA_c⁄Êi˘_t
 *
	mBA_c⁄Êi˘_li°
;

136 
	mnum_BB_c⁄Êi˘s
;

137 
BB_c⁄Êi˘_t
 *
	mBB_c⁄Êi˘_li°
;

142 
cfg_node_t
 *
	mbb
;

143 
	mnum_ö¢
;

144 
ö¢_t
 *
	mö¢li°
;

145 
	mnum_assign
;

146 
assign_t
 **
	massig∆i°
;

147 
bønch_t
 *
	mbønch
;

148 
	mlo›_id
;

149 
	mexec_cou¡
;

150 
	mlo›_rﬁe
;

154 *
	mªgLi°In
;

155 *
	mªgLi°Out
;

157 
w‹kli°_p
 
	mmemLi°In
;

158 
w‹kli°_p
 
	mmemLi°Out
;

159 } 
	töf_node_t
;

162 
¥oc_t
 *
	m¥oc
;

163 
	mnum_bb
;

164 
öf_node_t
 *
	möf_cfg
;

165 } 
	töf_¥oc_t
;

168 
	mpid
;

169 
	míåy
;

170 
	mbound
;

171 
	mlo›_id
;

172 } 
	töf_lo›_t
;

174 
öf_¥oc_t
 *
	göf_¥ocs
;

176 *
	gˇŒgøph
;

178 
	gnum_ö¢_°
;

179 
ö¢_t
 *
	gö¢li°_°
;

182 
	gnum_öf_lo›s
;

183 
öf_lo›_t
 *
	göf_lo›s
;

190 
	gnum_BA
;

191 
	gnum_BB
;

193 
ö„as_™Æysis
–*
obj_fûe
 );

	@isa.c

23 
	~<°dio.h
>

24 
	~"iß.h
"

28 
iß_t
 *
	giß
;

29 
	gnum_iß
;

35 
	$öô_iß
()

38 
	`öô_iß_ss
();

40 
	}
}

45 
ölöe
 

46 
	$ö°_ty≥
(
de_ö°_t
 *
ö°
)

48  
iß
[
ö°
->
›_íum
].
ty≥
;

49 
	}
}

54 
	$max_ö°_œt
(
de_ö°_t
 *
ö°
)

56 
fu
;

58  
	`ss_max_ö°_œt
(
ö°
);

59 
	}
}

73 
	$dump_iß
()

75 
i
;

77 
i
 = 0; i < 
num_iß
; i++)

78 
	`¥ötf
("%3d: %-10†ty≥ %x\n", 
i
, 
iß
[i].
«me
, iß[i].
ty≥
);

79 
	}
}

	@isa.h

22 #i‚de‡
ISA_H


23 
	#ISA_H


	)

24 
	~"addªss.h
"

25 
	~"ˇche.h
"

31 
	eö°_ty≥_t
 {

32 
	mINST_NOP
 = 0,

34 
	mINST_ICOMP
,

35 
	mINST_FCOMP
,

37 
	mINST_LOAD
,

38 
	mINST_STORE
,

40 
	mINST_COND
,

41 
	mINST_UNCOND
,

42 
	mINST_CALL
,

43 
	mINST_RET
,

45 
	mINST_TRAP


50 
	m›code
;

51 
	mty≥
;

52 *
	m«me
;

53 } 
	tiß_t
;

57 
addr_t
 
	maddr
;

58 
addr_t
 
	mr_addr
;

59 
	m›_íum
;

61 
	msize
;

63 
	mnum_ö
, 
	mnum_out
;

64 *
	mö
, *
	mout
;

65 
	mimm
;

68 
addr_t
 
	mèrgë
;

70 
acs_p
** 
	macs_ö
;

72 
acs_p
** 
	macs_out
;

74 
ric_p
* 
	mabs_ªg
;

76 
ACCESS_T
 
	md©a_ac˚ss
;

78 
ACCESS_T
 
	mö°_ac˚ss
;

79 
ACCESS_T
 
	ml2_ö°_ac˚ss
;

80 
ACCESS_T
 
	mu1_d©a_ac˚ss
;

81 
ric_p
 
	mmod_addr
;

82 } 
	tde_ö°_t
;

	@loops.c

30 
	~<°dlib.h
>

31 
	~"comm⁄.h
"

32 
	~"lo›s.h
"

34 
	#lo›_bbb_idx
(
id
Ë((idË- 
Õ_bbb_off£t
 - 
num_bfg_nodes
)

	)

36 
num_tcfg_nodes
;

37 
num_tcfg_edges
;

38 
tcfg_node_t
 **
tcfg
;

39 
tcfg_edge_t
 **
tcfg_edges
;

41 
lo›_t
 **
	glo›s
;

42 
	gnum_tcfg_lo›s
;

43 
lo›_t
 **
	glo›_m≠
;

44 
lo›_t
 ***
	glo›_comm_™˚s
;

47 
	$isI¬î
(
ÕId
, 
pLpId
) {

49 
lo›_t
 *
Õ
, *
pLp
;

51 
Õ
 = 
lo›s
[
ÕId
];

52 
pLp
 = 
lo›s
[
pLpId
];

53 
Õ
) {

54 i‡(
pLp
->
id
 =
Õ
->id)

56 
Õ
 =Üp->
∑ª¡
;

60 
lo›_t
* 
lˇ
 = 
lo›_comm_™˚s
[
ÕId
][
pLpId
];

61 i‡(
lˇ
->
id
 =
pLpId
)  1;

63 
	}
}

65 
	$cmpLpOrdî
(
ÕId1
, 
ÕId2
) {

71 i‡(
ÕId1
 =
INNER_MOST


73 i‡(
ÕId2
 =
INNER_MOST


75 i‡(
ÕId1
 =
ÕId2
)

77 i‡(
ÕId1
 == 0)

79 i‡(
ÕId2
 == 0)

81 i‡(
ÕId1
 > 
ÕId2
)

91 i‡(
ÕId1
 =
ÕId2
)

93 
lo›_t
* 
lˇ_Õ
 = 
lo›_comm_™˚s
[
ÕId1
][
ÕId2
];

94 i‡(
lˇ_Õ
->
id
 =
ÕId1
)

96 i‡(
lˇ_Õ
->
id
 =
ÕId2
)

100 
	`¥ötf
("BUG in cmpLpOrder\n");

101 
	`exô
(1);

104 
	}
}

106 
	$s˝_cmpLpOrdî
(
ÕID1
, 
ÕID2
) {

107 i‡(
ÕID1
 =
ÕID2
)

109 
lo›_t
* 
lˇ_Õ
 = 
lo›_comm_™˚s
[
ÕID1
][
ÕID2
];

110 i‡(
lˇ_Õ
->
id
 =
ÕID1
)

112 i‡(
lˇ_Õ
->
id
 =
ÕID2
)

116 
a
 =2/0;

117 
	`¥ötf
("BUGs when calling scp_cmpLpOrder\n");

118 
	`exô
(1);

120 
	}
}

123 
lo›_t
 *

124 
	$√w_lo›
(
tcfg_edge_t
 *
e
) {

125 
i
;

126 
num
 = 0;

127 
lo›_t
 *
Õ
;

129 
Õ
 = (
lo›_t
 *Ë
	`ˇŒoc
(1, (loop_t));

130 
	`CHECK_MEM
(
Õ
);

131 
Õ
->
id
 = 
num_tcfg_lo›s
++;

132 
Õ
->
hód
 = 
e
->
d°
;

133 
Õ
->
èû
 = 
e
->
§c
;

136  
Õ
;

137 
	}
}

139 
	$£t_lo›_Êags
(
Êag
) {

140 
i
;

142 
i
 = 0; i < 
num_tcfg_lo›s
; i++)

143 
lo›s
[
i
]->
Êags
 = 
Êag
;

144 
	}
}

146 
	$föd_lo›s
() {

147 
i
;

148 
tcfg_edge_t
 *
e
;

150 
num_tcfg_lo›s
 = 1;

151 
lo›_m≠
 = (
lo›_t
 **Ë
	`ˇŒoc
(
num_tcfg_nodes
, (loop_t *));

152 
	`CHECK_MEM
(
lo›_m≠
);

154 
i
 = 0; i < 
num_tcfg_edges
; i++) {

155 
e
 = 
tcfg_edges
[
i
];

156 i‡(
	`bbi_backedge
(
e
)) {

157 i‡(
lo›_m≠
[
e
->
d°
->
id
] !
NULL


160 i‡(
	`bb_is_lo›_hód
(
e
->
d°
->
bb
Ë&& 
	`bb_is_lo›_èû
”->
§c
->bb))

161 
lo›_m≠
[
e
->
d°
->
id
] =Üo›_m≠[e->
§c
->id] = 
	`√w_lo›
(e);

165 
lo›s
 = (
lo›_t
 **Ë
	`ˇŒoc
(
num_tcfg_lo›s
, (loop_t *));

166 
	`CHECK_MEM
(
lo›s
);

168 
lo›s
[0] = (
lo›_t
 *Ë
	`ˇŒoc
(1, (loop_t));

169 
lo›s
[0]->
hód
 = 
tcfg
[0];

170 
lo›_m≠
[0] = 
lo›s
[0];

171 
	`CHECK_MEM
(
lo›s
[0]);

172 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

173 i‡(
lo›_m≠
[
i
] !
NULL


175 
lo›s
[
lo›_m≠
[
i
]->
id
] =Üoop_map[i];

177 
	}
}

180 
	$exô_lo›
(
tcfg_edge_t
 *
e
) {

181 
lo›_t
 *
Õ
;

182 
hód_bid
, 
èû_bid
, 
d°_bid
;

184 
Õ
 = 
lo›_m≠
[
e
->
§c
->
id
];

185 i‡(
Õ
 =
lo›s
[0])

187 i‡(
	`bbi_pid
(
e
->
d°
Ë!bbi_pid(
Õ
->
hód
))

190 
hód_bid
 = 
	`bbi_bid
(
Õ
->
hód
);

191 
èû_bid
 = 
	`bbi_bid
(
Õ
->
èû
);

192 
d°_bid
 = 
	`bbi_bid
(
e
->
d°
);

193 i‡((
d°_bid
 > 
èû_bid
Ë|| (d°_bid < 
hód_bid
))

197 
	}
}

199 
	$ªg_lo›_exô
(
tcfg_edge_t
 *
e
) {

200 
lo›_t
 *
Õ
;

201 
tcfg_ñök_t
 *
ñök
;

203 
Õ
 = 
lo›_m≠
[
e
->
§c
->
id
];

204 
ñök
 = (
tcfg_ñök_t
 *Ë
	`ˇŒoc
(1, (tcfg_elink_t *));

205 
ñök
->
edge
 = 
e
;

206 
ñök
->
√xt
 = 
Õ
->
exôs
;

207 
Õ
->
exôs
 = 
ñök
;

208 
	}
}

210 
	$dól_exô_edge
(
tcfg_edge_t
 *
e
) {

211 
lo›_t
 *
Õ
;

212 
tcfg_node_t
 *
d°
;

213 
hód_bid
, 
èû_bid
, 
Õ_pid
, 
bid
, 
pid
;

215 
	`ªg_lo›_exô
(
e
);

216 
d°
 = 
e
->dst;

217 i‡(
lo›_m≠
[
d°
->
id
] !
NULL
) {

218 i‡(
d°
 !
lo›_m≠
[d°->
id
]->
hód
)

221 i‡(
lo›_m≠
[
d°
->
id
]->
∑ª¡
 !
NULL


224 
Õ
 = 
lo›_m≠
[
e
->
§c
->
id
]->
∑ª¡
;Ü∞!
lo›s
[0];

225 
Õ
 =Üp->
∑ª¡
) {

226 
hód_bid
 = 
	`bbi_bid
(
Õ
->
hód
);

227 
èû_bid
 = 
	`bbi_bid
(
Õ
->
èû
);

228 
Õ_pid
 = 
	`bbi_pid
(
Õ
->
hód
);

229 
bid
 = 
	`bbi_bid
(
d°
);

230 
pid
 = 
	`bbi_pid
(
d°
);

231 i‡((
pid
 !
Õ_pid
Ë|| ((
bid
 >
hód_bid
Ë&& (bid <
èû_bid
))) {

232 
lo›_m≠
[
d°
->
id
]->
∑ª¡
 = 
Õ
;

236 i‡(
lo›_m≠
[
d°
->
id
]->
∑ª¡
 =
NULL


238 
lo›_m≠
[
d°
->
id
]->
∑ª¡
 = 
lo›s
[0];

241 
Õ
 = 
lo›_m≠
[
e
->
§c
->
id
]->
∑ª¡
;Ü∞!
lo›s
[0];Üp =Üp->parent) {

242 
hód_bid
 = 
	`bbi_bid
(
Õ
->
hód
);

243 
èû_bid
 = 
	`bbi_bid
(
Õ
->
èû
);

244 
Õ_pid
 = 
	`bbi_pid
(
Õ
->
hód
);

245 
bid
 = 
	`bbi_bid
(
d°
);

246 
pid
 = 
	`bbi_pid
(
d°
);

247 i‡((
pid
 !
Õ_pid
Ë|| ((
bid
 >
hód_bid
Ë&& (bid <
èû_bid
))) {

248 
lo›_m≠
[
d°
->
id
] = 
Õ
;

252 i‡(
lo›_m≠
[
d°
->
id
] =
NULL


254 
lo›_m≠
[
d°
->
id
] = 
lo›s
[0];

255 
	}
}

257 
	$dól_Ÿhî_edge
(
tcfg_edge_t
 *
e
) {

258 i‡(
lo›_m≠
[
e
->
d°
->
id
] =
NULL
) {

259 
lo›_m≠
[
e
->
d°
->
id
] =Üo›_m≠[e->
§c
->id];

260 } i‡(
lo›_m≠
[
e
->
d°
->
id
] !lo›_m≠[e->
§c
->id]) {

262 
lo›_m≠
[
e
->
d°
->
id
]->
∑ª¡
 =Üo›_m≠[e->
§c
->id];

264 
	}
}

266 
	$m≠_bbi_lo›
() {

267 
Queue
 
w‹kli°
;

268 
tcfg_node_t
 *
§c
, *
d°
;

269 
tcfg_edge_t
 *
e
;

271 
	`öô_queue
(&
w‹kli°
, (
tcfg_node_t
 *));

272 
	`íqueue
(&
w‹kli°
, &
tcfg
[0]);

273 
tcfg
[0]->
Êags
 = 1;

274 !
	`queue_em±y
(&
w‹kli°
)) {

275 
§c
 = *((
tcfg_node_t
 **Ë
	`dequeue
(&
w‹kli°
));

276 
e
 = 
§c
->
out
;É !
NULL
;É =É->
√xt_out
) {

277 
d°
 = 
e
->dst;

278 i‡(
	`exô_lo›
(
e
))

279 
	`dól_exô_edge
(
e
);

280 i‡(
d°
->
Êags
 == 0)

281 
	`dól_Ÿhî_edge
(
e
);

283 i‡(
d°
->
Êags
 == 0) {

284 
	`íqueue
(&
w‹kli°
, &
d°
);

285 
d°
->
Êags
 = 1;

289 
	`˛ór_bbi_Êags
();

290 
	`‰ì_queue
(&
w‹kli°
);

291 
	}
}

293 
	$£¨ch_comm⁄_™˚°‹
(
lo›_t
 *
x
,Üo›_à*
y
) {

294 
lo›_t
 *
Õ
;

295 
i
, 
Êag
 = (Ë
x
;

297 
Õ
 = 
x
;Ü∞!
NULL
;Ü∞Õ->
∑ª¡
) {

298 i‡(
Õ
 =
y
) {

299 
lo›_comm_™˚s
[
x
->
id
][
y
->id] = y;

300 
lo›_comm_™˚s
[
y
->
id
][
x
->id] = y;

303 
Õ
->
Êags
 = 
Êag
;

305 
Õ
 = 
y
;Ü∞!
NULL
;Ü∞Õ->
∑ª¡
) {

306 i‡(
Õ
->
Êags
 =
Êag
) {

307 
lo›_comm_™˚s
[
x
->
id
][
y
->id] = 
Õ
;

308 
lo›_comm_™˚s
[
y
->
id
][
x
->id] = 
Õ
;

318 
	}
}

321 
	$lo›_ªœti⁄s
() {

322 
i
, 
j
;

325 
lo›_comm_™˚s
 = (
lo›_t
 ***Ë
	`ˇŒoc
(
num_tcfg_lo›s
, (loop_t **));

326 
i
 = 0; i < 
num_tcfg_lo›s
; i++)

327 
lo›_comm_™˚s
[
i
] = (
lo›_t
 **Ë
	`ˇŒoc
(
num_tcfg_lo›s
,

328 (
lo›_t
 *));

330 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

331 
lo›_comm_™˚s
[
i
][i] = 
lo›s
[i];

332 
j
 = 
i
 + 1; j < 
num_tcfg_lo›s
; j++)

333 
	`£¨ch_comm⁄_™˚°‹
(
lo›s
[
i
],Üo›s[
j
]);

335 
	}
}

337 
	$dump_lo›s
() {

338 
i
;

339 
tcfg_node_t
 *
x
, *
y
, *
z
;

341 
	`¥ötf
("\ndumpÜoops\n");

342 
	`¥ötf
("----------------\n");

343 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

344 
x
 = 
tcfg
[
i
];

345 i‡(
lo›_m≠
[
i
] =
NULL


348 
y
 = 
lo›_m≠
[
i
]->
hód
;

349 
z
 = 
lo›_m≠
[
i
]->
èû
;

350 i‡(
y
 =
tcfg
[0])

351 
	`¥ötf
("%d.%d: \t%d[°¨à-Énd]\n", 
	`bbi_pid
(
x
), 
	`bbi_bid
(x),

352 
lo›_m≠
[
i
]->
id
);

354 
	`¥ötf
("%d.%d: \t%d[%d.%d - %d.%d] /Ö¨ít:%d\n", 
	`bbi_pid
(
x
),

355 
	`bbi_bid
(
x
), 
lo›_m≠
[
i
]->
id
, 
	`bbi_pid
(
y
), bbi_bid(y),

356 
	`bbi_pid
(
z
), 
	`bbi_bid
(z), 
lo›_m≠
[
i
]->
∑ª¡
->
id
);

358 
	}
}

360 
	$dump_lo›_comm_™˚s
() {

361 
i
, 
j
;

363 
	`¥ötf
("\ndumpÜoop commonáncestors:\n");

364 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

365 
j
 = 0; j < 
num_tcfg_lo›s
; j++) {

366 
	`¥ötf
("%2d ", 
lo›_comm_™˚s
[
i
][
j
]->
id
);

368 
	`¥ötf
("\n");

370 
	}
}

372 
	$lo›_¥o˚ss
() {

373 
	`föd_lo›s
();

374 
	`m≠_bbi_lo›
();

376 
	`lo›_ªœti⁄s
();

378 
	}
}

	@loops.h

24 #i‚de‡
LOOPS_H


25 
	#LOOPS_H


	)

28 
	~"tcfg.h
"

31 
	#MAX_LOOP_NEST
 32

	)

33 
	#LOOP_ENTRY
 0

	)

34 
	#LOOP_EXIT
 1

	)

37 
	#LOOP_ANALYZED
 0x2

	)

39 
lo›_t
 
	tlo›_t
;

42 
	#EQL_LB
 0x1

	)

43 
	#INV_LB
 0x2

	)

45 
	slo›_t
 {

46 
	mid
;

47 
tcfg_node_t
 *
	mhód
;

48 
tcfg_node_t
 *
	mèû
;

49 
lo›_t
 *
	m∑ª¡
;

50 
tcfg_ñök_t
 *
	mexôs
;

51 
	mÊags
;

52 
	mbound
;

54 * 
	mbiv_li°
;

55 
	mexec
;

58 
	mrBound
;

59 
	mrTy≥
;

60 
	mrId
;

62 
isI¬î
(
ÕId
, 
pLpId
);

63 
	#INNER_MOST
 -2

	)

64 
cmpLpOrdî
(
ÕId1
, 
ÕId2
);

65 
s˝_cmpLpOrdî
(
ÕId1
 , 
ÕId2
);

67 
föd_lo›s
();

68 
m≠_bbi_lo›
();

69 
lo›_ªœti⁄s
();

70 
tcfg_is_lo›_hód
(
tcfg_node_t
* 
bbi
);

72 
	gnum_tcfg_lo›s
;

73 
lo›_t
** 
	glo›s
;

74 
lo›_t
 **
	glo›_m≠
;

75 
lo›_t
*** 
	glo›_comm_™˚s
;

	@main.c

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~"cfg.h
"

26 
	~"b¥ed.h
"

27 
	~"ˇche.h
"

28 
	~"addªss.h
"

29 
	~"s˝_ˇche.h
"

31 
	gDEBUG_INFEAS
 = 0;

33 
	gPROGRESS_STEP
 = 10000;

34 
num_tcfg_edges
;

35 
num_tcfg_nodes
;

36 
tcfg_node_t
 **
tcfg
;

38 *
run_›t
;

39 
FILE
 *
fûp
, *
fu§
;

41 
	gb¥ed_scheme
;

42 
	gíabÀ_iˇche
 = 0;

43 
	gíabÀ_s˝_dˇche
 = 0;

44 
	gíabÀ_s˝_dl2ˇche
 = 0;

46 
	gíabÀ_û2ˇche
 = 0;

47 
	gíabÀ_ul2ˇche
 = 0;

49 
	gíabÀ_abs_ö°_ˇche
 = 0;

51 
	gX
, 
	gY
, 
	gB
, 
	gl1
, 
	gl2
;

52 
w‹kli°_p
*** 
s˝_addr£t_l1
;

53 
w‹kli°_p
*** 
s˝_addr£t_l2
;

55 
¥og_t
 
	g¥og
;

58 
	~"ö„asibÀ.h
"

61 *
	gö˛ude_¥oc
;

64 
	$föd¥oc
(
addr
) {

65 
i
;

66 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++)

67 i‡(
¥og
.
¥ocs
[
i
].
ß
 =
addr
)

68  
i
;

70 
	}
}

74 
	$ªad_fun˘i⁄s
(*
obj_fûe
) {

75 
FILE
 *
Âå
;

76 
‚ame
[80];

78 
id
;

79 
addr
;

80 
«me
[80];

82 
ö˛ude_¥oc
 = (*Ë
	`ˇŒoc
(
¥og
.
num_¥ocs
, ());

84 
	`•rötf
(
‚ame
, "%s.‚li°", 
obj_fûe
);

85 
Âå
 = 
	`f›í
(
‚ame
, "r");

87 i‡(!
Âå
) {

88 i‡(
DEBUG_INFEAS
)

89 
	`¥ötf
(

91 
obj_fûe
);

92 
id
 = 0; id < 
¥og
.
num_¥ocs
; id++)

93 
ö˛ude_¥oc
[
id
] = 1;

97 
	`fsˇnf
(
Âå
, "%x %s", &
addr
, 
«me
Ë!
EOF
) {

98 
id
 = 
	`föd¥oc
(
addr
);

99 i‡(
id
 != -1)

100 
ö˛ude_¥oc
[
id
] = 1;

102 
	`¥ötf
("W¨nög:Öro˚duª [0x%x] %†nŸ found.\n", 
addr
, 
«me
);

104 
	`f˛o£
(
Âå
);

106 
	}
}

107 
	$my_dump_tcfg
(* 
uƒﬁÀd_lo›_m≠
) {

108 
tcfg_node_t
** 
tcfg
;

109 
num_tcfg_nodes
;

110 
	`¥ötf
("\¬umbî o‡tcfgÇode:%d\n", 
num_tcfg_nodes
);

111 
i
;

112 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

113 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

114 
	`¥ötf
("tcfgÇode:%d (%dËÕ:%d", 
i
, 
bbi
->
id
, 
lo›_m≠
[bbi->id]->id);

115 
	`¥ötf
("\tout: (");

116 
tcfg_edge_t
* 
e
;

117 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

118 
	`¥ötf
(" %d", 
e
->
d°
->
id
);

120 
	`¥ötf
(")");

121 
	`¥ötf
("\tin: (");

122 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

123 
	`¥ötf
(" %d", 
e
->
§c
->
id
);

125 
	`¥ötf
(")\n");

128 
	`¥ötf
("\n DUMPÜoop\n");

129 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

130 
lo›_t
*
Õ
 = 
lo›s
[
i
];

131 
	`¥ötf
("lo› %d bound:%d", 
Õ
->
id
,Üp->
bound
);

132 i‡(
Õ
->
∑ª¡
 !
NULL


134 
	`¥ötf
("Ö¨ít:%d", 
Õ
->
∑ª¡
->
id
);

135 i‡(
uƒﬁÀd_lo›_m≠
 !
NULL


137 
	`¥ötf
(" m≠pög:%d", 
uƒﬁÀd_lo›_m≠
[
Õ
->
id
]);

138 
tcfg_node_t
* 
hód
 = 
Õ
->head;

139 
tcfg_node_t
* 
èû
 = 
Õ
->tail;

140 i‡(
èû
 =
NULL
) {

141 
èû
 = 
tcfg
[
num_tcfg_nodes
 - 1];

143 
	`¥ötf
("\n");

144 
	`¥ötf
("\thód: %d\n", 
hód
->
id
);

145 
	`¥ötf
("\âaû: %d\n", 
èû
->
id
);

146 
	`¥ötf
("\n");

157 
	`¥ötf
("checking instructions\n");

158 i‡(
íabÀ_iˇche
) {

159 
ˇche_t
 
ˇche
;

160 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

161 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

162 
	`¥ötf
("basi¯block %d\n", 
bbi
->
id
);

163 
ö°_id
;

164 
ö°_id
 = 0; in°_id < 
bbi
->
bb
->
num_ö°
; inst_id++) {

165 
de_ö°_t
*
ö°
 = &(
bbi
->
bb
->
code
[
ö°_id
]);

166 
mblk
 = 
	`MBLK_ID
(
bbi
->
bb
->
ß
,
ö°
->
addr
);

167 
off£t
 = 
	`CACHE_LINE
(
ö°
->
addr
);

168 
	`¥ötf
("\tö° %d: 0x%x (%dËoff£t=%d\n", 
ö°_id
, 
ö°
->
addr
,

169 
mblk
, 
off£t
);

174 
	}
}

176 
	$∑th_™Æysis
(*
fName
) {

177 
obj_fûe
[256];

179 
	`°r˝y
(
obj_fûe
, 
fName
);

180 
	`ªad_code
(
obj_fûe
);

183 
	`buûd_cfgs
();

187 
	`°r˝y
(
obj_fûe
, 
fName
);

188 
	`ªad_fun˘i⁄s
(
obj_fûe
);

191 
	`¥og_å™
();

194 
	`lo›_¥o˚ss
();

196 
i
;

197 
i
=0;i<
num_tcfg_lo›s
;i++) {

198 
lo›_t
* 
Õ
 = 
lo›s
[
i
];

199 
tcfg_node_t
* 
ÕHód

Õ
->
hód
;

200 
	`¥ötf
("\∆o› %dÜpHód bb:%d\n",
Õ
->
id
,
ÕHód
->
bb
->id);

201 i‡(
Õ
->
∑ª¡
!=
NULL
Ë
	`¥ötf
("\ç¨ít:%d\n",Õ->∑ª¡->
id
);

203 
	`exô
(0);

209 
	`£t_t›ﬁogiˇl_tcfg
();

214 
	`my_dump_tcfg
(
NULL
);

216 
	`°r˝y
(
obj_fûe
, 
fName
);

217 
	`ö„as_™Æysis
(
obj_fûe
);

219 
	`exô
(0);

222 i‡(
íabÀ_s˝_dˇche
) {

223 
assoc_dl1
, 
n£ts_dl1
, 
bsize_dl1
, 
mem_œt
[2];

224 
X
 = 
assoc_dl1
, 
Y
 = 
n£ts_dl1
, 
B
 = 
bsize_dl1
, 
l1
 = 
mem_œt
[0], 
l2
 = 0;

225 
	`s˝_¥e_addªss_™Æysis
(
fName
, &
s˝_addr£t_l1
);

226 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

227 
assoc_dl2
, 
n£ts_dl2
, 
bsize_dl2
, 
ˇche_dl2_œt
,

228 
ˇche_dl1_œt
;

229 
X
 = 
assoc_dl2
, 
Y
 = 
n£ts_dl2
, 
B
 = 
bsize_dl2
, 
l1
 = 
ˇche_dl2_œt
, 
l2
 =

230 
mem_œt
[0];

232 
	`s˝_¥e_addªss_™Æysis
(
fName
, &
s˝_addr£t_l2
);

237 
	`s˝_°‹e_addªss_£t
();

244 
i
;

245 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

246 
öf_¥oc_t
* 
ù
 = &(
öf_¥ocs
[
i
]);

247 
j
;

248 
j
 = 0; j < 
ù
->
num_bb
; j++) {

249 
öf_node_t
* 
ib
 = &(
ù
->
öf_cfg
[
j
]);

250 
lo›_t
*
Õ
 = (lo›_t*Ë
	`gëIbLo›
(
ib
);

251 i‡(
Õ
) {

252 
Õ
->
bound
 = 
	`gëIbLB
(
ib
);

253 
Õ
->
rId
 =Üp->
rTy≥
 =Üp->
rBound
 = -1;

257 
lo›s
[0]->
bound
 = 1;

261 i‡(
íabÀ_iˇche
) {

265 
ﬁd_num_tcfg_lo›s
 = 
num_tcfg_lo›s
;

266 * 
ﬁd_lo›_id
 = 
	`ˇŒoc
(
ﬁd_num_tcfg_lo›s
, ());

267 * 
ﬁd_lo›_bound
 = 
	`ˇŒoc
(
ﬁd_num_tcfg_lo›s
, ());

268 
i
;

269 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

270 
ﬁd_lo›_id
[
i
] = 
lo›s
[i]->
id
;

271 
ﬁd_lo›_bound
[
i
] = 
lo›s
[i]->
bound
;

274 
	`vútuÆ_uƒﬁl
();

277 
	`cﬁÀ˘_tcfg_edges
();

278 
	`buûd_bbi_m≠
();

279 
	`lo›_¥o˚ss
();

284 
	`£t_t›ﬁogiˇl_tcfg
();

289 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

290 
lo›_t
* 
Õ
 = 
lo›s
[
i
];

291 
tcfg_node_t
* 
hód
 = 
Õ
->head;

292 
cfg_node_t
* 
hód_bb
 = 
hód
->
bb
;

293 
öf_¥oc_t
* 
ùroc
 = &(
öf_¥ocs
[
hód_bb
->
¥oc
->
id
]);

294 
öf_node_t
* 
ihód
 = &(
ùroc
->
öf_cfg
[
hód_bb
->
id
]);

295 
Õ
->
bound
 = 
	`gëIbLB
(
ihód
) - 1;

297 
lo›s
[0]->
bound
 = 1;

299 i‡(
íabÀ_s˝_dˇche
) {

304 * 
uƒﬁÀd_lo›_m≠
 = 
	`ˇŒoc
(
num_tcfg_lo›s
, ());

305 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

306 
tcfg_node_t
* 
hód
 = 
lo›s
[
i
]->head;

307 
cfg_node_t
* 
hód_bb
 = 
hód
->
bb
;

308 
öf_¥oc_t
* 
ùroc
 = &(
öf_¥ocs
[
hód_bb
->
¥oc
->
id
]);

309 
öf_node_t
* 
ihód
 = &(
ùroc
->
öf_cfg
[
hód_bb
->
id
]);

310 i‡(
ihód
->
lo›_id
 == -1) {

311 
uƒﬁÀd_lo›_m≠
[
lo›s
[
i
]->
id
] = 0;

313 
uƒﬁÀd_lo›_m≠
[
lo›s
[
i
]->
id
] =

314 
ﬁd_lo›_id
[
öf_lo›s
[
ihód
->
lo›_id
].loop_id];

320 
	`s˝_ªˇlcuœã_ãmp‹Æ_sc›e
(
uƒﬁÀd_lo›_m≠
, 
ﬁd_lo›_bound
);

330 
	`my_dump_tcfg
(
NULL
);

332 
i
;

347 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

348 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

349 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

351 
	`¥ötf
("Basi¯block:%d bb:%d(%d)\n", 
bbi
->
id
,bbi->
bb
->id,bbi->bb->
num_d_ö°
);

352 
lo›_t
* 
ö√rLo›
 = 
lo›_m≠
[
bbi
->
id
];

353 
w‹kli°_p
 
ö√rLi°
 = 
NULL
;

354 
w‹kli°_p
 
ouãrLi°
 = 
NULL
;

355 
lo›_t
* 
ÕPoöãr
 = 
ö√rLo›
;

356 ; 
ÕPoöãr
 !
NULL
;ÜpPoöã∏ÕPoöãr->
∑ª¡
) {

357 
	`addToW‹kLi°
(&
ouãrLi°
, 
ÕPoöãr
);

359 
w‹kli°_p
 
lNode
;

360 
lNode
 = 
ouãrLi°
;ÜNodê!
NULL
;ÜNodêlNode->
√xt
) {

361 
	`addToW‹kLi°
(&
ö√rLi°
, 
lNode
->
d©a
);

363 
j
;

364 
bugs
=0;

365 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

366 
d©_ö°_t
* 
d©_ö°
 = 
bbi
->
bb
->
d_ö°li°
;

367 
d©_ö°
 = d©_ö° + 
j
;

368 
ö¢_t
* 
ö¢
 = 
d©_ö°
->insn;

369 
w‹kli°_p
 
add∫ode
 = 
bbi
->
addr£t_l1
[
j
];

370 ; 
add∫ode
 !
NULL
;ádd∫odêadd∫ode->
√xt
) {

371 
ßddr_p
 
ßddr
 = 
add∫ode
->
d©a
;

372 
w‹kli°_p
 
tsNode
 = 
ßddr
->
tsLi°
;

373 ;
tsNode
!=
NULL
;tsNodeÒsNode->
√xt
) {

374 
ts_p
 
ts
 = 
tsNode
->
d©a
;

375 
lo›_t
* 
ÕNode
 = 
ö√rLo›
;

376 
Êag
 =0;

377 ;
ÕNode
!=
NULL
;ÕNodeˆpNode->
∑ª¡
) {

378 i‡(
ÕNode
->
id
 =
ts
->
lo›_id
) {

379 
Êag
=1;

383 i‡(!
Êag
) {

384 
bugs
=1;

385 
	`¥ötf
("\tdö°[%d] 0x%s: 0x%x ",
j
,
ö¢
->
addr
,
ßddr
->
blkAddr
);

386 
	`s˝_¥öt_ts
(
ßddr
->
tsLi°
);

387 
	`¥ötf
("\t|");

388 
lNode
 = 
ö√rLi°
;lNode!=
NULL
;lNodêlNode->
√xt
) {

389 
lo›_t
* 
tmp
 = 
lNode
->
d©a
;

390 
	`¥ötf
("Ü%d",
tmp
->
id
);

392 
	`¥ötf
("\n");

397 i‡(
bugs
) {

398 
	`¥ötf
("inconsistency BUGGG\n");

399 
	`exô
(1);

404 * 
visôed
 = 
	`ˇŒoc
(
num_tcfg_nodes
, ());

405 
w‹kli°_p
 
qHód
, 
qTaû
;

406 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

407 
lo›_t
* 
lup
 = 
lo›s
[
i
];

408 
tcfg_node_t
* 
ÕHód
 = 
lup
->
hód
;

409 
j
;

410 
j
 = 0; j < 
num_tcfg_nodes
; j++) {

411 
visôed
[
j
] = 0;

413 
qHód
 = 
qTaû
 = 
NULL
;

414 
	`s˝_íqueue
(
ÕHód
, &
qHód
, &
qTaû
);

415 
visôed
[
ÕHód
->
id
] = 1;

416 
	`¥ötf
("lo›Üevñ %d\n",
lup
->
id
);

417 
	`s˝_em±y_queue
(
qHód
, 
qTaû
) == 0) {

418 
tcfg_node_t
* 
curNode
 = 
	`s˝_dequeue
(&
qHód
, &
qTaû
);

419 
	`¥ötf
("\tbbi:%d\n",
curNode
->
id
);

420 
tcfg_edge_t
* 
out_e
;

421 
out_e
 = 
curNode
->
out
; out_ê!
NULL
; out_êout_e->
√xt_out
) {

422 i‡(
	`s˝_cmpLpOrdî
(
lup
->
id
, 
lo›_m≠
[
out_e
->
d°
->id]->id) >= 0) {

423 i‡(
visôed
[
out_e
->
d°
->
id
] == 0) {

424 
	`s˝_íqueue
(
out_e
->
d°
, &
qHód
, &
qTaû
);

425 
visôed
[
out_e
->
d°
->
id
] = 1;

433 
	}
}

435 
	$mi¸ﬂrch_modñög
() {

436 i‡(
b¥ed_scheme
 !
NO_BPRED
)

437 
	`b¥ed_™Æysis
();

439 
	`pùe_™Æysis
();

440 
	}
}

442 
	$do_ûp
(*
obj_fûe
) {

443 
exô_vÆ
;

444 
s
[256];

447 
	`•rötf
(
s
, "%s.Õ", 
obj_fûe
);

448 
fûp
 = 
	`f›í
(
s
, "w");

449 
	`•rötf
(
s
, "%s.c⁄s", 
obj_fûe
);

450 
fu§
 = 
	`f›í
(
s
, "r");

451 i‡((
fûp
 =
NULL
Ë|| (
fu§
 == NULL)) {

452 
	`Ârötf
(
°dîr
, "failÅo open ILP/CONS files for writing/reading\n");

453 
	`exô
(1);

455 
	`c⁄°øöts
();

457 
	`f˛o£
(
fûp
);

458 
	`f˛o£
(
fu§
);

461 
	`•rötf
(
s
, "%s.ûp", 
obj_fûe
);

462 
fûp
 = 
	`f›í
(
s
, "w");

463 
	`Ârötf
(
fûp
, "enter Q\n");

464 
	`f˛o£
(
fûp
);

469 
	`•rötf
(
s
, "ˇà%s.Õ >> %s.ûp", 
obj_fûe
, obj_file);

470 
	`sy°em
(
s
);

472 
	`•rötf
(
s
, "%s.ûp", 
obj_fûe
);

473 
fûp
 = 
	`f›í
(
s
, "a");

474 
	`Ârötf
(
fûp
, "optimize\n");

475 
	`Ârötf
(
fûp
, "£àlogfûê%s.sﬁ\n", 
obj_fûe
);

476 
	`Ârötf
(
fûp
, "display solution objective\n");

477 
	`Ârötf
(
fûp
, "display solution variables -\n");

478 
	`Ârötf
(
fûp
, "quit\n");

479 
	`f˛o£
(
fûp
);

484 
	}
}

486 
	$run_e°
(*
obj_fûe
) {

487 
	`mi¸ﬂrch_modñög
();

488 
	`do_ûp
(
obj_fûe
);

489 
	}
}

491 
	$run_cfg
(*
obj_fûe
) {

492 
i
;

493 
s
[128];

494 
FILE
 *
fcfg
;

496 
	`•rötf
(
s
, "%s.cfg", 
obj_fûe
);

498 
fcfg
 = 
	`f›í
(
s
, "w");

499 i‡(
fcfg
 =
NULL
) {

500 
	`Ârötf
(
°dîr
, "ÁûÅÿ¸óã fûe: %s.cfg\n", 
s
);

501 
	`exô
(1);

504 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

505 
	`dump_cfg
(
fcfg
, &
¥og
.
¥ocs
[
i
]);

507 
	`f˛o£
(
fcfg
);

510 
	}
}

512 
„tch_width
;

517 
	sj±b
 {

518 
addr_t
 
	madr
;

519 
	m¡¨gë
;

520 
addr_t
 *
	m±¨gë
;

521 
	mödex
;

522 } 
	tj±b
;

524 
j±b
 * 
	gpj±b
;

525 
	gbj±b
 = 0;

526 
	gnjp
;

528 
	$lookup_j±abÀ
(
addr_t
 
adr
) {

529 
i
;

530 
num
 = 0;

531 
i
 = 0; i < 
njp
; i++) {

532 i‡(
pj±b
[
i
].
adr
 ==ádr) {

533 
num
 = 
pj±b
[
i
].
¡¨gë
;

536  
num
;

537 
	}
}

539 
	$gë_j±abÀ
(
addr_t
 
§c
, 
ödex
,áddr_à* 
èrgë
) {

540 
i
;

541 
i
 = 0; i < 
njp
; i++) {

542 i‡(
pj±b
[
i
].
adr
 =
§c
) {

543 *
èrgë
 = 
pj±b
[
i
].
±¨gë
[
ödex
];

547 
	`as£π
(
i
 < 
njp
);

548 
	}
}

550 
	$gë_j±abÀ_°©ic
(
addr_t
 
§c
,áddr_à* 
èrgë
) {

551 
i
, 
j
;

552 
èû
 = -1;

553 
i
 = 0; i < 
njp
; i++) {

554 i‡(
pj±b
[
i
].
adr
 =
§c
) {

555 
j
 = 
pj±b
[
i
].
ödex
;

556 *
èrgë
 = 
pj±b
[
i
].
±¨gë
[
j
];

557 
pj±b
[
i
].
ödex
++;

558 i‡(
pj±b
[
i
].
ödex
 =pj±b[i].
¡¨gë
)

559 
èû
 = 0;

561 
èû
 = 1;

566  
èû
;

567 
	}
}

569 
	$ªad_öjp
(* 
objfûe
) {

570 
èbÀsize
, 
i
, 
j
;

571 
fûe
[100];

572 
FILE
 *
·abÀ
;

573 
	`•rötf
(
fûe
, "%s.jèbÀ", 
objfûe
);

574 
·abÀ
 = 
	`f›í
(
fûe
, "r");

575 i‡(!
·abÀ
) {

577 
bj±b
 = 0;

579 
bj±b
 = 1;

580 
	`fsˇnf
(
·abÀ
, "%d", &
èbÀsize
);

581 
njp
 = 
èbÀsize
;

582 
pj±b
 = (
j±b
 *Ë
	`ˇŒoc
(
èbÀsize
, (jptb));

583 
i
 = 0; i < 
èbÀsize
; i++) {

584 
	`fsˇnf
(
·abÀ
, "%08x", &
pj±b
[
i
].
adr
);

585 
	`fsˇnf
(
·abÀ
, "%d", &
pj±b
[
i
].
¡¨gë
);

586 
pj±b
[
i
].
ödex
 = 0;

587 
pj±b
[
i
].
±¨gë
 = (
addr_t
 *Ë
	`ˇŒoc
’j±b[i].
¡¨gë
,

588 (
addr_t
));

589 
j
 = 0; j < 
pj±b
[
i
].
¡¨gë
; j++)

590 
	`fsˇnf
(
·abÀ
, "%08x", &
pj±b
[
i
].
±¨gë
[
j
]);

592 
	`f˛o£
(
·abÀ
);

595 
	}
}

597 *
	gpdïth
;

598 
	gbdïth
 = 0;

600 
	$ã°_dïth
(
pid
, 
dïth
) {

601 i‡(
dïth
 < 
pdïth
[
pid
])

605 
	}
}

607 
	$ªad_ªcursive
(* 
objfûe
) {

608 
fûe
[100];

609 
FILE
 *
·abÀ
;

610 
size
, 
i
;

611 
	`•rötf
(
fûe
, "%s.ªcursive", 
objfûe
);

612 
·abÀ
 = 
	`f›í
(
fûe
, "r");

613 i‡(!
·abÀ
) {

614 
bdïth
 = 0;

616 
bdïth
 = 1;

617 
	`fsˇnf
(
·abÀ
, "%d", &
size
);

618 
pdïth
 = (*Ë
	`ˇŒoc
(
size
, (pdepth));

619 
i
 = 0; i < 
size
; i++)

620 
	`fsˇnf
(
·abÀ
, "%d", &
pdïth
[
i
]);

621 
	`f˛o£
(
·abÀ
);

623 
	}
}

626 
	gX
,
	gY
,
	gB
,
	gl1
,
	gl2
;

627 
assoc_dl1
, 
n£ts_dl1
,
bsize_dl1
,
mem_œt
[2];

628 
	$s˝_aw¨e_d©aˇche_™Æysis
(*
bö_‚ame
) {

630 
ticks
 
a
, 
b
;

645 
a
 = 
	`gëticks
();

648 
íabÀ_dˇche
 = 0;

649 
	`¥ötf
("\nCACHE ANALYSIS: %s\n", 
bö_‚ame
);

650 
	`fÊush
(
°dout
);

652 
	`m∑ex_d©aˇche
();

653 
b
 = 
	`gëticks
();

654 
	`¥ötf
("\n===================================================\n");

655 
	`¥ötf
("Cachê™Æysi†timê%l‡£cs\n", (
b
 - 
a
Ë/ ((1.0Ë* 
CPU_MHZ
));

656 
	`¥ötf
("===================================================\n");

657 
	}
}

660 
	$™Æyze_ˇche_hõørchy
() {

661 
ö°_chmc_l1
 = 
ö°_chmc_l2
 = 
NULL
;

662 
ö°_age_l1
 = 
ö°_age_l2
 = 
NULL
;

663 
	`¥ötf
("\n=========== Instruction cacheánalysis ===========\n\n");

665 
ticks
 
a
, 
b
;

667 
a
 = 
	`gëticks
();

668 #ifde‡
_DEBUG_CRPD


669 
	`¥ötf
("Starting cacheánalysis........\n");

672 i‡(
íabÀ_iˇche
) {

676 i‡(
b¥ed_scheme
 !
NO_BPRED
)

677 
	`cﬁÀ˘_mp_ö°s
();

680 
	`™Æyze_abs_ö°r_ˇche_Æl
();

683 
b
 = 
	`gëticks
();

684 #ifde‡
_DEBUG_CRPD


685 
	`¥ötf
("Finished cacheánalysis........\n");

688 
	`¥ötf
("===================================================\n");

689 
	`¥ötf
("Maximum cacheánalysisÅime = %lf msecs\n",

690 1000 * (
b
 - 
a
Ë/ ((1.0Ë* 
CPU_MHZ
));

691 
	`¥ötf
("===================================================\n");

692 
	}
}

694 
	$s˝_aw¨e_™Æyze_ˇche_hõørchy
(* 
bö_‚ame
) {

695 i‡(
íabÀ_s˝_dˇche
 == 1) {

696 
assoc_dl1
, 
n£ts_dl1
, 
bsize_dl1
, 
mem_œt
[2];

697 
	`¥ötf
("\n\n================= L1 data cache ===================\n");

699 
X
 = 
assoc_dl1
, 
Y
 = 
n£ts_dl1
, 
B
 = 
bsize_dl1
, 
l1
 = 
mem_œt
[0], 
l2
 = 0;

700 
	`m∑ex_d©aˇche
(
L1_DCACHE_ANALYSIS
);

701 i‡(
íabÀ_s˝_dl2ˇche
 =1 || 
íabÀ_ul2ˇche
 == 1) {

702 
assoc_dl2
, 
n£ts_dl2
, 
bsize_dl2
, 
ˇche_dl2_œt
;

703 i‡(
íabÀ_s˝_dl2ˇche
)

704 
	`¥ötf
(

707 
	`¥ötf
(

710 
X
 = 
assoc_dl2
, 
Y
 = 
n£ts_dl2
, 
B
 = 
bsize_dl2
, 
l1
 = 
ˇche_dl2_œt
, 
l2
 =

711 
mem_œt
[0];

712 i‡(
íabÀ_s˝_dl2ˇche
 == 1)

713 
	`m∑ex_d©aˇche
(
L2_DCACHE_ANALYSIS
);

714 i‡(
íabÀ_ul2ˇche
 == 1) {

715 
	`£t_ˇche_l2
();

716 
	`m∑ex_d©aˇche
(
UNIFIED_CACHE_ANALYSIS
);

721 
	}
}

723 
	$maö
(
¨gc
, **
¨gv
) {

724 
dbg
 = 1;

725 
fName
[256], 
°r
[256];

727 
	`°r˝y
(
fName
, 
¨gv
[
¨gc
 - 1]);

728 i‡(
dbg
) {

729 
	`¥ötf
("\nFûê«mê%s", 
fName
);

730 
	`fÊush
(
°dout
);

731 
	`¥ötf
(

733 
	`¥ötf
(

735 
	`¥ötf
("\n Contrainst format: <type> L1_id L2_id k");

736 
	`¥ötf
("\nÅype = \"eql\" : L1'sÜoop bound <= L2's iteration + k");

737 
	`¥ötf
("\nÅype = \"inv\" : L1'sÜoop bound <= k - L2's iteration");

739 i‡(
¨gc
 <= 1) {

740 
	`Ârötf
(
°dîr
, "Usage:\n");

741 
	`Ârötf
(
°dîr
, "%†<›ti⁄s> <bíchm¨k>\n", 
¨gv
[0]);

742 
	`exô
(1);

745 
	`öô_iß
();

748 
	`ªad_›t
(
¨gc
, 
¨gv
);

750 
	`¥ötf
("\n");

751 i‡(
íabÀ_iˇche
) {

752 
n£ts
, 
assoc
, 
bsize
;

753 
n£ts_l2
, 
assoc_l2
, 
bsize_l2
;

754 
n£ts_dl2
, 
assoc_dl2
, 
bsize_dl2
;

755 
	`¥ötf
("l1 instruction cache\n");

756 
	`¥ötf
("\ä£t:%dássoc:%d bsize:%d\n", 
n£ts
, 
assoc
, 
bsize
);

757 i‡(
íabÀ_û2ˇche
) {

758 
	`¥ötf
("l2 instruction cache\n");

759 
	`¥ötf
("\ä£t_l2:%dássoc_l2:%d bsize_l2:%d\n", 
n£ts_l2
, 
assoc_l2
,

760 
bsize_l2
);

761 } i‡(
íabÀ_ul2ˇche
) {

762 
	`¥ötf
("ul2 cache\n");

763 
ˇche_t
 
ˇche_l2
;

764 
	`¥ötf
("\ä£t_dl2:%dássoc_dl2:%d bsize_dl2:%d\n", 
n£ts_dl2
,

765 
assoc_dl2
, 
bsize_dl2
);

766 
	`¥ötf
("\ä£t_dl2:%dássoc_dl2:%d bsize_dl2:%d\n", 
ˇche_l2
.
ns
,

767 
ˇche_l2
.
«
, cache_l2.
ls
);

771 i‡(
íabÀ_s˝_dˇche
) {

772 
n£ts_dl1
, 
assoc_dl1
, 
bsize_dl1
;

773 
n£ts_dl2
, 
assoc_dl2
, 
bsize_dl2
;

774 
	`¥ötf
("l1 data cache\n");

775 
	`¥ötf
("\ä£t_dl1:%dássoc_dl1:%d bsize_dl1:%d\n", 
n£ts_dl1
,

776 
assoc_dl1
, 
bsize_dl1
);

777 i‡(
íabÀ_s˝_dl2ˇche
) {

778 
	`¥ötf
("l2 data cache\n");

779 
	`¥ötf
("\ä£t_dl2:%dássoc_dl2:%d bsize_dl2:%d\n", 
n£ts_dl2
,

780 
assoc_dl2
, 
bsize_dl2
);

784 
	`exô
(0);

787 
	`°r˝y
(
°r
, 
fName
);

788 
	`ªad_öjp
(
°r
);

791 
	`°r˝y
(
°r
, 
fName
);

792 
	`ªad_ªcursive
(
°r
);

795 i‡(
	`°rcmp
(
run_›t
, "CFG") == 0) {

796 
	`°r˝y
(
°r
, 
fName
);

797 
	`ªad_code
(
°r
);

798 
	`buûd_cfgs
();

799 
	`run_cfg
(
°r
);

803 
	`°r˝y
(
°r
, 
fName
);

804 
	`∑th_™Æysis
(
°r
);

806 
	`°r˝y
(
°r
, 
fName
);

807 
	`™Æyze_ˇche_hõørchy
();

809 
	`s˝_aw¨e_™Æyze_ˇche_hõørchy
(
fName
);

812 
	`s˝_dump_addªss
();

816 
	`run_e°
(
¨gv
[
¨gc
 - 1]);

821 *** 
exãnd_˝ªd_times
;

822 * 
numbîofC⁄ãxt
;

823 
tcfg_edge_t
 **
tcfg_edges
;

824 
i
;

825 
i
 = 0; i < 
num_tcfg_edges
; i++) {

826 
tcfg_edge_t
* 
e
 = 
tcfg_edges
[
i
];

827 
tcfg_node_t
* 
§c
 = 
e
->src;

828 
tcfg_node_t
* 
d°
 = 
e
->dst;

829 
num_c⁄ãxt
 = 
numbîofC⁄ãxt
[
§c
->
id
];

830 
Êag
 = (
num_c⁄ãxt
 > 1);

831 
vC⁄ãxt
;

833 
vC⁄ãxt
 = 0; vC⁄ãxà< 
num_c⁄ãxt
; vContext++) {

834 
	`¥ötf
("WCET o‡edgê%d_%d i¿c⁄ãxà%d: %d", 
§c
->
id
, 
d°
->id,

835 
vC⁄ãxt
, 
exãnd_˝ªd_times
[
i
][vContext][0]);

836 i‡(
d°
->
bb
->
num_d_ö°
>0) {

837 
	`¥ötf
(" (%d)",
d°
->
bb
->
num_d_ö°
);

839 
	`¥ötf
("\n");

844 
	}
}

	@options.c

23 
	~"comm⁄.h
"

28 
	$ªad_›t
(
¨gc
, **
¨gv
)

30 #ifde‡
TARGET_SS


31 
	`ªad_›t_ss
(
¨gc
, 
¨gv
);

33 
	}
}

	@pipeline.c

25 
	~<°rög.h
>

26 
	~<°dlib.h
>

27 
	~"cfg.h
"

28 
	~"ˇche.h
"

29 
	~"b¥ed.h
"

30 
	~"lo›s.h
"

31 
	~"pùñöe.h
"

32 
	~"s˝_ˇche.h
"

33 
	~"s˝_addªss.h
"

35 
tcfg_node_t
 **
tcfg
;

36 
num_tcfg_nodes
;

37 
tcfg_edge_t
 **
tcfg_edges
;

38 
num_tcfg_edges
;

39 
ˇche_t
 
ˇche
;

40 
ˇche_t
 
ˇche_l2
;

41 
b¥ed_scheme
;

42 
íabÀ_iˇche
;

43 ***
hô_miss
;

44 *
num_hô_miss
;

45 
lo›_t
 ***
bbi_hm_li°
;

46 *
num_bbi_hm_li°
;

47 
de_ö°_t
 ***
mp_ö°s
;

48 *
num_mp_ö°s
;

49 
num_eg_ö°s
;

50 **
num_mblk_c⁄Êi˘s
;

51 
lo›_t
 **
lo›s
;

52 
lo›_t
 **
lo›_m≠
;

53 
num_tcfg_lo›s
;

54 
mem_blk_t
 **
mp_gí
;

55 
íabÀ_û2ˇche
;

56 
íabÀ_ul2ˇche
;

58 
	gpùe_°ages
 = 5;

59 
	gpùe_ibuf_size
;

60 
	gpùe_iwö_size
;

61 
	g¥ﬁog_size
, 
	gpùe_iwö_size
;

62 
code_lök_t
 **
	g¥ﬁogs
, **
	gïûogs
;

63 
mas_ö°_t
 **
	gbodõs
, *
	g°¨t_body
;

64 **
	g˝ªd_times
, **
	gm¥ed_times
, 
	g°¨t_time
;

68 *
	gmœt_bbi
;

71 *
	gmax_ñog_Àn
;

73 *
	gmœt_mpö°
;

76 *
	gnum_∂og_åunc
;

77 
mblk_èg_t
 *
	gtmp_cs
;

79 
mblk_èg_t
 *
	gtmp_cs_l2
;

80 
	gnum_∂ogs
, 
	gnum_ñogs
;

82 
íabÀ_s˝_dˇche
;

83 
íabÀ_s˝_dl2ˇche
;

84 *** 
	gexãnd_˝ªd_times
;

85 * 
	gnumbîOfLo›
;

86 * 
	gnumbîofC⁄ãxt
;

92 
	$£t_mœt_bbi
() {

93 
bbi_id
, 
i
;

94 
cfg_node_t
 *
bb
;

95 
de_ö°_t
 *
ö°
;

97 
mœt_bbi
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

98 
bbi_id
 = 0; bbi_id < 
num_tcfg_nodes
; bbi_id++) {

99 
bb
 = 
tcfg
[
bbi_id
]->bb;

100 
i
 = 
bb
->
num_ö°
 - 1; i >= 0; i--) {

101 i‡(
	`max_ö°_œt
(&
bb
->
code
[
i
]) > 1)

104 
mœt_bbi
[
bbi_id
] = 
i
;

106 
	}
}

108 
	#MAX_REGS
 256

	)

109 
	gdï_ªgs
[
MAX_REGS
];

111 
	$lookup_mœt
(
‹ig
, 
di°
, 
tcfg_node_t
 *
bbi
, 
no_mœt
) {

112 
i
, 
k
, 
tmp
, 
r
;

113 
de_ö°_t
 *
ö°
;

114 
tcfg_edge_t
 *
e
;

116 i‡(
no_mœt
 && (
mœt_bbi
[
bbi
->
id
] < 0)) {

117 
di°
 +
bbi
->
bb
->
num_ö°
;

118 i‡((
bbi
->
ö
 =
NULL
Ë|| (
di°
 >
pùe_iwö_size
))

120 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
)

121 
	`lookup_mœt
(
‹ig
, 
di°
, 
e
->
§c
, 1);

125 
i
 = 
bbi
->
bb
->
num_ö°
 - 1; i >= 0; i--) {

126 
ö°
 = &
bbi
->
bb
->
code
[
i
];

127 
k
 = 0; k < 
ö°
->
num_out
; k++) {

128 
r
 = 
ö°
->
out
[
k
];

129 i‡(
dï_ªgs
[
r
] =
‹ig
) {

130 
tmp
 = 
pùe_iwö_size
 - (
di°
 + (
bbi
->
bb
->
num_ö°
 - 
i
));

131 
max_ñog_Àn
[
‹ig
] = 
	`max
(
tmp
, max_elog_len[orig]);

135 i‡(
	`max_ö°_œt
(
ö°
) > 1) {

136 
k
 = 0; k < 
ö°
->
num_ö
; k++) {

137 
r
 = 
ö°
->
ö
[
k
];

138 
dï_ªgs
[
r
] = 
‹ig
;

143 
di°
 +
bbi
->
bb
->
num_ö°
;

144 i‡(
di°
 < 
pùe_iwö_size
) {

145 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
)

146 
	`lookup_mœt
(
‹ig
, 
di°
, 
e
->
§c
, 0);

148 
	}
}

150 
	$bound_ñog_Àn
() {

151 
i
;

152 
tcfg_edge_t
 *
e
;

154 
max_ñog_Àn
 = (*Ë
	`mÆloc
(
num_tcfg_nodes
 * ());

155 
i
 = 0; i < 
MAX_REGS
; i++)

156 
dï_ªgs
[
i
] = -1;

158 
max_ñog_Àn
[0] = 0;

159 i‡(
mœt_bbi
[0] >= 0)

160 
max_ñog_Àn
[0] = 
pùe_iwö_size


161 - (
tcfg
[0]->
bb
->
num_ö°
 - 
mœt_bbi
[0]);

163 
i
 = 1; i < 
num_tcfg_nodes
; i++) {

164 
max_ñog_Àn
[
i
] = 0;

165 
	`lookup_mœt
(
i
, 0, 
tcfg
[i], 1);

167 
	}
}

169 
	$föd_mœt_mpö°
() {

170 
i
, 
k
;

171 
tcfg_edge_t
 *
e
;

173 
mœt_mpö°
 = (*Ë
	`ˇŒoc
(
num_tcfg_edges
, ());

174 
num_∂og_åunc
 = (*Ë
	`ˇŒoc
(
num_tcfg_edges
, ());

176 
i
 = 0; i < 
num_tcfg_edges
; i++) {

177 
k
 = 0; k < 
num_mp_ö°s
[
i
]; k++) {

178 i‡(
	`max_ö°_œt
(
mp_ö°s
[
i
][
k
]) > 1) {

179 
mœt_mpö°
[
i
] = 
k
 + 1;

184 
	}
}

188 
	$√w_¥ﬁog
(
log_£t
, 
tcfg_edge_t
 **
∑th
, 
∑th_Àn
,

189 
num_skù
) {

190 
i
, 
k
, 
num
 = 0, 
num_mp
 = 0, 
èg
, 
£t
, 
edge_id
, 
max_num_mp
, 
£t_l2
,

191 
èg_l2
;

192 
tcfg_node_t
 *
bbi
, *
mbbi
;

193 
Queue
 
queue
;

194 
code_lök_t
 *
∂og
;

195 
mas_ö°_t
 
mas_ö°
;

196 
addr_t
 
ß
;

198 i‡(
num_skù
 < 0)

199 
num_skù
 = 0;

201 
	`mem£t
(
tmp_cs
, 0, 
ˇche
.
ns
 * (
mblk_èg_t
));

204 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

205 
	`mem£t
(
tmp_cs_l2
, 0, 
ˇche_l2
.
ns
 * (
mblk_èg_t
));

208 
	`öô_queue
(&
queue
, (
mas_ö°_t
));

210 
i
 = 
∑th_Àn
 - 1; i >= 0; i--) {

211 
bbi
 = 
∑th
[
i
]->
§c
;

212 
ß
 = 
bbi
->
bb
->sa;

214 
k
 = 
num_skù
; k < 
bbi
->
bb
->
num_ö°
; k++) {

216 
mas_ö°
.
ö°
 = &
bbi
->
bb
->
code
[
k
];

217 
mas_ö°
.
bbi_id
 = 
bbi
->
id
;

218 
mas_ö°
.
mblk_id
 = 
	`MBLK_ID
(
ß
, mas_ö°.
ö°
->
addr
);

220 
mas_ö°
.
mblk_id_l2
 = 
	`MBLK_ID_L2
(
ß
, mas_ö°.
ö°
->
addr
);

222 
mas_ö°
.
bp_Êag
 = 
BP_CPRED
;

225 
èg
 = 
	`TAG
(
mas_ö°
.
ö°
->
addr
);

226 
£t
 = 
	`SET
(
mas_ö°
.
ö°
->
addr
);

227 
èg_l2
 = 
	`TAG_L2
(
mas_ö°
.
ö°
->
addr
);

228 
£t_l2
 = 
	`SET_L2
(
mas_ö°
.
ö°
->
addr
);

230 i‡(
tmp_cs
[
£t
].
vÆid
 == 0)

231 
mas_ö°
.
ic_Êag
 = 
IC_UNCLEAR
;

232 i‡(
tmp_cs
[
£t
].
èg
 ==Åag)

233 
mas_ö°
.
ic_Êag
 = 
IC_HIT
;

235 
mas_ö°
.
ic_Êag
 = 
IC_MISS
;

236 
tmp_cs
[
£t
].
vÆid
 = 1;

237 
tmp_cs
[
£t
].
èg
 =Åag;

240 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

241 i‡(
tmp_cs_l2
[
£t_l2
].
vÆid
 == 0)

242 
mas_ö°
.
ic_Êag_l2
 = 
IC_UNCLEAR
;

243 i‡(
tmp_cs_l2
[
£t_l2
].
èg
 =
èg_l2
)

244 
mas_ö°
.
ic_Êag_l2
 = 
IC_HIT
;

246 
mas_ö°
.
ic_Êag_l2
 = 
IC_MISS
;

247 
tmp_cs_l2
[
£t_l2
].
vÆid
 = 1;

248 
tmp_cs_l2
[
£t_l2
].
èg
 = 
èg_l2
;

251 i‡(
íabÀ_s˝_dˇche
 || 
íabÀ_ul2ˇche
) {

252 
iTy≥
 = 
	`ö°_ty≥
(
mas_ö°
.
ö°
);

253 i‡(
iTy≥
 =
INST_LOAD
) {

254 
mas_ö°
.
dc_Êag
 = 
DC_UNCLEAR
;

255 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

256 
mas_ö°
.
dc_Êag_l2
 = 
DC_UNCLEAR
;

257 } i‡(
iTy≥
 =
INST_STORE
) {

258 
mas_ö°
.
dc_Êag
 = 
DC_STORE
;

259 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

260 
mas_ö°
.
dc_Êag_l2
 = 
DC_STORE
;

262 
mas_ö°
.
dc_Êag
 = 
DC_HIT
;

263 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

264 
mas_ö°
.
dc_Êag_l2
 = 
DC_HIT
;

267 
mas_ö°
.
dc_Êag
 = 
DC_HIT
;

268 
mas_ö°
.
dc_Êag_l2
 = 
DC_HIT
;

271 
	`íqueue
(&
queue
, &
mas_ö°
);

272 
num
++;

274 
num_skù
 = 0;

275 i‡((
b¥ed_scheme
 =
NO_BPRED
Ë|| !
	`c⁄d_bbi
(
bbi
))

279 
edge_id
 = 
∑th
[
i
]->
id
;

280 i‡(
mœt_mpö°
[
edge_id
] > 
max_ñog_Àn
[
bbi
->
id
])

283 
max_num_mp
 = 
	`mö
(
num_mp_ö°s
[
edge_id
], 
max_ñog_Àn
[
bbi
->
id
]);

284 i‡(
bbi
->
out
 =
∑th
[
i
])

285 
mbbi
 = 
bbi
->
out
->
√xt_out
->
d°
;

287 
mbbi
 = 
bbi
->
out
->
d°
;

288 
num_mp
 = 0;

289 
k
 = 0; k < 
max_num_mp
; k++) {

290 i‡(
num_mp
 >
mbbi
->
bb
->
num_ö°
) {

291 
mbbi
 = mbbi->
out
->
d°
;

292 
num_mp
 = 0;

294 
mas_ö°
.
ö°
 = 
mp_ö°s
[
edge_id
][
k
];

295 
mas_ö°
.
bbi_id
 = 
mbbi
->
id
;

296 
mas_ö°
.
mblk_id
 = 
	`MBLK_ID
(
mbbi
->
bb
->
ß
, mas_ö°.
ö°
->
addr
);

298 
mas_ö°
.
mblk_id_l2
 = 
	`MBLK_ID_L2
(
ß
, mas_ö°.
ö°
->
addr
);

300 i‡(
i
 == 0)

301 
mas_ö°
.
bp_Êag
 = 
BP_MPRED
;

303 
mas_ö°
.
bp_Êag
 = 
BP_UNCLEAR
;

304 
èg
 = 
	`TAG
(
mas_ö°
.
ö°
->
addr
);

305 
£t
 = 
	`SET
(
mas_ö°
.
ö°
->
addr
);

307 
èg_l2
 = 
	`TAG_L2
(
mas_ö°
.
ö°
->
addr
);

308 
£t_l2
 = 
	`SET_L2
(
mas_ö°
.
ö°
->
addr
);

310 i‡(
tmp_cs
[
£t
].
vÆid
 == 0)

311 
mas_ö°
.
ic_Êag
 = 
IC_UNCLEAR
;

312 i‡(
tmp_cs
[
£t
].
èg
 ==Åag)

313 
mas_ö°
.
ic_Êag
 = 
IC_HIT
;

315 
mas_ö°
.
ic_Êag
 = 
IC_MISS
;

316 
tmp_cs
[
£t
].
vÆid
 = 1;

320 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

321 i‡(
tmp_cs_l2
[
£t_l2
].
vÆid
 == 0)

322 
mas_ö°
.
ic_Êag_l2
 = 
IC_UNCLEAR
;

323 i‡(
tmp_cs_l2
[
£t_l2
].
èg
 =
èg_l2
)

324 
mas_ö°
.
ic_Êag_l2
 = 
IC_HIT
;

326 
mas_ö°
.
ic_Êag_l2
 = 
IC_MISS
;

327 
tmp_cs_l2
[
£t_l2
].
vÆid
 = 1;

331 i‡(
íabÀ_s˝_dˇche
 || 
íabÀ_ul2ˇche
) {

332 
iTy≥
 = 
	`ö°_ty≥
(
mas_ö°
.
ö°
);

333 i‡(
iTy≥
 =
INST_LOAD
) {

334 
mas_ö°
.
dc_Êag
 = 
DC_UNCLEAR
;

335 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

336 
mas_ö°
.
dc_Êag_l2
 = 
DC_UNCLEAR
;

337 } i‡(
iTy≥
 =
INST_STORE
) {

338 
mas_ö°
.
dc_Êag
 = 
DC_STORE
;

339 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

340 
mas_ö°
.
dc_Êag_l2
 = 
DC_STORE
;

342 
mas_ö°
.
dc_Êag
 = 
DC_HIT
;

343 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

344 
mas_ö°
.
dc_Êag_l2
 = 
DC_HIT
;

347 
mas_ö°
.
dc_Êag
 = 
DC_HIT
;

348 
mas_ö°
.
dc_Êag_l2
 = 
DC_HIT
;

351 
	`íqueue
(&
queue
, &
mas_ö°
);

352 
num
++;

353 
num_mp
++;

355 i‡(
i
 == 0)

356 
num_∂og_åunc
[
log_£t
] = 
max_num_mp
;

360 
∂og
 = (
code_lök_t
 *Ë
	`ˇŒoc
(1, (code_link_t));

361 
	`CHECK_MEM
(
∂og
);

362 
∂og
->
code
 = (
mas_ö°_t
 *Ë
	`ˇŒoc
(
num
, (mas_inst_t));

363 
	`CHECK_MEM
(
∂og
->
code
);

364 
k
 = 0; k < 
num
; k++)

365 
∂og
->
code
[
k
] = *((
mas_ö°_t
 *Ë
	`dequeue
(&
queue
));

366 
∂og
->
num_ö°
 = 
num
;

367 
∂og
->
√xt
 = 
¥ﬁogs
[
log_£t
];

368 
¥ﬁogs
[
log_£t
] = 
∂og
;

370 
	`‰ì_queue
(&
queue
);

371 
	}
}

373 
	$åav_backw¨d
(
log_£t
, 
tcfg_edge_t
 **
∑th
, 
∑th_Àn
,

374 
code_Àn
) {

375 
tcfg_node_t
 *
bbi
;

376 
tcfg_edge_t
 *
e
;

377 
i
;

379 
bbi
 = 
∑th
[
∑th_Àn
 - 1]->
§c
;

380 
code_Àn
 +
bbi
->
bb
->
num_ö°
;

381 i‡((
code_Àn
 >
¥ﬁog_size
Ë|| (
bbi
->
ö
 =
NULL
))

382 
	`√w_¥ﬁog
(
log_£t
, 
∑th
, 
∑th_Àn
, 
code_Àn
 - 
¥ﬁog_size
);

384 
e
 = 
bbi
->
ö
;É !
NULL
;É =É->
√xt_ö
) {

385 
∑th
[
∑th_Àn
] = 
e
;

386 
	`åav_backw¨d
(
log_£t
, 
∑th
, 
∑th_Àn
 + 1, 
code_Àn
);

389 
	}
}

393 
	$cﬁÀ˘_¥ﬁogs
() {

394 
tcfg_edge_t
 **
∑th
;

395 
i
;

397 
∑th
 = (
tcfg_edge_t
 **Ë
	`ˇŒoc
(
¥ﬁog_size
, (tcfg_edge_t *));

398 
	`CHECK_MEM
(
∑th
);

399 
¥ﬁogs
 = (
code_lök_t
 **Ë
	`ˇŒoc
(
num_tcfg_edges
, (code_link_t *));

400 
	`CHECK_MEM
(
¥ﬁogs
);

402 
i
 = 0; i < 
num_tcfg_edges
; i++) {

403 
∑th
[0] = 
tcfg_edges
[
i
];

404 
	`åav_backw¨d
(
i
, 
∑th
, 1, 0);

407 
	`‰ì
(
∑th
);

408 
	}
}

411 
	$√w_ïûog
(
log_£t
, 
tcfg_edge_t
 **
∑th
, 
∑th_Àn
) {

412 
i
, 
k
, 
num
 = 0, 
num1
 = 0, 
m
 = 0, 
max_Àn
, 
hô_mœt
, 
£t
, 
èg
, 
£t_l2
,

413 
èg_l2
;

414 
tcfg_node_t
 *
bbi
;

415 
Queue
 
queue
;

416 
code_lök_t
 *
ñog
;

417 
mas_ö°_t
 
mas_ö°
;

418 
addr_t
 
ß
;

420 
max_Àn
 = 
max_ñog_Àn
[
tcfg_edges
[
log_£t
]->
§c
->
id
];

421 
	`mem£t
(
tmp_cs
, 0, 
ˇche
.
ns
 * (
mblk_èg_t
));

424 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

425 
	`mem£t
(
tmp_cs_l2
, 0, 
ˇche_l2
.
ns
 * (
mblk_èg_t
));

428 
	`öô_queue
(&
queue
, (
de_ö°_t
));

430 
i
 = 0; i < 
∑th_Àn
; i++) {

431 
hô_mœt
 = 0;

433 
bbi
 = 
∑th
[
i
]->
d°
;

434 
ß
 = 
bbi
->
bb
->sa;

435 
k
 = 0; (k < 
bbi
->
bb
->
num_ö°
Ë&& (
m
 < 
max_Àn
); k++, m++) {

436 
mas_ö°
.
ö°
 = &
bbi
->
bb
->
code
[
k
];

437 
mas_ö°
.
bbi_id
 = 
bbi
->
id
;

438 
mas_ö°
.
mblk_id
 = 
	`MBLK_ID
(
ß
, mas_ö°.
ö°
->
addr
);

440 
mas_ö°
.
mblk_id_l2
 = 
	`MBLK_ID_L2
(
ß
, mas_ö°.
ö°
->
addr
);

442 
mas_ö°
.
bp_Êag
 = 
BP_CPRED
;

444 
èg
 = 
	`TAG
(
mas_ö°
.
ö°
->
addr
);

445 
£t
 = 
	`SET
(
mas_ö°
.
ö°
->
addr
);

447 
èg_l2
 = 
	`TAG_L2
(
mas_ö°
.
ö°
->
addr
);

448 
£t_l2
 = 
	`SET_L2
(
mas_ö°
.
ö°
->
addr
);

450 i‡(
tmp_cs
[
£t
].
vÆid
 == 0)

451 
mas_ö°
.
ic_Êag
 = 
IC_UNCLEAR
;

452 i‡(
tmp_cs
[
£t
].
èg
 ==Åag)

453 
mas_ö°
.
ic_Êag
 = 
IC_HIT
;

455 
mas_ö°
.
ic_Êag
 = 
IC_MISS
;

456 
tmp_cs
[
£t
].
vÆid
 = 1;

457 
tmp_cs
[
£t
].
èg
 =Åag;

460 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

461 i‡(
tmp_cs_l2
[
£t_l2
].
vÆid
 == 0)

462 
mas_ö°
.
ic_Êag_l2
 = 
IC_UNCLEAR
;

463 i‡(
tmp_cs
[
£t_l2
].
èg
 =
èg_l2
)

464 
mas_ö°
.
ic_Êag_l2
 = 
IC_HIT
;

466 
mas_ö°
.
ic_Êag_l2
 = 
IC_MISS
;

467 
tmp_cs_l2
[
£t_l2
].
vÆid
 = 1;

468 
tmp_cs_l2
[
£t_l2
].
èg
 = 
èg_l2
;

471 
mas_ö°
.
dc_Êag
 = mas_ö°.
dc_Êag_l2
 = 
DC_HIT
;

472 i‡(
íabÀ_s˝_dˇche
 || 
íabÀ_ul2ˇche
) {

473 
iTy≥
 = 
	`ö°_ty≥
(
mas_ö°
.
ö°
);

474 i‡(
iTy≥
 =
INST_LOAD
) {

475 
mas_ö°
.
dc_Êag
 = 
DC_UNCLEAR
;

476 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

477 
mas_ö°
.
dc_Êag_l2
 = 
DC_UNCLEAR
;

478 } i‡(
iTy≥
 =
INST_STORE
) {

479 
mas_ö°
.
dc_Êag
 = 
DC_STORE
;

480 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

481 
mas_ö°
.
dc_Êag_l2
 = 
DC_STORE
;

483 
mas_ö°
.
dc_Êag
 = 
DC_HIT
;

484 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

485 
mas_ö°
.
dc_Êag_l2
 = 
DC_HIT
;

488 
mas_ö°
.
dc_Êag
 = 
DC_HIT
;

489 
mas_ö°
.
dc_Êag_l2
 = 
DC_HIT
;

492 
	`íqueue
(&
queue
, &
mas_ö°
);

493 i‡(
	`max_ö°_œt
(
mas_ö°
.
ö°
) > 1) {

494 
num1
 = 
num
 + 
k
 + 1;

495 
hô_mœt
 = 1;

498 
num
 +
k
;

501 i‡((
num1
 =0Ë|| (
hô_mœt
 == 0)) {

502 
	`‰ì_queue
(&
queue
);

507 
ñog
 = (
code_lök_t
 *Ë
	`ˇŒoc
(1, (code_link_t));

508 
	`CHECK_MEM
(
ñog
);

509 
ñog
->
code
 = (
mas_ö°_t
 *Ë
	`ˇŒoc
(
num1
, (mas_inst_t));

510 
	`CHECK_MEM
(
ñog
->
code
);

511 
k
 = 0; k < 
num1
; k++) {

512 
ñog
->
code
[
k
] = *((
mas_ö°_t
 *Ë
	`dequeue
(&
queue
));

514 
ñog
->
num_ö°
 = 
num1
;

515 
ñog
->
√xt
 = 
ïûogs
[
log_£t
];

516 
ïûogs
[
log_£t
] = 
ñog
;

518 
	`‰ì_queue
(&
queue
);

520 
	}
}

522 
	$åav_f‹w¨d
(
log_£t
, 
tcfg_edge_t
 **
∑th
, 
∑th_Àn
,

523 
code_Àn
) {

524 
tcfg_node_t
 *
bbi
;

525 
tcfg_edge_t
 *
e
;

526 
ñog_¸óãd
 = 0, 
tmp
;

528 
bbi
 = 
∑th
[
∑th_Àn
 - 1]->
d°
;

529 
code_Àn
 +
bbi
->
bb
->
num_ö°
;

530 i‡((
code_Àn
 >
max_ñog_Àn
[
∑th
[0]->
§c
->
id
]Ë|| (
bbi
->
out
 =
NULL
)) {

531 i‡(
mœt_bbi
[
bbi
->
id
] >= 0)

532 
ñog_¸óãd
 = 
	`√w_ïûog
(
log_£t
, 
∑th
, 
∑th_Àn
);

534 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

535 
∑th
[
∑th_Àn
] = 
e
;

536 
tmp
 = 
	`åav_f‹w¨d
(
log_£t
, 
∑th
, 
∑th_Àn
 + 1, 
code_Àn
);

537 
ñog_¸óãd
 |
tmp
;

539 i‡((
ñog_¸óãd
 =0Ë&& (
mœt_bbi
[
bbi
->
id
] >= 0))

540 
ñog_¸óãd
 = 
	`√w_ïûog
(
log_£t
, 
∑th
, 
∑th_Àn
);

542  
ñog_¸óãd
;

543 
	}
}

547 
	$cﬁÀ˘_ïûogs
() {

548 
tcfg_edge_t
 **
∑th
;

549 
i
;

551 
∑th
 = (
tcfg_edge_t
 **Ë
	`ˇŒoc
(
pùe_iwö_size
, (tcfg_edge_t *));

552 
	`CHECK_MEM
(
∑th
);

553 
ïûogs
 = (
code_lök_t
 **Ë
	`ˇŒoc
(
num_tcfg_edges
, (code_link_t *));

554 
	`CHECK_MEM
(
ïûogs
);

556 
i
 = 0; i < 
num_tcfg_edges
; i++) {

557 i‡(
max_ñog_Àn
[
tcfg_edges
[
i
]->
§c
->
id
] == 0)

559 
∑th
[0] = 
tcfg_edges
[
i
];

560 
	`åav_f‹w¨d
(
i
, 
∑th
, 1, 0);

563 
	`‰ì
(
∑th
);

564 
	}
}

566 
	$cﬁÀ˘_bodõs
() {

567 
i
, 
k
, 
num
;

568 
tcfg_node_t
 *
bbi
;

570 
num
 = 
tcfg
[0]->
bb
->
num_ö°
;

571 
°¨t_body
 = (
mas_ö°_t
 *Ë
	`ˇŒoc
(
num
, (mas_inst_t));

572 
	`CHECK_MEM
(
°¨t_body
);

573 
k
 = 0; k < 
num
; k++) {

574 
°¨t_body
[
k
].
ö°
 = &
tcfg
[0]->
bb
->
code
[k];

575 
°¨t_body
[
k
].
bp_Êag
 = 
BP_CPRED
;

577 
bodõs
 = (
mas_ö°_t
 **Ë
	`ˇŒoc
(
num_tcfg_edges
, (mas_inst_t *));

578 
	`CHECK_MEM
(
bodõs
);

579 
i
 = 0; i < 
num_tcfg_edges
; i++) {

580 
bbi
 = 
tcfg_edges
[
i
]->
d°
;

581 
num
 = 
bbi
->
bb
->
num_ö°
;

582 
bodõs
[
i
] = (
mas_ö°_t
 *Ë
	`ˇŒoc
(
num
, (mas_inst_t));

583 
	`CHECK_MEM
(
bodõs
[
i
]);

584 
k
 = 0; k < 
num
; k++) {

585 
bodõs
[
i
][
k
].
ö°
 = &
bbi
->
bb
->
code
[k];

586 
bodõs
[
i
][
k
].
bbi_id
 = 
bbi
->
id
;

587 
bodõs
[
i
][
k
].
bp_Êag
 = 
BP_CPRED
;

589 
bodõs
[
i
][
k
].
dc_Êag
 = bodõs[i][k].
ic_Êag
 = 
IC_HIT
;

590 
bodõs
[
i
][
k
].
dc_Êag_l2
 = bodõs[i][k].
ic_Êag_l2
 = 
IC_HIT
;

593 
	}
}

595 
	$£t_body_hômiss
(
edge_id
, 
hm_id
, 
c⁄ãxtMask
) {

596 
i
, 
num
, 
ts0
, 
ts
, 
off£t
, 
off£t_l2
, 
mblk_id
 = 1, 
mblk_id_l2
 = 1;

597 
off£t_ul2
, 
mblk_id_ul2
 = 1;

598 
tcfg_node_t
 *
bbi
;

599 
lo›_t
 *
Õ
 = 
NULL
;

601 
bbi
 = 
tcfg_edges
[
edge_id
]->
d°
;

604 
num
 = 
bbi
->
bb
->
num_ö°
;

605 
bodõs
[
edge_id
][0].
ic_Êag
 = 
	`gë_mblk_hômiss
(
bbi
, 0, 
Õ
);

609 i‡(
íabÀ_û2ˇche
)

610 
bodõs
[
edge_id
][0].
ic_Êag_l2
 = 
	`gë_mblk_hômiss_l2
(
bbi
, 0, 
Õ
);

611 i‡(
íabÀ_ul2ˇche
)

612 
bodõs
[
edge_id
][0].
ic_Êag_l2
 = 
	`gë_mblk_hômiss_ul2
(
bbi
, 0, 
Õ
,

613 
c⁄ãxtMask
);

615 
i
 = 1; i < 
num
; i++) {

616 
off£t
 = 
	`CACHE_LINE
(
bbi
->
bb
->
code
[
i
].
addr
);

617 i‡(
off£t
 == 0) {

618 
bodõs
[
edge_id
][
i
].
ic_Êag
 = 
	`gë_mblk_hômiss
(
bbi
, 
mblk_id
, 
Õ
);

619 
mblk_id
++;

621 i‡(
íabÀ_û2ˇche
) {

622 
off£t_l2
 = 
	`CACHE_LINE_L2
(
bbi
->
bb
->
code
[
i
].
addr
);

624 i‡(
off£t_l2
 == 0) {

626 
bodõs
[
edge_id
][
i
].
ic_Êag_l2
 = 
	`gë_mblk_hômiss_l2
(
bbi
,

627 
mblk_id_l2
, 
Õ
);

628 
mblk_id_l2
++;

630 } i‡(
íabÀ_ul2ˇche
) {

631 
off£t_ul2
 = 
	`CACHE_LINE_L2
(
bbi
->
bb
->
code
[
i
].
addr
);

633 i‡(
off£t_ul2
 == 0) {

634 
bodõs
[
edge_id
][
i
].
ic_Êag_l2
 = 
	`gë_mblk_hômiss_ul2
(
bbi
,

635 
mblk_id_ul2
, 
Õ
, 
c⁄ãxtMask
);

636 
mblk_id_ul2
++;

640 
	}
}

641 
	$gë_c⁄ãxt_f‹w¨d
(
§c_˘x
, 
§c_Àngth
, 
d°_Àg¡h
) {

642 
§c_Àngth
 < 
d°_Àg¡h
) {

643 
§c_˘x
 = src_ctx << 1;

644 
§c_Àngth
++;

646 
§c_Àngth
 > 
d°_Àg¡h
) {

647 
§c_˘x
 = src_ctx >> 1;

648 
§c_Àngth
--;

650  
§c_˘x
;

651 
	}
}

653 
	$gë_c⁄ãxt_backw¨d
(
d°_˘x
, 
§c_Àngth
, 
d°_Àngth
) {

654 
§c_Àngth
 < 
d°_Àngth
) {

655 
d°_˘x
 = dst_ctx >> 1;

656 
d°_Àngth
--;

658 
§c_Àngth
 > 
d°_Àngth
) {

659 
d°_˘x
 = (dst_ctx << 1) | 1;

660 
d°_Àngth
++;

662  
d°_˘x
;

663 
	}
}

665 
	$£t_body_d©a_ˇche_hômiss
(
edge_id
, 
c⁄ãxtMask
) {

666 
tcfg_edge_t
* 
edge
 = 
tcfg_edges
[
edge_id
];

667 
tcfg_node_t
* 
§c
 = 
edge
->src;

668 
tcfg_node_t
* 
d°
 = 
edge
->dst;

670 
i
;

671 
i
 = 0; i < 
d°
->
bb
->
num_ö°
; i++) {

672 
iTy≥
 = 
	`ö°_ty≥
((
bodõs
[
edge_id
][
i
]).
ö°
);

673 i‡(
iTy≥
 =
INST_LOAD
) {

674 
§cC⁄ãxtBôLígth
 = 
numbîOfLo›
[
§c
->
id
] - 1;

675 
d°C⁄ãxtBôLígth
 = 
numbîOfLo›
[
d°
->
id
] - 1;

676 
d°C⁄ãxt
 = 
	`gë_c⁄ãxt_f‹w¨d
(
c⁄ãxtMask
,

677 
§cC⁄ãxtBôLígth
, 
d°C⁄ãxtBôLígth
);

678 
lo›_t
* 
ö√r_Õ
 = 
lo›_m≠
[
d°
->
id
];

679 
lo›_t
* 
ps_Õ
 = 
NULL
;

680 
ps_Õ
 = (
lo›_t
*Ë
	`s˝_p¶o›_dl
(&
bodõs
[
edge_id
][
i
], 1);

682 i‡(
ps_Õ
 =
NULL
) {

683 
bodõs
[
edge_id
][
i
].
dc_Êag
 = 
DC_UNCLEAR
;

685 
di°™˚
 = 
	`lo›_di°
(
ö√r_Õ
, 
ps_Õ
);

686 i‡(
di°™˚
 < 0) {

688 
	`¥ötf
("edgê%d_%d\n", 
tcfg_edges
[
edge_id
]->
§c
->
id
,

689 
tcfg_edges
[
edge_id
]->
d°
->
id
);

690 i‡(
ö√r_Õ
 =
NULL


692 
	`¥ötf
("inner_lp:NULL\n");

694 
	`¥ötf
("ö√r_Õ:%d\n", 
ö√r_Õ
->
id
);

695 i‡(
ps_Õ
 =
NULL
) {

696 
	`¥ötf
("ps_lp:NULL\n");

698 
	`¥ötf
("ps_Õ:%d\n", 
ps_Õ
->
id
);

699 
	`¥ötf
("BUGGG!!!!!???? %d\n", 
di°™˚
);

701 
	`exô
(1);

703 
ps_˘x
 = 
d°C⁄ãxt
 & ((1 << 
di°™˚
) - 1);

704 i‡(
ps_˘x
 == 0)

705 
bodõs
[
edge_id
][
i
].
dc_Êag
 = 
DC_MISS
;

707 
bodõs
[
edge_id
][
i
].
dc_Êag
 = 
DC_HIT
;

710 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

711 
lo›_t
* 
ps_Õ_l2
 = (lo›_t*Ë
	`s˝_p¶o›_dl
(&
bodõs
[
edge_id
][
i
],

713 i‡(
ps_Õ_l2
 =
NULL
) {

714 
bodõs
[
edge_id
][
i
].
dc_Êag_l2
 = 
DC_UNCLEAR
;

716 
di°™˚
 = 
	`lo›_di°
(
ö√r_Õ
, 
ps_Õ_l2
);

717 i‡(
di°™˚
 < 0) {

718 
	`¥ötf
("BUGGG!!!!!\n");

719 
	`exô
(1);

721 
ps_˘x
 = 
d°C⁄ãxt
 & ((1 << 
di°™˚
) - 1);

722 i‡(
ps_˘x
 == 0)

723 
bodõs
[
edge_id
][
i
].
dc_Êag_l2
 = 
DC_MISS
;

725 
bodõs
[
edge_id
][
i
].
dc_Êag_l2
 = 
DC_HIT
;

729 } i‡(
iTy≥
 =
INST_STORE
) {

730 
bodõs
[
edge_id
][
i
].
dc_Êag
 = 
DC_STORE
;

731 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

732 
bodõs
[
edge_id
][
i
].
dc_Êag_l2
 = 
DC_STORE
;

734 
bodõs
[
edge_id
][
i
].
dc_Êag
 = 
DC_HIT
;

735 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

736 
bodõs
[
edge_id
][
i
].
dc_Êag_l2
 = 
DC_HIT
;

739 
	}
}

740 
	$£t_¥ﬁog_d©a_ˇche_hômiss
(
edge_id
, 
mas_ö°_t
* 
code
,

741 
num_ö°
, 
c⁄ãxtMask
) {

742 i‡(
num_ö°
 <= 0)

744 
c⁄ãxt
 = 
c⁄ãxtMask
;

745 
d°
 = 
tcfg_edges
[
edge_id
]->
§c
->
id
;

746 
§c
 = 
code
[
num_ö°
 - 1].
bbi_id
;

748 
i
;

749 
i
 = 
num_ö°
 - 1; i >= 0; i--) {

750 
§c
 = 
code
[
i
].
bbi_id
;

751 
§c_˘x_Àngth
 = 
numbîOfLo›
[
§c
] - 1;

752 
d°_˘x_Àngth
 = 
numbîOfLo›
[
d°
] - 1;

753 
c⁄ãxt
 = 
	`gë_c⁄ãxt_backw¨d
(c⁄ãxt, 
§c_˘x_Àngth
, 
d°_˘x_Àngth
);

756 
iTy≥
 = 
	`ö°_ty≥
(
code
[
i
].
ö°
);

757 i‡(
iTy≥
 =
INST_LOAD
) {

758 
lo›_t
* 
Õ
 = 
lo›_m≠
[
§c
];

759 
lo›_t
* 
ps_Õ
 = (lo›_t*Ë
	`s˝_p¶o›_dl
(&
code
[
i
], 1);

760 i‡(
ps_Õ
 =
NULL
) {

761 
code
[
i
].
dc_Êag
 = 
DC_UNCLEAR
;

763 
di°™t˚
 = 
	`lo›_di°
(
ps_Õ
, 
Õ
);

764 i‡(
di°™t˚
 < 0) {

765 
	`¥ötf
("BUGGG\n");

766 
	`exô
(1);

768 
ps_˘x
 = 
c⁄ãxt
 & ((1 << 
di°™t˚
) - 1);

769 i‡(
ps_˘x
 == 0)

770 
code
[
i
].
dc_Êag
 = 
DC_MISS
;

772 
code
[
i
].
dc_Êag
 = 
DC_HIT
;

774 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

775 
lo›_t
* 
ps_Õ_l2
 = (lo›_t*Ë
	`s˝_p¶o›_dl
(&
code
[
i
], 2);

776 i‡(
ps_Õ_l2
 =
NULL
) {

777 
code
[
i
].
dc_Êag_l2
 = 
DC_UNCLEAR
;

779 
di°™˚
 = 
	`lo›_di°
(
Õ
, 
ps_Õ_l2
);

780 i‡(
di°™˚
 < 0) {

781 
	`¥ötf
("BUGGGG\n");

782 
	`exô
(1);

784 
ps_˘x
 = 
c⁄ãxt
 & ((1 << 
di°™˚
) - 1);

785 i‡(
ps_˘x
 == 0)

786 
code
[
i
].
dc_Êag_l2
 = 
DC_MISS
;

788 
code
[
i
].
dc_Êag_l2
 = 
DC_HIT
;

791 } i‡(
iTy≥
 =
INST_STORE
) {

792 
code
[
i
].
dc_Êag
 = 
DC_STORE
;

793 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

794 
code
[
i
].
dc_Êag_l2
 = 
DC_STORE
;

796 
code
[
i
].
dc_Êag
 = 
DC_HIT
;

797 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

798 
code
[
i
].
dc_Êag_l2
 = 
DC_STORE
;

800 
d°
 = 
§c
;

803 
	}
}

804 
	$£t_ïûog_d©a_ˇche_hômiss
(
edge_id
, 
mas_ö°_t
* 
code
,

805 
num_ö°
, 
c⁄ãxtMask
) {

806 i‡(
num_ö°
 <= 0)

808 
tcfg_node_t
* 
§c_node
 = 
tcfg_edges
[
edge_id
]->
§c
;

809 
§c_id
 = 
§c_node
->
id
;

810 
§c_˘x_Àngth
 = 
numbîOfLo›
[
§c_id
] - 1;

811 
tcfg_node_t
* 
d°_node
 = 
tcfg_edges
[
edge_id
]->
d°
;

812 
d°_id
 = 
d°_node
->
id
;

813 
d°_˘x_Àngth
 = 
numbîOfLo›
[
d°_id
] - 1;

814 
c⁄ãxt
 = 
	`gë_c⁄ãxt_f‹w¨d
(
c⁄ãxtMask
, 
§c_˘x_Àngth
,

815 
d°_˘x_Àngth
);

817 
§c_id
 = 
d°_id
;

818 
i
;

819 
i
 = 0; i < 
num_ö°
; i++) {

820 
d°_id
 = 
code
[
i
].
bbi_id
;

821 
§c_˘x_Àngth
 = 
numbîOfLo›
[
§c_id
] - 1;

822 
d°_˘x_Àngth
 = 
numbîOfLo›
[
d°_id
] - 1;

823 
c⁄ãxt
 = 
	`gë_c⁄ãxt_f‹w¨d
(c⁄ãxt, 
§c_˘x_Àngth
, 
d°_˘x_Àngth
);

824 
iTy≥
 = 
	`ö°_ty≥
(
code
[
i
].
ö°
);

825 i‡(
iTy≥
 =
INST_LOAD
) {

826 
lo›_t
* 
Õ
 = 
lo›_m≠
[
d°_id
];

827 
lo›_t
* 
ps_Õ
 = (lo›_t*Ë
	`s˝_p¶o›_dl
(&
code
[
i
], 1);

828 i‡(
ps_Õ
 =
NULL
) {

829 
code
[
i
].
dc_Êag
 = 
DC_UNCLEAR
;

831 
di°™˚
 = 
	`lo›_di°
(
ps_Õ
, 
Õ
);

832 i‡(
di°™˚
 < 0) {

833 
	`¥ötf
("BUGGGG\n");

834 
	`exô
(1);

836 
ps_˘x
 = 
c⁄ãxt
 & ((1 << 
di°™˚
) - 1);

837 i‡(
ps_˘x
 == 0)

838 
code
[
i
].
dc_Êag
 = 
DC_MISS
;

840 
code
[
i
].
dc_Êag
 = 
DC_HIT
;

842 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

843 
lo›_t
* 
ps_Õ_l2
 = (lo›_t*Ë
	`s˝_p¶o›_dl
(&
code
[
i
], 2);

844 i‡(
ps_Õ_l2
 =
NULL
) {

845 
code
[
i
].
dc_Êag_l2
 = 
DC_UNCLEAR
;

847 
di°™˚
 = 
	`lo›_di°
(
Õ
, 
ps_Õ_l2
);

848 i‡(
di°™˚
 < 0) {

849 
	`¥ötf
("BUGGGG\n");

850 
	`exô
(1);

852 
ps_˘x
 = 
c⁄ãxt
 & ((1 << 
di°™˚
) - 1);

853 i‡(
ps_˘x
 == 0)

854 
code
[
i
].
dc_Êag_l2
 = 
DC_MISS
;

856 
code
[
i
].
dc_Êag_l2
 = 
DC_HIT
;

859 } i‡(
iTy≥
 =
INST_STORE
) {

860 
code
[
i
].
dc_Êag
 = 
DC_STORE
;

861 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

862 
code
[
i
].
dc_Êag_l2
 = 
DC_STORE
;

864 
code
[
i
].
dc_Êag
 = 
DC_HIT
;

865 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

866 
code
[
i
].
dc_Êag_l2
 = 
DC_HIT
;

868 
§c_id
 = 
d°_id
;

870 
	}
}

871 
	$öô_∑
() {

872 
¥ﬁog_size
 = 
pùe_ibuf_size
 + 
pùe_iwö_size
;

873 
	}
}

875 
	$Æloc_e°_unôs
() {

876 
i
, 
n
, 
bbi_id
, 
num_hm
;

877 
tcfg_edge_t
 *
e
;

879 
˝ªd_times
 = (**Ë
	`ˇŒoc
(
num_tcfg_edges
, (*));

880 
m¥ed_times
 = (**Ë
	`ˇŒoc
(
num_tcfg_edges
, (*));

882 
exãnd_˝ªd_times
 = (***Ë
	`ˇŒoc
(
num_tcfg_edges
, (**));

883 
numbîOfLo›
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, (*));

884 
numbîofC⁄ãxt
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, (*));

886 
	`CHECK_MEM
(
˝ªd_times
);

887 
	`CHECK_MEM
(
m¥ed_times
);

889 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

890 
lo›_t
* 
Õ
 = (lo›_t*Ë
lo›_m≠
[
tcfg
[
i
]->
id
];

891 
numbîOfLo›
[
i
] = 0;

892 
Õ
 !
NULL
) {

893 
numbîOfLo›
[
i
]++;

894 
Õ
 =Üp->
∑ª¡
;

896 
numbîofC⁄ãxt
[
i
] = (1 << (
numbîOfLo›
[i] - 1));

899 
°¨t_time
 = 0;

900 
i
 = 0; i < 
num_tcfg_edges
; i++) {

904 
num_hm
 = 1;

905 
˝ªd_times
[
i
] = (*Ë
	`ˇŒoc
(
num_hm
, ());

906 
	`CHECK_MEM
(
˝ªd_times
);

907 i‡(
	`c⁄d_bbi
(
tcfg_edges
[
i
]->
§c
)) {

908 
m¥ed_times
[
i
] = (*Ë
	`ˇŒoc
(
num_hm
, ());

909 
	`CHECK_MEM
(
m¥ed_times
);

911 
size
 = 
numbîofC⁄ãxt
[
tcfg_edges
[
i
]->
§c
->
id
];

912 i‡(
íabÀ_s˝_dˇche
 == 0)

913 
size
 = 1;

915 
exãnd_˝ªd_times
[
i
] = (**Ë
	`ˇŒoc
(
size
, (*));

916 
v
;

917 
v
 = 0; v < 
numbîofC⁄ãxt
[
tcfg_edges
[
i
]->
§c
->
id
]; v++) {

918 
exãnd_˝ªd_times
[
i
][
v
] = (*Ë
	`ˇŒoc
(
num_hm
, ());

921 
	}
}

926 
	$˘x_unô_time
(
edge_id
, 
bp
, 
c⁄ãxtMask
) {

927 
num_p
, 
num_e
, 
num_b
, 
t
, *
t_˝ªd
, *
t_m¥ed
;

928 
tcfg_node_t
 *
bbi
;

929 
tcfg_edge_t
 *
e
;

930 
code_lök_t
 *
∂og
, *
ñog
;

931 
unô_e°im©ed
;

932 
lo›_t
 *
Õ
;

934 
t_˝ªd
 = &
˝ªd_times
[
edge_id
][0];

935 
t_m¥ed
 = &
m¥ed_times
[
edge_id
][0];

936 * 
t_c⁄ãxt
 = &
exãnd_˝ªd_times
[
edge_id
][
c⁄ãxtMask
][0];

938 
	`¥ötf
("edge_id %d_%d c⁄ãxt:%d\n", 
tcfg_edges
[
edge_id
]->
§c
->
id
,

939 
tcfg_edges
[
edge_id
]->
d°
->
id
, 
c⁄ãxtMask
);

941 i‡(
íabÀ_iˇche
) {

942 
	`£t_body_hômiss
(
edge_id
, 0, 
c⁄ãxtMask
);

946 
tcfg_node_t
* 
§c
 = 
tcfg_edges
[
edge_id
]->src;

947 
tcfg_node_t
* 
d°
 = 
tcfg_edges
[
edge_id
]->dst;

948 
num
 = 
d°
->
bb
->
num_ö°
;

949 
i
;

950 
i
 = 0; i < 
num
; i++) {

951 
de_ö°_t
* 
ö°
 = &(
d°
->
bb
->
code
[
i
]);

952 
	`¥ötf
("\tö° 0x%x: icf:%d", 
ö°
->
addr
, 
bodõs
[
edge_id
][
i
].
ic_Êag
);

953 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

954 
	`¥ötf
(" icf2:%d", 
bodõs
[
edge_id
][
i
].
ic_Êag_l2
);

956 
	`¥ötf
("\n");

960 i‡(
íabÀ_s˝_dˇche
) {

961 
	`£t_body_d©a_ˇche_hômiss
(
edge_id
, 
c⁄ãxtMask
);

963 
	`¥ötf
("edgê%d_%d c⁄ãxt:%d\n", 
tcfg_edges
[
edge_id
]->
§c
->
id
,

964 
tcfg_edges
[
edge_id
]->
d°
->
id
, 
c⁄ãxtMask
);

965 
tcfg_node_t
* 
§c
 = 
tcfg_edges
[
edge_id
]->src;

966 
tcfg_node_t
* 
d°
 = 
tcfg_edges
[
edge_id
]->dst;

967 
num
 = 
d°
->
bb
->
num_ö°
;

968 
i
;

969 
i
 = 0; i < 
num
; i++) {

970 
de_ö°_t
* 
ö°
 = &(
d°
->
bb
->
code
[
i
]);

971 
iTy≥
 = 
	`ö°_ty≥
(
ö°
);

972 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

973 
	`¥ötf
("\tö° 0x%x: dcf:%d", 
ö°
->
addr
,

974 
bodõs
[
edge_id
][
i
].
dc_Êag
);

975 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

976 
	`¥ötf
(" dcf2:%d", 
bodõs
[
edge_id
][
i
].
dc_Êag_l2
);

978 i‡(
iTy≥
 =
INST_STORE
Ë
	`¥ötf
(" [STORE]");

979 
	`¥ötf
(" [LOAD]");

980 
	`¥ötf
("\n");

986 
bbi
 = 
tcfg_edges
[
edge_id
]->
d°
;

987 
num_b
 = 
bbi
->
bb
->
num_ö°
;

989 
∂og
 = 
¥ﬁogs
[
edge_id
];Ölog !
NULL
;Ölog =Ölog->
√xt
) {

990 
num_p
 = 
∂og
->
num_ö°
;

991 i‡(
b¥ed_scheme
 !
NO_BPRED
 && 
bp
 =
BP_CPRED


993 
num_p
 -
num_∂og_åunc
[
edge_id
];

994 
unô_e°im©ed
 = 0;

995 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

996 
ñog
 = 
ïûogs
[
e
->
id
];Élog !
NULL
;Élog =Élog->
√xt
) {

997 
num_e
 = 
ñog
->
num_ö°
;

999 i‡(
íabÀ_s˝_dˇche
) {

1000 
	`£t_¥ﬁog_d©a_ˇche_hômiss
(
edge_id
, 
∂og
->
code
, 
num_p
,

1001 
c⁄ãxtMask
);

1003 
	`¥ötf
("edge %d_%d context:%d [PROLOG]\n",

1004 
tcfg_edges
[
edge_id
]->
§c
->
id
,

1005 
tcfg_edges
[
edge_id
]->
d°
->
id
, 
c⁄ãxtMask
);

1006 
tcfg_node_t
* 
§c
 = 
tcfg_edges
[
edge_id
]->src;

1007 
tcfg_node_t
* 
d°
 = 
tcfg_edges
[
edge_id
]->dst;

1008 
i
;

1009 
i
 = 
num_p
 - 1; i >= 0; i--) {

1010 
de_ö°_t
* 
ö°
 = 
∂og
->
code
[
i
].inst;

1011 
iTy≥
 = 
	`ö°_ty≥
(
∂og
->
code
[
i
].
ö°
);

1012 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

1013 
	`¥ötf
("\tö° 0x%x: dcf:%d", 
ö°
->
addr
,

1014 
∂og
->
code
[
i
].
dc_Êag
);

1015 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

1016 
	`¥ötf
(" dcf2:%d",

1017 
∂og
->
code
[
i
].
dc_Êag_l2
);

1019 i‡(
iTy≥
 =
INST_STORE
)

1020 
	`¥ötf
(" [STORE]");

1022 
	`¥ötf
(" [LOAD]");

1023 
	`¥ötf
("\n");

1027 
	`£t_ïûog_d©a_ˇche_hômiss
(
edge_id
, 
ñog
->
code
, 
num_e
,

1028 
c⁄ãxtMask
);

1031 
	`¸óã_egøph
(
∂og
->
code
, 
num_p
, 
ñog
->code, 
num_e
,

1032 
bodõs
[
edge_id
], 
num_b
, 
bp
, 
Õ
);

1034 
t
 = 
	`e°_egøph
();

1036 i‡((
bp
 =
BP_CPRED
Ë&& (
t
 > *
t_˝ªd
))

1037 *
t_˝ªd
 = 
t
;

1038 i‡((
bp
 =
BP_MPRED
Ë&& (
t
 > *
t_m¥ed
))

1039 *
t_m¥ed
 = 
t
;

1040 i‡((
bp
 =
BP_CPRED
Ë&& (
t
 > *
t_c⁄ãxt
))

1041 *
t_c⁄ãxt
 = 
t
;

1042 
unô_e°im©ed
 = 1;

1045 i‡(
unô_e°im©ed
 == 1)

1047 i‡(
íabÀ_s˝_dˇche
) {

1048 
	`£t_¥ﬁog_d©a_ˇche_hômiss
(
edge_id
, 
∂og
->
code
, 
num_p
,

1049 
c⁄ãxtMask
);

1051 
	`¥ötf
("edge %d_%d context:%d [PROLOG]\n",

1052 
tcfg_edges
[
edge_id
]->
§c
->
id
,

1053 
tcfg_edges
[
edge_id
]->
d°
->
id
, 
c⁄ãxtMask
);

1054 
tcfg_node_t
* 
§c
 = 
tcfg_edges
[
edge_id
]->src;

1055 
tcfg_node_t
* 
d°
 = 
tcfg_edges
[
edge_id
]->dst;

1056 
i
;

1057 
i
 = 
num_p
 - 1; i >= 0; i--) {

1058 
de_ö°_t
* 
ö°
 = 
∂og
->
code
[
i
].inst;

1059 
iTy≥
 = 
	`ö°_ty≥
(
∂og
->
code
[
i
].
ö°
);

1060 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

1061 
	`¥ötf
("\tö° 0x%x: dcf:%d", 
ö°
->
addr
,

1062 
∂og
->
code
[
i
].
dc_Êag
);

1063 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

1064 
	`¥ötf
(" dcf2:%d",

1065 
∂og
->
code
[
i
].
dc_Êag_l2
);

1067 i‡(
iTy≥
 =
INST_STORE
)

1068 
	`¥ötf
(" [STORE]");

1070 
	`¥ötf
(" [LOAD]");

1071 
	`¥ötf
("\n");

1079 
	`¸óã_egøph
(
∂og
->
code
, 
num_p
, 
NULL
, 0, 
bodõs
[
edge_id
], 
num_b
, 
bp
,

1080 
Õ
);

1081 
t
 = 
	`e°_egøph
();

1083 i‡((
bp
 =
BP_CPRED
Ë&& (
t
 > *
t_˝ªd
))

1084 *
t_˝ªd
 = 
t
;

1085 i‡((
bp
 =
BP_MPRED
Ë&& (
t
 > *
t_m¥ed
))

1086 *
t_m¥ed
 = 
t
;

1087 i‡((
bp
 =
BP_CPRED
Ë&& (
t
 > *
t_c⁄ãxt
))

1088 *
t_c⁄ãxt
 = 
t
;

1091 
	`¥ötf
("WCETÉdgê%d_%d c⁄ãxà%d: %d ", 
tcfg_edges
[
edge_id
]->
§c
->
id
,

1092 
tcfg_edges
[
edge_id
]->
d°
->
id
, 
c⁄ãxtMask
, *
t_c⁄ãxt
);

1093 i‡(
bbi
->
bb
->
num_d_ö°
 > 0)

1094 
	`¥ötf
("\tÊag(%d)", 
bbi
->
bb
->
num_d_ö°
);

1095 
	`¥ötf
("\n");

1096 
i
;

1097 
i
 = 0; i < 
bbi
->
bb
->
num_ö°
; i++) {

1098 
mas_ö°_t
* 
ö°
 = &(
bodõs
[
edge_id
][
i
]);

1099 
iTy≥
 = 
	`ö°_ty≥
(
bodõs
[
edge_id
][
i
].
ö°
);

1100 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

1101 
	`¥ötf
("\tdc_Êag:%d ", 
ö°
->
dc_Êag
);

1102 
	`¥ötf
("Ü2:%d ", 
ö°
->
dc_Êag_l2
);

1103 i‡(
iTy≥
 =
INST_LOAD
)

1104 
	`¥ötf
("[LOAD]");

1106 
	`¥ötf
("[STORE]");

1107 
	`¥ötf
("\n");

1113 
	}
}

1115 
	$e°_°¨t_unô
() {

1116 
num_b
, 
num_e
, 
off£t
, 
off£t_l2
, 
i
, 
t
, 
unô_e°im©ed
 = 0;

1117 
off£t_ul2
;

1118 
tcfg_node_t
 *
bbi
 = 
tcfg
[0];

1119 
tcfg_edge_t
 *
e
;

1120 
code_lök_t
 *
ñog
;

1122 
num_b
 = 
tcfg
[0]->
bb
->
num_ö°
;

1123 
°¨t_body
[0].
ic_Êag
 = 
IC_MISS
;

1126 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
)

1127 
°¨t_body
[0].
ic_Êag_l2
 = 
IC_MISS
;

1129 
i
 = 1; i < 
num_b
; i++) {

1130 
off£t
 = 
	`CACHE_LINE
(
bbi
->
bb
->
code
[
i
].
addr
);

1131 i‡(
off£t
 == 0)

1132 
°¨t_body
[
i
].
ic_Êag
 = 
IC_MISS
;

1133 i‡(
íabÀ_û2ˇche
) {

1135 
off£t_l2
 = 
	`CACHE_LINE_L2
(
bbi
->
bb
->
code
[
i
].
addr
);

1136 i‡(
off£t_l2
 == 0)

1137 
°¨t_body
[
i
].
ic_Êag_l2
 = 
IC_MISS
;

1138 } i‡(
íabÀ_ul2ˇche
) {

1139 
off£t_ul2
 = 
	`CACHE_LINE_L2
(
bbi
->
bb
->
code
[
i
].
addr
);

1140 i‡(
off£t_ul2
 == 0)

1141 
°¨t_body
[
i
].
ic_Êag_l2
 = 
IC_MISS
;

1145 i‡(
íabÀ_s˝_dˇche
) {

1146 
i
 = 0; i < 
num_b
; i++) {

1147 
iTy≥
 = 
	`ö°_ty≥
(
°¨t_body
[
i
].
ö°
);

1148 i‡(
iTy≥
 =
INST_LOAD
) {

1149 
°¨t_body
[
i
].
dc_Êag
 = 
DC_UNCLEAR
;

1150 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

1151 
°¨t_body
[
i
].
dc_Êag_l2
 = 
DC_UNCLEAR
;

1152 } i‡(
iTy≥
 =
INST_STORE
) {

1153 
°¨t_body
[
i
].
dc_Êag
 = 
DC_STORE
;

1154 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

1155 
°¨t_body
[
i
].
dc_Êag_l2
 = 
DC_STORE
;

1157 
°¨t_body
[
i
].
dc_Êag
 = 
DC_HIT
;

1158 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

1159 
°¨t_body
[
i
].
dc_Êag_l2
 = 
DC_HIT
;

1164 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

1165 
ñog
 = 
ïûogs
[
e
->
id
];Élog !
NULL
;Élog =Élog->
√xt
) {

1166 
num_e
 = 
ñog
->
num_ö°
;

1167 
	`¸óã_egøph
(
NULL
, 0, 
ñog
->
code
, 
num_e
, 
°¨t_body
, 
num_b
,

1168 
BP_CPRED
, 
lo›s
[0]);

1169 
t
 = 
	`e°_egøph
();

1170 i‡(
t
 > 
°¨t_time
)

1171 
°¨t_time
 = 
t
;

1172 
unô_e°im©ed
 = 1;

1176 i‡(
unô_e°im©ed
 == 0) {

1177 
	`¸óã_egøph
(
NULL
, 0, NULL, 0, 
°¨t_body
, 
num_b
, 
BP_CPRED
, 
lo›s
[0]);

1178 
t
 = 
	`e°_egøph
();

1179 i‡(
t
 > 
°¨t_time
)

1180 
°¨t_time
 = 
t
;

1182 
	}
}

1184 
	$e°_unôs
() {

1185 
edge_id
, 
e°_mi•ªd
;

1186 
tcfg_edge_t
 *
e
;

1187 
code_lök_t
 *
∂og
, *
ñog
;

1189 
	`Æloc_e°_unôs
();

1190 
	`e°_°¨t_unô
();

1192 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1194 
e
 = 
tcfg_edges
[
edge_id
];

1195 
tcfg_node_t
* 
§c
 = 
e
->src;

1197 i‡((
b¥ed_scheme
 !
NO_BPRED
Ë&& (
	`c⁄d_bbi
(
e
->
§c
)))

1198 
e°_mi•ªd
 = 1;

1200 
e°_mi•ªd
 = 0;

1201 
c⁄ãxtMask
 = 0;

1202 
c⁄ãxtMask
 = 0; c⁄ãxtMask < 
numbîofC⁄ãxt
[
§c
->
id
];

1203 
c⁄ãxtMask
++) {

1205 
	`˘x_unô_time
(
edge_id
, 
BP_CPRED
, 
c⁄ãxtMask
);

1206 i‡(
e°_mi•ªd
)

1207 
	`˘x_unô_time
(
edge_id
, 
BP_MPRED
, 
c⁄ãxtMask
);

1211 
	}
}

1214 
tcfg_ñök_t
 ***
	gmp_af„˘ed_£ts
;

1215 ***
	gmp_times
;

1218 **
	gmp_£t_ègs
;

1219 *
	gnum_mp_£t_ègs
;

1221 
	$gë_lo›_af„˘ed_£ts
(
Õ_id
, 
tcfg_edge_t
 *
mp_edge
,

1222 
num_ö°
) {

1223 
tcfg_edge_t
 *
edge
;

1224 
tcfg_node_t
 *
bbi
;

1225 
tcfg_ñök_t
 *
ñök
;

1226 
off£t
, 
i
, 
k
, 
£t
, 
èg
;

1228 i‡(
mp_edge
 =mp_edge->
§c
->
out
)

1229 
edge
 = 
mp_edge
->
√xt_out
;

1231 
edge
 = 
mp_edge
->
§c
->
out
;

1232 i‡(
edge
->
Êags
 == 1)

1235 
i
 = 
num_ö°
; i < 
num_mp_ö°s
[
edge
->
id
]; i++) {

1236 
off£t
 = 
	`CACHE_LINE
(
mp_ö°s
[
edge
->
id
][
i
]->
addr
);

1237 i‡(
off£t
 == 0)

1240 
	`mem£t
(
num_mp_£t_ègs
, 0, 
ˇche
.
ns
 * ());

1241 ; 
i
 < 
num_mp_ö°s
[
edge
->
id
]; i++) {

1242 
£t
 = 
	`SET
(
mp_ö°s
[
edge
->
id
][
i
]->
addr
);

1243 i‡(
num_mp_£t_ègs
[
£t
] =
ˇche
.
«
)

1245 
èg
 = 
	`TAG
(
mp_ö°s
[
edge
->
id
][
i
]->
addr
);

1246 i‡(
num_mp_£t_ègs
[
£t
] == 0) {

1247 
mp_£t_ègs
[
£t
][0] = 
èg
;

1248 
num_mp_£t_ègs
[
£t
] = 1;

1250 
k
 = 0; k < 
num_mp_£t_ègs
[
£t
]; k++) {

1251 i‡(
èg
 =
mp_£t_ègs
[
£t
][
k
])

1254 i‡(
k
 =
num_mp_£t_ègs
[
£t
]) {

1255 
mp_£t_ègs
[
£t
][
k
] = 
èg
;

1256 
num_mp_£t_ègs
[
£t
]++;

1261 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1262 
i
 = 
num_mblk_c⁄Êi˘s
[
Õ_id
][
£t
];

1263 i‡(
i
 > 
ˇche
.
«
)

1265 i‡((
num_mp_£t_ègs
[
£t
] + 
i
Ë> 
ˇche
.
«
) {

1266 
ñök
 = (
tcfg_ñök_t
 *Ë
	`ˇŒoc
(1, (tcfg_elink_t *));

1267 
ñök
->
edge
 =Édge;

1268 
ñök
->
√xt
 = 
mp_af„˘ed_£ts
[
Õ_id
][
£t
];

1269 
mp_af„˘ed_£ts
[
Õ_id
][
£t
] = 
ñök
;

1272 
	}
}

1274 
	$föd_c⁄d_exô
(
Õ_id
, 
tcfg_edge_t
 *
edge
, 
num_ö°
) {

1275 
tcfg_ñök_t
 *
ñök
;

1277 i‡(
	`c⁄d_bbi
(
edge
->
§c
)) {

1278 
	`gë_lo›_af„˘ed_£ts
(
Õ_id
, 
edge
, 
num_ö°
);

1280 
num_ö°
 +
edge
->
§c
->
bb
->num_inst;

1281 i‡(
num_ö°
 >(
pùe_ibuf_size
 + 
pùe_iwö_size
 - 1))

1283 
edge
 =Édge->
§c
->
ö
;Édgê!
NULL
;Édgêedge->
√xt_ö
)

1284 
	`föd_c⁄d_exô
(
Õ_id
, 
edge
, 
num_ö°
);

1286 
	}
}

1290 
	$cﬁÀ˘_af„˘ed_£ts
() {

1291 
tcfg_node_t
 *
bbi
;

1292 
tcfg_edge_t
 *
edge
;

1293 
tcfg_ñök_t
 *
ñök
;

1294 
lo›_t
 *
Õ
;

1295 
Õ_id
, 
£t
, 
èg
;

1297 
mp_af„˘ed_£ts
 = (
tcfg_ñök_t
 ***Ë
	`ˇŒoc
(
num_tcfg_lo›s
,

1298 (
tcfg_ñök_t
 **));

1299 
Õ_id
 = 1;Üp_id < 
num_tcfg_lo›s
;Üp_id++)

1300 
mp_af„˘ed_£ts
[
Õ_id
] = (
tcfg_ñök_t
 **Ë
	`ˇŒoc
(
ˇche
.
ns
,

1301 (
tcfg_ñök_t
 *));

1303 
mp_£t_ègs
 = (**Ë
	`ˇŒoc
(
ˇche
.
ns
, (*));

1304 
£t
 = 0; së < 
ˇche
.
ns
; set++)

1305 
mp_£t_ègs
[
£t
] = (*Ë
	`ˇŒoc
(
ˇche
.
«
, ());

1306 
num_mp_£t_ègs
 = (*Ë
	`ˇŒoc
(
ˇche
.
ns
, ());

1308 
Õ_id
 = 1;Üp_id < 
num_tcfg_lo›s
;Üp_id++) {

1309 
Õ
 = 
lo›s
[
Õ_id
];

1310 
ñök
 = 
Õ
->
exôs
;Élök !
NULL
;Élök =Élök->
√xt
)

1311 
	`föd_c⁄d_exô
(
Õ_id
, 
ñök
->
edge
, 0);

1312 
	`˛ór_tcfg_edge_Êags
();

1315 
£t
 = 0; së < 
ˇche
.
ns
; set++)

1316 
	`‰ì
(
mp_£t_ègs
[
£t
]);

1317 
	`‰ì
(
mp_£t_ègs
);

1318 
	`‰ì
(
num_mp_£t_ègs
);

1319 
	}
}

1321 
	$mp_£t_body_hômiss
(
edge_id
, 
hm_id
, 
£t
) {

1322 
i
, 
num
, 
ts0
, 
ts
, 
off£t
, 
mblk_id
 = 1, 
£t1
;

1323 
tcfg_node_t
 *
bbi
;

1324 
lo›_t
 *
Õ
;

1326 
bbi
 = 
tcfg_edges
[
edge_id
]->
d°
;

1327 
Õ
 = 
bbi_hm_li°
[
bbi
->
id
][
hm_id
];

1328 
num
 = 
bbi
->
bb
->
num_ö°
;

1329 
£t1
 = 
	`SET
(
bbi
->
bb
->
ß
);

1330 i‡(
£t1
 =
£t
)

1331 
bodõs
[
edge_id
][0].
ic_Êag
 = 
IC_UNCLEAR
;

1333 
bodõs
[
edge_id
][0].
ic_Êag
 = 
	`gë_mblk_hômiss
(
bbi
, 0, 
Õ
);

1334 
i
 = 1; i < 
num
; i++) {

1335 
off£t
 = 
	`CACHE_LINE
(
bbi
->
bb
->
code
[
i
].
addr
);

1336 i‡(
off£t
 == 0) {

1337 
£t1
 = 
	`SET
(
bbi
->
bb
->
code
[
i
].
addr
);

1338 i‡(
£t1
 =
£t
)

1339 
bodõs
[
edge_id
][
i
].
ic_Êag
 = 
IC_UNCLEAR
;

1341 
bodõs
[
edge_id
][
i
].
ic_Êag
 = 
	`gë_mblk_hômiss
(
bbi
, 
mblk_id
, 
Õ
);

1342 
mblk_id
++;

1345 
	}
}

1347 
	$˘x_mpmiss_time
(
edge_id
, 
hm_id
, 
£t
, 
bp
) {

1348 
num_p
, 
num_e
, 
num_b
, 
t
, *
t_mp
, 
unô_e°im©ed
;

1349 
tcfg_node_t
 *
bbi
;

1350 
tcfg_edge_t
 *
e
;

1351 
code_lök_t
 *
∂og
, *
ñog
;

1352 
lo›_t
 *
Õ
;

1354 
t_mp
 = &
mp_times
[
edge_id
][
hm_id
][
£t
];

1355 i‡(
íabÀ_iˇche
)

1356 
	`mp_£t_body_hômiss
(
edge_id
, 
hm_id
, 
£t
);

1357 
bbi
 = 
tcfg_edges
[
edge_id
]->
d°
;

1358 
num_b
 = 
bbi
->
bb
->
num_ö°
;

1360 i‡(
íabÀ_iˇche
)

1361 
Õ
 = 
bbi_hm_li°
[
bbi
->
id
][
hm_id
];

1363 
Õ
 = 
NULL
;

1365 
∂og
 = 
¥ﬁogs
[
edge_id
];Ölog !
NULL
;Ölog =Ölog->
√xt
) {

1366 
num_p
 = 
∂og
->
num_ö°
;

1367 i‡(
b¥ed_scheme
 !
NO_BPRED
 && 
bp
 =
BP_CPRED


1369 
num_p
 -
num_∂og_åunc
[
edge_id
];

1370 
unô_e°im©ed
 = 0;

1371 
e
 = 
bbi
->
out
;É !
NULL
;É =É->
√xt_out
) {

1372 
ñog
 = 
ïûogs
[
e
->
id
];Élog !
NULL
;Élog =Élog->
√xt
) {

1373 
num_e
 = 
ñog
->
num_ö°
;

1374 
	`¸óã_egøph
(
∂og
->
code
, 
num_p
, 
ñog
->code, 
num_e
,

1375 
bodõs
[
edge_id
], 
num_b
, 
bp
, 
Õ
);

1376 
t
 = 
	`e°_egøph
();

1377 i‡(
t
 > *
t_mp
)

1378 *
t_mp
 = 
t
;

1379 
unô_e°im©ed
 = 1;

1382 i‡(
unô_e°im©ed
 == 1)

1385 
	`¸óã_egøph
(
∂og
->
code
, 
num_p
, 
NULL
, 0, 
bodõs
[
edge_id
], 
num_b
, 
bp
,

1386 
Õ
);

1387 
t
 = 
	`e°_egøph
();

1388 i‡(
t
 > *
t_mp
)

1389 *
t_mp
 = 
t
;

1391 
	}
}

1393 
	$e°_mpmiss_times
() {

1394 
edge_id
, 
num_hm
, 
hm
, 
bp
, 
£t
;

1395 
tcfg_node_t
 *
bbi
;

1396 
tcfg_edge_t
 *
e
;

1397 
lo›_t
 *
Õ
;

1398 
code_lök_t
 *
∂og
, *
ñog
;

1400 
mp_times
 = (***Ë
	`ˇŒoc
(
num_tcfg_edges
, (**));

1402 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1403 
e
 = 
tcfg_edges
[
edge_id
];

1404 
num_hm
 = 
num_hô_miss
[
e
->
d°
->
id
];

1405 
mp_times
[
edge_id
] = (**Ë
	`ˇŒoc
(
num_hm
, (*));

1406 
bbi
 = 
e
->
d°
;

1407 i‡(
	`c⁄d_bbi
(
e
->
§c
))

1408 
bp
 = 
BP_MPRED
;

1410 
bp
 = 
BP_CPRED
;

1411 
hm
 = 0; hm < 
num_hm
; hm++) {

1412 
mp_times
[
edge_id
][
hm
] = (*Ë
	`ˇŒoc
(
ˇche
.
ns
, ());

1413 
Õ
 = 
bbi_hm_li°
[
bbi
->
id
][
hm
];

1414 i‡((
Õ
 =
NULL
Ë|| (Õ->
id
 == 0))

1416 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1417 i‡(
mp_af„˘ed_£ts
[
Õ
->
id
][
£t
] !
NULL
) {

1418 
	`˘x_mpmiss_time
(
edge_id
, 
hm
, 
£t
, 
bp
);

1423 
	}
}

1426 
	$h™dÀ_mpmiss
() {

1427 
	`cﬁÀ˘_af„˘ed_£ts
();

1428 
	`e°_mpmiss_times
();

1429 
	}
}

1431 
	$pùe_™Æysis
() {

1432 
tmp_cs
 = (
mblk_èg_t
 *Ë
	`ˇŒoc
(
ˇche
.
ns
, (mblk_tag_t));

1433 
	`CHECK_MEM
(
tmp_cs
);

1436 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
) {

1437 
tmp_cs_l2
 = (
mblk_èg_t
 *Ë
	`ˇŒoc
(
ˇche_l2
.
ns
, (mblk_tag_t));

1438 
	`CHECK_MEM
(
tmp_cs_l2
);

1441 
	`öô_∑
();

1442 
	`£t_mœt_bbi
();

1443 
	`bound_ñog_Àn
();

1444 i‡(
b¥ed_scheme
 !
BP_NONE


1446 
	`föd_mœt_mpö°
();

1448 
	`cﬁÀ˘_bodõs
();

1449 
	`cﬁÀ˘_¥ﬁogs
();

1450 
	`cﬁÀ˘_ïûogs
();

1453 
i
;

1454 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1455 
tcfg_edge_t
* 
e
 = 
tcfg_edges
[
i
];

1456 
tcfg_node_t
* 
§c
 = 
e
->src;

1457 
tcfg_node_t
* 
d°
 = 
e
->dst;

1458 
	`¥ötf
("edgê%d_%d:\n", 
§c
->
id
, 
d°
->id);

1459 
tcfg_edge_t
* 
e_ö
;

1460 
	`¥ötf
("\àö %d: ", 
§c
->
id
);

1461 
e_ö
 = 
§c
->
ö
;É_ö !
NULL
;É_ö =É_ö->
√xt_ö
) {

1462 
tcfg_node_t
* 
bbi
 = 
e_ö
->
§c
;

1463 
	`¥ötf
(" %d", 
bbi
->
id
);

1465 
	`¥ötf
("\n");

1466 
	`¥ötf
("\àö %d:", 
d°
->
id
);

1467 
e_ö
 = 
d°
->
ö
;É_ö !
NULL
;É_ö =É_ö->
√xt_ö
) {

1468 
tcfg_node_t
* 
bbi
 = 
e_ö
->
§c
;

1469 
	`¥ötf
(" %d", 
bbi
->
id
);

1471 
	`¥ötf
("\n");

1472 
code_lök_t
* 
∂og
;

1473 
∂og
 = 
¥ﬁogs
[
e
->
id
];Ölog !
NULL
;Ölog =Ölog->
√xt
) {

1474 
ö°_num
 = 
∂og
->
num_ö°
;

1475 
j
;

1476 
j
 = 0; j < 
ö°_num
; j++) {

1477 
mas_ö°_t
* 
ö°
 = &(
∂og
->
code
[
j
]);

1478 
	`¥ötf
("\t");

1479 
	`¥ötf
("0x%x bbi_id:%d", 
ö°
->ö°->
addr
, in°->
bbi_id
);

1480 
	`¥ötf
("\n");

1482 
	`¥ötf
("\n");

1487 
	`e°_unôs
();

1489 i‡(
íabÀ_iˇche
 && (
b¥ed_scheme
 !
NO_BPRED
))

1490 
	`h™dÀ_mpmiss
();

1492 
	`‰ì
(
mœt_bbi
);

1493 
	`‰ì
(
tmp_cs
);

1494 
	}
}

1496 
	$dump_xlogs
(
code_lök_t
 **
xlogs
) {

1497 
tcfg_node_t
 *
§c
, *
d°
;

1498 
i
, 
k
;

1499 
code_lök_t
 *
log
;

1500 
mas_ö°_t
 *
mas_ö°
;

1502 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1503 
§c
 = 
tcfg_edges
[
i
]->src;

1504 
d°
 = 
tcfg_edges
[
i
]->dst;

1505 
	`¥ötf
("\√dge: %d.%d -> %d.%d", 
	`bbi_pid
(
§c
), 
	`bbi_bid
(src),

1506 
	`bbi_pid
(
d°
), 
	`bbi_bid
(dst));

1507 
log
 = 
xlogs
[
i
];Üog !
NULL
;Üog =Üog->
√xt
) {

1508 
k
 = 0; k < 
log
->
num_ö°
; k++) {

1509 
mas_ö°
 = &
log
->
code
[
k
];

1510 i‡((
k
 & 7) == 0)

1511 
	`¥ötf
("\¿ %x", 
mas_ö°
->
ö°
->
addr
);

1513 
	`¥ötf
(" %x", 
mas_ö°
->
ö°
->
addr
);

1514 i‡(
mas_ö°
->
bp_Êag
 =
BP_MPRED


1516 
	`¥ötf
("/M");

1517 i‡(
mas_ö°
->
bp_Êag
 =
BP_UNCLEAR


1519 
	`¥ötf
("/U");

1521 
	`¥ötf
("/C");

1522 i‡(
mas_ö°
->
ic_Êag
 =
IC_MISS


1524 
	`¥ötf
("M");

1525 i‡(
mas_ö°
->
ic_Êag
 =
IC_UNCLEAR


1527 
	`¥ötf
("U");

1529 
	`¥ötf
("H");

1531 
	`¥ötf
("\n -------------------------------------------");

1532 
	`¥ötf
("-------------------------------------------\n");

1535 
	}
}

1537 
	$dump_unôs_times
() {

1538 
tcfg_edge_t
 *
e
;

1539 
edge_id
, 
hm
, 
num_hm
;

1541 
	`¥ötf
("dumpÅimingÉstimates for basic blocks\n");

1542 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1543 
e
 = 
tcfg_edges
[
edge_id
];

1544 
	`¥ötf
("%d.%d -> %d.%d\n", 
	`bbi_pid
(
e
->
§c
), 
	`bbi_bid
(e->src),

1545 
	`bbi_pid
(
e
->
d°
), 
	`bbi_bid
(e->dst));

1546 i‡(
íabÀ_iˇche
) {

1547 
num_hm
 = 
num_hô_miss
[
tcfg_edges
[
edge_id
]->
d°
->
id
];

1549 
num_hm
 = 1;

1550 
hm
 = 0; hm < 
num_hm
; hm++) {

1551 
	`¥ötf
(" hm[%d]: %d", 
hm
, 
˝ªd_times
[
edge_id
][hm]);

1552 i‡((
b¥ed_scheme
 !
NO_BPRED
Ë&& 
	`c⁄d_bbi
(
e
->
§c
))

1553 
	`¥ötf
(" %d(m)", 
m¥ed_times
[
edge_id
][
hm
]);

1554 
	`¥ötf
("\n");

1557 
	`¥ötf
("\n");

1558 
	}
}

1560 
	$dump_unô_time
(
edge_id
, 
hm
, 
bp
) {

1561 
t
;

1562 
tcfg_edge_t
 *
e
 = 
tcfg_edges
[
edge_id
];

1564 i‡(
bp
 =
BP_CPRED


1566 
t
 = 
˝ªd_times
[
edge_id
][
hm
];

1568 
t
 = 
m¥ed_times
[
edge_id
][
hm
];

1569 
	`¥ötf
(" %d.%d -> %d.%d (hm:%d bp:%d): %d\n", 
	`bbi_pid
(
e
->
§c
),

1570 
	`bbi_bid
(
e
->
§c
), 
	`bbi_pid
”->
d°
), bbi_bid”->d°), 
hm
, 
bp
, 
t
);

1571 
	}
}

1573 
	$dump_edge_mp_times
(
edge_id
, 
hm
) {

1574 *
t
, 
£t
;

1575 
tcfg_edge_t
 *
e
 = 
tcfg_edges
[
edge_id
];

1576 
tcfg_node_t
 *
bbi
 = 
e
->
d°
;

1577 
lo›_t
 *
Õ
;

1579 
t
 = 
mp_times
[
edge_id
][
hm
];

1580 
	`¥ötf
(" %d.%d -> %d.%d (hm:%d): ", 
	`bbi_pid
(
e
->
§c
), 
	`bbi_bid
(e->src),

1581 
	`bbi_pid
(
e
->
d°
), 
	`bbi_bid
”->d°), 
hm
);

1582 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1583 i‡(
t
[
£t
] != 0)

1584 
	`¥ötf
(" s[%d]=%d", 
£t
, 
t
[set]);

1586 
	`¥ötf
("\n");

1587 
	}
}

1589 
	$dump_mp_times
() {

1590 
tcfg_edge_t
 *
e
;

1591 
lo›_t
 *
Õ
;

1592 
edge_id
, 
hm
, 
num_hm
, 
£t
, *
t
;

1594 
	`¥ötf
("dump mispredÅimingÉstimates for basic blocks\n");

1595 
edge_id
 = 0;Édge_id < 
num_tcfg_edges
;Édge_id++) {

1596 
e
 = 
tcfg_edges
[
edge_id
];

1597 
	`¥ötf
("%d.%d -> %d.%d\n", 
	`bbi_pid
(
e
->
§c
), 
	`bbi_bid
(e->src),

1598 
	`bbi_pid
(
e
->
d°
), 
	`bbi_bid
(e->dst));

1599 
num_hm
 = 
num_hô_miss
[
tcfg_edges
[
edge_id
]->
d°
->
id
];

1600 
hm
 = 0; hm < 
num_hm
; hm++) {

1601 
Õ
 = 
bbi_hm_li°
[
e
->
d°
->
id
][
hm
];

1602 i‡(
Õ
 =
NULL


1605 
	`¥ötf
(" hm[%d]:", 
hm
);

1606 
t
 = 
mp_times
[
edge_id
][
hm
];

1607 
£t
 = 0; së < 
ˇche
.
ns
; set++) {

1608 i‡(
t
[
£t
] != 0)

1609 
	`¥ötf
(" s[%x]=%d", 
£t
, 
t
[set]);

1611 
	`¥ötf
("\n");

1614 
	`¥ötf
("\n");

1615 
	}
}

1617 
	$dump_∂og_°©s
() {

1618 
i
;

1619 
code_lök_t
 *
p
;

1620 
Àn_°©
[48];

1622 
	`¥ötf
("dumpÖrologÜen statistics\n");

1623 
i
 = 0; i < 48; i++)

1624 
Àn_°©
[
i
] = 0;

1626 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1627 
p
 = 
¥ﬁogs
[
i
];Ö !
NULL
;Ö =Ö->
√xt
) {

1628 
Àn_°©
[
p
->
num_ö°
]++;

1632 
i
 = 0; i < 48; i++) {

1633 i‡(
Àn_°©
[
i
] > 0)

1634 
	`¥ötf
("Àn[%d]: %d\n", 
i
, 
Àn_°©
[i]);

1637 
	}
}

1639 
	$dump_ñog_°©s
() {

1640 
i
;

1641 
code_lök_t
 *
p
;

1642 
Àn_°©
[32];

1644 
	`¥ötf
("dumpÉpilogÜen statistics\n");

1645 
i
 = 0; i < 32; i++)

1646 
Àn_°©
[
i
] = 0;

1648 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1649 
p
 = 
ïûogs
[
i
];Ö !
NULL
;Ö =Ö->
√xt
) {

1650 
Àn_°©
[
p
->
num_ö°
]++;

1654 
i
 = 0; i < 32; i++) {

1655 i‡(
Àn_°©
[
i
] > 0)

1656 
	`¥ötf
("Àn[%d]: %d\n", 
i
, 
Àn_°©
[i]);

1659 
	}
}

1661 
	$dump_c⁄ãxt_°©s
() {

1662 
code_lök_t
 *
p
;

1663 
tcfg_edge_t
 *
e
;

1664 
i
, *
num_∂ogs
, *
num_ñogs
, 
num_˘xs
, 
tŸÆ
 = 0;

1666 
	`dump_∂og_°©s
();

1667 
	`dump_ñog_°©s
();

1669 
num_∂ogs
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

1670 
num_ñogs
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

1672 
	`¥ötf
("dump context statistics\n");

1673 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1674 
e
 = 
tcfg
[
i
]->
ö
;É !
NULL
;É =É->
√xt_ö
) {

1675 
p
 = 
¥ﬁogs
[
e
->
id
];Ö !
NULL
;Ö =Ö->
√xt
)

1676 
num_∂ogs
[
i
]++;

1678 
e
 = 
tcfg
[
i
]->
out
;É !
NULL
;É =É->
√xt_out
) {

1679 
p
 = 
ïûogs
[
e
->
id
];Ö !
NULL
;Ö =Ö->
√xt
)

1680 
num_ñogs
[
i
]++;

1682 
num_˘xs
 = 
	`max
(
num_∂ogs
[
i
], 1Ë* max(
num_ñogs
[i], 1);

1683 
	`¥ötf
("%3d: (%3d, %3d/%2dË%6d\n", 
i
, 
num_∂ogs
[i], 
num_ñogs
[i],

1684 
max_ñog_Àn
[
i
], 
num_˘xs
);

1685 
tŸÆ
 +
num_˘xs
;

1687 
	`¥ötf
("\n-----------------------\¡ŸÆ: %d\n", 
tŸÆ
);

1689 
	`‰ì
(
num_∂ogs
);

1690 
	`‰ì
(
num_ñogs
);

1691 
	}
}

1693 
	$dump_ñog_Àn
() {

1694 
i
;

1696 
	`¥ötf
("dump max_elog_len\n");

1697 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1698 
	`¥ötf
("bbi[%d]/%x: %d\n", 
i
, 
tcfg
[i]->
bb
->
ß
, 
max_ñog_Àn
[i]);

1700 
	}
}

1702 
	$dump_mœt_mpö°
() {

1703 
i
;

1705 
	`¥ötf
("dump mlat_mpinst\n");

1706 
i
 = 0; i < 
num_tcfg_edges
; i++) {

1707 
	`¥ötf
("edge[%d->%d]/%x->%x: %d\n", 
tcfg_edges
[
i
]->
§c
->
id
,

1708 
tcfg_edges
[
i
]->
d°
->
id
,Åcfg_edges[i]->
§c
->
bb
->
ß
,

1709 
tcfg_edges
[
i
]->
d°
->
bb
->
ß
, 
mœt_mpö°
[i]);

1711 
	}
}

1713 
w‹kli°_p
* 
ÕReqPS
;

1714 
	$isPîsi°ít
(
ßddr_p
 
addr
, 
lo›_t
* 
Õ
) {

1716 i‡(
Õ
 =
NULL


1719 
Õ
 !
NULL
) {

1720 
w‹kli°_p
 
ÕPS
 = 
ÕReqPS
[
Õ
->
id
];

1721 ; 
ÕPS
 !
NULL
;ÜpPS =ÜpPS->
√xt
) {

1722 
ßddr_p
 
m
 = (ßddr_pË
ÕPS
->
d©a
;

1723 i‡(
m
->
blkAddr
 =
addr
->blkAdd∏&& 
	`cmpSAddr
(m,áddr, 
Õ
->
id
) == 0) {

1727 
Õ
 =Üp->
∑ª¡
;

1731 
	}
}

1732 
	$s˝DumpTS
(
w‹kli°_p
 
tsSë
) {

1733 i‡(
tsSë
 =
NULL
) {

1734 
	`¥ötf
(" NULL");

1737 
w‹kli°_p
 
p
 = 
tsSë
;

1738 
p
 !
NULL
) {

1739 
ts_p
 
ts
 = (ts_pË(
p
->
d©a
);

1740 
	`¥ötf
("Ü%d[%d,%d]", 
ts
->
lo›_id
,Ås->
lw
,Ås->
up
);

1741 
p
 =Ö->
√xt
;

1744 
	}
}

	@pipeline.h

22 #i‚de‡
PIPE_LINE_H


23 
	#PIPE_LINE_H


	)

25 
	~"comm⁄.h
"

27 
	#BODY_CODE
 0

	)

28 
	#PLOG_CODE
 1

	)

29 
	#ELOG_CODE
 2

	)

31 
	#MAX_SSCALAR
 4

	)

33 
	#FLAG_HIT
 0

	)

34 
	#FLAG_L2HIT
 1

	)

35 
	#FLAG_NC
 2

	)

39 
de_ö°_t
 *
	mö°
;

40 
	mbbi_id
;

41 
	mmblk_id
;

42 
	mmblk_id_l2
;

43 
	mbp_Êag
;

44 
	mic_Êag
;

45 
	mic_Êag_l2
;

46 
	mdc_Êag
;

47 
	mdc_Êag_l2
;

48 } 
	tmas_ö°_t
;

50 
code_lök_t
 
	tcode_lök_t
;

52 
	scode_lök_t
 {

53 
mas_ö°_t
 *
	mcode
;

54 
	mnum_ö°
;

55 
code_lök_t
 *
	m√xt
;

59 
dump_xlogs
();

61 
dump_unôs_times
();

63 
dump_mp_times
();

65 
dump_∂og_°©s
();

67 
dump_ñog_°©s
();

69 
dump_c⁄ãxt_°©s
();

71 
dump_ñog_Àn
();

73 
dump_mœt_mpö°
();

75 
dcL©Cœssify
(
mas_ö°_t
*, );

	@readfile.c

23 
	~<°dio.h
>

24 
	~"cfg.h
"

25 
	~"iß.h
"

28 
¥og_t
 
¥og
;

29 
iß_t
 *
iß
;

35 
	$ªad_code
(*
‚ame
)

37 
	`ªad_code_ss
(
‚ame
);

39 
	}
}

49 
	$dump_code
()

51 
i
, 
j
;

52 
de_ö°_t
 *
ö°
;

54 
i
 = 0 ; i < 
¥og
.
num_ö°
; i++) {

55 
ö°
 = &
¥og
.
code
[
i
];

56 
	`¥ötf
("%8x %-10s", 
ö°
->
addr
, 
iß
[ö°->
›_íum
].
«me
);

57 
j
 = 0; j < 
ö°
->
num_out
; j++)

58 
	`¥ötf
(" O%d", 
ö°
->
out
[
j
]);

59 
j
 = 0; j < 
ö°
->
num_ö
; j++)

60 
	`¥ötf
(" I%d", 
ö°
->
ö
[
j
]);

61 i‡(
ö°
->
èrgë
 != 0)

62 
	`¥ötf
("Å¨gë: %x", 
ö°
->
èrgë
);

63 
	`¥ötf
("\n");

65 
	}
}

	@reg.c

31 
	~<°dio.h
>

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~"symexec.h
"

35 
	~"addªss.h
"

37 
FILE
 *
	gdbgF
;

38 
	$£tDebugFûe
(*
fName
) {

39 
dbgF
 = 
	`f›í
(
fName
,"w");

40 
	}
}

43 
	$öôReg
(
ªg_t
 *
ªg
) {

46 
ªg
->
t
 = 
VALUE_UNDEF
;

47 
ªg
->
vÆ
 = 0;

48 
ªg
->
ex¥
 = 
NULL
;

49 
ªg
->
biv
 = 
NULL
;

50 
ªg
->
∑ø
[0]='\0';

51 
ªg
->
«me
[0]='\0';

52 
ªg
->
Êag
 = 0;

53 
	}
}

54 
	$∑nicRegTy≥
(
ªg_t
 
ªg
) {

55 *
tmp
;

56 
dbg
 = 1;

57 i‡(
dbg
) {

58 
	`Ârötf
(
dbgF
,"\nP™ic: unknow¿ªg vÆuêty≥: %d,Ñeöô",
ªg
.
t
);

59 
	`¥ötf
("\nP™ic: unknow¿ªg vÆuêty≥: %d,Ñeöô",
ªg
.
t
);

60 
	`fÊush
(
dbgF
);

61 
	`fÊush
(
°dout
);

63 
	`exô
(1);

64 
	}
}

65 
	$¥ötReg
(
FILE
 *
Â
, 
ªg_t
 
ªg
) {

67 
	`Ârötf
(
Â
,"{");

68 
ªg
.
t
) {

69 
VALUE_UNDEF
:

70 
	`Ârötf
(
Â
,"_");

72 
VALUE_CONST
:

73 
	`Ârötf
(
Â
,"%x",
ªg
.
vÆ
);

75 
VALUE_EXPR
:

76 
	`¥ötEx¥
(
Â
,
ªg
.
ex¥
);

78 
VALUE_PARA
:

79 
	`Ârötf
(
Â
,"%s",
ªg
.
∑ø
);

81 
VALUE_BIV
:

82 
	`¥ötBIV
(
Â
,
ªg
.
biv
);

85 
	`∑nicRegTy≥
(
ªg
);

87 
	`Ârötf
(
Â
,"}");

88 
	}
}

89 
	$¥ötRegLi°
(
FILE
 *
Â
, 
ªg_t
 *
ªgLi°
) {

90 
i
;

91 
i
=0; i<
NO_REG
; i++) {

92 
	`Ârötf
(
Â
,"\n%†-> ",
ªgLi°
[
i
].
«me
);

93 
	`¥ötReg
(
Â
,
ªgLi°
[
i
]);

95 
	`fÊush
(
Â
);

96 
	}
}

97 
	$£tI¡
(
ªg_t
 *
ªg
, 
k
) {

98 
dbg
 = 0;

99 i‡(
ªg
->
t
 !=
VALUE_CONST
Ë{
	`˛rReg
(reg);reg->t = VALUE_CONST;}

100 
ªg
->
vÆ
 = 
k
;

101 i‡(
dbg
Ë{
	`Ârötf
(
dbgF
,"\¿Së i¡: ");
	`¥ötReg
(dbgF,*
ªg
);}

102 
	}
}

104 
	$˛rReg
(
ªg_t
 *
ªg
) {

106 
ªg
->
t
) {

107 
VALUE_UNDEF
:

108 
VALUE_CONST
:

109 
VALUE_PARA
:

111 
VALUE_BIV
:

112 i‡(
ªg
->
biv
) {

113 
	`˛rReg
–&((
ªg
->
biv
)->
öôVÆ
));

114 
	`‰ì
(
ªg
->
biv
);

116 
ªg
->
biv
 = 
NULL
;

118 
VALUE_EXPR
:

119 i‡(
ªg
->
ex¥
) {

120 
	`˛rEx¥
(
ªg
->
ex¥
);

121 
	`‰ì
(
ªg
->
ex¥
);

123 
ªg
->
ex¥
 = 
NULL
;

126 
	`∑nicRegTy≥
(*
ªg
);

127 
	`öôReg
(
ªg
);

131 
ªg
->
t
 = 
VALUE_UNDEF
;

132 
	}
}

133 
	$ªgUnknown
(
ªg_t
 *
ªg
) {

134 
	`˛rReg
(
ªg
);

135 
ªg
->
t
 = 
VALUE_UNPRED
;

136 
	`°r˝y
(
ªg
->
∑ø
,"T");

137 
	}
}

138 
	$ªgEq
–
ªg_t
 
ªg1
,Ñeg_à
ªg2
 ) {

139 i‡(
ªg1
.
t
 !
ªg2
.t)  0;

140 
ªg1
.
t
) {

141 
VALUE_UNDEF
:

143 
VALUE_CONST
:

144  (
ªg1
.
vÆ
==
ªg2
.val);

145 
VALUE_PARA
:

146  (
	`°rcmp
(
ªg1
.
∑ø
,
ªg2
.para)==0);

147 
VALUE_EXPR
:

148  
	`ex¥Eq
(
ªg1
.
ex¥
,
ªg2
.expr);

149 
VALUE_BIV
:

150  
	`bivEq
(
ªg1
.
biv
, 
ªg2
.biv);

152 
	`∑nicRegTy≥
(
ªg1
);

155 
	}
}

156 
	$˝yReg
(
ªg_t
 *
d°
,Ñeg_à
§c
) {

157 i‡(
	`ªgEq
(*
d°
,
§c
))  0;

158 i‡(
d°
->
t
!
§c
.t) {

159 i‡(
d°
->
t
!=
VALUE_UNDEF
Ë
	`˛rReg
(dst);

160 
d°
->
t
 = 
§c
.t;

162 
§c
.
t
) {

163 
VALUE_UNDEF
:

165 
VALUE_CONST
:

166 
d°
->
vÆ
 = 
§c
.val;

168 
VALUE_EXPR
:

169 i‡(
d°
->
ex¥
==
NULL
Ëd°->ex¥ = 
	`ˇŒoc
(1,(
ex¥_s
));

170 
	`˝yEx¥
–
d°
->
ex¥
,
§c
.expr);

172 
VALUE_PARA
:

173 
	`°r˝y
(
d°
->
∑ø
,
§c
.para);

175 
VALUE_BIV
:

176 i‡(
d°
->
biv
==
NULL
Ëd°->biv = 
	`ˇŒoc
(1,(
biv_s
));

177 
	`˝yBIV
(
d°
->
biv
,
§c
.biv);

180 
	`∑nicRegTy≥
(
§c
);

181 
	`∑nicRegTy≥
(*
d°
);
	`ªgUnknown
(dst);

184 
	}
}

186 
	$öôRegSë
(
ªg_t
 *
ªgLi°
) {

187 
i
;

189 
i
=0; i<
NO_REG
; i++Ë
	`öôReg
(
ªgLi°
+i);

191 
	`°r˝y
–
ªgLi°
[0].
«me
 , "$0" ); strcpy(ÑegList[1].name , "$1" );

192 
	`°r˝y
–
ªgLi°
[2].
«me
 , "$2" ); strcpy(ÑegList[3].name , "$3" );

193 
	`°r˝y
–
ªgLi°
[4].
«me
 , "$4" ); strcpy(ÑegList[5].name , "$5" );

194 
	`°r˝y
–
ªgLi°
[6].
«me
 , "$6" ); strcpy(ÑegList[7].name , "$7" );

195 
	`°r˝y
–
ªgLi°
[8].
«me
 , "$8" ); strcpy(ÑegList[9].name , "$9" );

196 
	`°r˝y
–
ªgLi°
[10].
«me
, "$10" ); strcpy(ÑegList[11].name, "$11" );

197 
	`°r˝y
–
ªgLi°
[12].
«me
, "$12" ); strcpy(ÑegList[13].name, "$13" );

198 
	`°r˝y
–
ªgLi°
[14].
«me
, "$14" ); strcpy(ÑegList[15].name, "$15" );

199 
	`°r˝y
–
ªgLi°
[16].
«me
, "$16" ); strcpy(ÑegList[17].name, "$17" );

200 
	`°r˝y
–
ªgLi°
[18].
«me
, "$18" ); strcpy(ÑegList[19].name, "$19" );

201 
	`°r˝y
–
ªgLi°
[20].
«me
, "$20" ); strcpy(ÑegList[21].name, "$21" );

202 
	`°r˝y
–
ªgLi°
[22].
«me
, "$22" ); strcpy(ÑegList[23].name, "$23" );

203 
	`°r˝y
–
ªgLi°
[24].
«me
, "$24" ); strcpy(ÑegList[25].name, "$25" );

204 
	`°r˝y
–
ªgLi°
[26].
«me
, "$26" ); strcpy(ÑegList[27].name, "$27" );

205 
	`°r˝y
–
ªgLi°
[28].
«me
, "$28" ); strcpy(ÑegList[29].name, "$29" );

206 
	`°r˝y
–
ªgLi°
[30].
«me
, "$30" ); strcpy(ÑegList[31].name, "$31" );

210 
	`°r˝y
–
ªgLi°
[34].
«me
, "$f0" ); strcpy(ÑegList[35].name, "$f1" );

211 
	`°r˝y
–
ªgLi°
[36].
«me
, "$f2" ); strcpy(ÑegList[37].name, "$f3" );

212 
	`°r˝y
–
ªgLi°
[38].
«me
, "$f4" ); strcpy(ÑegList[39].name, "$f5" );

213 
	`°r˝y
–
ªgLi°
[40].
«me
, "$f6" ); strcpy(ÑegList[41].name, "$f7" );

214 
	`°r˝y
–
ªgLi°
[42].
«me
, "$f8" ); strcpy(ÑegList[43].name, "$f9" );

215 
	`°r˝y
–
ªgLi°
[44].
«me
, "$f10" ); strcpy(ÑegList[45].name, "$f11" );

216 
	`°r˝y
–
ªgLi°
[46].
«me
, "$f12" ); strcpy(ÑegList[47].name, "$f13" );

217 
	`°r˝y
–
ªgLi°
[48].
«me
, "$f14" ); strcpy(ÑegList[49].name, "$f15" );

218 
	`°r˝y
–
ªgLi°
[50].
«me
, "$f16" ); strcpy(ÑegList[51].name, "$f17" );

219 
	`°r˝y
–
ªgLi°
[52].
«me
, "$f18" ); strcpy(ÑegList[53].name, "$f19" );

220 
	`°r˝y
–
ªgLi°
[54].
«me
, "$f20" ); strcpy(ÑegList[55].name, "$f21" );

221 
	`°r˝y
–
ªgLi°
[56].
«me
, "$f22" ); strcpy(ÑegList[57].name, "$f23" );

222 
	`°r˝y
–
ªgLi°
[58].
«me
, "$f24" ); strcpy(ÑegList[59].name, "$f25" );

223 
	`°r˝y
–
ªgLi°
[60].
«me
, "$f26" ); strcpy(ÑegList[61].name, "$f27" );

224 
	`°r˝y
–
ªgLi°
[62].
«me
, "$f28" ); strcpy(ÑegList[63].name, "$f29" );

225 
	`°r˝y
–
ªgLi°
[64].
«me
, "$f30" ); strcpy(ÑegList[65].name, "$f31" );

226 
	`°r˝y
–
ªgLi°
[66].
«me
, "$fcc" );

229 
	`£tI¡
(
ªgLi°
+0,0);

235 
	}
}

238 
	$˛órRegLi°
(
ªg_t
 *
ªgLi°
) {

239 
i
;

240  
i
 = 1; i < 
NO_REG
; i++ ) {

242 
	`˛rReg
(
ªgLi°
+
i
);

245 
	}
}

247 
	$födReg
(
ªg_t
 *
ªgLi°
, 
ªgName
[] ) {

248 
i
;

249  
i
 = 0; i < 
NO_REG
; i++ ) {

250 if–
	`°rcmp
–
ªgName
, 
ªgLi°
[
i
].
«me
 )==0)  i;

253 
	}
}

256 
	$£tNewP¨a
(*
∑ø
) {

257 
dbg
 = 0;

260 
	`•rötf
(
∑ø
,"T");

261 i‡(
dbg
Ë
	`Ârötf
(
dbgF
,"\nNewÖ¨a: %s",
∑ø
);

262 
	}
}

266 
	$upd©eInôVÆ
(
biv_p
 
biV¨
, 
ªg_t
 
öôVÆ
) {

267  
	`mîgeReg
–&(
biV¨
->
öôVÆ
),initVal,0);

268 
	}
}

269 
	$‰ìBIV
(
biv_p
 *
biv
) {

270 
	`˛rReg
–&–(*
biv
)->
öôVÆ
) );

271 
	`‰ì
(*
biv
);

272 *
biv
=
NULL
;

273 
	}
}

274 
	$bivEq
(
biv_p
 
öV¨1
, biv_∞
öV¨2
) {

275 i‡(
	`°rcmp
(
öV¨1
->
ªgName
,
öV¨2
->regName)!=0)  0;

276 i‡(
	`ªgEq
(
öV¨1
->
öôVÆ
, 
öV¨2
->initVal )==0)  0;

277 i‡(
öV¨1
->
°ride
 !
öV¨2
->stride)  0;

280 
	}
}

281 
	$˝yBIV
(
biv_p
 
v¨D°
, biv_∞
v¨Src
) {

282 
v¨D°
->
ö¢
 = 
v¨Src
->insn;

283 
	`˝yReg
–&(
v¨D°
->
öôVÆ
), 
v¨Src
->initVal );

284 
	`°r˝y
(
v¨D°
->
›r
,
v¨Src
->opr);

285 
	`°r˝y
(
v¨D°
->
ªgName
,
v¨Src
->regName);

286 
v¨D°
->
°ride
 = 
v¨Src
->stride;

287 
	}
}

288 
	$¥ötBIV
(
FILE
 *
Â
, 
biv_p
 
biV¨
) {

289 
	`Ârötf
(
Â
," [%s,",
biV¨
->
ªgName
);

290 
	`¥ötReg
(
Â
, 
biV¨
->
öôVÆ
);

291 
	`Ârötf
(
Â
,",%d",
biV¨
->
°ride
);

292 
	`Ârötf
(
Â
,"] ");
	`fÊush
(fp);

293 
	}
}

296 
	$¥ötEx¥
(
FILE
* 
Â
, 
ex¥_p
 
ex¥
) {

297 
i
;

298 
	`Ârötf
(
Â
,"\"");

299 
i
=0; i<
ex¥
->
v¨Num
; i++) {

300 
	`Ârötf
(
Â
,"%d:",
ex¥
->
c€f
[
i
]);

301 
	`¥ötReg
(
Â
, 
ex¥
->
vÆue
[
i
]);

302 
	`Ârötf
(
Â
,"+");

304 
	`Ârötf
(
Â
," %x ",
ex¥
->
k
);

305 
	`Ârötf
(
Â
,"\"");
	`fÊush
(fp);

306 
	}
}

308 
	$compuãEx¥
(*
›
, 
ex¥_p
 
ex¥D
,Éx¥_∞
ex¥1
,Éx¥_∞
ex¥2
) {

309 
dbg
 = 1;

310 
i
,
j
,
k
;

311 
ex¥_p
 
›r1
, 
›r2
, 
èûD
, 
tmpNode
;

314 
dis
;

315 
öv
;

316 
¶l
;

319 
dbg
 = dbg && 
	`°rcmp
(
›
,"<<")==0;

320 i‡(
dbg
) {

321 
	`Ârötf
(
dbgF
,"\nCompuã "); 
	`¥ötEx¥
(dbgF,
ex¥1
);

322 
	`Ârötf
(
dbgF
," %†",
›
); 
	`¥ötEx¥
(dbgF,
ex¥2
);
	`fÊush
(dbgF);

326 i‡(
	`°rcmp
(
›
,"*")==0 || strcmp(op,">>")==0 || strcmp(op,"<<")==0) {

327 i‡–(
ex¥1
->
v¨Num
 !0 && 
ex¥2
->varNum !=0) ) {

329 
	`¥ötf
("\nPanic,Çot supportÉxpr1 *Éxpr2 for complexÉxpr");

330 i‡(
dbg
) {

331 
	`Ârötf
(
°dout
,"\nCompuã "); 
	`¥ötEx¥
(°dout,
ex¥1
);

332 
	`Ârötf
(
°dout
," %†",
›
);
	`¥ötEx¥
(°dout,
ex¥2
);
	`fÊush
(stdout);

336 
dis
 = 1;

338 
dis
 = 0;

339 
i
=0; i<
ex¥1
->
v¨Num
; i++Ëex¥1->
added
[i]=0;

340 
i
=0; i<
ex¥2
->
v¨Num
; i++Ëex¥2->
added
[i]=0;

342 
öv
 = 0;

343 i‡(
dis
) {

344 i‡(
ex¥1
->
v¨Num
==0Ë{ 
›r1
 = 
ex¥2
; 
›r2
 =Éx¥1; 
öv
 = 1; }

345 i‡(
ex¥2
->
v¨Num
==0Ë{
›r1
 = 
ex¥1
; 
›r2
 =Éxpr2; }

347 
	`¥ötf
("\nPanic,Çot implement for 1:a * 2:b, must 1:a * k:1 ");

352 
›r1
 = 
ex¥1
; 
›r2
 = 
ex¥2
;

355 
	`˝yEx¥
(
ex¥D
, 
›r1
);

357 
	`Ârötf
(
dbgF
,"\√D =É1 = "); 
	`¥ötEx¥
(dbgF,
ex¥D
);
	`fÊush
(dbgF);

359 i‡(
dis
) {

360 i‡(
	`°rcmp
(
›
,"<<")==0 && !
öv
 ) 
¶l
 = 1;

361 i‡(
	`°rcmp
(
›
,"<<")==0 && 
öv
 ) 
¶l
 = -1;

362 i‡(
	`°rcmp
(
›
,">>")==0 && !
öv
 ) 
¶l
 = -1;

363 i‡(
	`°rcmp
(
›
,">>")==0 && 
öv
 ) 
¶l
 = 1;

364 
¶l
 = 0;

365 
i
=0; i<
ex¥D
->
v¨Num
; i++) {

366 i‡(
	`°rcmp
(
›
,"*")==0Ë
ex¥D
->
c€f
[
i
] *
›r2
->
k
;

367 i‡(
	`°rcmp
(
›
,">>")==0 || strcmp(op,"<<")==0) {

368 i‡(
¶l
==1)

369 
k
=0; k< 
›r2
->k; k++Ë
ex¥D
->
c€f
[
i
] *= 2;

370 i‡(
¶l
==-1)

371 
k
=0; k< 
›r2
->k; k++Ë
ex¥D
->
c€f
[
i
] /= 2;

372 {
	`¥ötf
("\nP™ic: ????");
	`exô
(1);}

375 i‡(
	`°rcmp
(
›
,"*")==0Ë
ex¥D
->
k
 =Éx¥D->k * 
›r2
->k;

376 i‡(
	`°rcmp
(
›
,"<<")==0 || strcmp(op,">>")==0) {

377 i‡(
¶l
==1)

378 
k
=0; k< 
›r2
->k; k++Ë
ex¥D
->
c€f
[
i
] *= 2;

379 i‡(
¶l
==-1)

380 
k
=0; k< 
›r2
->k; k++Ë
ex¥D
->
c€f
[
i
] /= 2;

381 {
	`¥ötf
("\nP™ic: ????");
	`exô
(1);}

383 i‡(
dbg
){
	`Ârötf
(
dbgF
,"\√D %†%d = ",
›
,
›r2
->
k
);
	`¥ötEx¥
(dbgF,
ex¥D
);}

384 
COMPUTE_EXPR_FIN
;

387 
i
=0; i<
ex¥D
->
v¨Num
; i++) {

388 
j
=0; j<
›r2
->
v¨Num
; j++) {

389 i‡–
	`ªgEq
–
ex¥D
->
vÆue
[
i
], 
›r2
->vÆue[
j
] )) {

390 
›r2
->
added
[
j
] = 1;

391 i‡(
	`°rcmp
(
›
,"+")==0)

392 
ex¥D
->
c€f
[
i
] =Éx¥D->c€f[i] + 
›r2
->c€f[
j
];

393 i‡(
	`°rcmp
(
›
,"-")==0)

394 
ex¥D
->
c€f
[
i
] =Éx¥D->c€f[i] - 
›r2
->c€f[
j
];

400 
	`Ârötf
(
dbgF
,"\nÉDáfteráddedÉlements in both E1 & E2: ");

401 
	`¥ötEx¥
(
dbgF
,
ex¥D
);
	`fÊush
(dbgF);

403 
j
=0; j<
›r2
->
v¨Num
; j++) {

404 i‡(
›r2
->
added
[
j
]==0) {

405 
v¨Num
 = 
ex¥D
->varNum;

406 i‡(
v¨Num
==
MAX_EXPR_LEN
)  0;

407 
ex¥D
->
c€f
[
v¨Num
] = 
›r2
->c€f[
j
];

408 
	`˝yReg
(
ex¥D
->
vÆue
+
v¨Num
, 
›r2
->vÆue[
j
]);

409 
ex¥D
->
v¨Num
++;

412 i‡(
	`°rcmp
(
›
,"+")==0Ë
ex¥D
->
k
 +
›r2
->k;

413 i‡(
	`°rcmp
(
›
,"-")==0Ë
ex¥D
->
k
 -
›r2
->k;

414 
COMPUTE_EXPR_FIN
:

415 i‡(
dbg
Ë{
	`Ârötf
(
dbgF
,"\¿==> "); 
	`¥ötEx¥
(dbgF,
ex¥D
);
	`fÊush
(dbgF);}

417 
	}
}

419 
	$˝yEx¥
(
ex¥_p
 
d°
,Éx¥_∞
§c
) {

420 
dbg
 = 0;

421 
i
;

423 i‡(
	`ex¥Eq
(
d°
,
§c
))  0;

424 
d°
->
v¨Num
 = 
§c
->varNum;

425 
d°
->
k
 = 
§c
->k;

426 
i
=0; i<
§c
->
v¨Num
; i++) {

427 
d°
->
c€f
[
i
] = 
§c
->coef[i];

428 
	`˝yReg
(
d°
->
vÆue
+
i
, 
§c
->value[i]);

430 i‡(
dbg
) {

431 
	`Ârötf
(
dbgF
,"\nC›yÉx¥: D° ");
	`¥ötEx¥
(dbgF,
d°
);

432 
	`Ârötf
(
dbgF
," <- Sr¯");
	`¥ötEx¥
(dbgF,
§c
);

435 
	}
}

436 
	$ex¥Eq
(
ex¥_p
 
ex¥1
,Éx¥_∞
ex¥2
) {

437 
i
;

438 i‡(
ex¥1
->
v¨Num
!=
ex¥2
->varNum)  0;

439 i‡(
ex¥1
->
k
 !
ex¥2
->k)  0;

440 
i
=0; i<
ex¥1
->
v¨Num
; i++) {

441 i‡(
ex¥1
->
c€f
[
i
] !
ex¥2
->coef[i])  0;

442 i‡(!
	`ªgEq
(
ex¥1
->
vÆue
[
i
], 
ex¥2
->value[i]))  0;

445 
	}
}

446 
	$˛rEx¥
(
ex¥_p
 
ex¥
) {

447 
dbg
 = 1;

448 
i
;

449 
i
=0; i<
ex¥
->
v¨Num
; i++Ë
	`˛rReg
”x¥->
vÆue
+i);

450 
ex¥
->
v¨Num
=0;

451 
ex¥
->
k
 = 0;

452 
	}
}

454 
	$öôEx¥
(
ex¥_p
 
ex¥
) {

455 
i
=0;

456 
i
=0; i<
MAX_EXPR_LEN
; i++Ë
	`öôReg
(
ex¥
->
vÆue
+i);

457 
ex¥
->
v¨Num
 = 0;

458 
	}
}

459 
ex¥_p
 
	$¸óãEx¥
() {

460 
ex¥_p
 
ex¥
;

461 
ex¥
 = 
	`ˇŒoc
(1,(
ex¥_s
));

462 
	`öôEx¥
(
ex¥
);

463  
ex¥
;

464 
	}
}

465 
	$ªg2ex¥
(
ªg_t
 *
r
) {

466 
ex¥_p
 
ex¥
;

467 i‡(
r
->
t
 =
VALUE_EXPR
) ;

468 i‡(
r
->
t
==
VALUE_CONST
) {

469 i‡(
r
->
ex¥
==
NULL
Ër->ex¥ = 
	`¸óãEx¥
();

470 
ex¥
 = 
r
->expr;

471 
ex¥
->
k
 = 
r
->
vÆ
;

472 
ex¥
->
v¨Num
=0;

475 i‡(
r
->
ex¥
==
NULL
Ër->ex¥ = 
	`¸óãEx¥
();

476 
ex¥
 = 
r
->expr;

477 
	`˝yReg
–&(
ex¥
->
vÆue
[0]),*
r
);

478 
ex¥
->
k
 = 0;

479 
ex¥
->
v¨Num
 = 1;

480 
ex¥
->
c€f
[0] = 1;

482 
r
->
t
 = 
VALUE_EXPR
;

483 
	}
}

484 
	$£tEx¥
(
ex¥_p
 
ex¥
, 
ªg_t
 
r
) {

485 
	`˛rEx¥
(
ex¥
);

486 i‡(
r
.
t
==
VALUE_CONST
) {

487 
ex¥
->
k
 = 
r
.
vÆ
;

488 
ex¥
->
v¨Num
 = 0;

491 
ex¥
->
k
 = 0;

492 
	`˝yReg
(
ex¥
->
vÆue
+0,
r
);

493 
ex¥
->
v¨Num
 = 1;

494 
ex¥
->
c€f
[0] = 1;

496 
	}
}

501 
	$mîgeReg
(
ªg_t
 *
d°Reg
,Ñeg_à
§cReg
, 
isBackEdge
) {

502 
dbg
 = 0;

503 
Êag
, 
ch™ged
;

504 
ªg_t
 
tmpReg
;

506 i‡–
	`ªgEq
(
§cReg
,*
d°Reg
) )  0;

507 i‡–
d°Reg
->
t
==
VALUE_UNPRED
 )  0;

508 i‡–
§cReg
.
t
==
VALUE_UNDEF
 )  0;

510 i‡(
dbg
) {

511 
	`Ârötf
(
dbgF
,"\nMerge: ");

512 
	`¥ötReg
–
dbgF
, *
d°Reg
 ); 
	`Ârötf
(dbgF," <- ");

513 
	`¥ötReg
–
dbgF
, 
§cReg
 ); 
	`Ârötf
(dbgF," ");
	`fÊush
(dbgF);

516 
Êag
 = 0;

517 
ch™ged
 = 0;

520 i‡–
§cReg
.
t
==
VALUE_UNPRED
 ) {

521 
	`ªgUnknown
(
d°Reg
);

522 i‡(0Ë
	`Ârötf
(
dbgF
," src==T -> dst=T");

523 
ch™ged
 = 1;
FIN
;

525 i‡(
d°Reg
->
t
!=
VALUE_BIV
 && 
§cReg
.t == VALUE_BIV) {

528 
	`˝yReg
(
d°Reg
,
§cReg
);

530 
ch™ged
 = 1;
FIN
;

533 
d°Reg
->
t
) {

534 
VALUE_UNDEF
:

535 
	`˝yReg
(
d°Reg
,
§cReg
);

536 
ch™ged
 = 1;
FIN
;

538 
VALUE_BIV
:

539 i‡(
§cReg
.
t
 =
VALUE_BIV
) {

541 i‡(
	`ªgEq
(
§cReg
.
biv
->
öôVÆ
, *
d°Reg
)) {

542 
	`˝yReg
(
d°Reg
,
§cReg
);

544 
NO_SPECIAL
;

548 
Êag
 = 
	`upd©eInôVÆ
(
d°Reg
->
biv
, 
§cReg
);

549 i‡(
dbg
Ë
	`Ârötf
(
dbgF
," dstBIV->initVal = src");

550 i‡(
Êag
Ë
ch™ged
 = 1;

551 
FIN
;

555 
NO_SPECIAL
:

556 i‡(!
	`ªgEq
(*
d°Reg
,
§cReg
)) {

557 
	`ªgUnknown
(
d°Reg
);

558 i‡(
dbg
Ë
	`Ârötf
(
dbgF
," dst != src -> dst=T");

559 
ch™ged
 = 1;
FIN
;

564 
FIN
:

565 i‡(
dbg
Ë{
	`Ârötf
(
dbgF
," ==> ");
	`¥ötReg
(dbgF,*
d°Reg
);}

566  
ch™ged
;

567 
	}
}

569 
	$ªgO¥
(*
›
,
ªg_t
 *
rD
,Ñeg_à
r1
,Ñeg_à
r2
) {

570 
dbg
 = 0;

571 
Êag
;

572 
FILE
 *
dbgF
 = 
°dout
;

573 i‡(
r1
.
t
==
VALUE_UNDEF
 || 
r2
.t==VALUE_UNDEFË{
	`˛rReg
(
rD
);  1;}

575 if–
dbg
 ) {

576 
	`Ârötf
(
dbgF
,"\nO¥ "); 
	`¥ötReg
(dbgF,
r1
);Ârötf(dbgF," %s",
›
);

577 
	`Ârötf
(
dbgF
," "); 
	`¥ötReg
(dbgF,
r2
);
	`fÊush
(dbgF);

580 i‡(
r1
.
t
==
VALUE_CONST
 &&Ñ1.t==
r2
.t) {

581 i‡(
	`°rcmp
(
›
,"+")==0Ë
	`£tI¡
(
rD
, 
r1
.
vÆ
 + 
r2
.val);

582 i‡(
	`°rcmp
(
›
,"-")==0Ë
	`£tI¡
(
rD
, 
r1
.
vÆ
 - 
r2
.val);

583 i‡(
	`°rcmp
(
›
,"*")==0Ë
	`£tI¡
(
rD
, 
r1
.
vÆ
 * 
r2
.val );

584 i‡(
	`°rcmp
(
›
,"|")==0Ë
	`£tI¡
(
rD
, 
r1
.
vÆ
 | 
r2
.val);

585 i‡(
	`°rcmp
(
›
,"^")==0Ë
	`£tI¡
(
rD
, 
r1
.
vÆ
 ^ 
r2
.val);

586 i‡(
	`°rcmp
(
›
,"&")==0Ë
	`£tI¡
(
rD
, 
r1
.
vÆ
 & 
r2
.val);

587 i‡(
	`°rcmp
(
›
,"<<")==0)
	`£tI¡
(
rD
, 
r1
.
vÆ
 << 
r2
.val);

588 i‡(
	`°rcmp
(
›
,">>")==0)
	`£tI¡
(
rD
, 
r1
.
vÆ
 >> 
r2
.val);

589 {i‡(1Ë
	`¥ötf
("\nNŸ im∂emíãd o¥ 1 %s",
›
);
	`ªgUnknown
(
rD
);}

591 i‡(
r1
.
t
==
VALUE_CONST
 &&Ñ1.
vÆ
==0Ë{ 
	`˝yReg
(
rD
,
r2
); }

592 i‡(
r2
.
t
==
VALUE_CONST
 &&Ñ2.
vÆ
==0Ë{ 
	`˝yReg
(
rD
,
r1
); }

594 
ex¥_p
 
›r1
, 
›r2
;

595 
ex¥_s
 
ex¥1
, 
ex¥2
;

596 i‡(
r1
.
t
!=
VALUE_EXPR
) {

597 
	`öôEx¥
(&
ex¥1
);

598 
	`£tEx¥
(&
ex¥1
,
r1
);

599 
›r1
=&
ex¥1
;

602 
›r1
 = 
r1
.
ex¥
;

604 i‡(
r2
.
t
!=
VALUE_EXPR
) {

605 
	`öôEx¥
(&
ex¥2
);
	`£tEx¥
(&ex¥2,
r2
);

606 
›r2
=&
ex¥2
;

609 
›r2
 = 
r2
.
ex¥
;

611 i‡(
rD
->
ex¥
==
NULL
ËrD->ex¥ = 
	`¸óãEx¥
();

612 i‡(
dbg
Ë{
	`Ârötf
(
dbgF
,"\nE1: "); 
	`¥ötEx¥
(dbgF,
›r1
);
	`fÊush
(dbgF);}

613 i‡(
dbg
Ë{
	`Ârötf
(
dbgF
,"\nE2: "); 
	`¥ötEx¥
(dbgF,
›r2
);
	`fÊush
(dbgF);}

615 i‡(
	`°rcmp
(
›
,"+")==0 || strcmp(op,"-")==0

616 || 
	`°rcmp
(
›
,"*")==0 || strcmp(op,">>")==0 || strcmp(op,"<<")==0 ){

617 
rD
->
t
 = 
VALUE_EXPR
;

618 
Êag
 = 
	`compuãEx¥
(
›
, 
rD
->
ex¥
, 
›r1
, 
›r2
);

619 i‡(
Êag
 =0Ë
	`ªgUnknown
(
rD
);

622 i‡(1Ë
	`¥ötf
("\nNŸ im∂emíãd o¥ 2 %s",
›
);

623 
	`ªgUnknown
(
rD
);

625 i‡(
r1
.
t
!=
VALUE_EXPR
Ë
	`˛rEx¥
(&
ex¥1
);

626 i‡(
r2
.
t
!=
VALUE_EXPR
Ë
	`˛rEx¥
(&
ex¥2
);

628 
OPR_FIN
:

629 i‡(
dbg
Ë{
	`Ârötf
(
dbgF
,"==> "); 
	`¥ötReg
(dbgF,*
rD
);fprintf(dbgF,"\n");}

631 
	}
}

	@scp_address.c

1 
	~"s˝_addªss.h
"

2 
X
,
Y
,
B
,
l1
,
l2
;

4 
	$£tAddrDebugFûe
(
FILE
 *
Â
) {

5 
dbgAddr
 = 
Â
;

6 
	}
}

9 
	$˝yTS
(
ts_p
 
d°
,Ås_∞
§c
) {

10 
d°
->
lo›_id
 = 
§c
->loop_id;

11 
d°
->
lw
 = 
§c
->lw; d°->
up
 = src->up; d°->
Êag
 = src->flag;

12 
	}
}

13 
	$¥ötTS
(
FILE
 *
Â
, 
ts_p
 
ts
) {

14 
	`Ârötf
(
Â
," (L%d,%d,%d)",
ts
->
lo›_id
,Ås->
lw
,Ås->
up
 );
	`fÊush
(fp);

15 
	}
}

16 
	$¥ötTS£t
(
FILE
 *
Â
, 
w‹kli°_p
 
tsSë
) {

17 
w‹kli°_p
 
tsNode
;

18 
ts_p
 
ts
;

19 
tsNode
 = 
tsSë
;ÅsNode;ÅsNodêtsNode->
√xt
) {

20 
ts
 = (
ts_p
Ë(
tsNode
->
d©a
);
	`¥ötTS
(
Â
,Ås);

22 
	}
}

24 
	$eqTS£t
(
w‹kli°_p
 
tsSë1
, w‹kli°_∞
tsSë2
, 
curLpId
) {

25 
dbg
 = 0;

26 
w‹kli°_p
 
tsNode1
, 
tsNode2
, 
tmpNode
, 
¥vNode
;

27 
ts_p
 
ts1
,
ts2
;

28 
Êag
;

30 
tsNode1
 = 
tsSë1
;

31 
tsNode2
 = 
tsSë2
;

32 
Êag
 = 0;

33 
tsNode1
 && 
tsNode2
) {

35 
ts1
 = (
ts_p
)(
tsNode1
->
d©a
);

36 
ts2
 = (
ts_p
)(
tsNode2
->
d©a
);

37 i‡(
	`cmpLpOrdî
(
ts1
->
lo›_id
,
ts2
->loop_id)==1) {

38 
tsNode1
 =ÅsNode1->
√xt
; ;

40 i‡(
	`cmpLpOrdî
(
ts1
->
lo›_id
,
ts2
->loop_id)==-1) {

41 
tsNode2
 =ÅsNode2->
√xt
; ;

44 i‡(
	`cmpLpOrdî
(
ts1
->
lo›_id
, 
curLpId
)==-1) {

48 i‡(
ts1
->
lw
 !
ts2
->lw ||Ås1->
up
 !=Ås2->up)  0;

49 
tsNode1
 =ÅsNode1->
√xt
;

50 
tsNode2
 =ÅsNode2->
√xt
;

54 
	}
}

56 
	$cmpTS
(
ts_p
 
as1
,Ås_∞
as2
) {

57 i‡(
as2
->
lw
 =
as1
->lw &&ás1->
up
 =˜s2->upË 
EQUAL_TS
;

58 i‡(
as1
->
lw
 <
as2
->lw &&ás2->lw <as1->
up
Ë 
OLAP_TS
;

59 i‡(
as1
->
lw
 <
as2
->
up
 &&ás2->u∞<as1->upË 
OLAP_TS
;

60 i‡(
as2
->
lw
 <
as1
->lw &&ás1->lw <as2->
up
Ë 
OLAP_TS
;

61 i‡(
as2
->
lw
 <
as1
->
up
 &&ás1->u∞<as2->upË 
OLAP_TS
;

62  
SEP_TS
;

63 
	}
}

66 
	$cmpTS£t
(
w‹kli°_p
 
tsLi°1
, w‹kli°_∞
tsLi°2
, 
ÕId
) {

67 
dbg
 = 0;

68 
w‹kli°_p
 
tsNode1
, 
tsNode2
;

69 
ts_p
 
ts1
, 
ts2
;

70 
cmp
, 
ÕOrdî
, 
ßmeLp
;

71 
ovîœpS˝
, 
ö√rS˝
;

74 
tsNode1
 = 
tsLi°1
; 
tsNode2
 = 
tsLi°2
;

75 
ßmeLp
=0; 
ovîœpS˝
 = 1; 
ö√rS˝
 = 1;

76 i‡(
dbg
) {

77 
	`Ârötf
(
dbgAddr
,"\nCom∑ª TS ");
	`¥ötTS£t
(dbgAddr, 
tsLi°1
);

78 
	`Ârötf
(
dbgAddr
," ");
	`¥ötTS£t
(dbgAddr,
tsLi°2
);

80 
tsNode1
 && 
tsNode2
) {

81 
ts1
 = (
ts_p
)(
tsNode1
->
d©a
);

82 
ts2
 = (
ts_p
)(
tsNode2
->
d©a
);

84 
ÕOrdî
 = 
	`cmpLpOrdî
(
ts1
->
lo›_id
, 
ts2
->loop_id);

86 i‡(
ÕOrdî
==1Ë
tsNode2
 =ÅsNode2->
√xt
;

87 i‡(
ÕOrdî
==-1Ë
tsNode1
 =ÅsNode1->
√xt
;

89 
ßmeLp
 = 1;

90 i‡(
	`isI¬î
(
ÕId
,
ts1
->
lo›_id
)) {

91 
cmp
 = 
	`cmpTS
(
ts1
,
ts2
);

92 i‡(
dbg
Ë{
	`Ârötf
(
dbgAddr
," L%d,%d",
ts1
->
lo›_id
,
cmp
);}

93 i‡(
cmp
!=
EQUAL_TS
Ë
ö√rS˝
 = 0;

94 i‡(
cmp
==
SEP_TS
Ë{ 
ovîœpS˝
 =0; ; }

96 
tsNode1
 =ÅsNode1->
√xt
; 
tsNode2
 =ÅsNode2->next;

99 i‡(
ö√rS˝
Ë
cmp
 = 
EQUAL_TS
;

100 i‡(
ovîœpS˝
Ë
cmp
 = 
OLAP_TS
;

101 
cmp
 = 
SEP_TS
;

102 i‡(
dbg
 && 
cmp
!=
SEP_TS
 && cmp!=
EQUAL_TS
 ) {

103 
	`Ârötf
(
dbgAddr
,"\nOvîœ∞L%d",
ÕId
);

104 
	`¥ötTS£t
(
dbgAddr
,
tsLi°1
);

105 
	`¥ötTS£t
(
dbgAddr
,
tsLi°2
);

107  
cmp
;

108 
	}
}

111 
	$mîgeTS£t
(
w‹kli°_p
 
d°Së
, w‹kli°_∞
§cSë
, 
ÕId
) {

112 
dbg
 = 0;

113 
w‹kli°_p
 
d°Node
, 
§cNode
, 
tmpNode
, 
¥vNode
;

114 
ts_p
 
§cTS
,
d°TS
;

115 
Êag
;

117 
d°Node
 = 
d°Së
;

118 
§cNode
 = 
§cSë
;

119 
Êag
 = 0;

120 
d°Node
 && 
§cNode
) {

121 
§cTS
 = (
ts_p
)(
§cNode
->
d©a
);

122 
d°TS
 = (
ts_p
)(
d°Node
->
d©a
);

124 i‡(
	`cmpLpOrdî
(
d°TS
->
lo›_id
,
ÕId
)<0) ;

125 i‡(
	`cmpLpOrdî
(
§cTS
->
lo›_id
,
ÕId
)<0) ;

127 i‡(
d°TS
->
lo›_id
 !
§cTS
->loop_id) {

128 
	`Ârötf
(
dbgAddr
,"\nWrong TS order: %d %d",

129 
d°TS
->
lo›_id
,
§cTS
->loop_id);

130 
	`Ârötf
(
dbgAddr
,"\nSRC: ");
	`¥ötTS£t
(dbgAddr,
§cSë
);

131 
	`Ârötf
(
dbgAddr
,"\nDST: ");
	`¥ötTS£t
(dbgAddr,
d°Së
);

132 
	`fÊush
(
dbgAddr
);
	`exô
(0);

134 i‡(
d°TS
->
lw
 > 
§cTS
->lw) {

135 
d°TS
->
lw
 = 
§cTS
->lw; 
Êag
 = 1;

137 i‡(
d°TS
->
up
 < 
§cTS
->up) {

138 
d°TS
->
up
 = 
§cTS
->up; 
Êag
 = 1;

140 
§cNode
 = srcNode->
√xt
; 
d°Node
 = dstNode->next;

142  
Êag
;

143 
	}
}

146 
lo›_t
 **
lo›s
;

148 
	$e°Sc›eSize
(
w‹kli°_p
 
tsSë
, 
ÕId
) {

149 
dbg
 = 0;

150 
exec
;

151 
w‹kli°_p
 
tsNode
;

152 
ts_p
 
ts
;

153 
s˝Size
;

154 
lo›_t
 *
Õ
;

155 
exec
 = 1;

156 
Õ
 = 
lo›s
[
ÕId
];

157 
tsNode
 = 
tsSë
;

158 
Õ
 &&Üp->
id
!=0) {

159 
tsNode
) {

160 
ts
 = (
ts_p
)(
tsNode
->
d©a
);

161 i‡(
Õ
->
id
 > 
ts
->
lo›_id
Ë
tsNode
 =ÅsNode->
√xt
;

164 i‡(
tsNode
) {

165 
ts
 = (
ts_p
)(
tsNode
->
d©a
);

166 i‡(
Õ
->
id
 =
ts
->
lo›_id
) {

167 
s˝Size
 = (
ts
->
up
 -Ås->
lw
 +1);

168 i‡(0Ë
	`Ârötf
(
dbgAddr
," L%d,|%d,%d|=%d",

169 
ts
->
lo›_id
,ts->
lw
,ts->
up
,
s˝Size
);

170 
exec
 *
s˝Size
;

171 
tsNode
 =ÅsNode->
√xt
;

173 
NO_TS_DEFINED
;

176 
NO_TS_DEFINED
:

177 
exec
 *
Õ
->
bound
 - 1;

179 
Õ
 =Üp->
∑ª¡
;

181 i‡(
dbg
) {

182 
	`Ârötf
(
°dout
,"\¿Lo› L%dÉxec: %d ",
ÕId
, 
exec
);

183 
	`¥ötTS£t
(
°dout
,
tsSë
);

185  
exec
;

186 
	}
}

187 
	$e°Sc›eSizeOld
(
w‹kli°_p
 
tsSë
, 
ÕId
) {

188 
dbg
 = 1;

189 
exec
;

190 
w‹kli°_p
 
tsNode
;

191 
ts_p
 
ts
;

192 
s˝Size
;

193 
lo›_t
 *
Õ
;

194 
exec
 = 1;

195 
Õ
 = 
lo›s
[
ÕId
];

196 
tsNode
 = 
tsSë
;

197 
tsNode
 = 
tsSë
;ÅsNode;ÅsNodêtsNode->
√xt
) {

198 
ts
 = (
ts_p
)(
tsNode
->
d©a
);

199 
s˝Size
 = (
ts
->
up
 -Ås->
lw
 +1);

200 i‡(
dbg
Ë
	`Ârötf
(
dbgAddr
," L%d,|%d,%d|=%d",

201 
ts
->
lo›_id
,ts->
lw
,ts->
up
,
s˝Size
);

202 
exec
 *
s˝Size
;

203 i‡(
	`cmpLpOrdî
(
ts
->
lo›_id
, 
ÕId
)==0Ë 
exec
;

205 
	`¥ötf
("\nP™ic: L%dÇŸ i¿tsSë ",
ÕId
);
	`¥ötTS£t
(
°dout
,
tsSë
);

206 
	`exô
(1);

207  
exec
;

208 
	}
}

211 
	$¥ötSAddrSë
(
FILE
 *
Â
, 
w‹kli°_p
 
addrSë
, 
fuŒ
) {

212 
ßddr_p
 
memblk
;

213 
w‹kli°_p
 
addrNode
;

214 
addrNode
 = 
addrSë
;áddrNode;áddrNodêaddrNode->
√xt
) {

215 
memblk
 = (
ßddr_p
)(
addrNode
->
d©a
);

216 
	`¥ötSAddr
(
Â
,
memblk
,
fuŒ
);

218 
	}
}

219 
	$¥ötSAddr
(
FILE
 *
Â
, 
ßddr_p
 
memblk
, 
fuŒ
) {

221 
w‹kli°_p
 
cur
;

222 
ts_p
 
ts
;

223 
	`Ârötf
(
Â
, " <%x:%x:%d", 
memblk
->
blkAddr
,memblk->
ö°Addr
,memblk->
Êag
);

224 i‡(
fuŒ
Ë
	`¥ötTS£t
(
Â
,
memblk
->
tsLi°
);

225 
	`Ârötf
(
Â
, ">");

226 
	}
}

227 
	$˝ySAddr
 (
ßddr_p
 
d°
, saddr_∞
§c
) {

228 
w‹kli°_p
 
§cNode
, 
d°Node
, 
curNode
, 
¥vNode
;

229 
ts_p
 
ts0
, 
ts1
;

231 
d°
->
blkAddr
 = 
§c
->blkAddr;

233 
d°Node
 = 
d°
->
tsLi°
; 
¥vNode
 = 
NULL
;

234 
§cNode
 = 
§c
->
tsLi°
; srcNode; srcNodê§cNode->
√xt
) {

235 
ts0
 = (
ts_p
Ë(
§cNode
->
d©a
);

236 i‡(
d°Node
) {

237 
ts1
 = (
ts_p
)(
d°Node
->
d©a
);

238 
	`˝yTS
(
ts1
,
ts0
);

239 
¥vNode
 = 
d°Node
;

240 
d°Node
 = d°Node->
√xt
;

243 
ts1
 = 
	`mÆloc
((
ts_s
));

244 
	`˝yTS
(
ts1
,
ts0
);

245 
	`addA·îNode
(
ts1
, &
¥vNode
, &(
d°
->
tsLi°
));

248 
	}
}

250 
	gtŸÆBlk
;

251 
ßddr_p
 
	$¸óãSAddr
(
blkAddr
, 
ö°Addr
, 
Êag
, 
w‹kli°_p
 
‹gTS£t
) {

252 
dbg
 = 0;

253 
ßddr_p
 
√wBlk
;

254 
w‹kli°_p
 
blkNode
, 
ÕNode
, 
tmpNode
, 
¥vNode
;

255 
ts_p
 
blkTS
,
ÕTS
;

257 
√wBlk
 = (
ßddr_p
Ë
	`mÆloc
((
ßddr_s
));

258 
√wBlk
->
blkAddr
 = blkAddr;

259 
√wBlk
->
ö°Addr
 = instAddr;

260 
√wBlk
->
Êag
 = flag;

261 
√wBlk
->
tsLi°
 = 
NULL
;

263 
blkNode
 = 
NULL
;

264 
ÕNode
 = 
‹gTS£t
;ÜpNode;ÜpNodêÕNode->
√xt
) {

265 
ÕTS
 = (
ts_p
)(
ÕNode
->
d©a
);

266 
blkTS
 = (
ts_p
Ë
	`mÆloc
((
ts_s
));

267 
	`˝yTS
(
blkTS
, 
ÕTS
);

268 
	`addA·îNode
(
blkTS
, &
blkNode
, &(
√wBlk
->
tsLi°
));

270 
tŸÆBlk
++;

271 i‡(
dbg
) {

272 
	`Ârötf
(
dbgAddr
,"\nCª©êaccAdd∏%x: in°Add∏%x",
blkAddr
,
ö°Addr
);

274 
	`Ârötf
(
dbgAddr
,"\ngíTS: ");
	`¥ötTS£t
(dbgAddr,
√wBlk
->
tsLi°
);

275 
	`fÊush
(
dbgAddr
);

277  
√wBlk
;

278 
	}
}

282 
w‹kli°_p
 
	$födBlkAddr
(
blkAddr
, 
w‹kli°_p
 
SAddrSë
) {

283 
dbg
 = 0;

284 
w‹kli°_p
 
curNode
,
¥vNode
;

285 
ßddr_p
 
curBlk
, 
¥vBlk
;

286 i‡(
dbg
) {

287 
	`Ârötf
(
dbgAddr
,"\nSórch %x i¿",
blkAddr
);

288 
curNode
 = 
SAddrSë
; curNode; curNode=curNode->
√xt
) {

289 
curBlk
 = (
ßddr_p
)(
curNode
->
d©a
);

290 
	`Ârötf
(
dbgAddr
," %x",
curBlk
->
blkAddr
);

294 
¥vNode
 = 
NULL
;

295 
curNode
 = 
SAddrSë
; curNode; curNode=curNode->
√xt
) {

296 
curBlk
 = (
ßddr_p
)(
curNode
->
d©a
);

297 i‡(
curBlk
->
blkAddr
 =blkAddrË 
curNode
;

298 i‡(
curBlk
->
blkAddr
 > blkAddr) {

300 i‡(
dbg
Ë
	`Ârötf
(
dbgAddr
,"\nNF,Ñëu∫ %x",
¥vBlk
->
blkAddr
);

301  
¥vNode
;

303 
¥vNode
 = 
curNode
;
¥vBlk
 = 
curBlk
;

305 i‡(
dbg
Ë
	`Ârötf
(
dbgAddr
,"\nNŸ found: %x",
blkAddr
);

306  
¥vNode
;

307 
	}
}

308 
	$ª¨øngeTS
(
ßddr_p
 
smem
) {

309 
w‹kli°_p
 
curNode
, 
tmpNode
, 
¥vNode
, 
ouãrNode
;

310 
ts_p
 
curTS
, 
ouãrTS
, 
tmpTS
;

311 
ts_s
 
bufTS
;

312 
maxLo›Id
;

314 
¥vNode
 = 
NULL
;

315 
curNode
 = 
smem
->
tsLi°
; curNode; curNode=curNode->
√xt
) {

316 
ouãrNode
 = 
curNode
;

317 
curTS
 = (
ts_p
)(
curNode
->
d©a
);

318 
ouãrTS
 = (
ts_p
)(
curNode
->
d©a
);

319 
maxLo›Id
 = 
ouãrTS
->
lo›_id
;

320 
tmpNode
 = 
curNode
->
√xt
;ÅmpNode;ÅmpNode=tmpNode->next) {

321 
tmpTS
 = (
ts_p
)(
tmpNode
->
d©a
);

322 i‡(
	`cmpLpOrdî
(
tmpTS
->
lo›_id
, 
maxLo›Id
)==1) {

323 
ouãrNode
 = 
tmpNode
;

324 
maxLo›Id
 = 
tmpTS
->
lo›_id
;

327 
ouãrTS
 = (
ts_p
)(
ouãrNode
->
d©a
);

329 
	`˝yTS
(&
bufTS
, 
ouãrTS
);

330 
	`˝yTS
(
ouãrTS
, 
curTS
);

331 
	`˝yTS
(
curTS
, &
bufTS
);

333 
	}
}

338 
	$cmpSAddr
(
ßddr_p
 
m1
, saddr_∞
m2
, 
ÕId
) {

339 
tsCmp
;

340 i‡(
m1
->
blkAddr
==
UNKNOWN_ADDR
 || 
m2
->blkAddr==UNKNOWN_ADDRË 
OLAP_TS
;

341 i‡–
	`GET_SET
(
m1
->
blkAddr
Ë!GET_SET(
m2
->blkAddrËË 
SEP_TS
;

344 
tsCmp
 = 
	`cmpTS£t
(
m1
->
tsLi°
, 
m2
->tsLi°, 
ÕId
);

345 i‡(
m1
->
blkAddr
==
m2
->blkAdd∏&& 
tsCmp
==
EQUAL_TS
)  EQUAL_TS;

346 i‡(
m1
->
blkAddr
!=
m2
->blkAdd∏&& 
tsCmp
!=
SEP_TS
Ë 
OLAP_TS
;

347  
SEP_TS
;

348 
	}
}

	@scp_address.h

1 #i‚de‡
REG_ADDRESS_H


2 
	#REG_ADDRESS_H


	)

3 
	~"ˇche.h
"

4 
	~"°dlib.h
"

5 
	~"ö„asibÀ.h
"

6 
	~"tcfg.h
"

7 
	~"lo›s.h
"

8 
	~"iß.h
"

9 
	~"comm⁄.h
"

10 
	~"symexec.h
"

13 
	sãmp‹Æ_sc›e
 {

14 
	mlo›_id
;

15 
	mlw
;

16 
	mup
;

17 
	mÊag
;

19 
ãmp‹Æ_sc›e
 
	tts_s
;

20 
ãmp‹Æ_sc›e
* 
	tts_p
;

22 
	#EQUAL_TS
 0

	)

23 
	#OLAP_TS
 1

	)

24 
	#SEP_TS
 -1

	)

25 
cmpTS
(
ts_p
 
ts1
,Ås_∞
ts2
);

26 
cmpTS£t
(
w‹kli°_p
 
tsSë1
, w‹kli°_∞
tsSë2
, 
ÕId
);

27 
˝yTS
(
ts_p
 
§c
,Ås_∞
d°
);

28 
¥ötTS
(
FILE
 *
Â
, 
ts_p
 
as
);

29 
¥ötTS£t
(
FILE
 *
Â
, 
w‹kli°_p
 
tsSë
);

30 
eqTS£t
(
w‹kli°_p
 
tsSë1
,w‹kli°_∞
tsSë2
, 
ÕId
);

31 
mîgeTS£t
(
w‹kli°_p
 
d°Së
, w‹kli°_∞
§cSë
, 
ÕId
);

34 
e°Sc›eSize
(
w‹kli°_p
 
tsSë
, 
ÕId
);

37 
	#SELF_CONFLICT
 1

	)

38 
	#RENEWABLE
 1

	)

39 
	#UNKNOWN_ADDR
 -1

	)

40 
	ssc›ed_addªss
 {

41 
	mblkAddr
;

42 
	mö°Addr
;

43 
w‹kli°_p
 
	mtsLi°
;

44 
w‹kli°_p
 
	mpsLo›
;

46 
	mÊag
;

49 
sc›ed_addªss
 
	tßddr_s
;

50 
sc›ed_addªss
* 
	tßddr_p
;

51 
¥ötSAddr
(
FILE
 *
Â
, 
ßddr_p
 
memblk
, 
fuŒ
);

52 
¥ötSAddrSë
(
FILE
 *
Â
, 
w‹kli°_p
 
sAddrSë
,
fuŒ
);

53 
˝ySAddr
(
ßddr_p
 
d°
, saddr_∞
§c
);

54 
ßddr_p
 
¸óãSAddr
(
addrBlk
, 
ö°Addr
, 
Êag
, 
w‹kli°_p
 
‹gTS£t
);

55 
w‹kli°_p
 
födBlkAddr
(
addrBlk
, w‹kli°_∞
SAddrSë
);

56 
ª¨øngeTS
(
ßddr_p
 
smem
);

57 
cmpSAddr
(
ßddr_p
 
smem1
, saddr_∞
smem2
, 
ÕId
);

60 
FILE
 *
	gdbgAddr
;

61 
	ssize_c⁄s
 {

62 
	m«me
[256];

63 
	msize
;

64 
size_c⁄s
 *
	m√xt
;

66 
size_c⁄s
 
	tsize_c⁄s_s
;

67 
size_c⁄s
* 
	tsize_c⁄s_p
;

70 
íum_ªguœr_addªss
(
d©_ö°_t
* 
d_ö°
, 
ex¥_p
 
ex¥
, 
Êag
,

71 
curEq
, 
w‹kli°_p
 
curTSnode
, 
curAddr
);

74 
™Æyze_ªguœr_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
);

77 
™Æyze_u≈ªd_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
);

80 
™Æyze_sˇœr_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
);

83 
gíAc˚ssAddªss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
);

86 
˛assifõd_addªss_™Æysis
();

	@scp_cache.c

1 
	~"s˝_ˇche.h
"

2 
	~"pùñöe.h
"

3 
FILE
 *
	gdbgM∑
;

5 
USE_SEGMENT_SIZE
;

7 
num_tcfg_lo›s
;

8 
lo›_t
 **
lo›s
;

9 
lo›_t
 **
lo›_s
;

11 
¥og_t
 
¥og
;

12 
num_tcfg_nodes
;

13 
tcfg_node_t
 **
tcfg
;

14 
num_tcfg_edges
;

15 
tcfg_edge_t
 **
tcfg_edges
;

17 
X
, 
Y
, 
B
, 
l1
, 
l2
;

19 
s˝_acs
 *
	gÕOut_acs
;

20 
s˝_acs
 *
	gÕPîsIn
;

21 
w‹kli°_p
 *
	gÕReqPS
;

22 
w‹kli°_p
 *
	g¥vAcsNode
;

24 
	gÕ_cﬁdms
[36];

25 *
	gvisôed
;

28 
	gtŸÆD©aExec
, 
	gtŸÆPîsMiss
, 
	gtŸÆNPîsMiss
;

30 
íabÀ_s˝_dˇche
;

31 
íabÀ_s˝_dl2ˇche
;

32 
íabÀ_ul2ˇche
;

33 
ˇche_t
 
ˇche_l2
;

36 
	$¥ötCacheSë
(
FILE
*
Â
, 
w‹kli°_p
 
£t
) {

37 
w‹kli°_p
 
blkNode
, 
c⁄fNode
;

38 
sblk_p
 
blk
, 
c⁄fBlk
;

39 
blkNode
 = 
£t
; blkNode; blkNodêblkNode->
√xt
) {

40 
blk
 = (
sblk_p
Ë(
blkNode
->
d©a
);

41 
	`Ârötf
(
Â
, " %x:%d", 
blk
->
m
->
blkAddr
, blk->
age
);

42 
	`¥ötTS£t
(
Â
, 
blk
->
m
->
tsLi°
);

44 
	`fÊush
(
Â
);

45 
	}
}

47 
lo›_t
* 
	$bbi_Õ
(
tcfg_node_t
 *
bbi
) {

48 
dbg
 = 0;

49 
lo›_t
 *
Õ
;

50 i‡(
dbg
)

51 
	`Ârötf
(
dbgM∑
, "\nBB %d inf_Õ->id %d ", 
bbi
->
bb
->
id
, bbi->
lo›_id
);

52 i‡(
bbi
->
lo›_id
 == -1)

53  
lo›s
[0];

54 
Õ
 = 
lo›s
[
öf_lo›s
[
bbi
->
lo›_id
].loop_id];

55 i‡(
dbg
) {

56 
	`Ârötf
(
dbgM∑
, " ->Üp->id %d", 
Õ
->
id
);

57 
	`fÊush
(
dbgM∑
);

59  
Õ
;

60 
	}
}

61 
	$bbi_ÕId
(
tcfg_node_t
 *
bbi
) {

62 
ÕId
 = 
	`bbi_Õ
(
bbi
)->
id
;

63  
ÕId
;

64 
	}
}

69 
	$addToIncSë
(
ßddr_p
 
m
, 
w‹kli°_p
 *
¥vNode
, w‹kli°_∞*
°rNode
,

70 
lo›_t
 *
Õ
) {

71 
w‹kli°_p
 
curNode
;

72 
ßddr_p
 
curBlk
;

74 i‡((*
¥vNode
Ë=
NULL


76 
curNode
 = *
°rNode
;

78 
curNode
 = (*
¥vNode
)->
√xt
;

80 ; 
curNode
; curNodêcurNode->
√xt
) {

81 
curBlk
 = (
ßddr_p
Ë(
curNode
->
d©a
);

82 i‡(
curBlk
->
blkAddr
 < 
m
->blkAddr) {

83 *
¥vNode
 = 
curNode
;

84 } i‡(
curBlk
->
blkAddr
 =
m
->blkAddr) {

85 i‡(
	`cmpTS£t
(
curBlk
->
tsLi°
, 
m
->tsLi°, 
Õ
->
id
) == 0) {

88 *
¥vNode
 = 
curNode
;

91 
	`addA·îNode
(
m
, 
¥vNode
, 
°rNode
);

96 
	`addA·îNode
(
m
, 
¥vNode
, 
°rNode
);

97 
	}
}

99 
	$˝ySBlk
(
sblk_p
 
d°
, sblk_∞
§c
) {

100 
i
;

101 
d°
->
age
 = 
§c
->age;

102 
d°
->
m
 = 
§c
->m;

103 
i
 = 0; i < 
§c
->
age
 - 1; i++) {

104 
d°
->
ys
[
i
] = 
§c
->ys[i];

106 
d°
->
Êag
 = 
§c
->flag;

107 
	}
}

108 
sblk_p
 
	$¸óãSBlk
(
ßddr_p
 
addrBlk
) {

109 
sblk_p
 
tmpBlk
;

110 
tmpBlk
 = 
	`mÆloc
((
sblk_s
));

111 
tmpBlk
->
m
 = 
addrBlk
;

112 
tmpBlk
->
age
 = 1;

113 
tmpBlk
->
Êag
 = 0;

114  
tmpBlk
;

115 
	}
}

117 
	$cmpSBlk
(
sblk_p
 
sblk1
, sblk_∞
sblk2
) {

118 i‡(
sblk1
->
age
 !
sblk2
->age)

120 i‡(
sblk1
->
ys
 !
sblk2
->ys)

123 
	}
}

126 
	$˝yACS
(
s˝_acs
 
d°
, s˝_ac†
§c
) {

127 
dbg
 = 0;

128 
i
;

129 
ch™ge
;

130 
w‹kli°_p
 
sNode
, 
dNode
, 
¥vNode
, 
tmpNode
;

131 
sblk_p
 
sBlk
, 
dBlk
, 
tmpBlk
;

132 i‡(
dbg
) {

133 
	`Ârötf
(
dbgM∑
, "\nAcs copy");

134 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

135 
	`Ârötf
(
dbgM∑
, "\nS[%d]: ", 
i
);

136 
	`¥ötCacheSë
(
dbgM∑
, 
§c
[
i
]);

137 
	`Ârötf
(
dbgM∑
, "\nD[%d]: ", 
i
);

138 
	`¥ötCacheSë
(
dbgM∑
, 
d°
[
i
]);

141 
ch™ge
 = 0;

142 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

143 
sNode
 = 
§c
[
i
];

144 
dNode
 = 
d°
[
i
];

145 
¥vNode
 = 
NULL
;

146 
sNode
) {

147 
sBlk
 = (
sblk_p
Ë(
sNode
->
d©a
);

148 i‡(
dNode
 =
NULL
) {

150 
dBlk
 = 
	`mÆloc
((
sblk_s
));

151 
	`˝ySBlk
(
dBlk
, 
sBlk
);

152 
	`addA·îNode
(
dBlk
, &
¥vNode
, &(
d°
[
i
]));

153 
sNode
 = sNode->
√xt
;

157 
dBlk
 = 
dNode
->
d©a
;

158 i‡(
sBlk
->
m
->
blkAddr
 > 
dBlk
->m->blkAddr) {

160 
¥vNode
 = 
dNode
;

161 
dNode
 = dNode->
√xt
;

163 i‡(
sBlk
->
m
->
blkAddr
 =
dBlk
->m->blkAddr) {

164 i‡(
	`cmpSBlk
(
sBlk
, 
dBlk
) != 0) {

165 
ch™ge
 = 1;

166 
	`˝ySBlk
(
dBlk
, 
sBlk
);

168 
sNode
 = sNode->
√xt
;

169 
¥vNode
 = 
dNode
;

170 
dNode
 = dNode->
√xt
;

172 
ch™ge
 = 1;

173 
tmpBlk
 = 
	`mÆloc
((
sblk_s
));

174 
	`˝ySBlk
(
tmpBlk
, 
sBlk
);

175 
	`addA·îNode
(
tmpBlk
, &
¥vNode
, &(
d°
[
i
]));

176 
sNode
 = sNode->
√xt
;

180 i‡(
dbg
) {

181 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

182 
	`Ârötf
(
dbgM∑
, "\n--> c:%d D[%d]: ", 
ch™ge
, 
i
);

183 
	`¥ötCacheSë
(
dbgM∑
, 
d°
[
i
]);

186  
ch™ge
;

187 
	}
}

190 
	$addToYS
(
sblk_p
 
acsBlk
, 
ßddr_p
 
mAcc
) {

191 
i
;

192 
ysSize
;

193 i‡(
acsBlk
->
age
 =
EVICTED


196 
ysSize
 = 
acsBlk
->
age
 - 1;

197 
i
 = 0; i < 
ysSize
; i++) {

198 i‡(
acsBlk
->
ys
[
i
]->
blkAddr
 =
mAcc
->blkAddr)

201 
acsBlk
->
ys
[
ysSize
] = 
mAcc
;

202 
acsBlk
->
age
++;

204 
	}
}

205 
	$˛órYS
(
sblk_p
 
acsBlk
) {

206 
acsBlk
->
age
 = 1;

208 
	}
}

210 
	$uni⁄YS
(
sblk_p
 
d°
, sblk_∞
§c
) {

211 
i
, 
j
;

212 
ysSizeD°
, 
ysSizeSrc
;

213 
ch™ged
;

215 
ch™ged
 = 0;

216 
ysSizeSrc
 = 
§c
->
age
 - 1;

217 
i
 = 0; i < 
ysSizeSrc
; i++) {

218 i‡(
d°
->
age
 =
EVICTED


220  
ch™ged
;

221 
ch™ged
 |
	`addToYS
(
d°
, 
§c
->
ys
[
i
]);

223  
ch™ged
;

224 
	}
}

227 
	$ÊushCache
(
ßddr_p
 
mAcc
, 
s˝_acs
 
acs_out
) {

228 
i
;

229 
sblk_p
 
acsBlk
;

230 
w‹kli°_p
 
curNode
, 
¥vNode
;

231 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

232 
curNode
 = 
acs_out
[
i
]; curNode; curNodêcurNode->
√xt
) {

233 
acsBlk
 = (
sblk_p
Ë(
curNode
->
d©a
);

234 
acsBlk
->
age
 = 
EVICTED
;

237 
	}
}

244 
	$sögÀt⁄AccQuick
(
d©_ö°_t
* 
d_ö°
, 
ÕId
) {

245 
i
;

246 
°ride
;

247 
ex¥_p
 
exp
;

248 
ªsideLpId
;

250 
exp
 = (
ex¥_p
Ë(&(
d_ö°
->
addrEx¥
));

252 i‡(
exp
->
v¨Num
 == 0)

254 i‡(
ÕId
 == 0)

256 
i
 = 0; i < 
exp
->
v¨Num
 - 1; i++) {

257 i‡(
exp
->
vÆue
[
i
].
t
 !
VALUE_CONST


262 
i
 = 
exp
->
v¨Num
 - 1;

263 i‡(
exp
->
vÆue
[
i
].
t
 =
VALUE_CONST
 &&Éxp->vÆue[i].
vÆ
 >
ÕId
) {

264 i‡(
exp
->
c€f
[
i
] < 
SIZE_OF_BLOCK


269 
	}
}

272 
	$sögÀt⁄Acc
(
w‹kli°_p
 *
addrLi°
, 
ßddr_p
 
tsM
, 
d©_ö°_t
* 
d_ö°
,

273 
ÕId
) {

274 
w‹kli°_p
 
addrNode
;

275 
ßddr_p
 
mAcc
;

276 
cou¡
, 
cmp
;

278 
	`‰ìLi°
(
addrLi°
);

279 
addrNode
 = (
d_ö°
->
addr_£t
);áddrNode;áddrNodêaddrNode->
√xt
) {

280 
mAcc
 = (
ßddr_p
Ë(
addrNode
->
d©a
);

281 
cmp
 = 
	`cmpSAddr
(
tsM
, 
mAcc
, 
ÕId
);

282 
cmp
) {

283 
EQUAL_TS
:

284 
SEP_TS
:

292 
	}
}

295 
	$PS_d©a_upd©e
(
s˝_acs
 
acs_out
, 
d©_ö°_t
 *
d_ö°
, 
lo›_t
 *
Õ
) {

296 
dbg
 = 0;

297 
i
, 
j
, 
s
;

298 
cmp
, 
found
;

299 
sögÀt⁄
;

300 
w‹kli°_p
 
sblkNode
, 
addrNode
, 
ﬁ≠Node
, 
¥vNode
, 
agedNode
, 
addr_£t
,

301 
addrLi°
;

302 
ßddr_p
 
mAcc
;

303 
sblk_p
 
acsBlk
, 
ﬁ≠Blk
, 
tmpBlk
;

304 
w‹kli°_p
 
Xf
[
MAX_CACHE_SET
];

305 
w‹kli°_p
 
√wBlk
[
MAX_CACHE_SET
];

306 
w‹kli°_p
 
addPos
[
MAX_CACHE_SET
];

308 
agedNode
 = 
NULL
;

309 
addrLi°
 = 
NULL
;

310 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

311 
√wBlk
[
i
] = 
NULL
;

312 
addPos
[
i
] = 
NULL
;

313 
Xf
[
i
] = 
NULL
;

317 
addr_£t
 = 
d_ö°
->addr_set;

318 
sögÀt⁄
 = 
	`sögÀt⁄AccQuick
(
d_ö°
, 
Õ
->
id
);

319 
addrNode
 = 
addr_£t
;áddrNode;áddrNodêaddrNode->
√xt
) {

320 
mAcc
 = (
ßddr_p
Ë(
addrNode
->
d©a
);

321 i‡(
mAcc
->
blkAddr
 =
UNKNOWN_ADDR
) {

322 
	`ÊushCache
(
mAcc
, 
acs_out
);

325 
s
 = 
	`GET_SET
(
mAcc
->
blkAddr
);

326 
	`addA·îNode
(
mAcc
, &(
addPos
[
s
]), &(
Xf
[s]));

328 
i
 = 0; i < 
MAX_CACHE_SET
; i++)

329 
addPos
[
i
] = 
NULL
;

331 i‡(
dbg
) {

332 
	`Ârötf
(
dbgM∑
, " c™Ríew: %d", 
sögÀt⁄
);

334 i‡(
dbg
) {

336 
	`Ârötf
(
dbgM∑
,"\n\nAddrSë: ");
	`¥ötSAddrSë
(dbgM∑,
addr_£t
,0);

337 
i
=0; i<
MAX_CACHE_SET
; i++) {

338 
	`Ârötf
(
dbgM∑
,"\nXf[%d] ",
i
);
	`¥ötSAddrSë
(dbgM∑,
Xf
[i],0);

344 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

345 
addrNode
 = 
Xf
[
i
];áddrNode;áddrNodêaddrNode->
√xt
) {

346 
mAcc
 = (
ßddr_p
Ë(
addrNode
->
d©a
);

347 
found
 = 0;

348 
¥vNode
 = 
NULL
;

349 
sblkNode
 = 
acs_out
[
i
]; sblkNode; sblkNodêsblkNode->
√xt
) {

350 
acsBlk
 = (
sblk_p
Ë(
sblkNode
->
d©a
);

351 i‡(
acsBlk
->
m
->
blkAddr
 <
mAcc
->blkAddr)

352 
¥vNode
 = 
sblkNode
;

353 i‡(
acsBlk
->
age
 =
EVICTED


354 && 
acsBlk
->
m
->
blkAddr
 !
mAcc
->blkAddr) {

358 
cmp
 = 
	`cmpSAddr
(
acsBlk
->
m
, 
mAcc
, 
Õ
->
id
);

359 
cmp
) {

360 
EQUAL_TS
:

361 
found
 = 1;

363 
	`addToW‹kLi°
(&(
√wBlk
[
i
]), 
mAcc
);

364 
	`addToW‹kLi°
(&(
addPos
[
i
]), 
sblkNode
);

367 
OLAP_TS
:

369 
	`Ârötf
(
dbgM∑
, "\nOverlap: ");

370 
	`¥ötSAddr
(
dbgM∑
, 
acsBlk
->
m
, 1);

371 
	`Ârötf
(
dbgM∑
, " - ");

372 
	`¥ötSAddr
(
dbgM∑
, 
mAcc
, 1);

374 #i‡
AVOID_ONE_ACCESS_MULTIPLE_AGING


375 i‡(
acsBlk
->
Êag
 =
AGED


379 
	`addToYS
(
acsBlk
, 
mAcc
);

380 
acsBlk
->
Êag
 = 
AGED
;

381 
	`addToW‹kLi°
(&
agedNode
, 
acsBlk
);

383 
SEP_TS
:

387 
	`¥ötf
("\¿P™ic, unknow¿cm∞%d", 
cmp
);

388 
	`exô
(1);

391 i‡(!
found
) {

392 
	`addToW‹kLi°
(&(
√wBlk
[
i
]), 
mAcc
);

393 
	`addToW‹kLi°
(&(
addPos
[
i
]), 
¥vNode
);

396 !
	`isEm±y
(
√wBlk
[
i
])) {

397 
mAcc
 = 
	`ªmoveO√FromW‹kLi°
(&(
√wBlk
[
i
]));

398 
¥vNode
 = 
	`ªmoveO√FromW‹kLi°
(&(
addPos
[
i
]));

399 i‡(
¥vNode
 =
NULL


401 
ADD_NEW_BLK
;

402 
acsBlk
 = 
¥vNode
->
d©a
;

403 i‡(
acsBlk
->
m
->
blkAddr
 =
mAcc
->blkAddr) {

404 
cmp
 = 
	`cmpSAddr
(
acsBlk
->
m
, 
mAcc
, 
Õ
->
id
);

405 i‡(
cmp
 =
EQUAL_TS
) {

406 i‡(
	`sögÀt⁄Acc
(&
addrLi°
, 
acsBlk
->
m
, 
d_ö°
, 
Õ
->
id
)

408 
	`˛órYS
(
acsBlk
);

411 i‡(
sögÀt⁄
==1) {

412 
	`˛órYS
(
acsBlk
);

415 } i‡(
cmp
 !
EQUAL_TS
) {

416 
ADD_NEW_BLK
;

419 i‡(
acsBlk
->
m
->
blkAddr
 < 
mAcc
->blkAddr) {

420 
ADD_NEW_BLK
: 
tmpBlk
 = 
	`¸óãSBlk
(
mAcc
);

421 
	`addA·îNode
(
tmpBlk
, &
¥vNode
, &(
acs_out
[
i
]));

430 !
	`isEm±y
(
agedNode
)) {

431 
tmpBlk
 = 
	`ªmoveO√FromW‹kLi°
(&
agedNode
);

432 
tmpBlk
->
Êag
 = 0;

434 i‡(
dbg
) {

435 
i
 = 0; i < 1; i++) {

436 
	`Ârötf
(
dbgM∑
, "\nD[%d] ", 
i
);

437 
	`¥ötCacheSë
(
dbgM∑
, 
acs_out
[
i
]);

440 
	}
}

443 
	$PS_joö
(
s˝_acs
 
d°
, s˝_ac†
§c
, 
lo›_t
* 
Õ
) {

444 
dbg
 = 0;

445 
i
, 
j
;

446 
ch™ged
, 
cmp
;

447 
w‹kli°_p
 
sNode
, 
dNode
, 
¥vNode
, 
tmpNode
;

448 
sblk_p
 
sBlk
, 
dBlk
, 
tmpBlk
;

450 i‡(
dbg
) {

452 
i
 = 0; i < 1; i++) {

453 
	`Ârötf
(
dbgM∑
, "\nS[%d] ", 
i
);

454 
	`¥ötCacheSë
(
dbgM∑
, 
§c
[
i
]);

455 
	`Ârötf
(
dbgM∑
, "\nD[%d] ", 
i
);

456 
	`¥ötCacheSë
(
dbgM∑
, 
d°
[
i
]);

460 
ch™ged
 = 0;

461 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

462 
sNode
 = 
§c
[
i
];

463 
dNode
 = 
d°
[
i
];

464 
¥vNode
 = 
NULL
;

465 
sNode
) {

466 
sBlk
 = (
sblk_p
Ë(
sNode
->
d©a
);

467 i‡(
dNode
) {

468 
dBlk
 = (
sblk_p
Ë(
dNode
->
d©a
);

469 i‡(
sBlk
->
m
->
blkAddr
 =
dBlk
->m->blkAddr) {

470 i‡(
	`eqTS£t
(
sBlk
->
m
->
tsLi°
, 
dBlk
->m->tsLi°, 
Õ
->
id
)) {

471 
ch™ged
 |
	`uni⁄YS
(
dBlk
, 
sBlk
);

472 
¥vNode
 = 
dNode
;

473 
sNode
 = sNode->
√xt
;

474 
dNode
 = dNode->
√xt
;

476 
NEXT_SRC_NODE
;

478 } i‡(
dBlk
->
m
->
blkAddr
 < 
sBlk
->m->blkAddr) {

479 
NEXT_SRC_NODE
: 
¥vNode
 = 
dNode
;

480 
dNode
 = dNode->
√xt
;

482 
ADD_NEW_BLK
;

485 
ADD_NEW_BLK
: if (0) {

486 
	`Ârötf
(
dbgM∑
, "\nAdd ");

487 
	`¥ötSAddr
(
dbgM∑
, 
sBlk
->
m
, 1);

488 
	`Ârötf
(
dbgM∑
, "áfter ");

489 i‡(
¥vNode
) {

490 
tmpBlk
 = 
¥vNode
->
d©a
;

491 
	`¥ötSAddr
(
dbgM∑
, 
tmpBlk
->
m
, 1);

493 
	`Ârötf
(
dbgM∑
, " D[%d] hód", 
i
);

496 
tmpBlk
 = 
	`mÆloc
((
sblk_s
));

497 
	`˝ySBlk
(
tmpBlk
, 
sBlk
);

498 
	`addA·îNode
(
tmpBlk
, &
¥vNode
, &(
d°
[
i
]));

499 
sNode
 = sNode->
√xt
;

500 
ch™ged
 = 1;

505 i‡(
dbg
 && 
ch™ged
) {

506 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

507 
	`Ârötf
(
dbgM∑
, "\nS[%d] ", 
i
);

508 
	`¥ötCacheSë
(
dbgM∑
, 
§c
[
i
]);

509 
	`Ârötf
(
dbgM∑
, "\n-->D[%d] ", 
i
);

510 
	`¥ötCacheSë
(
dbgM∑
, 
d°
[
i
]);

513  
ch™ged
;

514 
	}
}

516 
	$absI¡
(
x
) {

517 i‡(
x
 >= 0)

518  
x
;

520  0 - 
x
;

521 
	}
}

524 
	$å™sf‹m_bbi_dˇche
(
tcfg_node_t
 *
bbi
, 
lo›_t
* 
Õ
, 
ty≥
) {

525 
dbg
 = 0;

526 
d©_ö°_t
* 
d_ö°
;

527 
ö¢_t
* 
ö¢
;

528 
n_ö°
;

529 
ª√wFœg
;

531 
	`˝yACS
(
bbi
->
acs_out
, bbi->
acs_ö
);

532 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_d_ö°
;Ç_inst++) {

533 
d_ö°
 = (
d©_ö°_t
*Ë(
bbi
->
bb
->
d_ö°li°
);

534 
d_ö°
 = d_ö° + 
n_ö°
;

535 
ö¢
 = 
d_ö°
->insn;

537 i‡(!
	`isMemAc˚ss
(
ö¢
->
›
)) {

538 
	`¥ötf
("\nErr:ÇotÜd/st inst: ");

539 
	`¥ötIn°r
(
ö¢
);

542 i‡(
ty≥
 !
PERSISTENCE
) {

543 
	`¥ötf
("\nErr:Çot implemented");

544 
	`fÊush
(
°dout
);

545 
	`exô
(1);

547 i‡(
dbg
) {

548 
	`Ârötf
(
dbgM∑
, "\n\nDataRef ");

549 
	`ÂrötIn°r
(
dbgM∑
, 
ö¢
);

552 #i‡
WRITE_THRU


553 i‡(
	`isLﬂdIn°
(
ö¢
->
›
)) {

554 
	`PS_d©a_upd©e
(
bbi
->
acs_out
, 
d_ö°
, 
Õ
);

556 i‡(
dbg
) {

557 
	`Ârötf
(
dbgM∑
, "write inst, doÇothing");

563 
	`PS_upd©e
(
bbi
->
acs_out
,
d_ö°
, 
ª√wFœg
, 
Õ
);

566 
	}
}

568 
˛⁄e_acs
(
lo›_t
*);

570 
	$™Æyze_lo›_ps
(
lo›_t
 *
Õ
) {

571 
dbg
 = 0;

572 
i
, 
j
;

573 
bbid
, 
hdLpId
, 
blkLpId
;

574 
tcfg_node_t
 *
ÕHód
, *
ÕTaû
, *
curNode
;

575 
tcfg_edge_t
 *
ö_edge
, *
out_edge
, *
tmp_edge
;

576 
lo›_t
 *
blk_Õ
;

577 
ch™ged
, 
Êag
;

578 
ôîCou¡
;

580 
P_Queue
 *
pQueue
;

582 i‡(
dbg
) {

583 
	`Ârötf
(
dbgM∑
, "\n\n==A«lyzêL%d ", 
Õ
->
id
);

584 
	`fÊush
(
dbgM∑
);

594 
hdLpId
 = 
Õ
->
id
;

596 
pQueue
 = 
NULL
;

597 
ÕHód
 = 
Õ
->
hód
;

598 
ÕTaû
 = 
Õ
->
èû
;

599 i‡(
ÕTaû
 =
NULL


601 
ÕTaû
 = 
tcfg
[
num_tcfg_nodes
 - 1];

602 i‡(
dbg
) {

603 
	`Ârötf
(
dbgM∑
, " [%d,%d]", 
ÕHód
->
id
, 
ÕTaû
->id);

604 
	`fÊush
(
dbgM∑
);

608 
i
 = 
ÕHód
->
id
; i <
ÕTaû
->id; i++) {

609 
curNode
 = 
tcfg
[
i
];

610 
visôed
[
i
] = 0;

611 
j
 = 0; j < 
MAX_CACHE_SET
; j++) {

612 
curNode
->
acs_ö
[
j
] = 
NULL
;

613 
curNode
->
acs_out
[
j
] = 
NULL
;

617 
ôîCou¡
 = 0;

618 
	`p_íqueue
(&
pQueue
, 
ÕHód
,ÜpHód->
id
);

619 !
	`p_queue_em±y
(&
pQueue
)) {

620 
curNode
 = (
tcfg_node_t
*Ë
	`p_dequeue
(&
pQueue
);

621 i‡(
curNode
 =
ÕHód
)

622 
ôîCou¡
++;

623 
blk_Õ
 = 
	`bbi_Õ
(
curNode
);

624 
blkLpId
 = 
	`bbi_ÕId
(
curNode
);

627 i‡(
	`cmpLpOrdî
(
hdLpId
, 
blkLpId
) == -1)

630 i‡(
dbg
) {

631 
	`Ârötf
(
dbgM∑
, "\n\nA«lyzêbbò(%d,%d), L%d", 
	`bbi_pid
(
curNode
),

632 
	`bbi_bid
(
curNode
), 
blkLpId
);

633 
	`fÊush
(
dbgM∑
);

636 
ch™ged
 = 0;

637 
ö_edge
 = 
curNode
->
ö
; in_edgê!
NULL
;

638 
ö_edge
 = in_edge->
√xt_ö
) {

639 i‡(
	`cmpLpOrdî
(
hdLpId
, 
	`bbi_ÕId
(
ö_edge
->
§c
)) >= 0) {

640 
Êag
 = 
	`PS_joö
(
curNode
->
acs_ö
, 
ö_edge
->
§c
->
acs_out
, 
Õ
);

641 i‡(
dbg
) {

642 
	`Ârötf
(
dbgM∑
, "\nJoin (%d->%d) : changed %d",

643 
ö_edge
->
§c
->
id
, 
curNode
->id, 
Êag
);

645 i‡(
Êag
 == 1)

646 
ch™ged
 = 1;

649 i‡(
visôed
[
curNode
->
id
] == 0) {

650 
ch™ged
 = 1;

651 
visôed
[
curNode
->
id
] = 1;

654 i‡(
ch™ged
) {

656 
	`å™sf‹m_bbi_dˇche
(
curNode
, 
Õ
, 
PERSISTENCE
);

658 
out_edge
 = 
curNode
->
out
; out_edge;

659 
out_edge
 = out_edge->
√xt_out
) {

660 
	`p_íqueue
(&
pQueue
, 
out_edge
->
d°
, out_edge->d°->
id
);

665 
	`¥ötf
("\nFöishá«lysi†L%d i¿%dÑounds", 
Õ
->
id
, 
ôîCou¡
);

668 
	}
}

673 
	$gëOuãrPS
(
lo›_t
 *
Õ
) {

677 
dbg
 = 0;

678 
i
;

679 
tcfg_node_t
 *
hód
, *
§c
;

680 
tcfg_edge_t
 *
ö_e
, *
cur_e
;

681 
w‹kli°_p
 
£tNode
, 
ÕNode
, 
¥vNode
;

682 
sblk_p
 
£tBlk
, 
ÕBlk
;

683 
s˝_acs
 
ÕIn
;

684 
lo›_t
 *
tmpLp
, *
∑rLp
;

686 
hód
 = 
Õ
->head;

687 
ÕIn
 = 
ÕPîsIn
[
Õ
->
id
];

688 i‡(
dbg
)

689 
	`Ârötf
(
dbgM∑
, "\nPîs.blk whíÉ¡îög L%d", 
Õ
->
id
);

691 
ö_e
 = 
hód
->
ö
; in_e; in_êö_e->
√xt_ö
) {

692 
§c
 = 
ö_e
->src;

693 i‡(
	`bbi_Õ
(
§c
)->
id
 =
Õ
->id)

695 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

696 
¥vNode
 = 
NULL
;

697 
£tNode
 = 
§c
->
acs_out
[
i
]; sëNode; sëNodê£tNode->
√xt
) {

698 
£tBlk
 = (
sblk_p
Ë(
£tNode
->
d©a
);

699 i‡(
£tBlk
->
age
 < 
PSEUDO
) {

700 
	`addA·îNode
(
£tBlk
, &
¥vNode
, &(
ÕIn
[
i
]));

704 i‡(
dbg
) {

705 
	`Ârötf
(
dbgM∑
, "\nE¡î L%d from (%d,%d)", 
Õ
->
id
, 
	`bbi_pid
(
§c
),

706 
	`bbi_bid
(
§c
));

707 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

708 
	`Ârötf
(
dbgM∑
, "\nS[%d] ", 
i
);

709 
	`¥ötCacheSë
(
dbgM∑
, 
§c
->
acs_out
[
i
]);

710 
	`Ârötf
(
dbgM∑
, "\nList of PS blks ");

711 
	`Ârötf
(
dbgM∑
, "\n->S[%d] ", 
i
);

712 
	`¥ötCacheSë
(
dbgM∑
, 
ÕIn
[
i
]);

716 
	}
}

719 
	$e°LpMissPS
(
lo›_t
 *
Õ
) {

720 
dbg
 = 0;

721 
i
, 
s
;

722 
w‹kli°_p
 
öNode
, 
ªqNode
, 
¥vNode
;

723 
ßddr_p
 
ªqBlk
;

724 
sblk_p
 
öBlk
;

725 
w‹kli°_p
 *
¥vInNode
;

726 
w‹kli°_p
 
¥vReqNode
;

727 
lo›_t
 *
∑rLp
;

728 
found
, 
ÕMiss
;

729 
ÕE¡ry
;

730 
ac˚ssNum
;

732 i‡(
dbg
) {

733 
	`Ârötf
(
dbgM∑
, "\n\nE° cﬁd mis†ö L%d", 
Õ
->
id
);

734 
	`Ârötf
(
dbgM∑
, "\n LPS set:");

735 
	`¥ötSAddrSë
(
dbgM∑
, 
ÕReqPS
[
Õ
->
id
], 0);

736 
	`Ârötf
(
dbgM∑
, "\nÜpPS_in set");

737 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

738 
	`Ârötf
(
dbgM∑
, "\¿S[%d]: ", 
i
);

739 
	`¥ötCacheSë
(
dbgM∑
, 
ÕPîsIn
[
Õ
->
id
][
i
]);

741 
	`Ârötf
(
dbgM∑
, "\n MissÉst: ");

743 
¥vReqNode
 = 
NULL
;

744 
¥vInNode
 = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

746 
Õ_cﬁdms
[
Õ
->
id
] = 0;

747 
ªqNode
 = 
ÕReqPS
[
Õ
->
id
];ÑeqNode;ÑeqNodêªqNode->
√xt
) {

748 
ªqBlk
 = (
ßddr_p
Ë(
ªqNode
->
d©a
);

750 
found
 = 0;

752 
s
 = 
	`GET_SET
(
ªqBlk
->
blkAddr
);

753 
¥vNode
 = 
¥vInNode
[
s
];

754 i‡(
¥vNode
)

755 
öNode
 = 
¥vNode
->
√xt
;

757 
öNode
 = 
ÕPîsIn
[
Õ
->
id
][
s
];

759 ; 
öNode
; inNodêöNode->
√xt
) {

760 
öBlk
 = (
sblk_p
Ë(
öNode
->
d©a
);

761 i‡(
öBlk
->
m
->
blkAddr
 < 
ªqBlk
->blkAddr) {

762 
¥vNode
 = 
öNode
;

763 } i‡(
öBlk
->
m
->
blkAddr
 =
ªqBlk
->blkAdd∏&& 
Õ
->
∑ª¡
) {

764 i‡(
	`cmpSAddr
(
öBlk
->
m
, 
ªqBlk
, 
Õ
->
id
) == 0) {

766 
found
 = 1;

767 
	`addToIncSë
(
ªqBlk
, &
¥vReqNode
, &(
ÕReqPS
[
Õ
->
∑ª¡
->
id
]),

768 
Õ
);

769 i‡(
dbg
) {

770 
	`Ârötf
(
dbgM∑
, " U:%x ", 
ªqBlk
->
blkAddr
);

774 
¥vNode
 = 
öNode
;

778 
found
 = 1;

779 i‡(
Õ
->
∑ª¡
)

780 
ÕMiss
 = 
	`e°Sc›eSize
(
ªqBlk
->
tsLi°
, 
Õ
->
∑ª¡
->
id
);

782 
ÕMiss
 = 1;

783 
Õ_cﬁdms
[
Õ
->
id
] +
ÕMiss
;

784 i‡(
dbg
) {

785 
	`Ârötf
(
dbgM∑
, " C:%x:%d ", 
ªqBlk
->
blkAddr
, 
ÕMiss
);

790 i‡(!
found
) {

791 i‡(
Õ
->
∑ª¡
)

792 
ÕMiss
 = 
	`e°Sc›eSize
(
ªqBlk
->
tsLi°
, 
Õ
->
∑ª¡
->
id
);

794 
ÕMiss
 = 1;

795 
Õ_cﬁdms
[
Õ
->
id
] +
ÕMiss
;

796 i‡(
dbg
) {

797 
	`Ârötf
(
dbgM∑
, " C:%x:%d ", 
ªqBlk
->
blkAddr
, 
ÕMiss
);

800 
¥vInNode
[
s
] = 
¥vNode
;

802 
	`‰ì
(
¥vInNode
);

804 i‡(
Õ
->
∑ª¡
)

805 
ÕE¡ry
 = 
Õ
->
∑ª¡
->
exec
;

807 
ÕE¡ry
 = 1;

809 
tŸÆPîsMiss
 +
Õ_cﬁdms
[
Õ
->
id
];

811 i‡(
dbg
) {

812 
	`Ârötf
(
dbgM∑
, "\nCﬁd mis†ö L%d: %d", 
Õ
->
id
, 
Õ_cﬁdms
[lp->id]);

815 
	`¥ötf
("\nI¿L%d, Cﬁd mis†%d, E¡ry %d, Exe¯%d", 
Õ
->
id
,

816 
Õ_cﬁdms
[
Õ
->
id
], 
ÕE¡ry
,Üp->
exec
);

817 
	`fÊush
(
°dout
);

819 
	}
}

821 
	$e°NodeAŒMiss
(
tcfg_node_t
* 
bbi
) {

822 
dbg
 = 0;

823 
d©_ö°_t
* 
d_ö°
;

824 
ö¢_t
* 
ö¢
;

825 
n_ö°
, 
cs
, 
Êag
;

826 
num_PS
, 
max_miss
, 
max_exec
, 
cou¡2x
;

828 
w‹kli°_p
 
c⁄fS˝
, 
PS_£t
, 
miss_£t
, 
LPS_ªq
;

829 
w‹kli°_p
 
addrNode
, 
£tNode
, 
csNode
, 
¥vReqNode
, 
¥vNode
;

830 
ßddr_p
 
addrBlk
;

831 
sblk_p
 
£tBlk
;

833 
lo›_t
 *
Õ
, *
tmpLp
, *
∑rLp
;

835 
bbi
->
max_miss
 = 0;

836 
bbi
->
dˇche_dñay
 = 0;

837 
Õ
 = 
	`bbi_Õ
(
bbi
);

838 
max_exec
 = 
Õ
->
exec
;

839 
	`˝yACS
(
bbi
->
acs_out
, bbi->
acs_ö
);

840 i‡(
dbg
) {

841 
	`Ârötf
(
dbgM∑
, "\n\nEstÇon-PS miss in bbi (%d,%d), L%d, ME: %d",

842 
	`bbi_pid
(
bbi
), 
	`bbi_bid
(bbi), 
	`bbi_Õ
(bbi)->
id
, 
max_exec
);

844 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_d_ö°
;Ç_inst++) {

845 
d_ö°
 = (
d©_ö°_t
*Ë(
bbi
->
bb
->
d_ö°li°
);

846 
d_ö°
 = d_ö° + 
n_ö°
;

847 
ö¢
 = 
d_ö°
->insn;

848 
max_miss
 = 0;

849 
num_PS
 = 0;

850 
¥vNode
 = 
NULL
;

851 
LPS_ªq
 = 
NULL
;

852 i‡(
dbg
) {

853 
miss_£t
 = 
NULL
;

854 
PS_£t
 = 
NULL
;

856 
d_ö°
->
max_exec
 = max_exec;

857 
tŸÆD©aExec
 +
max_exec
;

858 #i‡
WRITE_THRU


859 i‡(
	`isSt‹eIn°
(
ö¢
->
›
)) {

860 
d_ö°
->
max_miss
 = 
max_exec
;

861 
tŸÆNPîsMiss
 +
d_ö°
->
max_miss
;

863 
	`¥ötf
("\n\nDataRef: ");

864 
	`¥ötIn°r
(
d_ö°
->
ö¢
);

865 
	`¥ötf
("maxPS: %d, maxMs: %d, maxExec: %d", 
num_PS
,

866 
d_ö°
->
max_miss
, 
max_exec
);

867 
	`fÊush
(
°dout
);

873 
addrNode
 = 
d_ö°
->
addr_£t
;áddrNode;áddrNodêaddrNode->
√xt
) {

874 
addrBlk
 = (
ßddr_p
Ë(
addrNode
->
d©a
);

875 i‡(
addrBlk
->
blkAddr
 =
UNKNOWN_ADDR


877 
ALL_MISS
;

878 
cs
 = 
	`GET_SET
(
addrBlk
->
blkAddr
);

879 i‡(
cs
 < 0 || c†>
MAX_CACHE_SET
) {

880 
	`¥ötf
("\nP™ic: unknow¿ˇchê£à%d", 
cs
);

881 
	`exô
(1);

883 
£tNode
 = 
bbi
->
acs_out
[
cs
]; sëNode; sëNodê£tNode->
√xt
) {

884 
£tBlk
 = (
sblk_p
Ë(
£tNode
->
d©a
);

885 i‡(
addrBlk
->
blkAddr
 > 
£tBlk
->
m
->blkAddr)

887 i‡(
addrBlk
->
blkAddr
 =
£tBlk
->
m
->blkAddr) {

888 i‡(
	`cmpSAddr
(
addrBlk
, 
£tBlk
->
m
, 
Õ
->
id
) == 0) {

889 i‡(
£tBlk
->
age
 =
EVICTED
) {

891 
max_miss
 +
	`e°Sc›eSize
(
£tBlk
->
m
->
tsLi°
, 
Õ
->
id
);

892 i‡(
dbg
)

893 
	`addToW‹kLi°
(&
miss_£t
, 
addrBlk
);

895 
	`addA·îNode
(
addrBlk
, &
¥vNode
, &
LPS_ªq
);

896 
num_PS
++;

903 
	`addA·îNode
(
addrBlk
, &
¥vNode
, &
LPS_ªq
);

904 
num_PS
++;

910 i‡(
max_miss
 < 
max_exec
) {

911 
d_ö°
->
max_miss
 = max_miss;

912 
¥vReqNode
 = 
NULL
;

913 
£tNode
 = 
LPS_ªq
; sëNode; sëNodê£tNode->
√xt
) {

914 
addrBlk
 = (
ßddr_p
Ë(
£tNode
->
d©a
);

915 
	`addToIncSë
(
addrBlk
, &
¥vReqNode
, &(
ÕReqPS
[
Õ
->
id
]),Üp);

916 i‡(
dbg
)

917 
	`addToW‹kLi°
(&
PS_£t
, 
addrBlk
);

919 !
	`isEm±y
(
LPS_ªq
))

920 
	`ªmoveO√FromW‹kLi°
(&
LPS_ªq
);

922 
ALL_MISS
: 
max_miss
 = 
max_exec
;

923 
d_ö°
->
max_miss
 = max_miss;

926 
bbi
->
max_miss
 +
d_ö°
->max_miss;

927 
tŸÆNPîsMiss
 +
d_ö°
->
max_miss
;

929 i‡(
dbg
) {

930 
	`Ârötf
(
dbgM∑
, "\n\nDataRef: ");

931 
	`ÂrötIn°r
(
dbgM∑
, 
d_ö°
->
ö¢
);

932 
	`Ârötf
(
dbgM∑
, "\n#PS: %d, max_miss: %d, max_exec: %d", 
num_PS
,

933 
d_ö°
->
max_miss
, 
max_exec
);

934 
	`Ârötf
(
dbgM∑
, "\nList of miss.blk :");

935 
	`¥ötSAddrSë
(
dbgM∑
, 
miss_£t
, 0);

937 
	`Ârötf
(
dbgM∑
,"\nList of PS.req :");

938 
	`¥ötSAddrSë
(
dbgM∑
,
PS_£t
,0);

940 !
	`isEm±y
(
PS_£t
))

941 
	`ªmoveO√FromW‹kLi°
(&
PS_£t
);

942 !
	`isEm±y
(
miss_£t
))

943 
	`ªmoveO√FromW‹kLi°
(&
miss_£t
);

947 
	`¥ötf
("\n\nDataRef: ");

948 
	`¥ötIn°r
(
d_ö°
->
ö¢
);

949 
	`¥ötf
("\nmaxPS: %d, maxMs: %d, maxExec: %d", 
num_PS
,

950 
d_ö°
->
max_miss
, 
max_exec
);

951 
	`fÊush
(
°dout
);

953 
	`PS_d©a_upd©e
(
bbi
->
acs_out
, 
d_ö°
, 
Õ
);

955 
	}
}

959 
	$öô_mem
() {

960 
i
, 
j
;

961 
dbgM∑
 = 
	`f›í
("dbg_mpa.dbg", "w");

962 
visôed
 = 
	`ˇŒoc
(
num_tcfg_nodes
, ());

963 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

964 
tcfg
[
i
]->
acs_ö
 = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

965 
tcfg
[
i
]->
acs_out
 = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

966 
j
 = 0; j < 
MAX_CACHE_SET
; j++) {

967 
tcfg
[
i
]->
acs_ö
[
j
] = 
NULL
;

968 
tcfg
[
i
]->
acs_out
[
j
] = 
NULL
;

971 
ÕOut_acs
 = 
	`ˇŒoc
(
num_tcfg_lo›s
, (
w‹kli°_p
*));

972 
ÕPîsIn
 = 
	`ˇŒoc
(
num_tcfg_lo›s
, (
w‹kli°_p
*));

973 
ÕReqPS
 = 
	`ˇŒoc
(
num_tcfg_lo›s
, (
w‹kli°_p
));

974 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

975 
ÕReqPS
[
i
] = 
NULL
;

976 
ÕOut_acs
[
i
] = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

977 
ÕPîsIn
[
i
] = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

979 
¥vAcsNode
 = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

980 
	}
}

981 
	$‰ì_mem
() {

982 
i
, 
j
;

983 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

984 
	`‰ì
(
tcfg
[
i
]->
acs_ö
);

985 
	`‰ì
(
tcfg
[
i
]->
acs_out
);

987 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

988 
	`‰ì
(
ÕOut_acs
[
i
]);

989 
	`‰ì
(
ÕPîsIn
[
i
]);

991 
	`‰ì
(
¥vAcsNode
);

992 
	`‰ì
(
ÕOut_acs
);

993 
	`‰ì
(
ÕPîsIn
);

994 
	`‰ì
(
ÕReqPS
);

995 
	`‰ì
(
visôed
);

996 
	`f˛o£
(
dbgM∑
);

997 
	}
}

998 
	$upd©eTemp‹ÆSc›e
() {

999 
i
;

1000 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1001 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1002 
j
;

1003 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1004 
d©_ö°_t
* 
dö°
 = (d©_ö°_t*Ë
bbi
->
bb
->
d_ö°li°
;

1005 
dö°
 = dö° + 
j
;

1006 
w‹kli°_p
 
addrSë
 = 
dö°
->
addr_£t
;

1007 ; 
addrSë
 !
NULL
;áddrSë =áddrSë->
√xt
) {

1008 
ßddr_p
 
ßddr
 = (ßddr_pË
addrSë
->
d©a
;

1009 
w‹kli°_p
 
tsSë
 = 
ßddr
->
tsLi°
;

1010 
lo›_t
* 
Õ
 = (lo›_t*Ë
	`bbi_Õ
(
bbi
);

1011 
w‹kli°_p
 
hódNode
 = 
NULL
;

1012 
w‹kli°_p
 
èûNode
 = 
NULL
;

1013 ; 
Õ
 !
NULL
;Ü∞Õ->
∑ª¡
) {

1014 
ts_p
 
ts
 = (ts_pË
tsSë
->
d©a
;

1015 i‡(
Õ
->
id
 =
ts
->
lo›_id
)

1018 
w‹kli°_p
 
√wNode
 = 
	`mÆloc
((
w‹kli°_s
));

1019 
ts_p
 
√wTs
 = 
	`mÆloc
((
ts_s
));

1020 
√wTs
->
lo›_id
 = 
Õ
->
id
;

1021 
√wTs
->
lw
 = 0;

1022 
√wTs
->
up
 = 
Õ
->
bound
 - 1;

1023 
√wNode
->
d©a
 = 
√wTs
;

1024 
√wNode
->
√xt
 = 
NULL
;

1025 i‡(
hódNode
 =
NULL
) {

1026 
hódNode
 = 
èûNode
 = 
√wNode
;

1028 
èûNode
->
√xt
 = 
√wNode
;

1029 
èûNode
 = 
√wNode
;

1033 i‡(
hódNode
 !
NULL
) {

1034 
èûNode
->
√xt
 = 
ßddr
->
tsLi°
;

1035 
ßddr
->
tsLi°
 = 
hódNode
;

1040 
	}
}

1041 
	$s˝CheckMem
() {

1044 
i
;

1045 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1046 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1047 
lo›_t
* 
Õ
 = 
	`bbi_Õ
(
bbi
);

1048 
dïth
 = 0;

1049 
Õ
 !
NULL
) {

1050 
dïth
++;

1051 
Õ
 =Üp->
∑ª¡
;

1053 
	`¥ötf
("\nbbi:%dÜ%dÜ%d\n", 
bbi
->
id
, 
	`bbi_ÕId
(bbi), bbi->
lo›_id
);

1054 
j
;

1055 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1056 
d©_ö°_t
* 
dö°
 = 
bbi
->
bb
->
d_ö°li°
;

1057 
dö°
 = dö° + 
j
;

1058 
ö¢_t
* 
ö¢
 = (ö¢_t*Ë
dö°
->insn;

1059 
	`¥ötf
("\t%x [lﬂd/°‹e]\n", 
ö¢
->
addr
);

1060 
w‹kli°_p
 
addrNode
 = 
dö°
->
addr_£t
;

1061 ; 
addrNode
 !
NULL
;áddrNodêaddrNode->
√xt
) {

1062 
ßddr_p
 
ßddr
 = (ßddr_pË
addrNode
->
d©a
;

1063 
cs
 = 
	`GET_SET
(
ßddr
->
blkAddr
);

1064 
w‹kli°_p
 
£tNode
 = 
bbi
->
acs_out
[
cs
];

1066 
dïth2
 = 0;

1067 
w‹kli°_p
 
tsSë
 = 
ßddr
->
tsLi°
;

1068 
	`¥ötf
("\t\t%x\t", 
ßddr
->
blkAddr
);

1069 
tsSë
 !
NULL
) {

1070 
dïth2
++;

1071 
ts_p
 
ts
 = (ts_pË
tsSë
->
d©a
;

1072 
	`¥ötf
("Ü%d[%d,%d]", 
ts
->
lo›_id
,Ås->
lw
,Ås->
up
);

1073 
tsSë
 =ÅsSë->
√xt
;

1075 
	`¥ötf
("\n");

1076 i‡(
dïth
 !
dïth2
) {

1077 
	`¥ötf
("BUGG!!!\n");

1078 i‡(
	`isPîsi°ít
(
ßddr
, 
	`bbi_Õ
(
bbi
)))

1079 
	`¥ötf
("PS");

1081 
	`¥ötf
("not PS");

1082 
	`¥ötf
("\n");

1088 
	}
}

1090 
	$m∑_d©aˇche
() {

1091 
dbg
 = 0;

1092 
i
, 
j
;

1093 
öf_node_t
 *
ib
;

1094 
tcfg_node_t
 *
bbi
;

1096 
	`öô_mem
();

1097 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1098 
bbi
 = 
tcfg
[
i
];

1099 
ib
 = &(
öf_¥ocs
[
	`bbi_pid
(
bbi
)].
öf_cfg
[
	`bbi_bid
(bbi)]);

1100 
bbi
->
lo›_id
 = 
ib
->loop_id;

1104 
	`™Æyze_lo›_ps
(
lo›s
[0]);

1105 
i
 = 
num_tcfg_lo›s
 - 1; i > 0; i--)

1106 
	`™Æyze_lo›_ps
(
lo›s
[
i
]);

1110 
i
 = 0; i < 
num_tcfg_lo›s
; i++)

1111 
	`gëOuãrPS
(
lo›s
[
i
]);

1114 
tŸÆD©aExec
 = 0;

1115 
tŸÆPîsMiss
 = 0;

1116 
tŸÆNPîsMiss
 = 0;

1117 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1118 
	`e°NodeAŒMiss
(
tcfg
[
i
]);

1120 
i
 = 1; i < 
num_tcfg_lo›s
; i++)

1121 
	`e°LpMissPS
(
lo›s
[
i
]);

1122 
	`e°LpMissPS
(
lo›s
[0]);

1125 
	`¥ötf
("\nTŸÆ d©®ª‡%d", 
tŸÆD©aExec
);

1126 
	`¥ötf
("\nTŸÆ PS. mis†%d", 
tŸÆPîsMiss
);

1127 
	`¥ötf
("\nTŸÆÇ⁄-PS. mis†%d", 
tŸÆNPîsMiss
);

1132 
	}
}

1134 ** 
	$˛⁄eAddrSë
() {

1135 ** 
addøº
 = 
	`ˇŒoc
(
num_tcfg_nodes
, (
w‹kli°_p
*));

1136 
i
;

1137 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1138 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1139 
w‹kli°_p
* 
¨r
 = 
	`ˇŒoc
(
bbi
->
bb
->
num_d_ö°
, (worklist_p));

1140 
j
;

1141 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1142 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

1143 
d©
 = d© + 
j
;

1144 
¨r
[
j
] = 
d©
->
addr_£t
;

1146 
addøº
[
i
] = 
¨r
;

1148  
addøº
;

1149 
	}
}

1151 
	$öôAddrSë
() {

1152 
i
;

1153 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1154 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1155 
w‹kli°_p
* 
¨r
 = 
	`ˇŒoc
(
bbi
->
bb
->
num_d_ö°
, (worklist_p));

1156 
j
;

1157 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1158 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

1159 
d©
 = d© + 
j
;

1160 
d©
->
addr_£t
 = 
NULL
;

1163 
	}
}

1165 
	$˝yAddr
(** 
addøº
) {

1166 
i
;

1167 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1168 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1169 
j
;

1170 
w‹kli°_p
* 
¨r
 = (w‹kli°_p*Ë
addøº
 + 
i
;

1171 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1172 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

1173 
d©
 = d© + 
j
;

1174 
d©
->
addr_£t
 = (
w‹kli°_p
Ë
¨r
 + 
j
;

1177 
	}
}

1179 
s˝_acs
 
	$gëacs
(
lo›_t
* 
Õ
, 
w‹kli°_p
 
acs_¨r
, w‹kli°_∞
Õnode
,

1180 
tcfg_node_t
* 
bbi
) {

1181 
Õnode
 !
NULL
) {

1182 
lo›_t
* 
t
 = 
Õnode
->
d©a
;

1183 i‡(
t
->
id
 =
Õ
->id)

1184  
acs_¨r
->
d©a
;

1185 
acs_¨r
 =ács_¨r->
√xt
;

1186 
Õnode
 =Ü≤ode->
√xt
;

1188  
NULL
;

1189 
	}
}

1190 
	$s˝ißddrPSöacs
(
ßddr_p
 
addr
, 
s˝_acs
 
acs
, 
lo›_t
* 
Õ
) {

1191 
ˇche£t
 = 
	`GET_SET
(
addr
->
blkAddr
);

1192 
w‹kli°_p
 
£äode
 = 
acs
[
ˇche£t
];

1193 ; 
£äode
 !
NULL
; sënodê£äode->
√xt
) {

1194 
sblk_p
 
sblk
 = (sblk_pË
£äode
->
d©a
;

1195 i‡(
sblk
->
m
->
blkAddr
 =
addr
->blkAddr

1196 && 
	`cmpSAddr
(
sblk
->
m
, 
addr
, 
Õ
->
id
Ë=
EQUAL_TS
) {

1197 i‡(
sblk
->
age
 !
EVICTED


1203 
	}
}

1315 
w‹kli°_p
*** 
	gs˝_addr£t_l1
;

1316 
w‹kli°_p
*** 
	gs˝_addr£t_l2
;

1317 
	$s˝_¥e_addªss_™Æysis
(* 
fName
, 
w‹kli°_p
**** 
öput_addr£t
) {

1318 
w‹kli°_p
*** 
s˝_addr£t
 = 
	`ˇŒoc
(
¥og
.
num_¥ocs
, (worklist_p**));

1319 
¥oc_id
;

1320 
¥oc_id
 = 0;Öroc_id < 
¥og
.
num_¥ocs
;Öroc_id++) {

1321 
¥oc_t
* 
¥oc
 = &(
¥og
.
¥ocs
[
¥oc_id
]);

1322 
s˝_addr£t
[
¥oc_id
] = 
	`ˇŒoc
(
¥oc
->
num_bb
, (
w‹kli°_p
*));

1323 
bb_id
;

1324 
bb_id
 = 0; bb_id < 
¥oc
->
num_bb
; bb_id++) {

1325 
cfg_node_t
* 
bb
 = &(
¥oc
->
cfg
[
bb_id
]);

1326 
s˝_addr£t
[
¥oc_id
][
bb_id
] = 
	`ˇŒoc
(
bb
->
num_d_ö°
,

1327 (
w‹kli°_p
));

1331 
	`˛assifõd_addªss_™Æysis
(
fName
);

1332 
¥oc_id
 = 0;Öroc_id < 
¥og
.
num_¥ocs
;Öroc_id++) {

1333 
¥oc_t
* 
¥oc
 = &(
¥og
.
¥ocs
[
¥oc_id
]);

1334 
bb_id
;

1335 
bb_id
 = 0; bb_id < 
¥oc
->
num_bb
; bb_id++) {

1336 
cfg_node_t
* 
bb
 = &(
¥oc
->
cfg
[
bb_id
]);

1337 
i
;

1338 
i
 = 0; i < 
bb
->
num_d_ö°
; i++) {

1339 
d©_ö°_t
* 
d©
 = 
bb
->
d_ö°li°
;

1340 
d©
 = d© + 
i
;

1341 
ö¢_t
* 
ö¢
 = 
d©
->insn;

1342 
s˝_addr£t
[
¥oc_id
][
bb_id
][
i
] = 
d©
->
addr_£t
;

1347 *
öput_addr£t
 = 
s˝_addr£t
;

1350 
¥oc_id
 = 0;Öroc_id < 
¥og
.
num_¥ocs
;Öroc_id++) {

1351 
¥oc_t
* 
¥oc
 = &(
¥og
.
¥ocs
[
¥oc_id
]);

1352 
bb_id
;

1353 
bb_id
 = 0; bb_id < 
¥oc
->
num_bb
; bb_id++) {

1354 
cfg_node_t
* 
bb
 = &(
¥oc
->
cfg
[
bb_id
]);

1355 i‡(
bb
->
num_d_ö°
 == 0)

1357 
	`¥ötf
("\n********************************************\nbb:%d\n",

1358 
bb
->
id
);

1359 
i
;

1360 
i
 = 0; i < 
bb
->
num_d_ö°
; i++) {

1361 
d©_ö°_t
* 
d©
 = 
bb
->
d_ö°li°
;

1362 
d©
 = d© + 
i
;

1363 
ö¢_t
* 
ö¢
 = 
d©
->insn;

1364 
	`¥ötD©aRef
(
°dout
, 
d©
);

1365 
	`¥ötf
("\t");

1366 i‡(
	`isSt‹eIn°
(
ö¢
->
›
))

1367 
	`¥ötf
("[STORE] ");

1369 
	`¥ötf
("[LOAD] ");

1370 
	`¥ötf
("\n");

1371 
Êag
 = 0;

1372 
w‹kli°_p
 
addr£t
 = 
d©
->
addr_£t
;

1373 ; 
addr£t
 !
NULL
;áddr£àaddr£t->
√xt
) {

1374 
ßddr_p
 
ßddr
 = 
addr£t
->
d©a
;

1375 
	`¥ötf
("0x%x ", 
ßddr
->
blkAddr
);

1377 
	`¥ötf
("\n");

1381 
	}
}

1382 
	$s˝_°‹e_addªss_£t
() {

1386 i‡(
íabÀ_s˝_dˇche
 == 1) {

1387 
i
;

1388 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1389 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1390 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

1392 
cfg_node_t
* 
bb
 = 
bbi
->bb;

1393 
bbi
->
addr£t_l1
 = 
	`ˇŒoc
(bbi->
bb
->
num_d_ö°
, (
w‹kli°_p
));

1394 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

1395 
bbi
->
addr£t_l2
 = 
	`ˇŒoc
(bbi->
bb
->
num_d_ö°
,

1396 (
w‹kli°_p
));

1398 
j
;

1399 
j
 = 0; j < 
bb
->
num_d_ö°
; j++) {

1400 
bbi
->
addr£t_l1
[
j
] = 
s˝_addr£t_l1
[
bb
->
¥oc
->
id
][bb->id][j];

1401 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

1402 
bbi
->
addr£t_l2
[
j
] =

1403 
s˝_addr£t_l2
[
bb
->
¥oc
->
id
][bb->id][
j
];

1408 
	}
}

1409 
	$s˝_add2Li°
(
w‹kli°_p
* 
hód
, w‹kli°_p* 
èû
, * 
d©a
) {

1410 
w‹kli°_p
 
ãmp
 = (w‹kli°_pË
	`mÆloc
((
w‹kli°_s
));

1411 
ãmp
->
√xt
 = 
NULL
;

1412 
ãmp
->
d©a
 = data;

1413 i‡(*
hód
 =
NULL
) {

1414 *
hód
 = 
ãmp
;

1415 *
èû
 = 
ãmp
;

1417 (*
èû
)->
√xt
 = 
ãmp
;

1418 *
èû
 = 
ãmp
;

1420 
	}
}

1421 
w‹kli°_p
 
	$s˝_uƒﬁÀd_ãmp‹Æ_sc›e
(
w‹kli°_p
 
addr£t
, 
lo›_t
*
ö√rLo›
,

1422 * 
uƒﬁÀd_lo›_m≠
, * 
ﬁd_lo›_bound
) {

1423 
w‹kli°_p
 
™s
 = 
NULL
, 
™sTaû
 = NULL;

1424 
w‹kli°_p
 
node
 = 
addr£t
;

1425 ; 
node
 !
NULL
;Çodênode->
√xt
) {

1426 
ßddr_p
 
ßddr
 = 
node
->
d©a
;

1429 
w‹kli°_p
 
tsNode
 = 
ßddr
->
tsLi°
;

1430 
w‹kli°_p
 
√wTsLi°
 = 
NULL
, 
√wTsTaû
 = NULL;

1431 
Êag
 = 1;

1432 ; 
tsNode
 !
NULL
;ÅsNodêtsNode->
√xt
) {

1433 
ts_p
 
tS
 = 
tsNode
->
d©a
;

1434 
lo›_t
*
Õ
 = 
ö√rLo›
;

1435 
lw
 = 0, 
up
 = 0;

1436 
Õ
 !
NULL
) {

1437 i‡(
uƒﬁÀd_lo›_m≠
[
Õ
->
id
] =
tS
->
lo›_id
) {

1438 
up
 = 
ﬁd_lo›_bound
[
tS
->
lo›_id
] - 1;

1439 
lw
 = (
up
 >= 1 ? 1 : up);

1442 
Õ
 =Üp->
∑ª¡
;

1445 i‡(
Õ
 =
NULL
) {

1446 
	`s˝_¥öt_ts
(
ßddr
->
tsLi°
);

1447 
	`¥ötf
("\n");

1448 
	`¥ötf
("cuºíàts:%d",
tS
->
lo›_id
);

1449 
	`¥ötf
("\n");

1450 
k
;

1451 
k
 = 0; k < 
num_tcfg_lo›s
; k++) {

1452 
	`¥ötf
("√wÜo› id %d: %d", 
lo›s
[
k
]->
id
,

1453 
uƒﬁÀd_lo›_m≠
[
lo›s
[
k
]->
id
]);

1454 i‡(
lo›s
[
k
]->
∑ª¡
!=
NULL
) {

1455 
	`¥ötf
("Ö¨ít:%d",
lo›s
[
k
]->
∑ª¡
->
id
);

1457 
	`¥ötf
("\n");

1459 
	`¥ötf
("UNROLLED BUG\n");

1460 
	`exô
(1);

1461 
	}
}

1463 i‡(!(
	gtS
->
	gup
 < 
	glw
 ||ÅS->lw > up)) {

1464 i‡(
	gÕ
 !
NULL
) {

1465 
ts_p
 
√wTs
 = 
mÆloc
((
ts_s
));

1466 
	g√wTs
->
	glo›_id
 = 
Õ
->
id
;

1467 
	g√wTs
->
	glw
 = (
tS
->
lw
 >Üw ?ÅS->lw :Üw);

1468 
	g√wTs
->
	gup
 = (
tS
->
up
 < up ?ÅS->up : up);

1469 i‡(
	gÕ
->
	gid
 != 0) {

1470 
√wTs
->
lw
--;

1471 
	g√wTs
->
	gup
--;

1473 
s˝_add2Li°
(&
√wTsLi°
, &
√wTsTaû
, 
√wTs
);

1476 
	gÊag
 = 0;

1481 i‡(
	gÊag
 == 1) {

1482 
ßddr_p
 
√w_ßddr
 = 
mÆloc
((
ßddr_s
));

1483 
	g√w_ßddr
->
	gblkAddr
 = 
ßddr
->
blkAddr
;

1484 
	g√w_ßddr
->
	gö°Addr
 = 
ßddr
->
ö°Addr
;

1485 
	g√w_ßddr
->
	gÊag
 = 
ßddr
->
Êag
;

1486 
	g√w_ßddr
->
	gpsLo›
 = 
ßddr
->
psLo›
;

1487 
	g√w_ßddr
->
	gtsLi°
 = 
√wTsLi°
;

1488 
s˝_add2Li°
(&
™s
, &
™sTaû
, 
√w_ßddr
);

1491  
	g™s
;

1493 
	$s˝_ªˇlcuœã_ãmp‹Æ_sc›e
(* 
uƒﬁÀd_lo›_m≠
, * 
ﬁd_lo›_bound
) {

1494 
i
;

1496 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1497 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1498 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

1500 
cfg_node_t
* 
bb
 = 
bbi
->bb;

1501 
bbi
->
addr£t_l1
 = 
	`ˇŒoc
(bbi->
bb
->
num_d_ö°
, (
w‹kli°_p
));

1502 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

1503 
bbi
->
addr£t_l2
 = 
	`ˇŒoc
(bbi->
bb
->
num_d_ö°
, (
w‹kli°_p
));

1505 
j
;

1506 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1507 
bbi
->
addr£t_l1
[
j
] = 
	`s˝_uƒﬁÀd_ãmp‹Æ_sc›e
(

1508 
s˝_addr£t_l1
[
bb
->
¥oc
->
id
][bb->id][
j
], 
lo›_m≠
[
bbi
->id],

1509 
uƒﬁÀd_lo›_m≠
, 
ﬁd_lo›_bound
);

1510 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

1511 
bbi
->
addr£t_l2
[
j
] = 
	`s˝_uƒﬁÀd_ãmp‹Æ_sc›e
(

1512 
s˝_addr£t_l2
[
bb
->
¥oc
->
id
][bb->id][
j
],

1513 
lo›_m≠
[
bbi
->
id
], 
uƒﬁÀd_lo›_m≠
, 
ﬁd_lo›_bound
);

1517 
	}
}

1518 
lo›_t
* 
s˝_mo°OuãrLo›
(
w‹kli°_p
 
Õ¨r
);

1519 
	$s˝_dump_addªss
() {

1520 
i
;

1521 
	`¥ötf
("DUMPáddress\n");

1522 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1523 i‡(
íabÀ_s˝_dˇche
 == 0)

1525 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1526 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

1528 
	`¥ötf
("Basi¯block %d\n", 
bbi
->
id
);

1529 
j
;

1530 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

1531 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

1532 
d©
 = d© + 
j
;

1533 
ö¢_t
* 
ö¢
 = 
d©
->insn;

1534 
	`¥ötf
("\n\tö°∏%†", 
ö¢
->
addr
);

1535 i‡(
	`isSt‹eIn°
(
ö¢
->
›
))

1536 
	`¥ötf
("[STORE]");

1538 
	`¥ötf
("[LOAD]");

1539 
	`¥ötf
("\n");

1540 
w‹kli°_p
 
node
;

1541 
node
 = 
bbi
->
addr£t_l1
[
j
];Çodê!
NULL
;Çodênode->
√xt
) {

1542 
ßddr_p
 
ßddr
 = 
node
->
d©a
;

1543 
ˇche£t
 = 
	`GET_SET
(
ßddr
->
blkAddr
);

1544 
	`¥ötf
("\t\t0x%x (%d)", 
ßddr
->
blkAddr
, 
ˇche£t
);

1545 
w‹kli°_p
 
t¢ode
 = 
ßddr
->
tsLi°
;

1546 
t¢ode
 !
NULL
) {

1547 
ts_p
 
tS
 = 
t¢ode
->
d©a
;

1548 
	`¥ötf
("Ü%d[%d,%d]", 
tS
->
lo›_id
,ÅS->
lw
,ÅS->
up
);

1549 
t¢ode
 =Å¢ode->
√xt
;

1552 
	`¥ötf
(" \tPS in:");

1553 
w‹kli°_p
 
Õ™s
 = 
ßddr
->
psLo›
;

1554 i‡(
Õ™s
 !
NULL
) {

1555 
w‹kli°_p
 
ãmp
 = 
Õ™s
;

1556 
ãmp
 !
NULL
) {

1557 
lo›_t
* 
ép
 = 
ãmp
->
d©a
;

1558 
	`¥ötf
("Ü%d", 
ép
->
id
);

1559 
ãmp
 =Åemp->
√xt
;

1561 
lo›_t
* 
ép
 = 
	`s˝_mo°OuãrLo›
(
Õ™s
);

1562 
	`¥ötf
(" ouãrLp:%d ", 
ép
->
id
);

1565 
	`¥ötf
("\n");

1567 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

1568 
	`¥ötf
("\tL2 cache\n");

1569 
node
 = 
bbi
->
addr£t_l2
[
j
];Çodê!
NULL
;

1570 
node
 =Çode->
√xt
) {

1571 
ßddr_p
 
ßddr
 = 
node
->
d©a
;

1572 
ˇche£t
 = 
	`GET_SET
(
ßddr
->
blkAddr
);

1573 
	`¥ötf
("\t\t0x%x (%d)", 
ßddr
->
blkAddr
, 
ˇche£t
);

1574 
w‹kli°_p
 
t¢ode
 = 
ßddr
->
tsLi°
;

1575 
t¢ode
 !
NULL
) {

1576 
ts_p
 
tS
 = 
t¢ode
->
d©a
;

1577 
	`¥ötf
("Ü%d[%d,%d]", 
tS
->
lo›_id
,ÅS->
lw
,ÅS->
up
);

1578 
t¢ode
 =Å¢ode->
√xt
;

1581 
	`¥ötf
(" \tPS in:");

1582 
w‹kli°_p
 
Õ™s
 = 
ßddr
->
psLo›
;

1583 i‡(
Õ™s
 !
NULL
) {

1584 
w‹kli°_p
 
ãmp
 = 
Õ™s
;

1585 
ãmp
 !
NULL
) {

1586 
lo›_t
* 
ép
 = 
ãmp
->
d©a
;

1587 
	`¥ötf
("Ü%d", 
ép
->
id
);

1588 
ãmp
 =Åemp->
√xt
;

1590 
lo›_t
* 
ép
 = 
	`s˝_mo°OuãrLo›
(
Õ™s
);

1591 
	`¥ötf
(" ouãrLp:%d ", 
ép
->
id
);

1594 
	`¥ötf
("\n");

1599 
	}
}

1600 
	$s˝_dump_ö°ru˘i⁄
() {

1601 
i
;

1602 
íabÀ_iˇche
;

1603 i‡(
íabÀ_iˇche
) {

1604 
	`¥ötf
("DUMP instructionáddress\n");

1605 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1606 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1607 
cfg_node_t
* 
bb
 = 
bbi
->bb;

1608 
j
;

1609 
	`¥ötf
("basi¯block %d\n", 
bbi
->
id
);

1610 
j
 = 0; j < 
bb
->
num_ö°
; j++) {

1611 
de_ö°_t
* 
ö°
 = &(
bb
->
code
[
j
]);

1612 
fú°_w‹d
 = 
	`GET_MEM
(
ö°
->
addr
);

1613 
£c⁄d_w‹d
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1616 
	`¥ötf
("\tö° 0x%x:", 
ö°
->
addr
);

1617 i‡(
ö°_chmc_l1
[
bbi
->
id
][
j
] =
ALL_HIT
)

1618 
	`¥ötf
("\tL1:ALL_HIT");

1619 i‡(
ö°_chmc_l1
[
bbi
->
id
][
j
] =
ALL_MISS
)

1620 
	`¥ötf
("\tL1:ALL_MISS");

1622 
	`¥ötf
("\tL1:NOT_CLASSIFIED");

1623 
íabÀ_û2ˇche
;

1624 i‡(
íabÀ_û2ˇche
) {

1625 i‡(
ö°_chmc_l2
[
bbi
->
id
][
j
] =
ALL_HIT
)

1626 
	`¥ötf
("\tL2:ALL_HIT");

1627 i‡(
ö°_chmc_l2
[
bbi
->
id
][
j
] =
ALL_MISS
)

1628 
	`¥ötf
("\tL2:ALL_MISS");

1629 i‡(
ö°_chmc_l2
[
bbi
->
id
][
j
] =
ALL_X
) {

1630 
	`¥ötf
("\tL2:ALL_X");

1632 
	`¥ötf
("\tL2:NOT_CLASSIFIED");

1635 
íabÀ_ul2ˇche
;

1636 i‡(
íabÀ_ul2ˇche
) {

1637 i‡(
ö°_p¢c_ul2
[
bbi
->
id
][
j
] =
PS
) {

1638 
	`¥ötf
("\tL2:PSÜp:%d",

1639 
ö°_ps_lo›_ul2
[
bbi
->
id
][
j
]->id);

1640 } i‡(
ö°_p¢c_ul2
[
bbi
->
id
][
j
] =
NOT_CLASSIFIED
)

1641 
	`¥ötf
("\tL2:NOT_CLASSIFIED");

1642 i‡(
ö°_p¢c_ul2
[
bbi
->
id
][
j
] =
ALL_X
)

1643 
	`¥ötf
("\tL2:ALL_X");

1645 
	`¥ötf
("\tL2:");

1647 
	`¥ötf
("\n");

1651 i‡(
íabÀ_s˝_dˇche
) {

1652 
	`¥ötf
("Dump LOAD/STORE instruction\n");

1653 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1654 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

1655 
cfg_node_t
* 
bb
 = 
bbi
->bb;

1656 
	`¥ötf
("basi¯block %d\n", 
bbi
->
id
);

1657 
j
;

1658 
j
 = 0; j < 
bb
->
num_d_ö°
; j++) {

1659 
d©_ö°_t
* 
d©
 = 
bb
->
d_ö°li°
;

1660 
d©
 = d© + 
j
;

1661 
ö¢_t
* 
ö¢
 = 
d©
->insn;

1662 
	`¥ötf
("\t0x%†", 
ö¢
->
addr
);

1663 i‡(
	`isSt‹eIn°
(
ö¢
->
›
)) {

1664 
	`¥ötf
("[STORE]");

1666 
	`¥ötf
("[LOAD]");

1667 
lo›_t
* 
ps_Õ1
 = 
	`s˝_ö√r_ps_lo›
(
bbi
->
addr£t_l1
[
j
]);

1668 
	`¥ötf
("\tL1:");

1669 i‡(
ps_Õ1
 =
NULL
) {

1670 
	`¥ötf
("n");

1672 
	`¥ötf
("%d", 
ps_Õ1
->
id
);

1674 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

1675 
lo›_t
* 
ps_Õ2
 = 
	`s˝_ö√r_ps_lo›
(
bbi
->
addr£t_l2
[
j
]);

1676 
	`¥ötf
("\tL2:");

1677 i‡(
ps_Õ2
 =
NULL
) {

1678 
	`¥ötf
("n");

1680 
	`¥ötf
("%d", 
ps_Õ2
->
id
);

1684 
	`¥ötf
("\n");

1688 
	}
}

1707 
	$s˝_íqueue
(* 
d©a
, 
w‹kli°_p
* 
hód
, w‹kli°_p* 
èû
) {

1708 
w‹kli°_p
 
node
 = 
	`mÆloc
((
w‹kli°_s
));

1709 
node
->
d©a
 = data;

1710 
node
->
√xt
 = 
NULL
;

1711 i‡(*
hód
 =
NULL
) {

1712 *
hód
 = 
node
;

1713 *
èû
 = *
hód
;

1715 
w‹kli°_p
 
ãmp
 = *
èû
;

1716 
ãmp
->
√xt
 = 
node
;

1717 *
èû
 = 
node
;

1719 
	}
}

1721 * 
	$s˝_dequeue
(
w‹kli°_p
* 
hód
, w‹kli°_p* 
èû
) {

1722 
w‹kli°_p
 
node
 = *
hód
;

1723 *
hód
 = 
node
->
√xt
;

1724 i‡(*
hód
 =
NULL


1726 *
èû
 = *
hód
;

1727 * 
™s
 = 
node
->
d©a
;

1728 
	`‰ì
(
node
);

1729  
™s
;

1730 
	}
}

1732 
	$s˝_em±y_queue
(
w‹kli°_p
 
hód
, w‹kli°_∞
èû
) {

1733 i‡(
hód
 =
NULL


1738 
	}
}

1740 
s˝_acs
 
	$s˝_¸óãEm±yACS
() {

1741 
s˝_acs
 
acs
 = 
NULL
;

1742 
acs
 = 
	`ˇŒoc
(
MAX_CACHE_SET
, (
w‹kli°_p
));

1743 
i
 = 0;

1744 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

1745 
acs
[
i
] = 
NULL
;

1747  
acs
;

1748 
	}
}

1749 
ts_p
 
	$s˝_ts
(
w‹kli°_p
 
t¶°
, 
lo›_t
*
Õ
) {

1750 ; 
t¶°
 !
NULL
;Å¶° =Å¶°->
√xt
) {

1751 
ts_p
 
ts
 = 
t¶°
->
d©a
;

1752 i‡(
ts
->
lo›_id
 =
Õ
->
id
) {

1753  
ts
;

1756  
NULL
;

1757 
	}
}

1758 
	$s˝_ovîœp
(
ßddr_p
 
ma
, saddr_∞
mb
, 
lo›_t
*
Õ
) {

1759 i‡(
ma
->
blkAddr
 =
mb
->blkAddr)

1761 
Õ
 !
NULL
) {

1762 
ts_p
 
tß
 = 
	`s˝_ts
(
ma
->
tsLi°
, 
Õ
);

1763 
ts_p
 
tsb
 = 
	`s˝_ts
(
mb
->
tsLi°
, 
Õ
);

1764 i‡(
tß
 !
NULL
 && 
tsb
 != NULL) {

1765 i‡(
tß
->
up
 < 
tsb
->
lw
 ||Åsa->lw >Åsb->up) {

1768 } i‡(
tß
 =
NULL
 && 
tsb
 == NULL) {

1780 
Õ
 =Üp->
∑ª¡
;

1783 
	}
}

1787 
sblk_p
 
	$s˝_˝ySBlk
(
sblk_p
 
blk
) {

1788 
sblk_p
 
™s
 = 
	`mÆloc
((
sblk_s
));

1789 
™s
->
s˝_age
 = 
blk
->scp_age;

1790 
™s
->
m
 = 
blk
->m;

1791 
™s
->
ö°_block
 = 
blk
->inst_block;

1792 
™s
->
ys_£t
 = 
NULL
;

1793 
w‹kli°_p
 
node
 = 
blk
->
ys_£t
;

1794 ; 
node
 !
NULL
;Çodênode->
√xt
) {

1795 
	`addToW‹kLi°
(&
™s
->
ys_£t
, 
node
->
d©a
);

1797 
™s
->
ö°_ys_£t
 = 
NULL
;

1798 
node
 = 
blk
->
ö°_ys_£t
;

1799 ; 
node
 !
NULL
;Çodênode->
√xt
) {

1800 
	`addToW‹kLi°
(&
™s
->
ö°_ys_£t
, 
node
->
d©a
);

1802  
™s
;

1803 
	}
}

1807 
	$s˝_˝yACS
(
s˝_acs
 
d°
, s˝_ac†
§c
) {

1808 i‡(
d°
 =
NULL
) {

1809 
	`¥ötf
("scp_cpyACS:NULL\n");

1811 
ˇche£t
;

1812 
ˇche£t
 = 0; cache£à< 
MAX_CACHE_SET
; cacheset++) {

1813 
w‹kli°_p
 
§c_cs
 = 
§c
[
ˇche£t
];

1814 
d°
[
ˇche£t
] = 
NULL
;

1815 ; 
§c_cs
 !
NULL
; src_c†§c_cs->
√xt
) {

1816 
sblk_p
 
blk
 = 
§c_cs
->
d©a
;

1817 
	`addToW‹kLi°
(&
d°
[
ˇche£t
], 
	`s˝_˝ySBlk
(
blk
));

1820 
	}
}

1822 
sblk_p
 
	$s˝_¸óãSBlk
(
ßddr_p
 
addr
) {

1823 
sblk_p
 
™s
 = 
	`mÆloc
((
sblk_s
));

1824 
™s
->
s˝_age
 = 1;

1825 
™s
->
ys_£t
 = 
NULL
;

1826 
™s
->
ö°_ys_£t
 = 
NULL
;

1827 
™s
->
m
 = 
addr
;

1828 
™s
->
ö°_block
 = 
NULL
;

1829  
™s
;

1830 
	}
}

1831 
sblk_p
 
	$s˝_¸óãSBlk_ö°
(
block
) {

1832 
sblk_p
 
™s
 = 
	`mÆloc
((
sblk_s
));

1833 
™s
->
s˝_age
 = 1;

1834 
™s
->
ys_£t
 = 
NULL
;

1835 
™s
->
ö°_ys_£t
 = 
NULL
;

1836 
™s
->
m
 = 
NULL
;

1837 
™s
->
ö°_block
 = 
	`mÆloc
((
mem_blk_£t_t
));

1838 
™s
->
ö°_block
->
block
 = block;

1839 
™s
->
ö°_block
->
√xt
 = 
NULL
;

1840  
™s
;

1841 
	}
}

1845 
	$s˝_Àngth
(
w‹kli°_p
 
wk
) {

1846 
™s
 = 0;

1847 ; 
wk
 !
NULL
; wk = wk->
√xt
) {

1848 
™s
++;

1850  
™s
;

1851 
	}
}

1860 
	$s˝_cmp_ßddr
(
ßddr_p
 
d°
, saddr_∞
§c
, 
lo›_t
* 
Õ
) {

1861 i‡(
d°
->
blkAddr
 !
§c
->blkAddr)

1865 
w‹kli°_p
 
d°node
 = 
d°
->
tsLi°
;

1866 ; 
d°node
 !
NULL
; d°nodêd°node->
√xt
) {

1867 
ts_p
 
ts
 = 
d°node
->
d©a
;

1868 i‡(
Õ
 !
NULL
 && 
	`s˝_cmpLpOrdî
(
ts
->
lo›_id
,Üp->
id
) < 0)

1870 
w‹kli°_p
 
§˙ode
 = 
§c
->
tsLi°
;

1871 
found
 = 0;

1872 ; 
§˙ode
 !
NULL
; sr˙odê§˙ode->
√xt
) {

1873 
ts_p
 
ts§c
 = 
§˙ode
->
d©a
;

1874 i‡(
ts
->
lo›_id
 =
ts§c
->lo›_id &&Ås->
lw
 ==Åssrc->lw

1875 && 
ts
->
up
 =
ts§c
->up) {

1876 
found
 = 1;

1880 i‡(
found
 == 0)

1887 i‡(
Õ
 !
NULL
) {

1888 
Õ
 !
NULL
) {

1889 
ts_p
 
ts_d°
 = 
	`s˝_ts
(
d°
->
tsLi°
, 
Õ
);

1890 
ts_p
 
ts_§c
 = 
	`s˝_ts
(
§c
->
tsLi°
, 
Õ
);

1891 i‡(
ts_d°
 !
NULL
 && 
ts_§c
 != NULL) {

1892 i‡(
ts_d°
->
lw
 =
ts_§c
->lw &&Ås_d°->
up
 ==Ås_src->up) {

1898 } i‡(
ts_d°
 =
NULL
 && 
ts_§c
 == NULL) {

1908 
Õ
 =Üp->
∑ª¡
;

1913 i‡(
	`s˝_Àngth
(
d°
->
tsLi°
Ë!s˝_Àngth(
§c
->tsList))

1915 
w‹kli°_p
 
d°node
 = 
d°
->
tsLi°
;

1916 ; 
d°node
 !
NULL
; d°nodêd°node->
√xt
) {

1917 
ts_p
 
ts
 = 
d°node
->
d©a
;

1918 
w‹kli°_p
 
§˙ode
 = 
§c
->
tsLi°
;

1919 
found
 = 0;

1920 ; 
§˙ode
 !
NULL
; sr˙odê§˙ode->
√xt
) {

1921 
ts_p
 
ts§c
 = 
§˙ode
->
d©a
;

1922 i‡(
ts
->
lo›_id
 =
ts§c
->lo›_id &&Ås->
lw
 ==Åssrc->lw

1923 && 
ts
->
up
 =
ts§c
->up) {

1924 
found
 = 1;

1928 i‡(
found
 == 0)

1934 
	}
}

1935 
sblk_p
 
	$s˝_joö_£¨ch
(
ßddr_p
 
mblk
, 
w‹kli°_p
 
ˇche£t
, 
lo›_t
*
Õ
) {

1936 ; 
ˇche£t
 !
NULL
; cache£àˇche£t->
√xt
) {

1937 
sblk_p
 
ablk
 = 
ˇche£t
->
d©a
;

1939 i‡(
ablk
->
m
 =
NULL


1942 i‡(
	`s˝_cmp_ßddr
(
ablk
->
m
, 
mblk
, 
Õ
) == 1) {

1943  
ablk
;

1946  
NULL
;

1947 
	}
}

1949 
sblk_p
 
	$s˝_joö_£¨ch_ö°
(
mem_blk_£t_t
* 
iblock
, 
w‹kli°_p
 
ˇche£t
) {

1950 ; 
ˇche£t
 !
NULL
; cache£àˇche£t->
√xt
) {

1951 
sblk_p
 
ablk
 = 
ˇche£t
->
d©a
;

1952 i‡(
ablk
->
ö°_block
 =
NULL


1955 i‡(
ablk
->
ö°_block
->
block
 =
iblock
->block)

1956  
ablk
;

1958  
NULL
;

1959 
	}
}

1960 
	$s˝_add2YS
(
w‹kli°_p
* 
ys
, 
ßddr_p
 
addªss
) {

1961 
w‹kli°_p
 
node
 = *
ys
;

1962 
found
 = 0;

1963 
node
 !
NULL
) {

1964 
ßddr_p
 
addr
 = 
node
->
d©a
;

1965 i‡(
	`s˝_cmp_ßddr
(
addr
, 
addªss
, 
NULL
) == 1) {

1966 
found
 = 1;

1969 
node
 =Çode->
√xt
;

1971 i‡(
found
 == 0) {

1972 
	`addToW‹kLi°
(
ys
, 
addªss
);

1974 
	}
}

1976 
	$s˝_add2ö°YS
(
w‹kli°_p
* 
ö°_ys
, 
iblock
) {

1978 
w‹kli°_p
 
node
 = *
ö°_ys
;

1979 
found
 = 0;

1980 
node
 !
NULL
) {

1981 
mem_blk_£t_t
* 
nblock
 = 
node
->
d©a
;

1982 i‡(
nblock
->
block
 =
iblock
) {

1983 
found
 = 1;

1986 
node
 =Çode->
√xt
;

1988 i‡(
found
 == 0) {

1989 
mem_blk_£t_t
* 
ãmp
 = 
	`mÆloc
((mem_blk_set_t));

1990 
ãmp
->
block
 = 
iblock
;

1991 
ãmp
->
√xt
 = 
NULL
;

1992 
	`addToW‹kLi°
(
ö°_ys
, 
ãmp
);

1994 
	}
}

1996 
	$s˝_uni⁄YS
(
sblk_p
 
d°
, sblk_∞
§c
) {

1997 i‡(
d°
->
s˝_age
 >
EVICTED
) {

2000 
ch™ged
 = 0;

2001 
w‹kli°_p
 
node
 = 
§c
->
ys_£t
;

2002 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2003 
ßddr_p
 
ßddr
 = 
node
->
d©a
;

2004 
found
 = 0;

2006 
w‹kli°_p
 
dnode
 = 
d°
->
ys_£t
;

2007 ; 
dnode
 !
NULL
; dnodêdnode->
√xt
) {

2008 
ßddr_p
 
daddr
 = 
dnode
->
d©a
;

2009 i‡(
	`s˝_cmp_ßddr
(
daddr
, 
ßddr
, 
NULL
) == 1) {

2010 
found
 = 1;

2015 i‡(
found
 == 0) {

2016 
	`addToW‹kLi°
(&
d°
->
ys_£t
, 
ßddr
);

2019 
	}
}

2020 
	$s˝_uni⁄_ö°YS
(
sblk_p
 
d°
, sblk_∞
§c
) {

2021 i‡(
d°
->
s˝_age
 >
EVICTED
) {

2024 
ch™ged
 = 0;

2025 
w‹kli°_p
 
node
 = 
§c
->
ö°_ys_£t
;

2026 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2027 
mem_blk_£t_t
* 
s_iblock
 = 
node
->
d©a
;

2028 
found
 = 0;

2030 
w‹kli°_p
 
dnode
 = 
d°
->
ö°_ys_£t
;

2031 ; 
dnode
 !
NULL
; dnodêdnode->
√xt
) {

2032 
mem_blk_£t_t
* 
d_iblock
 = 
dnode
->
d©a
;

2033 i‡(
s_iblock
->
block
 =
d_iblock
->block) {

2034 
found
 = 1;

2038 i‡(
found
 == 0) {

2039 
	`addToW‹kLi°
(&
d°
->
ö°_ys_£t
, 
s_iblock
);

2042 
	}
}

2043 
	$s˝_¥öt_ts
(
w‹kli°_p
 
t¶i°
) {

2044 ; 
t¶i°
 !
NULL
;Å¶i° =Å¶i°->
√xt
) {

2045 
ts_p
 
ts
 = 
t¶i°
->
d©a
;

2046 
	`¥ötf
("Ü%d[%d,%d]", 
ts
->
lo›_id
,Ås->
lw
,Ås->
up
);

2049 
	}
}

2050 
	$s˝_addªss_£t_ˇrdöÆôy
(
w‹kli°_p
 
addr_£t
) {

2051 
w‹kli°_p
 
p
;

2052 
™s
 = 0;

2053 
p
 = 
addr_£t
;Ö !
NULL
;Ö =Ö->
√xt
) {

2054 
ßddr_p
 
addr_mem
 = 
p
->
d©a
;

2055 
w‹kli°_p
 
node
;

2056 
Êag
 = 0;

2057 
node
 = 
p
->
√xt
;Çodê!
NULL
;Çode =Çode->next) {

2058 
ßddr_p
 
addr_node
 = 
node
->
d©a
;

2059 i‡(
addr_node
->
blkAddr
 =
addr_mem
->blkAddr) {

2060 
Êag
 = 1;

2064 i‡(
Êag
 == 0) {

2065 
™s
++;

2068  
™s
;

2069 
	}
}

2070 
	$s˝_ö°r_£t_ˇrdöÆôy
(
w‹kli°_p
 
ö°r_£t
) {

2071  
	`s˝_Àngth
(
ö°r_£t
);

2072 
	}
}

2073 
	$s˝_upd©e_Sblk_age
(
sblk_p
 
sblk
) {

2075 
sblk
->
s˝_age
 = 
	`s˝_Àngth
(sblk->
ys_£t
Ë+ s˝_Àngth(sblk->
ö°_ys_£t
)

2078 
sblk
->
s˝_age
 = 
	`s˝_addªss_£t_ˇrdöÆôy
(sblk->
ys_£t
)

2079 + 
	`s˝_ö°r_£t_ˇrdöÆôy
(
sblk
->
ö°_ys_£t
) + 1;

2080 i‡(
sblk
->
s˝_age
 >
EVICTED
) {

2081 
sblk
->
s˝_age
 = 
EVICTED
;

2083 
	}
}

2085 
	$s˝_disˇrdW‹kLi°
(
w‹kli°_p
* 
wl
) {

2086 
w‹kli°_p
 
p
 = *
wl
;

2087 
p
 !
NULL
) {

2088 
w‹kli°_p
 
t
 = 
p
->
√xt
;

2089 
	`‰ì
(
p
);

2090 
p
 = 
t
;

2092 *
wl
 = 
NULL
;

2093 
	}
}

2095 
	$s˝_disˇrdACS
(
s˝_acs
 
acs
) {

2096 
i
;

2097 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

2098 
w‹kli°_p
 
node
 = 
acs
[
i
];

2099 
	`s˝_disˇrdW‹kLi°
(&
acs
[
i
]);

2101 
	}
}

2102 
	$s˝_tŸÆly_disˇrdACS
(
s˝_acs
* 
p_acs
) {

2103 
s˝_acs
 
acs
 = *
p_acs
;

2104 
i
;

2105 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

2106 
w‹kli°_p
 
node
 = 
acs
[
i
];

2107 
node
 !
NULL
) {

2108 
w‹kli°_p
 
ãmp
 = 
node
->
√xt
;

2109 
	`‰ì
(
node
->
d©a
);

2110 
	`‰ì
(
node
);

2111 
node
 = 
ãmp
;

2114 *
p_acs
 = 
NULL
;

2115 
	}
}

2116 
	$s˝_joö
(
w‹kli°_p
* 
acs_d°
, w‹kli°_p* 
acs_§c
, 
lo›_t
*
Õ
) {

2117 
ˇche£t
;

2118 
ˇche£t
 = 0; cache£à< 
MAX_CACHE_SET
; cacheset++) {

2119 
w‹kli°_p
 
d°_cs
 = 
acs_d°
[
ˇche£t
];

2120 
w‹kli°_p
 
§c_cs
 = 
acs_§c
[
ˇche£t
];

2121 
w‹kli°_p
 
§˙ode
;

2122 
§˙ode
 = 
§c_cs
; sr˙odê!
NULL
; sr˙odê§˙ode->
√xt
) {

2123 
sblk_p
 
§c_blk
 = 
§˙ode
->
d©a
;

2124 
sblk_p
 
d°_blk
 = 
	`s˝_joö_£¨ch
(
§c_blk
->
m
, 
d°_cs
, 
Õ
);

2125 i‡(
d°_blk
 =
NULL
) {

2126 
	`addToW‹kLi°
(&
acs_d°
[
ˇche£t
], 
	`s˝_˝ySBlk
(
§c_blk
));

2128 
	`s˝_uni⁄YS
(
d°_blk
, 
§c_blk
);

2129 
	`s˝_upd©e_Sblk_age
(
d°_blk
);

2133 
	}
}

2134 
	$uni_joö
(
w‹kli°_p
* 
acs_d°
, w‹kli°_p* 
acs_§c
, 
lo›_t
*
Õ
) {

2135 
ˇche£t
;

2136 
ˇche£t
 = 0; cache£à< 
MAX_CACHE_SET
; cacheset++) {

2137 
w‹kli°_p
 
d°_cs
 = 
acs_d°
[
ˇche£t
];

2138 
w‹kli°_p
 
§c_cs
 = 
acs_§c
[
ˇche£t
];

2139 
w‹kli°_p
 
§˙ode
;

2140 
§˙ode
 = 
§c_cs
; sr˙odê!
NULL
; sr˙odê§˙ode->
√xt
) {

2141 
sblk_p
 
§c_blk
 = 
§˙ode
->
d©a
;

2142 
sblk_p
 
d°_blk
 = 
NULL
;

2143 i‡(
§c_blk
->
m
 !
NULL
) {

2145 
d°_blk
 = 
	`s˝_joö_£¨ch
(
§c_blk
->
m
, 
d°_cs
, 
Õ
);

2146 } i‡(
§c_blk
->
ö°_block
 !
NULL
) {

2148 
d°_blk
 = 
	`s˝_joö_£¨ch_ö°
(
§c_blk
->
ö°_block
, 
d°_cs
);

2150 
	`¥ötf
("BUG IN SCOPED_BLOCK\n");

2151 
	`exô
(1);

2153 i‡(
d°_blk
 =
NULL
) {

2154 
	`addToW‹kLi°
(&
acs_d°
[
ˇche£t
], 
	`s˝_˝ySBlk
(
§c_blk
));

2156 
	`s˝_uni⁄YS
(
d°_blk
, 
§c_blk
);

2157 
	`s˝_uni⁄_ö°YS
(
d°_blk
, 
§c_blk
);

2158 
	`s˝_upd©e_Sblk_age
(
d°_blk
);

2162 
	}
}

2163 
	$uni_upd©e_ö°
(
s˝_acs
 
acs
, 
ö°_block
) {

2166 
ˇche£t
 = 
	`GET_SET
(
ö°_block
);

2167 
w‹kli°_p
 
node
;

2168 
node
 = 
acs
[
ˇche£t
];Çodê!
NULL
;Çodênode->
√xt
) {

2169 
sblk_p
 
sblk
 = 
node
->
d©a
;

2170 
sblk
->
Êag
 = 
SBLK_FREE
;

2172 
mem_blk_£t_t
 
iblk
;

2173 
iblk
.
block
 = 
ö°_block
;

2174 
iblk
.
√xt
 = 
NULL
;

2176 
sblk_p
 
ö°_sblk
 = 
	`s˝_joö_£¨ch_ö°
(&
iblk
, 
acs
[
ˇche£t
]);

2177 i‡(
ö°_sblk
 =
NULL
) {

2179 
ö°_sblk
 = 
	`s˝_¸óãSBlk_ö°
(
iblk
.
block
);

2180 
	`addToW‹kLi°
(&
acs
[
ˇche£t
], 
ö°_sblk
);

2181 
ö°_sblk
->
Êag
 = 
SBLK_DONE
;

2185 
	`s˝_disˇrdW‹kLi°
(&(
ö°_sblk
->
ys_£t
));

2186 
	`s˝_disˇrdW‹kLi°
(&(
ö°_sblk
->
ö°_ys_£t
));

2188 
ö°_sblk
->
ys_£t
 = 
NULL
;

2189 
ö°_sblk
->
ö°_ys_£t
 = 
NULL
;

2190 
ö°_sblk
->
s˝_age
 = 1;

2191 
ö°_sblk
->
Êag
 = 
SBLK_DONE
;

2193 
node
 = 
acs
[
ˇche£t
];Çodê!
NULL
;Çodênode->
√xt
) {

2194 
sblk_p
 
sblk
 = 
node
->
d©a
;

2195 i‡(
sblk
->
Êag
 =
SBLK_DONE
) {

2198 
	`s˝_add2ö°YS
(&
sblk
->
ö°_ys_£t
, 
iblk
.
block
);

2199 
	`s˝_upd©e_Sblk_age
(
sblk
);

2200 
sblk
->
Êag
 = 
SBLK_DONE
;

2203 
	}
}

2205 
	$uni_upd©e_d©a
(
s˝_acs
 
acs
, 
w‹kli°_p
 
addr£t
, 
lo›_t
*
Õ
) {

2206 
s˝_acs
 
ãmp_acs
 = 
	`s˝_¸óãEm±yACS
();

2207 
	`s˝_˝yACS
(
ãmp_acs
, 
acs
);

2208 
	`s˝_d©a_upd©e
(
acs
, 
addr£t
, 
Õ
);

2209 
	`uni_joö
(
acs
, 
ãmp_acs
, 
Õ
);

2210 
	`s˝_disˇrdACS
(
ãmp_acs
);

2212 
	`s˝_d©a_upd©e
(
acs
, 
addr_ö
, 
Õ
);

2214 
	}
}

2215 
	$uni_ö°_fûãr_fun˘i⁄
(
bbi_id
, 
s˝_acs
 
m∑_acs_out
, 
de_ö°_t
* 
ö°
,

2216 
ö°_id
, 
lo›_t
*
Õ
) {

2220 i‡(
ö°_chmc_l1
[
bbi_id
][
ö°_id
] =
ALL_MISS
) {

2222 
	`uni_upd©e_ö°
(
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
));

2223 
	`uni_upd©e_ö°
(
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
+
SIZE_OF_WORD
));

2224 } i‡(
ö°_chmc_l1
[
bbi_id
][
ö°_id
] =
NOT_CLASSIFIED


2225 || 
ö°_chmc_l1
[
bbi_id
][
ö°_id
] =
PS
) {

2228 
s˝_acs
 
ãmp_acs
 = 
	`s˝_¸óãEm±yACS
();

2229 
	`s˝_˝yACS
(
ãmp_acs
, 
m∑_acs_out
);

2230 
	`uni_upd©e_ö°
(
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
));

2231 
	`uni_joö
(
m∑_acs_out
, 
ãmp_acs
, 
Õ
);

2232 
	`s˝_disˇrdACS
(
ãmp_acs
);

2234 
ãmp_acs
 = 
	`s˝_¸óãEm±yACS
();

2235 
	`s˝_˝yACS
(
ãmp_acs
, 
m∑_acs_out
);

2236 
	`uni_upd©e_ö°
(
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
+
SIZE_OF_WORD
));

2237 
	`uni_joö
(
m∑_acs_out
, 
ãmp_acs
, 
Õ
);

2238 
	`s˝_disˇrdACS
(
ãmp_acs
);

2242 
	}
}

2243 
	$uni_å™sf‹m_ul2acs
(
tcfg_node_t
* 
bbi
, 
lo›_t
*
Õ
) {

2245 
ö°_id
;

2246 
ö°_id
 = 0; in°_id < 
bbi
->
bb
->
num_ö°
; inst_id++) {

2247 
de_ö°_t
* 
ö°
 = &(
bbi
->
bb
->
code
[
ö°_id
]);

2250 
	`uni_ö°_fûãr_fun˘i⁄
(
bbi
->
id
, bbi->
m∑_acs_out
, 
ö°
, 
ö°_id
, 
Õ
);

2254 i‡(
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
ALL_MISS
) {

2256 
	`uni_upd©e_ö°
(
bbi
->
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
));

2257 
	`uni_upd©e_ö°
(
bbi
->
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
+
SIZE_OF_WORD
));

2258 } i‡(
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
NOT_CLASSIFIED


2259 || 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
PS
) {

2262 
s˝_acs
 
ãmp_acs
 = 
	`s˝_¸óãEm±yACS
();

2263 
	`s˝_˝yACS
(
ãmp_acs
, 
bbi
->
m∑_acs_out
);

2264 
	`uni_upd©e_ö°
(
bbi
->
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
));

2265 
	`uni_joö
(
bbi
->
m∑_acs_out
, 
ãmp_acs
, 
Õ
);

2266 
	`s˝_disˇrdACS
(
ãmp_acs
);

2268 
ãmp_acs
 = 
	`s˝_¸óãEm±yACS
();

2269 
	`s˝_˝yACS
(
ãmp_acs
, 
bbi
->
m∑_acs_out
);

2270 
	`uni_upd©e_ö°
(
bbi
->
m∑_acs_out
, 
	`GET_MEM
(
ö°
->
addr
+
SIZE_OF_WORD
));

2271 
	`uni_joö
(
bbi
->
m∑_acs_out
, 
ãmp_acs
, 
Õ
);

2272 
	`s˝_disˇrdACS
(
ãmp_acs
);

2279 
iTy≥
 = 
	`ö°_ty≥
(
ö°
);

2281 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

2282 
ls_ödex
 = -1;

2285 
ls_ödex
 = 0;Üs_ödex < 
bbi
->
bb
->
num_d_ö°
;Üs_index++) {

2286 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

2287 
d©
 = d© + 
ls_ödex
;

2288 
ö¢_t
* 
ö¢
 = 
d©
->insn;

2289 
addr
;

2290 
	`ssˇnf
(
ö¢
->
addr
, "%x", &addr);

2291 i‡(
addr
 =
ö°
->addr)

2294 i‡(
ls_ödex
 >
bbi
->
bb
->
num_d_ö°
) {

2295 
	`¥ötf
("NO INSTRUCTION!\n");

2296 
	`exô
(1);

2299 
w‹kli°_p
 
addr£t
 = 
bbi
->
addªss_£t
[
ls_ödex
];

2301 
	`uni_upd©e_d©a
(
bbi
->
m∑_acs_out
, 
addr£t
, 
Õ
);

2303 
s˝_acs
 
ãmp_acs
 = 
	`s˝_¸óãEm±yACS
();

2304 
	`s˝_˝yACS
(
ãmp_acs
, 
bbi
->
m∑_acs_out
);

2305 
	`uni_upd©e_d©a
(
bbi
->
m∑_acs_out
, 
addr£t
, 
Õ
);

2306 
	`uni_joö
(
bbi
->
m∑_acs_out
, 
ãmp_acs
, 
Õ
);

2307 
	`s˝_disˇrdACS
(
ãmp_acs
);

2311 
	}
}

2312 
	$s˝_d©a_upd©e
(
s˝_acs
 
acs
, 
w‹kli°_p
 
addr_ö
, 
lo›_t
*
Õ
) {

2313 
ˇche£t
;

2314 
ˇche£t
 = 0; cache£à< 
MAX_CACHE_SET
; cacheset++) {

2315 
w‹kli°_p
 
addr£t
;

2316 
addr£t
 = 
acs
[
ˇche£t
];áddr£à!
NULL
;

2317 
addr£t
 =áddr£t->
√xt
) {

2318 
sblk_p
 
sblk
 = 
addr£t
->
d©a
;

2319 
sblk
->
Êag
 = 
SBLK_FREE
;

2321 
w‹kli°_p
 
xf
 = 
NULL
;

2322 
addr£t
 = 
addr_ö
;áddr£à!
NULL
;áddr£àaddr£t->
√xt
) {

2323 
ßddr_p
 
ßddr
 = 
addr£t
->
d©a
;

2324 i‡(
	`GET_SET
(
ßddr
->
blkAddr
Ë=
ˇche£t
) {

2325 
	`addToW‹kLi°
(&
xf
, 
ßddr
);

2329 
addr£t
 = 
xf
;áddr£à!
NULL
;áddr£àaddr£t->
√xt
) {

2330 
ßddr_p
 
maddr
 = 
addr£t
->
d©a
;

2331 
sblk_p
 
iblk
 = 
	`s˝_joö_£¨ch
(
maddr
, 
acs
[
ˇche£t
], 
Õ
);

2333 i‡(
iblk
 =
NULL
) {

2334 
iblk
 = 
	`s˝_¸óãSBlk
(
maddr
);

2335 
	`addToW‹kLi°
(&
acs
[
ˇche£t
], 
iblk
);

2336 
iblk
->
Êag
 = 
SBLK_DONE
;

2338 
w‹kli°_p
 
node
 = 
addr_ö
;

2339 
ovîœp
 = 0;

2340 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2341 
ßddr_p
 
addªss
 = 
node
->
d©a
;

2342 i‡(
	`s˝_ovîœp
(
maddr
, 
addªss
, 
Õ
) == 1) {

2343 
ovîœp
 = 1;

2347 i‡(
ovîœp
 == 0) {

2348 
	`s˝_disˇrdW‹kLi°
(&(
iblk
->
ys_£t
));

2349 
	`s˝_disˇrdW‹kLi°
(&(
iblk
->
ö°_ys_£t
));

2351 
iblk
->
s˝_age
 = 1;

2352 
iblk
->
ys_£t
 = 
NULL
;

2353 
iblk
->
ö°_ys_£t
 = 
NULL
;

2355 
node
 = 
xf
;

2356 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2357 
ßddr_p
 
addªss
 = 
node
->
d©a
;

2358 i‡(
	`s˝_ovîœp
(
maddr
, 
addªss
, 
Õ
) == 1) {

2360 
	`s˝_add2YS
(&(
iblk
->
ys_£t
), 
addªss
);

2363 
	`s˝_upd©e_Sblk_age
(
iblk
);

2365 
iblk
->
Êag
 = 
SBLK_DONE
;

2369 
addr£t
 = 
acs
[
ˇche£t
];áddr£à!
NULL
;

2370 
addr£t
 =áddr£t->
√xt
) {

2371 
sblk_p
 
sblk
 = 
addr£t
->
d©a
;

2372 i‡(
sblk
->
Êag
 =
SBLK_DONE
) {

2375 i‡(
sblk
->
m
 !
NULL
) {

2377 
w‹kli°_p
 
node
 = 
xf
;

2378 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2379 
ßddr_p
 
addªss
 = 
node
->
d©a
;

2380 i‡(
	`s˝_ovîœp
(
sblk
->
m
, 
addªss
, 
Õ
) == 1) {

2382 
	`s˝_add2YS
(&(
sblk
->
ys_£t
), 
addªss
);

2385 
	`s˝_upd©e_Sblk_age
(
sblk
);

2386 
sblk
->
Êag
 = 
SBLK_DONE
;

2387 } i‡(
sblk
->
ö°_block
 !
NULL
) {

2389 
w‹kli°_p
 
node
 = 
xf
;

2390 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2391 
ßddr_p
 
addªss
 = 
node
->
d©a
;

2392 
	`s˝_add2YS
(&(
sblk
->
ys_£t
), 
addªss
);

2394 
	`s˝_upd©e_Sblk_age
(
sblk
);

2395 
sblk
->
Êag
 = 
SBLK_DONE
;

2399 
	`s˝_disˇrdW‹kLi°
(&
xf
);

2401 
	}
}

2403 
	$s˝_¥öt_ACS
(
s˝_acs
 
acs
, 
lo›_t
*
Õ
) {

2404 
i
;

2405 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

2407 i‡(
i
 != 30)

2410 
	`¥ötf
("\tˇche£à%d÷p:%d):\n", 
i
, 
Õ
->
id
);

2411 
w‹kli°_p
 
node
;

2412 
node
 = 
acs
[
i
];Çodê!
NULL
;Çodênode->
√xt
) {

2413 
sblk_p
 
sblk
 = 
node
->
d©a
;

2415 i‡(
sblk
->
s˝_age
 >
EVICTED
)

2418 
	`¥ötf
("\t0x%x[%d]D", 
sblk
->
m
->
blkAddr
, sblk->
s˝_age
);

2419 i‡(
sblk
->
s˝_age
 >
EVICTED


2421 
	`¥ötf
("[x]");

2422 
	`s˝_¥öt_ts
(
sblk
->
m
->
tsLi°
);

2423 
	`¥ötf
("\n");

2424 
w‹kli°_p
 
p
 = 
sblk
->
ys_£t
;

2425 
p
 !
NULL
) {

2426 
ßddr_p
 
addr
 = 
p
->
d©a
;

2427 
	`¥ötf
("\t\t%xD", 
addr
->
blkAddr
);

2428 
	`s˝_¥öt_ts
(
addr
->
tsLi°
);

2429 
	`¥ötf
("\n");

2430 
p
 =Ö->
√xt
;

2433 
	`¥ötf
("\n");

2435 
	}
}

2436 
	$uni_¥öt_ACS
(
s˝_acs
 
acs
, 
lo›_t
*
Õ
) {

2437 
i
;

2438 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

2439 
	`¥ötf
("\tˇche£à%d÷p:%d):\n", 
i
, 
Õ
->
id
);

2440 
w‹kli°_p
 
node
;

2441 
node
 = 
acs
[
i
];Çodê!
NULL
;Çodênode->
√xt
) {

2442 
sblk_p
 
sblk
 = 
node
->
d©a
;

2444 i‡(
sblk
->
s˝_age
 >
EVICTED
)

2447 i‡(
sblk
->
m
 !
NULL
) {

2449 
	`¥ötf
("\t\t0x%x[%d]D", 
sblk
->
m
->
blkAddr
, sblk->
s˝_age
);

2450 
	`s˝_¥öt_ts
(
sblk
->
m
->
tsLi°
);

2451 } i‡(
sblk
->
ö°_block
 !
NULL
) {

2453 
	`¥ötf
("\t\t0x%x[%d]I", 
sblk
->
ö°_block
->
block
, sblk->
s˝_age
);

2455 
	`¥ötf
("\n");

2457 
w‹kli°_p
 
p
 = 
sblk
->
ys_£t
;

2458 
p
 !
NULL
) {

2459 
ßddr_p
 
addr
 = 
p
->
d©a
;

2460 
	`¥ötf
("\t\t\t%xD", 
addr
->
blkAddr
);

2461 
	`s˝_¥öt_ts
(
addr
->
tsLi°
);

2462 
	`¥ötf
("\n");

2463 
p
 =Ö->
√xt
;

2466 
p
 = 
sblk
->
ö°_ys_£t
;

2467 
p
 !
NULL
) {

2468 
mem_blk_£t_t
* 
ãmp
 = 
p
->
d©a
;

2469 
	`¥ötf
("\t\t\t%xI", 
ãmp
->
block
);

2470 
	`¥ötf
("\n");

2471 
p
 =Ö->
√xt
;

2474 
	`¥ötf
("\n");

2476 
	}
}

2477 
	$s˝_com∑ªACS
(
s˝_acs
 
acs_a
, s˝_ac†
acs_b
, 
lo›_t
*
Õ
) {

2478 
i
;

2479 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

2480 
w‹kli°_p
 
cs_a
 = 
acs_a
[
i
];

2481 
w‹kli°_p
 
cs_b
 = 
acs_b
[
i
];

2482 
w‹kli°_p
 
node
;

2483 
node
 = 
cs_a
;Çodê!
NULL
;Çodênode->
√xt
) {

2484 
sblk_p
 
blk_a
 = 
node
->
d©a
;

2485 i‡(
blk_a
->
m
 !
NULL
) {

2486 
sblk_p
 
blk_b
 = 
	`s˝_joö_£¨ch
(
blk_a
->
m
, 
cs_b
, 
Õ
);

2487 i‡(
blk_b
 !
NULL
 && 
blk_a
->
s˝_age
 == blk_b->scp_age) {

2490  
ACS_NOT_IDENTICAL
;

2491 } i‡(
blk_a
->
ö°_block
 !
NULL
) {

2492 
sblk_p
 
blk_b
 = 
	`s˝_joö_£¨ch_ö°
(
blk_a
->
ö°_block
, 
cs_b
);

2493 i‡(
blk_b
 !
NULL
 && 
blk_a
->
s˝_age
 == blk_b->scp_age) {

2496  
ACS_NOT_IDENTICAL
;

2500  
ACS_IDENTICAL
;

2501 
	}
}

2502 
	$s˝_d©Æ2_upd©e
(
s˝_acs
 
acs
, 
w‹kli°_p
 
addr_ö
, 
lo›_t
*
Õ
) {

2503 
s˝_acs
 
acs_ö
 = 
	`s˝_¸óãEm±yACS
();

2504 
	`s˝_˝yACS
(
acs_ö
, 
acs
);

2505 
	`s˝_d©a_upd©e
(
acs
, 
addr_ö
, 
Õ
);

2507 i‡(
¥öt_Êag
) {

2508 
	`¥ötf
("L2 updating\n");

2509 
	`s˝_¥öt_ACS
(
acs
, 
Õ
);

2510 
	`¥ötf
("--------------------------------------------\n");

2513 
	`s˝_joö
(
acs
, 
acs_ö
, 
Õ
);

2514 
	`s˝_disˇrdACS
(
acs_ö
);

2515 
	}
}

2516 
	$s˝_™Æyze_lo›_ps
(
lo›_t
* 
Õ
, 
™Æysis
) {

2518 
tcfg_node_t
* 
hód
 = 
Õ
->head;

2519 
i
;

2520 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2521 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

2522 
lo›_t
* 
ö√rLp
 = 
lo›_m≠
[
bbi
->
id
];

2524 i‡(
	`s˝_cmpLpOrdî
(
ö√rLp
->
id
, 
Õ
->id) > 0)

2527 i‡(
	`isI¬î
(
ö√rLp
->
id
, 
Õ
->id) == 0)

2529 
j
 = 0;

2530 
bbi
->
m∑_acs_ö
 = 
	`s˝_¸óãEm±yACS
();

2531 
bbi
->
m∑_acs_out
 = 
	`s˝_¸óãEm±yACS
();

2532 
j
 = 0; j < 
MAX_CACHE_SET
; j++) {

2533 
bbi
->
m∑_acs_ö
[
j
] = 
NULL
;

2534 
bbi
->
m∑_acs_out
[
j
] = 
NULL
;

2538 
fú°visôed
[
num_tcfg_nodes
];

2539 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2540 
fú°visôed
[
i
] = 1;

2542 
w‹kli°_p
 
qHód
, 
qTaû
;

2543 
qHód
 = 
qTaû
 = 
NULL
;

2544 
	`s˝_íqueue
(
hód
, &
qHód
, &
qTaû
);

2545 
ch™ged
 = 0;

2547 i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2548 
	`¥ötf
("lo›Üevñ:%d\n", 
Õ
->
id
);

2551 
	`s˝_em±y_queue
(
qHód
, 
qTaû
) == 0) {

2552 
tcfg_node_t
* 
cu∫ode
 = 
	`s˝_dequeue
(&
qHód
, &
qTaû
);

2553 
s˝_acs
 
acs_ö
 = 
	`s˝_¸óãEm±yACS
();

2555 i‡(
cu∫ode
->
id
 =5 && 
Õ
->id == 0) {

2556 
	`¥ötf
("\n***************************************************\n");

2557 
	`¥ötf
("cu∫ode:%dÜp:%d\n", 
cu∫ode
->
id
, 
Õ
->id);

2558 
	`s˝_¥öt_ACS
(
cu∫ode
->
m∑_acs_ö
, 
Õ
);

2561 
tcfg_edge_t
* 
ö_e
;

2562 
ö_e
 = 
cu∫ode
->
ö
; in_ê!
NULL
; in_êö_e->
√xt_ö
)

2563 i‡(
	`s˝_cmpLpOrdî
(
Õ
->
id
, 
lo›_m≠
[
ö_e
->
§c
->id]->id) >= 0) {

2564 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS


2565 || 
™Æysis
 =
L2_DCACHE_ANALYSIS
) {

2567 i‡(
cu∫ode
->
id
 =5 && 
Õ
->id == 0) {

2568 
	`¥ötf
("... joöög %d\n", 
ö_e
->
§c
->
id
);

2569 
	`¥ötf
("###################\n");

2570 
	`¥ötf
("ACS o‡%d\n", 
ö_e
->
§c
->
id
);

2571 
	`s˝_¥öt_ACS
(
ö_e
->
§c
->
m∑_acs_out
, 
Õ
);

2572 
	`¥ötf
("###################\n");

2573 
	`¥ötf
("\n");

2574 
	`¥ötf
("bef‹e, cu∫ode:%dÜp:%d\n", 
cu∫ode
->
id
,

2575 
Õ
->
id
);

2576 
	`s˝_¥öt_ACS
(
acs_ö
, 
Õ
);

2579 
	`s˝_joö
(
acs_ö
, 
ö_e
->
§c
->
m∑_acs_out
, 
Õ
);

2581 i‡(
cu∫ode
->
id
 =5 && 
Õ
->id == 0) {

2582 
	`¥ötf
("... joöög %d\n", 
ö_e
->
§c
->
id
);

2583 
	`¥ötf
("a·î, cu∫ode:%dÜp:%d\n", 
cu∫ode
->
id
,

2584 
Õ
->
id
);

2585 
	`s˝_¥öt_ACS
(
acs_ö
, 
Õ
);

2588 } i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2589 
	`uni_joö
(
acs_ö
, 
ö_e
->
§c
->
m∑_acs_out
, 
Õ
);

2593 
ch™ged
 = 
	`s˝_com∑ªACS
(
acs_ö
, 
cu∫ode
->
m∑_acs_ö
, 
Õ
);

2594 i‡(
fú°visôed
[
cu∫ode
->
id
] =0 && 
ch™ged
 =
ACS_IDENTICAL
) {

2595 
	`s˝_disˇrdACS
(
acs_ö
);

2598 i‡(
fú°visôed
[
cu∫ode
->
id
] == 1)

2599 
fú°visôed
[
cu∫ode
->
id
] = 0;

2600 
	`s˝_disˇrdACS
(
cu∫ode
->
m∑_acs_ö
);

2601 
cu∫ode
->
m∑_acs_ö
 = 
acs_ö
;

2603 i‡(
cu∫ode
->
id
 =5 && 
Õ
->id == 0) {

2604 
	`¥ötf
("after joining\n");

2605 
	`¥ötf
("cu∫ode:%dÜp:%d\n", 
cu∫ode
->
id
, 
Õ
->id);

2606 
	`s˝_¥öt_ACS
(
cu∫ode
->
m∑_acs_ö
, 
Õ
);

2607 
¥öt_Êag
 = 1;

2611 
	`s˝_˝yACS
(
cu∫ode
->
m∑_acs_out
, cu∫ode->
m∑_acs_ö
);

2612 
i
;

2613 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS
 ||á«lysi†=
L2_DCACHE_ANALYSIS
) {

2614 
i
 = 0; i < 
cu∫ode
->
bb
->
num_d_ö°
; i++) {

2615 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS
) {

2616 
	`s˝_d©a_upd©e
(
cu∫ode
->
m∑_acs_out
,

2617 
cu∫ode
->
addªss_£t
[
i
], 
Õ
);

2618 } i‡(
™Æysis
 =
L2_DCACHE_ANALYSIS
) {

2619 
	`s˝_d©Æ2_upd©e
(
cu∫ode
->
m∑_acs_out
,

2620 
cu∫ode
->
addªss_£t
[
i
], 
Õ
);

2623 } i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2625 
	`uni_å™sf‹m_ul2acs
(
cu∫ode
, 
Õ
);

2627 
	`¥ötf
("cu∫ode:%d(out)\n", 
cu∫ode
->
id
);

2628 
	`uni_¥öt_ACS
(
cu∫ode
->
m∑_acs_out
);

2632 i‡(
cu∫ode
->
id
 =5 && 
Õ
->id == 0) {

2633 
¥öt_Êag
 = 0;

2634 
	`¥ötf
("after updating\n");

2635 
	`¥ötf
("cu∫ode:%dÜp:%d\n", 
cu∫ode
->
id
, 
Õ
->id);

2636 
	`s˝_¥öt_ACS
(
cu∫ode
->
m∑_acs_ö
, 
Õ
);

2640 
tcfg_edge_t
* 
out_e
;

2641 
out_e
 = 
cu∫ode
->
out
; out_ê!
NULL
; out_êout_e->
√xt_out
)

2642 i‡(
	`s˝_cmpLpOrdî
(
Õ
->
id
, 
lo›_m≠
[
out_e
->
d°
->id]->id) >= 0) {

2643 
	`s˝_íqueue
(
out_e
->
d°
, &
qHód
, &
qTaû
);

2647 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2648 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

2649 
lo›_t
* 
ö√rLp
 = 
lo›_m≠
[
bbi
->
id
];

2650 i‡(
	`isI¬î
(
ö√rLp
->
id
, 
Õ
->id) == 0)

2653 
s˝_acs
 
acs
;

2654 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS
) {

2655 
acs
 = 
	`s˝_¸óãEm±yACS
();

2656 
	`s˝_˝yACS
(
acs
, 
bbi
->
m∑_acs_ö
);

2657 
	`addToW‹kLi°
(&(
bbi
->
m∑_acsö_¨r
), 
acs
);

2658 
	`addToW‹kLi°
(&(
bbi
->
m∑_Õ_ö
), 
Õ
);

2660 
acs
 = 
	`s˝_¸óãEm±yACS
();

2661 
	`s˝_˝yACS
(
acs
, 
bbi
->
m∑_acs_out
);

2662 
	`addToW‹kLi°
(&(
bbi
->
m∑_acsout_¨r
), 
acs
);

2663 
	`addToW‹kLi°
(&(
bbi
->
m∑_Õ_out
), 
Õ
);

2664 } i‡(
™Æysis
 =
L2_DCACHE_ANALYSIS
) {

2665 
acs
 = 
	`s˝_¸óãEm±yACS
();

2666 
	`s˝_˝yACS
(
acs
, 
bbi
->
m∑_acs_ö
);

2667 
	`addToW‹kLi°
(&(
bbi
->
m∑_ac¶2ö_¨r
), 
acs
);

2668 
	`addToW‹kLi°
(&(
bbi
->
m∑_Õl2_ö
), 
Õ
);

2670 
acs
 = 
	`s˝_¸óãEm±yACS
();

2671 
	`s˝_˝yACS
(
acs
, 
bbi
->
m∑_acs_out
);

2672 
	`addToW‹kLi°
(&(
bbi
->
m∑_ac¶2out_¨r
), 
acs
);

2673 
	`addToW‹kLi°
(&(
bbi
->
m∑_Õl2_out
), 
Õ
);

2678 i‡(
Õ
->
id
 == 0) {

2679 i‡(
™Æysis
 =
L2_DCACHE_ANALYSIS
) {

2680 
	`¥ötf
("basi¯block %dÜp:%d\n", 
bbi
->
id
, 
Õ
->id);

2681 
	`s˝_¥öt_ACS
(
bbi
->
m∑_acs_ö
, 
Õ
);

2682 } i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2683 
	`¥ötf
("basi¯block %dÜp:%d\n", 
bbi
->
id
, 
Õ
->id);

2684 
	`uni_¥öt_ACS
(
bbi
->
m∑_acs_ö
, 
Õ
);

2685 
	`¥ötf
("\n");

2691 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS
 && 
Õ
->
id
==0 && 
bbi
->id==0) {

2692 
	`¥ötf
("DUMP ACS o‡basi¯block %dÜo›Üevñ %d\n", 
bbi
->
id
,

2693 
Õ
->
id
);

2694 
	`s˝_¥öt_ACS
(
bbi
->
m∑_acs_ö
, 
Õ
);

2696 
	`¥ötf
("\n");

2699 
ö°_ödex
 = 0;

2700 
d©_ö°_ödex
 = 0;

2701 
s˝_acs
 
acs_ô
 = 
	`s˝_¸óãEm±yACS
();

2702 
	`s˝_˝yACS
(
acs_ô
, 
bbi
->
m∑_acs_ö
);

2703 
ö°_ödex
 = 0; in°_ödex < 
bbi
->
bb
->
num_ö°
; inst_index++) {

2704 
de_ö°_t
* 
ö°
 = &(
bbi
->
bb
->
code
[
ö°_ödex
]);

2705 
iTy≥
 = 
	`ö°_ty≥
(
ö°
);

2706 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

2710 i‡(
d©_ö°_ödex
 >
bbi
->
bb
->
num_d_ö°
) {

2711 
	`¥ötf
(

2713 
d©_ö°_ödex
, 
bbi
->
bb
->
num_d_ö°
);

2714 
	`exô
(1);

2717 
addr_°
[50];

2718 
	`•rötf
(
addr_°
, "%x", 
ö°
->
addr
);

2719 i‡(
bbi
->
id
 =5 && 
	`°rcmp
(
addr_°
, "4002a8") == 0) {

2720 
	`¥ötf
("DEBUGGING Basi¯block %d÷p:%d):\n",
bbi
->
id
,
Õ
->id);

2721 
	`s˝_¥öt_ACS
(
acs_ô
, 
Õ
);

2722 
	`¥ötf
("\n");

2725 
w‹kli°_p
 
node
;

2726 
node
 = 
bbi
->
addªss_£t
[
d©_ö°_ödex
];Çodê!
NULL
;

2727 
node
 =Çode->
√xt
) {

2728 
ßddr_p
 
addr
 = 
node
->
d©a
;

2729 i‡(
	`s˝_addrINacs
(
addr
, 
acs_ô
, 
Õ
) == 1) {

2730 
	`addToW‹kLi°
(&(
addr
->
psLo›
), 
Õ
);

2737 i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2738 
	`ˇãg‹ize_ul2_ö°_PS_NC
(
bbi
->
id
, 
acs_ô
, 
ö°_ödex
, 
ö°
,

2739 
Õ
);

2742 i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2747 
	`uni_ö°_fûãr_fun˘i⁄
(
bbi
->
id
, 
acs_ô
, 
ö°
, 
ö°_ödex
, 
Õ
);

2750 i‡(
iTy≥
 =
INST_LOAD
 || iTy≥ =
INST_STORE
) {

2754 i‡(
d©_ö°_ödex
 >
bbi
->
bb
->
num_d_ö°
) {

2755 
	`¥ötf
(

2757 
d©_ö°_ödex
, 
bbi
->
bb
->
num_d_ö°
);

2758 
	`exô
(1);

2760 
w‹kli°_p
 
addr£t
 = 
bbi
->
addªss_£t
[
d©_ö°_ödex
];

2761 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS
) {

2763 i‡(
bbi
->
id
 =5 && 
Õ
->id == 0) {

2764 
	`¥ötf
(

2766 
	`¥ötf
("\tBasi¯block %dÜp:%d\n", 
bbi
->
id
, 
Õ
->id);

2767 
	`s˝_¥öt_ACS
(
acs_ô
, 
Õ
);

2770 
	`s˝_d©a_upd©e
(
acs_ô
, 
addr£t
, 
Õ
);

2771 } i‡(
™Æysis
 =
L2_DCACHE_ANALYSIS
) {

2772 
	`s˝_d©Æ2_upd©e
(
acs_ô
, 
addr£t
, 
Õ
);

2773 } i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2774 
	`uni_upd©e_d©a
(
acs_ô
, 
addr£t
, 
Õ
);

2776 
d©_ö°_ödex
++;

2779 
	`s˝_disˇrdACS
(
acs_ô
);

2787 
j
;

2788 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

2789 
w‹kli°_p
 
node
 = 
bbi
->
addªss_£t
[
j
];

2790 ; 
node
 !
NULL
;Çodênode->
√xt
) {

2791 
ßddr_p
 
addr
 = 
node
->
d©a
;

2793 i‡(
	`s˝_addrINacs
(
addr
, 
bbi
->
m∑_acs_ö
) == 1) {

2794 
	`addToW‹kLi°
(&(
addr
->
psLo›
), 
Õ
);

2801 i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

2802 
j
 = 0; j < 
bbi
->
bb
->
num_ö°
; j++) {

2803 
	`ˇãg‹ize_ul2_ö°_PS_NC
(
bbi
->
id
, bbi->
m∑_acs_ö
, 
j
,

2804 &(
bbi
->
bb
->
code
[
j
]), 
Õ
);

2815 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2816 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

2817 
lo›_t
* 
ö√rLp
 = 
lo›_m≠
[
bbi
->
id
];

2818 i‡(
	`isI¬î
(
ö√rLp
->
id
, 
Õ
->id) == 0)

2820 
	`s˝_tŸÆly_disˇrdACS
(&
bbi
->
m∑_acs_ö
);

2821 
	`s˝_tŸÆly_disˇrdACS
(&
bbi
->
m∑_acs_out
);

2824 
	}
}

2825 
	$s˝_addrINacs
(
ßddr_p
 
maddr
, 
s˝_acs
 
acs
, 
lo›_t
*
Õ
) {

2826 
ˇche£t
 = 
	`GET_SET
(
maddr
->
blkAddr
);

2827 
w‹kli°_p
 
node
;

2828 
node
 = 
acs
[
ˇche£t
];Çodê!
NULL
;Çodênode->
√xt
) {

2830 
sblk_p
 
sblk
 = (sblk_pË
node
->
d©a
;

2831 i‡(
sblk
->
m
 =
NULL


2834 i‡(
	`s˝_cmp_ßddr
(
maddr
, 
sblk
->
m
, 
Õ
) == 1) {

2835 i‡(
sblk
->
s˝_age
 < 
EVICTED
) {

2843 
	}
}

2844 
	$s˝_ö°INacs
(
mem_blk_£t_t
* 
iblock
, 
s˝_acs
 
acs
) {

2845 
ˇche£t
 = 
	`GET_SET
(
iblock
->
block
);

2846 
w‹kli°_p
 
node
;

2847 
node
 = 
acs
[
ˇche£t
];Çodê!
NULL
;Çodênode->
√xt
) {

2848 
sblk_p
 
sblk
 = 
node
->
d©a
;

2849 i‡(
sblk
->
ö°_block
 =
NULL


2852 i‡(
sblk
->
ö°_block
->
block
 =
iblock
->block) {

2853 i‡(
sblk
->
s˝_age
 < 
EVICTED


2861 
	}
}

2862 
	$ˇãg‹ize_ul2_ö°_PS_NC
(
bbi_id
, 
s˝_acs
 
m∑_acs_ö
, 
ö°_id
,

2863 
de_ö°_t
* 
ö°
, 
lo›_t
*
Õ
) {

2865 
de_ö°_t
* 
ö°
 = &
bbi
->
bb
->
code
[
ö°_id
];

2867 
mem_blk_£t_t
 
ãmp
;

2868 
h1
, 
h2
;

2869 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

2870 
ãmp
.
√xt
 = 
NULL
;

2872 
h1
 = 
	`s˝_ö°INacs
(&
ãmp
, 
bbi
->
m∑_acs_ö
);

2874 
h1
 = 
	`s˝_ö°INacs
(&
ãmp
, 
m∑_acs_ö
);

2875 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

2877 
h2
 = 
	`s˝_ö°INacs
(&
ãmp
, 
bbi
->
m∑_acs_ö
);

2879 
h2
 = 
	`s˝_ö°INacs
(&
ãmp
, 
m∑_acs_ö
);

2880 i‡(
ö°_chmc_l1
[
bbi_id
][
ö°_id
] =
ALL_HIT
) {

2881 
ö°_p¢c_ul2
[
bbi_id
][
ö°_id
] = 
ALL_X
;

2882 } i‡((
h1
 && 
h2
Ë&& 
ö°_p¢c_ul2
[
bbi_id
][
ö°_id
] =
NOT_CLASSIFIED
) {

2883 
ö°_p¢c_ul2
[
bbi_id
][
ö°_id
] = 
PS
;

2884 i‡(
ö°_ps_lo›_ul2
[
bbi_id
][
ö°_id
] =
NULL
) {

2885 
ö°_ps_lo›_ul2
[
bbi_id
][
ö°_id
] = 
Õ
;

2888 i‡(
	`s˝_cmpLpOrdî
(
ö°_ps_lo›_ul2
[
bbi_id
][
ö°_id
]->
id
, 
Õ
->id)

2890 
ö°_ps_lo›_ul2
[
bbi_id
][
ö°_id
] = 
Õ
;

2893 
	}
}

2894 
	$s˝_e°_ts_size
(
w‹kli°_p
 
t¶i°
, 
lo›_t
* 
ÕPS
) {

2895 
™s
 = 1;

2896 i‡(
ÕPS
 =
NULL


2898  
™s
;

2899 
ÕPS
 !
NULL
) {

2900 
w‹kli°_p
 
node
 = 
t¶i°
;

2901 
ts_p
 
ts
 = 
NULL
;

2902 
node
 !
NULL
) {

2903 
ts
 = 
node
->
d©a
;

2904 i‡(
ts
->
lo›_id
 =
ÕPS
->
id
)

2906 
node
 =Çode->
√xt
;

2908 
™s
 =án†* (
ts
->
up
 -Ås->
lw
 + 1);

2909 
ÕPS
 =ÜpPS->
∑ª¡
;

2911  
™s
;

2912 
	}
}

2913 
lo›_t
* 
	$s˝_mo°OuãrLo›
(
w‹kli°_p
 
Õ¨r
) {

2914 
lo›_t
* 
™s
;

2915 i‡(
Õ¨r
 =
NULL


2917  
NULL
;

2918 
™s
 = 
Õ¨r
->
d©a
;

2919 
Õ¨r
 =Ü∑º->
√xt
;

2920 
Õ¨r
 !
NULL
) {

2921 
lo›_t
* 
Õ
 = 
Õ¨r
->
d©a
;

2922 i‡(
	`s˝_cmpLpOrdî
(
™s
->
id
, 
Õ
->id) < 0)

2923 
™s
 = 
Õ
;

2924 
Õ¨r
 =Ü∑º->
√xt
;

2926  
™s
;

2927 
	}
}

2930 
	$s˝_ˇl_ˇchemiss
() {

2931 
i
;

2932 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

2933 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

2934 i‡(
bbi
->
bb
->
num_d_ö°
 > 0) {

2935 
	`¥ötf
("\nBasi¯Block %dÜp:%d\n", 
bbi
->
id
, 
lo›_m≠
[bbi->id]);

2936 
max_l1
 = 0;

2937 
max_l2
 = 0;

2938 
j
 = 0;

2939 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

2940 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

2941 
d©
 = d© + 
j
;

2942 
ö¢_t
* 
ö¢
 = 
d©
->insn;

2943 
	`¥ötf
(".D©aRe‡0x%†", 
ö¢
->
addr
);

2944 i‡(
	`isSt‹eIn°
(
ö¢
->
›
))

2945 
	`¥ötf
("[STORE]");

2947 
	`¥ötf
("[LOAD]");

2948 
	`¥ötf
("\n");

2949 
max_miss_l1
 = 0;

2950 
max_miss_l2
 = 0;

2951 
w‹kli°_p
 
node
;

2952 
node
 = 
bbi
->
addr£t_l1
[
j
];Çodê!
NULL
;

2953 
node
 =Çode->
√xt
) {

2954 
ßddr_p
 
maddr
 = 
node
->
d©a
;

2955 
	`¥ötf
("\t0x%x (%d)", 
maddr
->
blkAddr
,

2956 
	`GET_SET
(
maddr
->
blkAddr
));

2957 
	`s˝_¥öt_ts
(
maddr
->
tsLi°
);

2958 
w‹kli°_p
 
Õ™s
 = 
maddr
->
psLo›
;

2959 
miss
 = 1;

2960 i‡(
Õ™s
 !
NULL
) {

2961 
w‹kli°_p
 
ãmp
 = 
Õ™s
;

2962 
ãmp
 !
NULL
) {

2963 
lo›_t
* 
ép
 = 
ãmp
->
d©a
;

2964 
	`¥ötf
("Ü%d ", 
ép
->
id
);

2965 
ãmp
 =Åemp->
√xt
;

2967 
lo›_t
* 
ép
 = 
	`s˝_mo°OuãrLo›
(
Õ™s
);

2968 
	`¥ötf
(" ouãrLp:%d ", 
ép
->
id
);

2969 
miss
 = 
	`s˝_e°_ts_size
(
maddr
->
tsLi°
, 
ép
->
∑ª¡
);

2971 
miss
 = 
	`s˝_e°_ts_size
(
maddr
->
tsLi°
,

2972 
lo›_m≠
[
bbi
->
id
]);

2974 
	`¥ötf
(" miss:%d", 
miss
);

2975 
	`¥ötf
("\n");

2976 
max_miss_l1
 +
miss
;

2978 i‡(
íabÀ_s˝_dl2ˇche
 == 1) {

2980 
	`¥ötf
("L2 data cache\n");

2981 
node
 = 
bbi
->
addr£t_l2
[
j
];Çodê!
NULL
;

2982 
node
 =Çode->
√xt
) {

2983 
ßddr_p
 
maddr
 = 
node
->
d©a
;

2984 
	`¥ötf
("\t0x%x (%d)", 
maddr
->
blkAddr
,

2985 
	`GET_SET
(
maddr
->
blkAddr
));

2986 
	`s˝_¥öt_ts
(
maddr
->
tsLi°
);

2987 
w‹kli°_p
 
Õ™s
 = 
maddr
->
psLo›
;

2988 
miss
 = 1;

2989 i‡(
Õ™s
 !
NULL
) {

2990 
w‹kli°_p
 
ãmp
 = 
Õ™s
;

2991 
ãmp
 !
NULL
) {

2992 
lo›_t
* 
ép
 = 
ãmp
->
d©a
;

2993 
	`¥ötf
("Ü%d", 
ép
->
id
);

2994 
ãmp
 =Åemp->
√xt
;

2996 
lo›_t
* 
ép
 = 
	`s˝_mo°OuãrLo›
(
Õ™s
);

2997 
	`¥ötf
(" ouãrLp:%d ", 
ép
->
id
);

2998 
miss
 = 
	`s˝_e°_ts_size
(
maddr
->
tsLi°
, 
ép
->
∑ª¡
);

3000 
miss
 = 
	`s˝_e°_ts_size
(
maddr
->
tsLi°
,

3001 
lo›_m≠
[
bbi
->
id
]);

3003 
	`¥ötf
(" miss:%d", 
miss
);

3004 
	`¥ötf
("\n");

3005 
max_miss_l2
 +
miss
;

3008 
lo›_t
* 
Õ
 = 
lo›_m≠
[
bbi
->
id
];

3009 
max_exec
 = 
Õ
->
exec
;

3010 i‡(
max_miss_l1
 > 
max_exec
)

3011 
max_miss_l1
 = 
max_exec
;

3012 i‡(
max_miss_l2
 > 
max_exec
)

3013 
max_miss_l2
 = 
max_exec
;

3014 
max_l1
 +
max_miss_l1
;

3015 
max_l2
 +
max_miss_l2
;

3016 
	`¥ötf
(" maxMis†ö L1:%d", 
max_miss_l1
);

3017 i‡(
íabÀ_s˝_dl2ˇche
 == 1) {

3018 
	`¥ötf
(" L2:%d", 
max_miss_l2
);

3020 
	`¥ötf
("\t");

3021 
	`¥ötf
("ps in L1: ");

3022 
Õ
 = 
	`s˝_ö√r_ps_lo›
(
bbi
->
addr£t_l1
[
j
]);

3023 i‡(
Õ
 =
NULL


3025 
	`¥ötf
("NULL");

3027 
	`¥ötf
("%d", 
Õ
->
id
);

3028 i‡(
íabÀ_s˝_dl2ˇche
) {

3029 
	`¥ötf
(" L2:");

3030 
Õ
 = 
	`s˝_ö√r_ps_lo›
(
bbi
->
addr£t_l2
[
j
]);

3031 i‡(
Õ
 =
NULL


3033 
	`¥ötf
("NULL");

3035 
	`¥ötf
("%d", 
Õ
->
id
);

3037 
	`¥ötf
("\n");

3039 
	`¥ötf
("Basi¯block %d maxM†ö L1: %d L2:%d\n", 
bbi
->
id
, 
max_l1
,

3040 
max_l2
);

3053 
	`¥ötf
("\n");

3056 
	}
}

3058 
	$s˝_lﬂd°‹e_ödex
(
mas_ö°_t
* 
ö°
) {

3059 
tcfg_node_t
* 
bbi
 = 
tcfg
[
ö°
->
bbi_id
];

3060 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

3062 
i
 = 0;

3063 
i
 = 0; i < 
bbi
->
bb
->
num_d_ö°
; i++) {

3064 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

3065 
d©
 = d© + 
i
;

3066 
ö¢_t
* 
ö¢
 = 
d©
->insn;

3067 
addr
;

3068 
	`ssˇnf
(
ö¢
->
addr
, "%x", &addr);

3069 i‡(
addr
 =
ö°
->inst->addr) {

3073 i‡(
i
 >
bbi
->
bb
->
num_d_ö°
)

3076  
i
;

3077 
	}
}

3078 
lo›_t
* 
	$s˝_ö√r_ps_lo›
(
w‹kli°_p
 
addr£t
) {

3079 
Êag
 = 0;

3080 
lo›_t
* 
Õ™s
 = 
NULL
;

3081 
w‹kli°_p
 
node
 = 
addr£t
;

3082 ; 
node
 !
NULL
;Çodênode->
√xt
) {

3083 
ßddr_p
 
addr
 = 
node
->
d©a
;

3084 
lo›_t
* 
ép
 = 
	`s˝_mo°OuãrLo›
(
addr
->
psLo›
);

3085 i‡(
Êag
 == 0) {

3086 
Êag
 = 1;

3087 
Õ™s
 = 
ép
;

3089 i‡(
Õ™s
 !
NULL
 && 
ép
 != NULL) {

3090 i‡(
	`s˝_cmpLpOrdî
(
Õ™s
->
id
, 
ép
->id) > 0)

3091 
Õ™s
 = 
ép
;

3093 
Õ™s
 = 
NULL
;

3096  
Õ™s
;

3097 
	}
}

3098 
lo›_t
* 
	$s˝_p¶o›_dl
(
mas_ö°_t
* 
ö°
, 
Àvñ
) {

3099 
ödex
 = 
	`s˝_lﬂd°‹e_ödex
(
ö°
);

3100 i‡(
ödex
 < 0)

3101  
NULL
;

3102 
tcfg_node_t
* 
bbi
 = 
tcfg
[
ö°
->
bbi_id
];

3103 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

3104  
NULL
;

3105 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

3106 
d©
 = d© + 
ödex
;

3107 
w‹kli°_p
 
addr£t
;

3108 i‡(
Àvñ
 == 1)

3109 
addr£t
 = 
bbi
->
addr£t_l1
[
ödex
];

3110 i‡(
Àvñ
 == 2)

3111 
addr£t
 = 
bbi
->
addr£t_l2
[
ödex
];

3112 
lo›_t
* 
Õ™s
 = 
	`s˝_ö√r_ps_lo›
(
addr£t
);

3113  
Õ™s
;

3114 
	}
}

3116 
	$öôACS
() {

3117 
i
;

3118 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

3119 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

3120 
bbi
->
m∑_acsö_¨r
 = 
NULL
;

3121 
bbi
->
m∑_acsout_¨r
 = 
NULL
;

3122 
bbi
->
m∑_Õ_ö
 = 
NULL
;

3123 
bbi
->
m∑_Õ_out
 = 
NULL
;

3125 
bbi
->
m∑_ac¶2ö_¨r
 = 
NULL
;

3126 
bbi
->
m∑_ac¶2out_¨r
 = 
NULL
;

3127 
bbi
->
m∑_Õl2_ö
 = 
NULL
;

3128 
bbi
->
m∑_Õl2_out
 = 
NULL
;

3131 
	}
}

3133 
	$m∑ex_d©aˇche
(
™Æysis
) {

3135 
i
;

3136 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

3137 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

3138 
öf_node_t
* 
ib
 = &(
öf_¥ocs
[
	`bbi_pid
(
bbi
)].
öf_cfg
[
	`bbi_bid
(bbi)]);

3139 
bbi
->
lo›_id
 = 
ib
->loop_id;

3140 i‡(
™Æysis
 =
L1_DCACHE_ANALYSIS
) {

3141 
bbi
->
addªss_£t
 = bbi->
addr£t_l1
;

3142 } i‡(
™Æysis
 =
L2_DCACHE_ANALYSIS


3143 || 
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

3144 
bbi
->
addªss_£t
 = bbi->
addr£t_l2
;

3147 
	`s˝_dump_addªss
();

3149 
j
 = 0;

3150 ; 
j
 < 
bbi
->
bb
->
num_d_ö°
; j++) {

3151 
w‹kli°_p
 
node
 = 
bbi
->
addªss_£t
[
j
];

3152 ; 
node
 !
NULL
;Çodênode->
√xt
) {

3153 
ßddr_p
 
addr
 = 
node
->
d©a
;

3154 
addr
->
psLo›
 = 
NULL
;

3159 i‡(
™Æysis
 =
UNIFIED_CACHE_ANALYSIS
) {

3160 
ö°_p¢c_ul2
 = 
	`ˇŒoc
(
num_tcfg_nodes
, (*));

3161 
ö°_ps_lo›_ul2
 = 
	`ˇŒoc
(
num_tcfg_nodes
, (
lo›_t
**));

3162 
i
;

3163 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

3164 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

3165 
ö°_p¢c_ul2
[
i
] = 
	`ˇŒoc
(
bbi
->
bb
->
num_ö°
, ());

3166 
ö°_ps_lo›_ul2
[
i
] = 
	`ˇŒoc
(
bbi
->
bb
->
num_ö°
, (
lo›_t
*));

3167 
j
;

3168 
j
 = 0; j < 
bbi
->
bb
->
num_ö°
; j++) {

3169 
ö°_p¢c_ul2
[
i
][
j
] = 
NOT_CLASSIFIED
;

3170 
ö°_ps_lo›_ul2
[
i
][
j
] = 
NULL
;

3175 
	`s˝_™Æyze_lo›_ps
(
lo›s
[0], 
™Æysis
);

3176 
i
 = 
num_tcfg_lo›s
 - 1; i >= 1; i--) {

3177 
	`s˝_™Æyze_lo›_ps
(
lo›s
[
i
], 
™Æysis
);

3180 
	`s˝_ã°_ˇche_miss
();

3183 
	}
}

3184 
	$lo›_di°
(
lo›_t
* 
Õ1
,Üo›_t* 
Õ2
) {

3185 i‡(
Õ1
 =
NULL
 || 
Õ2
 == NULL

3188 
™s
 = 0;

3189 i‡(
	`s˝_cmpLpOrdî
(
Õ1
->
id
, 
Õ2
->id) > 0) {

3190 
lo›_t
* 
t
 = 
Õ1
;

3191 
Õ1
 = 
Õ2
;

3192 
Õ2
 = 
t
;

3194 
Õ1
 !
NULL
) {

3195 
™s
++;

3196 i‡(
Õ1
->
id
 =
Õ2
->id)

3197  
™s
;

3198 
Õ1
 =Üp1->
∑ª¡
;

3201 
	}
}

3203 
	$gë_mblk_hômiss_ul2
(
tcfg_node_t
* 
bbi
, 
mblk_id
, 
lo›_t
* 
Õ
,

3204 
c⁄ãxtMask
) {

3205 
Õ
 = 
lo›_m≠
[
bbi
->
id
];

3206 
de_ö°_t
* 
ö°
;

3207 
off£t
, 
mblk
;

3208 
i
;

3209 
ö°
 = 
bbi
->
bb
->
code
;

3210 
i
 = 0; i < 
bbi
->
bb
->
num_ö°
; i++) {

3211 
mblk
 = 
	`MBLK_ID_L2
(
bbi
->
bb
->
ß
, 
ö°
->
addr
);

3212 i‡(
mblk
 =
mblk_id
) {

3213 i‡(
ö°_p¢c_ul2
[
bbi
->
id
][
i
] =
PS
) {

3214 
lo›_t
* 
ps_Õ
 = 
ö°_ps_lo›_ul2
[
bbi
->
id
][
i
];

3215 
Õ_di°
 = 
	`lo›_di°
(
ps_Õ
, 
Õ
);

3216 
ps_˘x
 = 
c⁄ãxtMask
 & ((1 << 
Õ_di°
) - 1);

3217 i‡(
ps_˘x
 == 0)

3218  
IC_MISS
;

3220  
IC_HIT
;

3221 } i‡(
ö°_p¢c_ul2
[
bbi
->
id
][
i
] =
NOT_CLASSIFIED
) {

3222  
IC_UNCLEAR
;

3223 } i‡(
ö°_p¢c_ul2
[
bbi
->
id
][
i
] =
ALL_X
) {

3224  
IC_HIT
;

3227 
ö°
++;

3229 
	`¥ötf
("BUGS in get_mblk_hitmiss_ul2\n");

3230 
	`exô
(1);

3231  
IC_MISS
;

3232 
	}
}

3234 
	$s˝_ã°_ˇche_miss
() {

3235 
FILE
* 
fdbg
 = 
	`f›í
("dbg.txt", "w");

3236 
föÆ_miss
 = 0;

3237 
i
;

3238 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

3239 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

3240 i‡(
bbi
->
bb
->
num_d_ö°
 == 0)

3242 
	`Ârötf
(
fdbg
, "Basi¯block %d\n", 
bbi
->
id
);

3243 
j
;

3244 
lo›_t
* 
ps_ö°
 = 
NULL
;

3245 
Êag_ps
 = 0;

3246 
j
 = 0; j < 
bbi
->
bb
->
num_d_ö°
; j++) {

3247 
d©_ö°_t
* 
d©
 = 
bbi
->
bb
->
d_ö°li°
;

3248 
d©
 = d© + 
j
;

3249 
ö¢_t
* 
ö¢
 = 
d©
->insn;

3250 i‡(
	`isSt‹eIn°
(
ö¢
->
›
) == 1)

3252 
w‹kli°_p
 
add∫ode
;

3253 
ˇchemiss
 = 0;

3254 
add∫ode
 = 
bbi
->
addªss_£t
[
j
];ádd∫odê!
NULL
;áddrnode =

3255 
add∫ode
->
√xt
) {

3256 
ßddr_p
 
ßddr
 = 
add∫ode
->
d©a
;

3257 
	`Ârötf
(
fdbg
, "\t0x%x(%d)", 
ßddr
->
blkAddr
,

3258 
	`GET_SET
(
ßddr
->
blkAddr
));

3260 
w‹kli°_p
 
tsNode
 = 
ßddr
->
tsLi°
;

3261 
tsNode
 !
NULL
) {

3262 
ts_p
 
tsc›e
 = 
tsNode
->
d©a
;

3263 
	`Ârötf
(
fdbg
, "Ü%d[%d,%d]", 
tsc›e
->
lo›_id
,Åsc›e->
lw
,

3264 
tsc›e
->
up
);

3265 
tsNode
 =ÅsNode->
√xt
;

3268 
lo›_t
* 
psLp
 = 
	`s˝_mo°OuãrLo›
(
ßddr
->
psLo›
);

3269 i‡(
psLp
 =
NULL
) {

3270 
	`Ârötf
(
fdbg
, "Ös:NULL");

3271 
psLp
 = 
lo›_m≠
[
i
];

3273 
	`Ârötf
(
fdbg
, "Ös:%d", 
psLp
->
id
);

3274 
w‹kli°_p
 
ãmp_wp
 = 
ßddr
->
psLo›
;

3275 
ãmp_wp
 !
NULL
) {

3276 
lo›_t
* 
t
 = 
ãmp_wp
->
d©a
;

3277 
	`Ârötf
(
fdbg
, " _%d ", 
t
->
id
);

3278 
ãmp_wp
 =Åemp_wp->
√xt
;

3280 
psLp
 =ÖsLp->
∑ª¡
;

3282 
tŸÆ
 = 0;

3283 i‡(
psLp
 =
NULL
) {

3284 
tŸÆ
 = 1;

3286 
tŸÆ
 = 1;

3287 
psLp
 !
NULL
) {

3288 
w‹kli°_p
 
tsNode
 = 
ßddr
->
tsLi°
;

3289 ; 
tsNode
 !
NULL
;ÅsNodêtsNode->
√xt
) {

3290 
ts_p
 
ts˝
 = 
tsNode
->
d©a
;

3291 i‡(
ts˝
->
lo›_id
 =
psLp
->
id
) {

3292 
tŸÆ
 *(
ts˝
->
up
 -Ås˝->
lw
 + 1);

3296 
psLp
 =ÖsLp->
∑ª¡
;

3299 
ˇchemiss
 +
tŸÆ
;

3300 
	`Ârötf
(
fdbg
, " miss:%d", 
tŸÆ
);

3301 
	`Ârötf
(
fdbg
, "\n");

3303 
föÆ_miss
 +
ˇchemiss
;

3304 
	`Ârötf
(
fdbg
, "ö°:0x%†bb:%d cache_miss:%dÜp:%d\n", 
ö¢
->
addr
,

3305 
bbi
->
id
, 
ˇchemiss
, 
lo›_m≠
[bbi->id]->id);

3308 
	`Ârötf
(
fdbg
, "tŸÆ: %d\n", 
föÆ_miss
);

3309 
	`f˛o£
(
fdbg
);

3310 
	}
}

3312 
	$s˝_Ârötf_ACS
(
FILE
* 
fout
, 
s˝_acs
 
acs
) {

3313 
i
;

3314 
i
=0;i<
MAX_CACHE_SET
;i++) {

3315 
w‹kli°_p
 
node
 = 
acs
[
i
];

3316 
	`Ârötf
("\tˇche£t:%d\n",
i
);

3317 ;
node
!=
NULL
;nodeÚode->
√xt
) {

3318 
sblk_p
 
s˝_blk

node
->
d©a
;

3319 
	`Ârötf
(
fout
,"\t\t0x%x[%d]",
s˝_blk
->
m
->
blkAddr
,s˝_blk->
s˝_age
);

3320 
w‹kli°_p
 
ts_node
;

3324 
	}
}

3325 
	$s˝_com∑ª_s‹ãd_ACSs
(
lo›_t
*
Õ
) {

3326 
FILE
* 
fout
 = 
	`f›í
("ACS_dbg.txt", "w");

3327 
i
;

3328 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

3329 
tcfg_node_t
* 
bbi
 = 
tcfg
[
i
];

3330 i‡(
	`s˝_cmpLpOrdî
(
lo›_m≠
[
bbi
->
id
]->id, 
Õ
->id) > 0)

3335 
	`Ârötf
(
fout
, "Basi¯block %d (Õ:%dËf‹Üp:%d\n", 
bbi
->
id
,

3336 
lo›_m≠
[
bbi
->
id
]->id, 
Õ
->id);

3337 
	`Ârötf
(
fout
, "ACS_IN:\n");

3338 
	`s˝_Ârötf_ACS
(
fout
,
bbi
->
m∑_acs_ö
);

3339 
	`Ârötf
(
fout
, "ACS_OUT:\n");

3340 
	`s˝_Ârötf_ACS
(
fout
,
bbi
->
m∑_acs_out
);

3341 
	`Ârötf
(
fout
, "\n");

3344 
	`f˛o£
(
fout
);

3345 
	}
}

	@scp_cache.h

1 #i‚de‡
__MPA_CACHE_H_


2 
	#__MPA_CACHE_H_


	)

3 
	~"s˝_addªss.h
"

7 
	#L1_DCACHE_ANALYSIS
 1

	)

8 
	#L2_DCACHE_ANALYSIS
 2

	)

9 
	#UNIFIED_CACHE_ANALYSIS
 3

	)

11 
	#SBLK_FREE
 3

	)

12 
	#SBLK_DONE
 4

	)

13 
	#ACS_IDENTICAL
 0

	)

14 
	#ACS_NOT_IDENTICAL
 1

	)

15 
	#UNKNOWN_AGE
 -1

	)

17 
	g¥ötÊag
;

18 
	#EVICTED
 (
X
+1)

	)

19 
	#MAX_A
 4

	)

20 
	ssc›e_block
 {

21 
ßddr_p
 
	mm
;

22 
mem_blk_£t_t
* 
	mö°_block
;

24 
	mage
;

25 
ßddr_p
 
	mys
[
MAX_A
];

27 
	mÊag
;

29 
	ms˝_age
;

30 
w‹kli°_p
 
	mys_£t
;

31 
w‹kli°_p
 
	mö°_ys_£t
;

33 
sc›e_block
 
	tsblk_s
;

34 
sc›e_block
* 
	tsblk_p
;

36 
sblk_p
 
¸óãSBlk
(
ßddr_p
 
blkAddr
);

37 
˝ySBlk
(
sblk_p
 
d°
, sblk_∞
§c
);

38 
mîgeSBlk
(
sblk_p
 
d°
, sblk_∞
§c
);

39 
cmpSBlk
(
sblk_p
 
sblk1
, sblk_∞
sblk2
);

42 
addToYS
(
sblk_p
 
acsBlk
, 
ßddr_p
 
mAcc
);

43 
˛órYS
(
sblk_p
 
acsBlk
);

44 
uni⁄YS
(
sblk_p
 
d°Blk
, sblk_∞
§cBlk
);

47 
	#s˝_acs
 
w‹kli°_p
*

	)

49 
addToIncSë
(
ßddr_p
 
m
, 
w‹kli°_p
 *
¥vNode
, w‹kli°_∞*
°rNode
,

50 
lo›_t
 *
Õ
);

53 
	#WRITE_THRU
 1

	)

54 
	#AVOID_ONE_ACCESS_MULTIPLE_AGING
 1

	)

56 
	#AGED
 0x1

	)

59 
ˇnRíew
(
d©_ö°_t
* 
d_ö°
, 
ÕId
);

60 
PS_upd©e
(
s˝_acs
 
acs_out
, 
w‹kli°_p
 
addr_£t
, 
lo›_t
 *
Õ
);

63 
PS_joö
(
s˝_acs
 
§c
, s˝_ac†
d°
, 
lo›_t
 *
Õ
);

66 
å™sf‹m_bbi_dˇche
(
tcfg_node_t
 *
bbi
, 
lo›_t
* 
Õ
, 
ty≥
);

71 
gëOuãrPS
(
lo›_t
* 
Õ
);

74 
e°LpMissPS
(
lo›_t
* 
Õ
);

77 
e°NodeAŒMiss
(
tcfg_node_t
* 
bbi
);

82 
™Æyze_lo›_ps
(
lo›_t
 *
Õ
);

85 
m∑_d©aˇche
();

87 
ˇãg‹ize_ul2_ö°_PS_NC
(
bbi_id
, 
s˝_acs
 
m∑_acs_ö
, 
ö°_id
,

88 
de_ö°_t
* 
ö°
, 
lo›_t
*
Õ
);

89 
s˝_d©a_upd©e
(
s˝_acs
 
acs
, 
w‹kli°_p
 
addr_ö
, 
lo›_t
*
Õ
);

90 ** 
	gö°_p¢c_ul2
;

91 
lo›_t
*** 
	gö°_ps_lo›_ul2
;

92 
gë_mblk_hômiss_ul2
(
tcfg_node_t
*, , 
lo›_t
*, );

93 
lo›_di°
(
lo›_t
* 
Õ1
,Üo›_t* 
Õ2
);

94 
s˝_addrINacs
(
ßddr_p
 
maddr
, 
s˝_acs
 
acs
,
lo›_t
*
Õ
);

95 
s˝_cmp_ßddr
(
ßddr_p
 
d°
, saddr_∞
§c
, 
lo›_t
* 
Õ
);

96 
sblk_p
 
s˝_joö_£¨ch
(
ßddr_p
 
mblk
, 
w‹kli°_p
 
ˇche£t
, 
lo›_t
*
Õ
);

97 
sblk_p
 
s˝_joö_£¨ch_ö°
(
mem_blk_£t_t
* 
iblock
, 
w‹kli°_p
 
ˇche£t
);

98 
s˝_com∑ªACS
(
s˝_acs
 
acs_a
, s˝_ac†
acs_b
, 
lo›_t
*
Õ
);

99 
s˝_addrINacs
(
ßddr_p
 
maddr
, 
s˝_acs
 
acs
, 
lo›_t
*
Õ
);

100 
lo›_t
* 
s˝_ö√r_ps_lo›
(
w‹kli°_p
 
addr£t
);

101 
s˝_upd©e_Sblk_age
(
sblk_p
 
sblk
);

102 
uni_upd©e_ö°
(
s˝_acs
 
acs
, 
ö°_block
);

103 
s˝_ã°_ˇche_miss
();

104 
s˝_com∑ª_s‹ãd_ACSs
(
lo›_t
*
Õ
);

	@scp_tscope.c

1 
	~"s˝_addªss.h
"

3 
FILE
 *
	gdbgAddr
;

5 
USE_DOUBLE_MISS
;

6 
USE_SEGMENT_SIZE
;

7 
¥og_t
 
¥og
;

9 
tcfg_edge_t
 **
tcfg_edges
;

10 
num_tcfg_edges
;

12 
tcfg_node_t
 **
tcfg
;

13 
num_tcfg_nodes
;

15 
num_tcfg_lo›s
;

16 
lo›_t
 **
lo›_m≠
;

17 
lo›_t
 **
lo›s
;

18 
öf_lo›_t
 *
öf_lo›s
;

20 
X
, 
Y
, 
B
;

22 
ßddr_p
 
	gcurEnumBlk
;

23 
	gtŸÆBlk
;

24 
w‹kli°_p
 
	g¨øySizeC⁄s
;

27 
lo›_t
 *
gëIbLo›
(
öf_node_t
 *
ib
);

28 
	$gëIbLB
(
öf_node_t
 *
ib
) {

29 i‡(
ib
->
lo›_id
 == -1)

32  
öf_lo›s
[
ib
->
lo›_id
].
bound
;

33 
	}
}

35 *
	gôîVÆue
;

36 
	$gëLpBound
(
lo›_t
 *
Õ
) {

37 
dbg
 = 0;

38 
lb
;

39 i‡(
Õ
->
rId
 == -1)

40  
Õ
->
bound
;

41 
Õ
->
rTy≥
) {

42 
EQL_LB
:

43 
lb
 = 
ôîVÆue
[
Õ
->
rId
];

44 i‡(
lb
 = -1)

45 
lb
 = 
lo›s
[
Õ
->
rId
]->
bound
;

47 
INV_LB
:

48 
lb
 = 
Õ
->
rBound
 - 
ôîVÆue
[Õ->
rId
];

49 i‡(
lb
 = -1)

50 
lb
 = 
lo›s
[
Õ
->
rId
]->
bound
;

53 
lb
 = 
Õ
->
bound
;

55 i‡(
dbg
)

56 
	`Ârötf
(
dbgAddr
, "\nLo› L%d -‰om L%d,Üb%d", 
Õ
->
id
,Üp->
rId
, 
lb
);

57  
lb
;

58 
	}
}

60 
	gmöAddr
, 
	gmaxAddr
;

61 
w‹kli°_p
 
	gœ°Node
;

62 
w‹kli°_p
 *
	gíumTS£t
;

63 
w‹kli°_p
 *
	gíumAddrSë
;

64 
	$ˇchedNode
(
blkAddr
) {

65 
ßddr_p
 
smem
;

66 i‡(
œ°Node
) {

67 
smem
 = 
œ°Node
->
d©a
;

68 i‡(
smem
->
blkAddr
 =
	`GET_MEM
(blkAddr)) {

69 
	`mîgeTS£t
(
smem
->
tsLi°
, *
íumTS£t
, -1);

74 
	}
}

75 
	$íum_ªguœr_addªss
(
d©_ö°_t
* 
d_ö°
, 
ex¥_p
 
ex¥
, 
Êag
, 
curEq
,

76 
w‹kli°_p
 
curTSnode
, 
curAddr
) {

77 
dbg
 = 0;

78 
i
;

79 
ßddr_p
 
smem
;

80 
ts_p
 
ts
;

81 
lo›_t
 *
Õ
;

82 
lb
;

83 i‡(
curEq
 < 
ex¥
->
v¨Num
) {

84 
ts
 = 
curTSnode
->
d©a
;

85 
Õ
 = 
lo›s
[
ex¥
->
vÆue
[
curEq
].
vÆ
];

86 
curTSnode
) {

87 
ts
 = 
curTSnode
->
d©a
;

88 i‡(
ts
->
lo›_id
 =
Õ
->
id
)

91 
ts
->
lw
 = 0;

92 
ts
->
up
 = 
	`max
(
Õ
->
bound
-1,0);

93 
curTSnode
 = curTSnode->
√xt
;

96 
lb
 = 
	`gëLpBound
(
Õ
);

97 
i
 = 0; i < 
lb
; i++) {

98 
ôîVÆue
[
Õ
->
id
] = 
i
;

99 
ts
->
lw
 = 
i
;

100 
ts
->
up
 = 
i
;

101 
	`íum_ªguœr_addªss
(
d_ö°
, 
ex¥
, 
Êag
, 
curEq
 + 1, 
curTSnode
->
√xt
,

102 
curAddr
 + 
ex¥
->
c€f
[
curEq
] * 
i
);

106 i‡(
curAddr
 < 
möAddr
)

107 
möAddr
 = 
curAddr
;

108 i‡(
curAddr
 > 
maxAddr
)

109 
maxAddr
 = 
curAddr
;

110 i‡(
	`ˇchedNode
(
	`GET_MEM
(
curAddr
)))

112 
œ°Node
 = 
	`födBlkAddr
(
	`GET_MEM
(
curAddr
), *
íumAddrSë
);

113 i‡(
œ°Node
) {

114 
smem
 = 
œ°Node
->
d©a
;

115 i‡(
smem
->
blkAddr
 =
	`GET_MEM
(
curAddr
)) {

116 
	`mîgeTS£t
(
smem
->
tsLi°
, *
íumTS£t
, -1);

118 
ADD_ADDR
;

121 
ADD_ADDR
: 
smem
 = 
	`¸óãSAddr
(
	`GET_MEM
(
curAddr
), 
	`gëAddrD
(
d_ö°
),

122 
Êag
, *
íumTS£t
);

123 
	`addA·îNode
(
smem
, &
œ°Node
, 
íumAddrSë
);

126 
	}
}

128 
	$™Æyze_ªguœr_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
 *
ib
) {

129 
dbg
 = 0;

130 
i
, 
j
, 
mö
, 
tmp
;

131 
ÕId
, 
addr
, 
Êag
;

132 
ö¢_t
 *
ö¢
;

133 
ex¥_p
 
exp
;

134 
ªg_t
 
tmpReg
;

135 
ts_p
 
ts
;

136 
lo›_t
 *
Õ
;

137 
ÕIãr
[5];

138 
w‹kli°_p
 
tsLi°
, 
tsNode
, 
addrSë
;

140 
	`öôReg
(&
tmpReg
);

141 
exp
 = &(
d_ö°
->
addrEx¥
);

144 
i
 = 0; i < 
exp
->
v¨Num
; i++) {

145 i‡(
exp
->
vÆue
[
i
].
t
 =
VALUE_PARA
 ||Éxp->vÆue[i].à=
VALUE_UNDEF
) {

146 
	`™Æyze_u≈ªd_ac˚ss
(
d_ö°
, 
ib
);

152 
i
 = 0; i < 
exp
->
v¨Num
; i++) {

153 
mö
 = 
i
;

154 
j
 = 
i
 + 1; j < 
exp
->
v¨Num
; j++) {

155 i‡(
exp
->
vÆue
[
j
].
vÆ
 <exp->vÆue[
mö
].val)

156 
mö
 = 
j
;

158 i‡(
exp
->
c€f
[
i
] = 0 -Éxp->c€f[
j
]) {

159 
exp
->
vÆue
[
i
].
vÆ
 = 
	`max
”xp->vÆue[i].vÆ,exp->vÆue[
j
].val);

160 
exp
->
c€f
[
i
] = 
	`absI¡
(exp->coef[i]);

161 
exp
->
c€f
[
j
] = 0;

162 
exp
->
vÆue
[
j
].
vÆ
 = 999;

166 i‡(
i
 =
mö
)

168 i‡(
exp
->
vÆue
[
mö
].
vÆ
 =exp->vÆue[
i
].val) {

170 
exp
->
c€f
[
i
] +exp->c€f[
mö
];

171 
exp
->
vÆue
[
mö
].
vÆ
 = 999;

172 
exp
->
c€f
[
mö
] = 0;

174 
	`˝yReg
(&
tmpReg
, 
exp
->
vÆue
[
i
]);

175 
	`˝yReg
(&(
exp
->
vÆue
[
i
]),Éxp->vÆue[
mö
]);

176 
	`˝yReg
(&(
exp
->
vÆue
[
mö
]), 
tmpReg
);

177 
tmp
 = 
exp
->
c€f
[
i
];

178 
exp
->
c€f
[
i
] =Éxp->c€f[
mö
];

179 
exp
->
c€f
[
mö
] = 
tmp
;

183 
exp
->
v¨Num
 > 0) {

184 
i
 = 
exp
->
v¨Num
 - 1;

185 i‡(
exp
->
vÆue
[
i
].
vÆ
 == 999)

186 
exp
->
v¨Num
--;

191 i‡(
dbg
) {

192 
	`Ârötf
(
dbgAddr
, "\nSortedÉxpr: ");

193 
	`¥ötEx¥
(
dbgAddr
, 
exp
);

197 
tsLi°
 = 
NULL
;

198 
tsNode
 = 
NULL
;

199 
Õ
 = 
lo›s
[
exp
->
vÆue
[0].
vÆ
];

200 
i
 = 0;

201 
Õ
 !
NULL
) {

203 
	`Ârötf
(
dbgAddr
, "\¿I¿lo› L%d,Übound %d", 
Õ
->
id
,

204 
Õ
->
bound
 - 1);

206 
ts
 = (
ts_p
Ë
	`mÆloc
((
ts_s
));

207 i‡(
Õ
->
id
 =
exp
->
vÆue
[
i
].
vÆ
) {

208 
ts
->
lo›_id
 = 
Õ
->
id
;

209 
ts
->
lw
 = 0;

210 
ts
->
up
 = 0;

211 
ts
->
Êag
 = 0;

212 
i
++;

214 
ts
->
lo›_id
 = 
Õ
->
id
;

215 
ts
->
lw
 = 0;

216 
ts
->
up
 = 
Õ
->
bound
;

217 
ts
->
Êag
 = 0;

219 
	`addA·îNode
(
ts
, &
tsNode
, &
tsLi°
);

221 
Õ
 =Üp->
∑ª¡
;

223 i‡(
dbg
) {

224 
	`Ârötf
(
dbgAddr
, "\nTemporal scope: ");

225 
	`¥ötTS£t
(
dbgAddr
, 
tsLi°
);

229 
addrSë
 = 
NULL
;

230 
œ°Node
 = 
NULL
;

231 
íumTS£t
 = &
tsLi°
;

232 
íumAddrSë
 = &
addrSë
;

233 
Êag
 = 0;

234 
i
 = 0; i < 
num_tcfg_lo›s
; i++)

235 
ôîVÆue
[
i
] = -1;

236 
möAddr
 = 
exp
->
k
;

237 
maxAddr
 = 0;

238 
	`íum_ªguœr_addªss
(
d_ö°
, 
exp
, 
Êag
, 0, 
tsLi°
,Éxp->
k
);

239 
d_ö°
->
addr_£t
 = 
addrSë
;

240 i‡(
dbg
) {

241 
	`Ârötf
(
dbgAddr
, "\nGíî©edÑ™ge: [%x, %x], %dÉÀms", 
möAddr
,

242 
maxAddr
, 
	`GET_MEM
(maxAddr-
möAddr
));

245 
	}
}

248 
	$™Æyze_hÆf_ªguœr_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
 *
ib
) {

250 
	`™Æyze_u≈ªd_ac˚ss
(
d_ö°
, 
ib
);

251 
	}
}

254 
	$™Æyze_u≈ªd_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
) {

255 
dbg
 = 0;

264 
öôAddr
 = -1, 
addr
;

265 
symbﬁ_i
 *
gV¨
, *
v¨
;

267 
i
;

268 
lo›_t
 *
lo›
;

269 
ßddr_p
 
memblk
, 
curblk
;

270 
ts_p
 
memTS
;

271 
w‹kli°_p
 
tsNode
, 
‹gTS
, 
blkNode
;

272 
ö¢_t
 *
ö¢
;

273 
foundR™ge
;

274 
ex¥_p
 
exp
;

277 
lo›
 = 
	`gëIbLo›
(
ib
);

278 
tsNode
 = 
NULL
;

279 
‹gTS
 = 
NULL
;

280 
lo›
 !
NULL
) {

281 
memTS
 = 
	`mÆloc
((
ts_s
));

282 
memTS
->
lo›_id
 = 
lo›
->
id
;

283 
memTS
->
lw
 = 0;

284 
memTS
->
up
 = 
	`max
(
lo›
->
bound
-1,0);

285 
memTS
->
Êag
 = 0;

286 
	`addA·îNode
(
memTS
, &
tsNode
, &
‹gTS
);

288 
lo›
 =Üo›->
∑ª¡
;

291 
curblk
 = 
NULL
;

292 
blkNode
 = 
NULL
;

293 
foundR™ge
 = 0;

294 
exp
 = &(
d_ö°
->
addrEx¥
);

295 
ö¢
 = (
ö¢_t
*Ë(
d_ö°
->insn);

296 
öôAddr
 = 
exp
->
k
;

298 
i
 = 0; i < 
¥og
.
num_v¨s
; i++) {

299 
gV¨
 = &(
¥og
.
v_öfo
[
i
]);

300 i‡(
gV¨
->
addr
 <
öôAddr
 && inôAdd∏< gV¨->add∏+ gV¨->
size
) {

301 
foundR™ge
 = 1;

305 i‡(
foundR™ge
) {

309 i‡(
	`°rcmp
(
gV¨
->
«me
, "stepsizeTable") == 0) {

310 
gV¨
->
size
 = 89 * 4;

312 i‡(
	`°rcmp
(
gV¨
->
«me
, "indexTable") == 0) {

313 
gV¨
->
size
 = 16 * 4;

316 i‡(
gV¨
->
size
 > 
CACHE_SIZE


318 
UNKNOWN_RANGE
;

320 i‡(
dbg
) {

321 
	`Ârötf
(
dbgAddr
, "\n Global var: %s [%x,%x],árray sa: %x, size %d",

322 
gV¨
->
«me
, gV¨->
addr
, gV¨->add∏+ gV¨->
size
, 
öôAddr
,

323 
gV¨
->
size
);

324 
	`fÊush
(
dbgAddr
);

326 
addr
 = 
gV¨
->addr;ádd∏< gV¨->add∏+ gV¨->
size
;áddr += 4) {

327 i‡(
curblk
 && 
	`GET_MEM
(
addr
Ë=curblk->
blkAddr
)

329 
memblk
 = 
	`¸óãSAddr
(
	`GET_MEM
(
addr
), 
	`hexVÆue
(
ö¢
->addr), 0, 
‹gTS
);

330 
	`addA·îNode
(
memblk
, &
blkNode
, &(
d_ö°
->
addr_£t
));

331 
curblk
 = 
memblk
;

334 
UNKNOWN_RANGE
: i‡(
dbg
) {

335 
	`Ârötf
(
dbgAddr
, "\nUnknownáddrÑange");

336 
	`fÊush
(
dbgAddr
);

338 
memblk
 = 
	`¸óãSAddr
(
UNKNOWN_ADDR
, 
	`hexVÆue
(
ö¢
->
addr
), 0, 
‹gTS
);

339 
	`addA·îNode
(
memblk
, &
blkNode
, &(
d_ö°
->
addr_£t
));

343 
	}
}

346 
	$™Æyze_sˇœr_ac˚ss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
) {

347 
dbg
 = 0;

348 
pos
;

349 
addr
;

351 
ö¢_t
* 
ö¢
;

352 
lo›_t
 *
lo›
;

353 
ßddr_p
 
memblk
;

354 
ts_p
 
memTS
;

355 
w‹kli°_p
 
tsNode
, 
‹gTS
, 
blkNode
;

357 i‡(
d_ö°
->
addrEx¥
.
v¨Num
 != 0) {

358 
	`¥ötf
("\nERR:Çot scalaráccess");

359 
	`¥ötD©aRef
(
°dout
, 
d_ö°
);

362 
addr
 = 
d_ö°
->
addrEx¥
.
k
;

364 
tsNode
 = 
NULL
;

365 
‹gTS
 = 
NULL
;

366 
lo›
 = 
	`gëIbLo›
(
ib
);

367 
lo›
 !
NULL
) {

368 i‡(
dbg
) {

369 
	`Ârötf
(
dbgAddr
, "\¿I¿lo› L%d,Übound %d", 
lo›
->
id
,

370 
lo›
->
bound
 - 1);

371 
	`fÊush
(
dbgAddr
);

374 
memTS
 = (
ts_p
Ë
	`mÆloc
((
ts_s
));

375 
memTS
->
lo›_id
 = 
lo›
->
id
;

376 
memTS
->
lw
 = 0;

377 
memTS
->
up
 = 
	`max
(
lo›
->
bound
-1,0);

378 
memTS
->
Êag
 = 0;

379 
memTS
->
Êag
 |
RENEWABLE
;

380 
	`addA·îNode
(
memTS
, &
tsNode
, &
‹gTS
);

382 
lo›
 =Üo›->
∑ª¡
;

384 
blkNode
 = 
NULL
;

385 
ö¢
 = (
ö¢_t
*Ë(
d_ö°
->insn);

386 i‡(
B
 == 0 ){

387 
	`¥ötf
("BUGGG\n");

388 
	`exô
(0);

390 
memblk
 = 
	`¸óãSAddr
(
	`GET_MEM
(
addr
), 
	`hexVÆue
(
ö¢
->addr), 1, 
‹gTS
);

391 
	`addA·îNode
(
memblk
, &
blkNode
, &(
d_ö°
->
addr_£t
));

393 
	}
}

395 
	$gíAc˚ssAddªss
(
d©_ö°_t
 *
d_ö°
, 
öf_node_t
* 
ib
) {

396 
dbg
 = 0;

397 
i
, 
j
;

398 
ö¢_t
 *
ö¢
;

399 
de_ö°_t
 *
ö°
;

400 *
dîôªe
;

402 
d_ö°
->
addr_£t
 = 
NULL
;

403 
ö¢
 = 
d_ö°
->insn;

404 
íabÀ_wrôe_Æloˇã
;

405 i‡(
	`isSt‹eIn°
(
ö¢
->
›
)) {

406 i‡(
dbg
) {

407 
	`Ârötf
(
dbgAddr
, "\n Ignore store inst");

408 
	`¥ötD©aRef
(
dbgAddr
, 
d_ö°
);

413 
d_ö°
->
addrEx¥
.
v¨Num
) {

415 i‡(
dbg
) {

416 
	`Ârötf
(
dbgAddr
, "\nAnalyze scalaráccess");

417 
	`Ârötf
(
dbgAddr
, " L%d ", 
	`gëIbLo›
(
ib
)->
id
);

418 
	`¥ötD©aRef
(
dbgAddr
, 
d_ö°
);

420 
	`™Æyze_sˇœr_ac˚ss
(
d_ö°
, 
ib
);

423 i‡(
dbg
) {

424 
	`Ârötf
(
dbgAddr
, "\nAnalyzeÑegular/unpredáccess");

425 
	`Ârötf
(
dbgAddr
, " L%d ", 
	`gëIbLo›
(
ib
)->
id
);

426 
	`¥ötD©aRef
(
dbgAddr
, 
d_ö°
);

428 
	`™Æyze_ªguœr_ac˚ss
(
d_ö°
, 
ib
);

433 i‡(
dbg
) {

434 
	`Ârötf
(
dbgAddr
, "\nGeneratedáddr ");

435 
	`¥ötSAddrSë
(
dbgAddr
, 
d_ö°
->
addr_£t
, 1);

436 
	`Ârötf
(
dbgAddr
, "\n");

439 
	}
}

442 
	$ªadExåaC⁄s
(*
bö_‚ame
) {

443 
dbg
 = 0;

444 
FILE
 *
fc⁄s
;

445 
‚ame
[256], 
°r
[256], 
tokí
[256];

446 
pos
;

447 
idL1
, 
idL2
, 
k
;

448 
lo›_t
 *
l1
, *
l2
;

450 
	`•rötf
(
‚ame
, "%s.ec⁄", 
bö_‚ame
);

451 
fc⁄s
 = 
	`f›í
(
‚ame
, "r");

452 i‡(!
fc⁄s
)

454 
	`fgës
(
°r
, 256, 
fc⁄s
) != 0) {

455 
pos
 = 0;

456 
	`gëNextTokí
(
tokí
, 
°r
, &
pos
, " ");

457 i‡(
dbg
) {

458 
	`Ârötf
(
dbgAddr
, "C⁄†Ty≥ %s", 
tokí
);

459 
	`fÊush
(
dbgAddr
);

461 i‡(
	`°rcmp
(
tokí
, "eql") == 0) {

464 
	`ssˇnf
(
°r
 + 
pos
, "%d %d %d", &
idL1
, &
idL2
, &
k
);

465 
l1
 = 
lo›s
[
idL1
];

466 
l2
 = 
lo›s
[
idL2
];

467 i‡(
	`isI¬î
(
idL1
, 
idL2
) == 0) {

468 
	`¥ötf
("\nWr⁄g RLB c⁄s: L%d i†nŸ i¬îÜo› o‡L%d", 
l1
->
id
,

469 
l2
->
id
);

470 
	`exô
(1);

472 
l1
->
rId
 = 
l2
->
id
;

473 
l1
->
rBound
 = 
k
;

474 
l1
->
rTy≥
 = 
EQL_LB
;

475 i‡(
dbg
) {

476 
	`Ârötf
(
dbgAddr
, "\nEqual outer interation bound:");

477 
	`Ârötf
(
dbgAddr
, " LB L%d <LI L%d + %d", 
idL1
, 
idL2
, 
k
);

478 
	`fÊush
(
dbgAddr
);

480 } i‡(
	`°rcmp
(
tokí
, "inv") == 0) {

483 
	`ssˇnf
(
°r
 + 
pos
, "%d %d %d", &
idL1
, &
idL2
, &
k
);

484 
l1
 = 
lo›s
[
idL1
];

485 
l2
 = 
lo›s
[
idL2
];

486 i‡(
	`isI¬î
(
l1
->
id
, 
l2
->id) == 0) {

487 
	`¥ötf
("\nWr⁄g RLB c⁄s: L%d i†nŸ i¬îÜo› o‡L%d", 
l1
->
id
,

488 
l2
->
id
);

489 
	`exô
(1);

491 
l1
->
rId
 = 
l2
->
id
;

492 
l1
->
rBound
 = 
k
;

493 
l1
->
rTy≥
 = 
INV_LB
;

494 i‡(
dbg
) {

495 
	`Ârötf
(
dbgAddr
, "\nInverse outer interation bound:");

496 
	`Ârötf
(
dbgAddr
, " LB L%d <%d - LI L%d", 
idL1
, 
k
, 
idL2
);

497 
	`fÊush
(
dbgAddr
);

500 
	`Ârötf
(
dbgAddr
, "\nUnknow¿c⁄°øöt: %s", 
°r
);

501 
	`fÊush
(
dbgAddr
);

504 
	}
}

505 
	$öôMem
() {

506 
dbgAddr
 = 
	`f›í
("dbg_addr.dbg", "w");

507 
ôîVÆue
 = 
	`ˇŒoc
(
num_tcfg_lo›s
, ());

508 
	}
}

509 
	$‰ìMem
() {

510 
	`f˛o£
(
dbgAddr
);

511 
	`‰ì
(
ôîVÆue
);

512 
	}
}

513 
	$öôAŒ
(*
bö_‚ame
) {

514 
dbg
 = 0;

515 
i
, 
j
, 
k
;

516 
lo›_t
 *
lo›
, *
¥eLo›
;

517 
öf_node_t
 *
ib
;

518 
öf_¥oc_t
 *
ù
;

520 
	`öôMem
();

521 
tŸÆBlk
 = 0;

522 
curEnumBlk
 = 
NULL
;

523 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

524 
lo›
 = 
lo›s
[
i
];

525 
lo›
->
bound
 = 0;

526 
lo›
->
rId
 = -1;

527 
lo›
->
rTy≥
 = -1;

528 
lo›
->
rBound
 = -1;

531 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

532 
ù
 = &(
öf_¥ocs
[
i
]);

533 i‡(
ù
==
NULL
){

534 
	`¥ötf
("BUGGG\n");

536 
j
 = 0; j < 
ù
->
num_bb
; j++) {

537 
ib
 = &(
ù
->
öf_cfg
[
j
]);

538 
lo›
 = 
	`gëIbLo›
(
ib
);

539 i‡(
lo›
) {

540 
lo›
->
bound
 = 
	`gëIbLB
(
ib
);

541 
lo›
->
rId
 = -1;

542 
lo›
->
rTy≥
 = -1;

543 
lo›
->
rBound
 = -1;

547 
lo›s
[0]->
bound
 = 1;

550 
	`ªadExåaC⁄s
(
bö_‚ame
);

552 
lo›s
[0]->
exec
 = 1;

554 
i
 = 
num_tcfg_lo›s
 - 1; i > 0; i--) {

555 
lo›
 = 
lo›s
[
i
];

556 
lo›
->
exec
 = 1;

557 i‡(
lo›
->
rId
 == -1) {

558 i‡(
lo›
->
∑ª¡
)

559 
lo›
->
exec
 =Üo›->
∑ª¡
->exe¯*Üo›->
bound
;

561 
	`¥ötf
("\¿L%dÑbIb %dÑTy≥ %d", 
lo›
->
id
,Üo›->
rId
,Üo›->
rTy≥
);

562 
¥eLo›
 = 
lo›s
[
lo›
->
rId
];

563 i‡(!
¥eLo›
)

565 
lo›
->
exec
 = 0;

566 
lo›
->
rTy≥
) {

567 
EQL_LB
:

569 
j
 = 0; j < 
¥eLo›
->
bound
; ) {

570 
lo›
->
exec
 +(
j
+lo›->
rBound
);

573 
lo›
->
exec
 = (
¥eLo›
->
bound
 * (preLoop->bound - 1) / 2);

575 
INV_LB
:

576 
j
 = 
¥eLo›
->
bound
; j >= 0; j--) {

577 
lo›
->
exec
 +÷o›->
rBound
 - 
j
);

581 
	`¥ötf
("\nUnknow¿ªœtivêbound c⁄†ty≥: %d", 
lo›
->
rTy≥
);

582 
	`fÊush
(
°dout
);

583 
	`exô
(1);

586 i‡(
¥eLo›
->
∑ª¡
) {

587 
lo›
->
exec
 =Üo›->exe¯* 
¥eLo›
->
∑ª¡
->exec;

592 i‡(
dbg
) {

593 
i
 = 1; i < 
num_tcfg_lo›s
; i++) {

594 
lo›
 = 
lo›s
[
i
];

595 i‡(
lo›
->
rId
 == -1) {

596 
	`Ârötf
(
dbgAddr
, "\¿Lo› L%dÜb:%dÉ¡ry:%dÉxec:%d", 
lo›
->
id
,

597 
lo›
->
bound
,Üo›->
∑ª¡
->
exec
,Üoop->exec);

599 
¥eLo›
 = 
lo›s
[
lo›
->
rId
];

600 
lo›
->
rTy≥
) {

601 
EQL_LB
:

602 
INV_LB
:

603 
	`Ârötf
(
dbgAddr
, "\n Loop L%dÜb:L%dÉntry:%dÉxec:%d",

604 
lo›
->
id
, 
¥eLo›
->id,ÖªLo›->
exec
,Üoop->exec);

611 
	`fÊush
(
dbgAddr
);

614 
	}
}

615 
	$ªadSizeC⁄s
(*
bö_‚ame
) {

616 
dbg
 = 0;

617 
FILE
 *
gAºay
;

618 
i
;

619 
°r
[256];

620 
size
;

621 
size_c⁄s_p
 
sC⁄s
;

623 
	`•rötf
(
°r
, "%s.sizeC⁄s", 
bö_‚ame
);

624 
gAºay
 = 
	`f›í
(
°r
, "r");

625 !
	`„of
(
gAºay
)) {

626 
sC⁄s
 = 
	`mÆloc
((
size_c⁄s_s
));

627 
	`fsˇnf
(
gAºay
, "%†%d", 
sC⁄s
->
«me
, &(sC⁄s->
size
));

628 
	`addToW‹kLi°
(&
¨øySizeC⁄s
, 
sC⁄s
);

629 i‡(
dbg
)

630 
	`Ârötf
(
dbgAddr
, "\nSizêc⁄°øöt: %†%d", 
sC⁄s
->
«me
,

631 
sC⁄s
->
size
);

633 
	}
}

634 
	$˛assifõd_addªss_™Æysis
(*
bö_‚ame
) {

635 
dbg
 = 0;

636 
i
, 
j
, 
k
;

637 
P_Queue
 *
pQueue
;

639 
tcfg_node_t
 *
tbb
, *
t§c
, *
tdes
;

640 
cfg_node_t
 *
bb
, *
§c
, *
des
;

641 
tcfg_edge_t
 *
ãdge
;

642 
cfg_edge_t
 *
edge
;

643 
öf_node_t
 *
ib
, *
i§c
, *
ides
;

644 
öf_¥oc_t
 *
ù
;

647 
de_ö°_t
 *
ö°
;

648 
d©_ö°_t
 *
d_ö°
;

650 
lo›_t
 *
lo›
, *
¥eLo›
;

652 
FILE
 *
dbgAddr
;

654 
dbgAddr
 = 
	`f›í
("dbg_addr.dbg", "w");

655 
	`¥ötf
("\nPerformingáddressánalysis\n");

656 
	`fÊush
(
°dout
);

657 
	`£tAddrDebugFûe
(
dbgAddr
);

658 
	`öôAŒ
(
bö_‚ame
);

660 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

661 
ù
 = &(
öf_¥ocs
[
i
]);

662 
j
 = 0; j < 
ù
->
num_bb
; j++) {

663 
ib
 = &(
ù
->
öf_cfg
[
j
]);

664 i‡(
dbg
) {

665 
	`Ârötf
(
dbgAddr
, "\nBB (%d,%dËL%dÇum:%d sa:%s", 
i
, 
j
,

666 
ib
->
lo›_id
, ib->
num_ö¢
, ib->
ö¢li°
[0].
addr
);

667 
	`fÊush
(
dbgAddr
);

669 
bb
 = 
ib
->bb;

670 
k
 = 0; k < 
bb
->
num_d_ö°
; k++) {

671 
d_ö°
 = (
d©_ö°_t
*Ë(
bb
->
d_ö°li°
);

672 
d_ö°
 = d_ö° + 
k
;

673 
	`gíAc˚ssAddªss
(
d_ö°
, 
ib
);

679 
	`Ârötf
(
dbgAddr
, "Cª©ed memblk: %d\n", 
tŸÆBlk
);

680 
	`fÊush
(
dbgAddr
);

681 
	`¥ötf
("Cª©ed memblk: %d\n", 
tŸÆBlk
);

682 
	`fÊush
(
°dout
);

684 
	`‰ìMem
();

685 
	}
}

	@ss/decode_cfg.h

23 #i‚de‡
DECODE_CFG_H


24 
	#DECODE_CFG_H


	)

31 
	#DNA
 (0)

	)

33 #i‡
deföed
(
TARGET_PISA
)

36 
	#DGPR
(
N
Ë(N)

	)

37 
	#DGPR_D
(
N
Ë((NË&~1)

	)

40 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

41 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

42 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

45 
	#DHI
 (0+32+32)

	)

46 
	#DLO
 (1+32+32)

	)

47 
	#DFCC
 (2+32+32)

	)

48 
	#DTMP
 (3+32+32)

	)

50 #ñi‡
deföed
(
TARGET_ALPHA
)

53 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

56 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

59 
	#DFPCR
 (0+32+32)

	)

60 
	#DUNIQ
 (1+32+32)

	)

61 
	#DTMP
 (2+32+32)

	)

64 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

	@ss/ecoff.h

101 #i‚de‡
ECOFF_H


102 
	#ECOFF_H


	)

104 
	#ECOFF_EB_MAGIC
 0x0160

	)

105 
	#ECOFF_EL_MAGIC
 0x0162

	)

107 
	secoff_fûehdr
 {

108 
	mf_magic
;

109 
	mf_ns˙s
;

110 
	mf_timd©
;

111 
	mf_sym±r
;

112 
	mf_nsyms
;

113 
	mf_›thdr
;

114 
	mf_Êags
;

117 
	secoff_aouthdr
 {

118 
	mmagic
;

119 
	mv°amp
;

120 
	mtsize
;

121 
	mdsize
;

122 
	mbsize
;

123 
	míåy
;

124 
	mãxt_°¨t
;

125 
	md©a_°¨t
;

126 
	mbss_°¨t
;

127 
	mg¥mask
;

128 
	m˝rmask
[4];

129 
	mgp_vÆue
;

132 
	secoff_s˙hdr
 {

133 
	ms_«me
[8];

134 
	ms_∑ddr
;

135 
	ms_vaddr
;

136 
	ms_size
;

137 
	ms_s˙±r
;

138 
	ms_ªÕå
;

139 
	ms_ n›å
;

140 
	ms_ƒñoc
;

141 
	ms_∆¬o
;

142 
	ms_Êags
;

145 
	secoff_symhdr_t
 {

146 
	mmagic
;

147 
	mv°amp
;

148 
	mûöeMax
;

149 
	mcbLöe
;

150 
	mcbLöeOff£t
;

151 
	midnMax
;

152 
	mcbDnOff£t
;

153 
	mùdMax
;

154 
	mcbPdOff£t
;

155 
	misymMax
;

156 
	mcbSymOff£t
;

157 
	mi›tMax
;

158 
	mcbO±Off£t
;

159 
	müuxMax
;

160 
	mcbAuxOff£t
;

161 
	missMax
;

162 
	mcbSsOff£t
;

163 
	missExtMax
;

164 
	mcbSsExtOff£t
;

165 
	mifdMax
;

166 
	mcbFdOff£t
;

167 
	m¸fd
;

168 
	mcbRfdOff£t
;

169 
	mõxtMax
;

170 
	mcbExtOff£t
;

171 } 
	tecoff_HDRR
;

173 
	#ECOFF_magicSym
 0x7009

	)

175 
	secoff_fdr
 {

176 
	madr
;

177 
	mrss
;

178 
	missBa£
;

179 
	mcbSs
;

180 
	misymBa£
;

181 
	mcsym
;

182 
	mûöeBa£
;

183 
	m˛öe
;

184 
	mi›tBa£
;

185 
	mc›t
;

186 
	mùdFú°
;

187 
	m˝d
;

188 
	müuxBa£
;

189 
	mˇux
;

190 
	mrfdBa£
;

191 
	m¸fd
;

192 
	mœng
 :5;

193 
	mfMîge
 :1;

194 
	mfRódö
 :1;

195 
	mfBigídün
 :1;

196 
	mª£rved
 :24;

197 
	mcbLöeOff£t
;

198 
	mcbLöe
;

199 } 
	tecoff_FDR
;

201 
	secoff_pdr
 {

202 
	madr
;

203 
	misym
;

204 
	mûöe
;

205 
	mªgmask
;

206 
	mªgoff£t
;

207 
	mi›t
;

208 
	m‰egmask
;

209 
	m‰egoff£t
;

210 
	m‰ameoff£t
;

211 
	m‰amîeg
;

212 
	mp¸eg
;

213 
	m Low
;

214 
	m High
;

215 
	mcbLöeOff£t
;

216 } 
	tecoff_PDR
;

218 
	secoff_SYMR
 {

219 
	miss
;

220 
	mvÆue
;

221 
	m°
 :6;

222 
	msc
 :5;

223 
	mª£rved
 :1;

224 
	mödex
 :20;

225 } 
	tecoff_SYMR
;

227 
	secoff_EXTR
 {

228 
	mª£rved
;

229 
	mifd
;

230 
ecoff_SYMR
 
	masym
;

231 } 
	tecoff_EXTR
;

233 
	#ECOFF_R_SN_TEXT
 1

	)

234 
	#ECOFF_R_SN_RDATA
 2

	)

235 
	#ECOFF_R_SN_DATA
 3

	)

236 
	#ECOFF_R_SN_SDATA
 4

	)

237 
	#ECOFF_R_SN_SBSS
 5

	)

238 
	#ECOFF_R_SN_BSS
 6

	)

240 
	#ECOFF_STYP_TEXT
 0x0020

	)

241 
	#ECOFF_STYP_RDATA
 0x0100

	)

242 
	#ECOFF_STYP_DATA
 0x0040

	)

243 
	#ECOFF_STYP_SDATA
 0x0200

	)

244 
	#ECOFF_STYP_SBSS
 0x0400

	)

245 
	#ECOFF_STYP_BSS
 0x0080

	)

247 
	#ECOFF_°Nû
 0

	)

248 
	#ECOFF_°GlobÆ
 1

	)

249 
	#ECOFF_°Sètic
 2

	)

250 
	#ECOFF_°P¨am
 3

	)

251 
	#ECOFF_°Loˇl
 4

	)

252 
	#ECOFF_°Labñ
 5

	)

253 
	#ECOFF_°Proc
 6

	)

254 
	#ECOFF_°Block
 7

	)

255 
	#ECOFF_°End
 8

	)

256 
	#ECOFF_°Membî
 9

	)

257 
	#ECOFF_°Ty≥def
 10

	)

258 
	#ECOFF_°Fûe
 11

	)

259 
	#ECOFF_°RegRñoc
 12

	)

260 
	#ECOFF_°F‹w¨d
 13

	)

261 
	#ECOFF_°SèticProc
 14

	)

262 
	#ECOFF_°C⁄°™t
 15

	)

	@ss/eval.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<˘y≥.h
>

55 
	~<î∫o.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"evÆ.h
"

61 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

62 
	#°πoul
 
°πﬁ


	)

66 
evÆ_îr_t
 
	gevÆ_îr‹
 = 
ERR_NOERR
;

69 *
	gevÆ_îr_°r
[
ERR_NUM
] = {

81 
evÆ_tokí_t
 
	gtok_m≠
[256];

82 
	gtok_m≠_öôülized
 = 
FALSE
;

86 
	$öô_tok_m≠
()

88 
i
;

90 
i
=0; i<256; i++)

91 
tok_m≠
[
i
] = 
tok_övÆid
;

94 
i
='a'; i<='z'; i++)

95 
tok_m≠
[
i
] = 
tok_idít
;

96 
i
='A'; i<='Z'; i++)

97 
tok_m≠
[
i
] = 
tok_idít
;

98 
tok_m≠
[()'_'] = 
tok_idít
;

99 
tok_m≠
[()'$'] = 
tok_idít
;

102 
i
='0'; i<='9'; i++)

103 
tok_m≠
[
i
] = 
tok_c⁄°
;

104 
tok_m≠
[()'.'] = 
tok_c⁄°
;

107 
tok_m≠
[()'+'] = 
tok_∂us
;

108 
tok_m≠
[()'-'] = 
tok_möus
;

109 
tok_m≠
[()'*'] = 
tok_mu…
;

110 
tok_m≠
[()'/'] = 
tok_div
;

111 
tok_m≠
[()'('] = 
tok_›¨í
;

112 
tok_m≠
[()')'] = 
tok_˝¨í
;

115 
tok_m≠
[()' '] = 
tok_whôe•a˚
;

116 
tok_m≠
[()'\t'] = 
tok_whôe•a˚
;

117 
	}
}

120 
evÆ_tokí_t


121 
	$gë_√xt_tokí
(
evÆ_°©e_t
 *
es
)

123 
Ælow_hex
;

124 
evÆ_tokí_t
 
tok
;

125 *
±ok_buf
, 
œ°_ch¨
;

128 i‡(!
tok_m≠_öôülized
)

130 
	`öô_tok_m≠
();

131 
tok_m≠_öôülized
 = 
TRUE
;

135 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

137 
tok
 = 
es
->
≥ek_tok
;

138 
es
->
≥ek_tok
 = 
tok_övÆid
;

139  
tok
;

143 
±ok_buf
 = 
es
->
tok_buf
;

144 *
±ok_buf
 = '\0';

147 *
es
->
p
 && 
tok_m≠
[()*es->p] =
tok_whôe•a˚
)

148 
es
->
p
++;

151 i‡(*
es
->
p
 == '\0')

152  
tok_eof
;

154 *
±ok_buf
++ = *
es
->
p
;

155 
tok
 = 
tok_m≠
[()*
es
->
p
++];

156 
tok
)

158 
tok_idít
:

160 *
es
->
p


161 && (
tok_m≠
[()*
es
->
p
] =
tok_idít


162 || 
tok_m≠
[()*
es
->
p
] =
tok_c⁄°
))

164 *
±ok_buf
++ = *
es
->
p
++;

167 
tok_c⁄°
:

169 
œ°_ch¨
 = '\0';

170 
Ælow_hex
 = 
FALSE
;

171 *
es
->
p
 &&

172 (
tok_m≠
[()*
es
->
p
] =
tok_c⁄°


173 || (*
es
->
p
 ='-' && 
œ°_ch¨
 == 'e')

174 || (*
es
->
p
 ='+' && 
œ°_ch¨
 == 'e')

175 || 
	`tﬁowî
(*
es
->
p
) == 'e'

176 || 
	`tﬁowî
(*
es
->
p
) == 'x'

177 || (
	`tﬁowî
(*
es
->
p
Ë='a' && 
Ælow_hex
)

178 || (
	`tﬁowî
(*
es
->
p
Ë='b' && 
Ælow_hex
)

179 || (
	`tﬁowî
(*
es
->
p
Ë='c' && 
Ælow_hex
)

180 || (
	`tﬁowî
(*
es
->
p
Ë='d' && 
Ælow_hex
)

181 || (
	`tﬁowî
(*
es
->
p
Ë='e' && 
Ælow_hex
)

182 || (
	`tﬁowî
(*
es
->
p
Ë='f' && 
Ælow_hex
)))

184 
œ°_ch¨
 = 
	`tﬁowî
(*
es
->
p
);

185 i‡(*
es
->
p
 == 'x' || *es->p == 'X')

186 
Ælow_hex
 = 
TRUE
;

187 *
±ok_buf
++ = *
es
->
p
++;

190 
tok_∂us
:

191 
tok_möus
:

192 
tok_mu…
:

193 
tok_div
:

194 
tok_›¨í
:

195 
tok_˝¨í
:

199 
tok
 = 
tok_övÆid
;

204 *
±ok_buf
 = '\0';

206  
tok
;

207 
	}
}

211 
evÆ_tokí_t


212 
	$≥ek_√xt_tokí
(
evÆ_°©e_t
 *
es
)

215 i‡(
es
->
≥ek_tok
 =
tok_övÆid
)

217 
es
->
œ°p
 =És->
p
;

218 
es
->
≥ek_tok
 = 
	`gë_√xt_tokí
(es);

222  
es
->
≥ek_tok
;

223 
	}
}

226 
evÆ_vÆue_t
 
ex¥
(
evÆ_°©e_t
 *
es
);

229 
evÆ_vÆue_t
 
	gîr_vÆue
 = { 
ë_öt
, { 0 } };

232 *
	gevÆ_ty≥_°r
[
ë_NUM
] = {

236 #ifde‡
HOST_HAS_QWORD


246 
evÆ_ty≥_t


247 
	$ªsu…_ty≥
(
evÆ_ty≥_t
 
t1
,

248 
evÆ_ty≥_t
 
t2
)

251 i‡(
t1
 =
ë_symbﬁ
 || 
t2
 ==Ét_symbol)

252 
	`∑nic
("symbol used inÉxpression");

255 i‡(
t1
 =
ë_doubÀ
 || 
t2
 ==Ét_double)

256  
ë_doubÀ
;

257 i‡(
t1
 =
ë_Êﬂt
 || 
t2
 ==Ét_float)

258  
ë_Êﬂt
;

259 #ifde‡
HOST_HAS_QWORD


260 i‡(
t1
 =
ë_qw‹d
 || 
t2
 ==Ét_qword)

261  
ë_qw‹d
;

262 i‡(
t1
 =
ë_sqw‹d
 || 
t2
 ==Ét_sqword)

263  
ë_sqw‹d
;

265 i‡(
t1
 =
ë_addr
 || 
t2
 ==Ét_addr)

266  
ë_addr
;

267 i‡(
t1
 =
ë_uöt
 || 
t2
 ==Ét_uint)

268  
ë_uöt
;

270  
ë_öt
;

271 
	}
}

279 
	$evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
)

281 
vÆ
.
ty≥
)

283 
ë_doubÀ
:

284  
vÆ
.
vÆue
.
as_doubÀ
;

285 
ë_Êﬂt
:

286  ()
vÆ
.
vÆue
.
as_Êﬂt
;

287 #ifde‡
HOST_HAS_QWORD


288 
ë_qw‹d
:

289 #ifde‡
_MSC_VER


290  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

292  ()
vÆ
.
vÆue
.
as_qw‹d
;

294 
ë_sqw‹d
:

295  ()
vÆ
.
vÆue
.
as_sqw‹d
;

297 
ë_addr
:

298 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

300  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

302  ()
vÆ
.
vÆue
.
as_addr
;

304 
ë_uöt
:

305  ()
vÆ
.
vÆue
.
as_uöt
;

306 
ë_öt
:

307  ()
vÆ
.
vÆue
.
as_öt
;

308 
ë_symbﬁ
:

309 
	`∑nic
("symbol used inÉxpression");

311 
	`∑nic
("illegalárithmeticÉxpression conversion");

313 
	}
}

317 
	$evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
)

319 
vÆ
.
ty≥
)

321 
ë_doubÀ
:

322  ()
vÆ
.
vÆue
.
as_doubÀ
;

323 
ë_Êﬂt
:

324  
vÆ
.
vÆue
.
as_Êﬂt
;

325 #ifde‡
HOST_HAS_QWORD


326 
ë_qw‹d
:

327 #ifde‡
_MSC_VER


328  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

330  ()
vÆ
.
vÆue
.
as_qw‹d
;

332 
ë_sqw‹d
:

333  ()
vÆ
.
vÆue
.
as_sqw‹d
;

335 
ë_addr
:

336 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

338  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

340  ()
vÆ
.
vÆue
.
as_addr
;

342 
ë_uöt
:

343  ()
vÆ
.
vÆue
.
as_uöt
;

344 
ë_öt
:

345  ()
vÆ
.
vÆue
.
as_öt
;

346 
ë_symbﬁ
:

347 
	`∑nic
("symbol used inÉxpression");

349 
	`∑nic
("illegalárithmeticÉxpression conversion");

351 
	}
}

353 #ifde‡
HOST_HAS_QWORD


355 
qw‹d_t


356 
	$evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
)

358 
vÆ
.
ty≥
)

360 
ë_doubÀ
:

361  (
qw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

362 
ë_Êﬂt
:

363  (
qw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

364 
ë_qw‹d
:

365  
vÆ
.
vÆue
.
as_qw‹d
;

366 
ë_sqw‹d
:

367  (
qw‹d_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

368 
ë_addr
:

369  (
qw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

370 
ë_uöt
:

371  (
qw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

372 
ë_öt
:

373  (
qw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

374 
ë_symbﬁ
:

375 
	`∑nic
("symbol used inÉxpression");

377 
	`∑nic
("illegalárithmeticÉxpression conversion");

379 
	}
}

382 
sqw‹d_t


383 
	$evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
)

385 
vÆ
.
ty≥
)

387 
ë_doubÀ
:

388  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

389 
ë_Êﬂt
:

390  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

391 
ë_qw‹d
:

392  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

393 
ë_sqw‹d
:

394  
vÆ
.
vÆue
.
as_sqw‹d
;

395 
ë_addr
:

396  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

397 
ë_uöt
:

398  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

399 
ë_öt
:

400  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

401 
ë_symbﬁ
:

402 
	`∑nic
("symbol used inÉxpression");

404 
	`∑nic
("illegalárithmeticÉxpression conversion");

406 
	}
}

410 
md_addr_t


411 
	$evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
)

413 
vÆ
.
ty≥
)

415 
ë_doubÀ
:

416  (
md_addr_t
)
vÆ
.
vÆue
.
as_doubÀ
;

417 
ë_Êﬂt
:

418  (
md_addr_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

419 #ifde‡
HOST_HAS_QWORD


420 
ë_qw‹d
:

421  (
md_addr_t
)
vÆ
.
vÆue
.
as_qw‹d
;

422 
ë_sqw‹d
:

423  (
md_addr_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

425 
ë_addr
:

426  
vÆ
.
vÆue
.
as_addr
;

427 
ë_uöt
:

428  (
md_addr_t
)
vÆ
.
vÆue
.
as_uöt
;

429 
ë_öt
:

430  (
md_addr_t
)
vÆ
.
vÆue
.
as_öt
;

431 
ë_symbﬁ
:

432 
	`∑nic
("symbol used inÉxpression");

434 
	`∑nic
("illegalárithmeticÉxpression conversion");

436 
	}
}

440 
	$evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
)

442 
vÆ
.
ty≥
)

444 
ë_doubÀ
:

445  ()
vÆ
.
vÆue
.
as_doubÀ
;

446 
ë_Êﬂt
:

447  ()
vÆ
.
vÆue
.
as_Êﬂt
;

448 #ifde‡
HOST_HAS_QWORD


449 
ë_qw‹d
:

450  ()
vÆ
.
vÆue
.
as_qw‹d
;

451 
ë_sqw‹d
:

452  ()
vÆ
.
vÆue
.
as_sqw‹d
;

454 
ë_addr
:

455  ()
vÆ
.
vÆue
.
as_addr
;

456 
ë_uöt
:

457  
vÆ
.
vÆue
.
as_uöt
;

458 
ë_öt
:

459  ()
vÆ
.
vÆue
.
as_öt
;

460 
ë_symbﬁ
:

461 
	`∑nic
("symbol used inÉxpression");

463 
	`∑nic
("illegalárithmeticÉxpression conversion");

465 
	}
}

469 
	$evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
)

471 
vÆ
.
ty≥
)

473 
ë_doubÀ
:

474  ()
vÆ
.
vÆue
.
as_doubÀ
;

475 
ë_Êﬂt
:

476  ()
vÆ
.
vÆue
.
as_Êﬂt
;

477 #ifde‡
HOST_HAS_QWORD


478 
ë_qw‹d
:

479  ()
vÆ
.
vÆue
.
as_qw‹d
;

480 
ë_sqw‹d
:

481  ()
vÆ
.
vÆue
.
as_sqw‹d
;

483 
ë_addr
:

484  ()
vÆ
.
vÆue
.
as_addr
;

485 
ë_uöt
:

486  ()
vÆ
.
vÆue
.
as_uöt
;

487 
ë_öt
:

488  
vÆ
.
vÆue
.
as_öt
;

489 
ë_symbﬁ
:

490 
	`∑nic
("symbol used inÉxpression");

492 
	`∑nic
("illegalárithmeticÉxpression conversion");

494 
	}
}

501 
evÆ_vÆue_t


502 
	$f_add
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

504 
evÆ_ty≥_t
 
ë
;

505 
evÆ_vÆue_t
 
vÆ
;

508 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

510 
evÆ_îr‹
 = 
ERR_BADEXPR
;

511  
îr_vÆue
;

515 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

516 
ë
)

518 
ë_doubÀ
:

519 
vÆ
.
ty≥
 = 
ë_doubÀ
;

520 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë+ÉvÆ_as_doubÀ(
vÆ2
);

522 
ë_Êﬂt
:

523 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

524 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë+ÉvÆ_as_Êﬂt(
vÆ2
);

526 #ifde‡
HOST_HAS_QWORD


527 
ë_qw‹d
:

528 
vÆ
.
ty≥
 = 
ë_qw‹d
;

529 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë+ÉvÆ_as_qw‹d(
vÆ2
);

531 
ë_sqw‹d
:

532 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

533 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë+ÉvÆ_as_sqw‹d(
vÆ2
);

536 
ë_addr
:

537 
vÆ
.
ty≥
 = 
ë_addr
;

538 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë+ÉvÆ_as_addr(
vÆ2
);

540 
ë_uöt
:

541 
vÆ
.
ty≥
 = 
ë_uöt
;

542 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë+ÉvÆ_as_uöt(
vÆ2
);

544 
ë_öt
:

545 
vÆ
.
ty≥
 = 
ë_öt
;

546 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë+ÉvÆ_as_öt(
vÆ2
);

549 
	`∑nic
("bogusÉxpressionÅype");

552  
vÆ
;

553 
	}
}

556 
evÆ_vÆue_t


557 
	$f_sub
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

559 
evÆ_ty≥_t
 
ë
;

560 
evÆ_vÆue_t
 
vÆ
;

563 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

565 
evÆ_îr‹
 = 
ERR_BADEXPR
;

566  
îr_vÆue
;

570 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

571 
ë
)

573 
ë_doubÀ
:

574 
vÆ
.
ty≥
 = 
ë_doubÀ
;

575 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë-ÉvÆ_as_doubÀ(
vÆ2
);

577 
ë_Êﬂt
:

578 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

579 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë-ÉvÆ_as_Êﬂt(
vÆ2
);

581 #ifde‡
HOST_HAS_QWORD


582 
ë_qw‹d
:

583 
vÆ
.
ty≥
 = 
ë_qw‹d
;

584 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë-ÉvÆ_as_qw‹d(
vÆ2
);

586 
ë_sqw‹d
:

587 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

588 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë-ÉvÆ_as_sqw‹d(
vÆ2
);

591 
ë_addr
:

592 
vÆ
.
ty≥
 = 
ë_addr
;

593 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë-ÉvÆ_as_addr(
vÆ2
);

595 
ë_uöt
:

596 
vÆ
.
ty≥
 = 
ë_uöt
;

597 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë-ÉvÆ_as_uöt(
vÆ2
);

599 
ë_öt
:

600 
vÆ
.
ty≥
 = 
ë_öt
;

601 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë-ÉvÆ_as_öt(
vÆ2
);

604 
	`∑nic
("bogusÉxpressionÅype");

607  
vÆ
;

608 
	}
}

611 
evÆ_vÆue_t


612 
	$f_mu…
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

614 
evÆ_ty≥_t
 
ë
;

615 
evÆ_vÆue_t
 
vÆ
;

618 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

620 
evÆ_îr‹
 = 
ERR_BADEXPR
;

621  
îr_vÆue
;

625 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

626 
ë
)

628 
ë_doubÀ
:

629 
vÆ
.
ty≥
 = 
ë_doubÀ
;

630 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë*ÉvÆ_as_doubÀ(
vÆ2
);

632 
ë_Êﬂt
:

633 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

634 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë*ÉvÆ_as_Êﬂt(
vÆ2
);

636 #ifde‡
HOST_HAS_QWORD


637 
ë_qw‹d
:

638 
vÆ
.
ty≥
 = 
ë_qw‹d
;

639 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë*ÉvÆ_as_qw‹d(
vÆ2
);

641 
ë_sqw‹d
:

642 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

643 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë*ÉvÆ_as_sqw‹d(
vÆ2
);

646 
ë_addr
:

647 
vÆ
.
ty≥
 = 
ë_addr
;

648 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë*ÉvÆ_as_addr(
vÆ2
);

650 
ë_uöt
:

651 
vÆ
.
ty≥
 = 
ë_uöt
;

652 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë*ÉvÆ_as_uöt(
vÆ2
);

654 
ë_öt
:

655 
vÆ
.
ty≥
 = 
ë_öt
;

656 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë*ÉvÆ_as_öt(
vÆ2
);

659 
	`∑nic
("bogusÉxpressionÅype");

662  
vÆ
;

663 
	}
}

666 
evÆ_vÆue_t


667 
	$f_div
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

669 
evÆ_ty≥_t
 
ë
;

670 
evÆ_vÆue_t
 
vÆ
;

673 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

675 
evÆ_îr‹
 = 
ERR_BADEXPR
;

676  
îr_vÆue
;

680 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

681 
ë
)

683 
ë_doubÀ
:

684 
vÆ
.
ty≥
 = 
ë_doubÀ
;

685 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë/ÉvÆ_as_doubÀ(
vÆ2
);

687 
ë_Êﬂt
:

688 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

689 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë/ÉvÆ_as_Êﬂt(
vÆ2
);

691 #ifde‡
HOST_HAS_QWORD


692 
ë_qw‹d
:

693 
vÆ
.
ty≥
 = 
ë_qw‹d
;

694 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë/ÉvÆ_as_qw‹d(
vÆ2
);

696 
ë_sqw‹d
:

697 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

698 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë/ÉvÆ_as_sqw‹d(
vÆ2
);

701 
ë_addr
:

702 
vÆ
.
ty≥
 = 
ë_addr
;

703 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë/ÉvÆ_as_addr(
vÆ2
);

705 
ë_uöt
:

706 
vÆ
.
ty≥
 = 
ë_uöt
;

707 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë/ÉvÆ_as_uöt(
vÆ2
);

709 
ë_öt
:

710 
vÆ
.
ty≥
 = 
ë_öt
;

711 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë/ÉvÆ_as_öt(
vÆ2
);

714 
	`∑nic
("bogusÉxpressionÅype");

717  
vÆ
;

718 
	}
}

721 
evÆ_vÆue_t


722 
	$f_√g
(
evÆ_vÆue_t
 
vÆ1
)

724 
evÆ_vÆue_t
 
vÆ
;

727 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

729 
evÆ_îr‹
 = 
ERR_BADEXPR
;

730  
îr_vÆue
;

734 
vÆ1
.
ty≥
)

736 
ë_doubÀ
:

737 
vÆ
.
ty≥
 = 
ë_doubÀ
;

738 
vÆ
.
vÆue
.
as_doubÀ
 = - 
vÆ1
.value.as_double;

740 
ë_Êﬂt
:

741 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

742 
vÆ
.
vÆue
.
as_Êﬂt
 = - 
vÆ1
.value.as_float;

744 #ifde‡
HOST_HAS_QWORD


745 
ë_qw‹d
:

746 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

747 
vÆ
.
vÆue
.
as_qw‹d
 = - (
sqw‹d_t
)
vÆ1
.value.as_qword;

749 
ë_sqw‹d
:

750 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

751 
vÆ
.
vÆue
.
as_sqw‹d
 = - 
vÆ1
.value.as_sqword;

754 
ë_addr
:

755 
vÆ
.
ty≥
 = 
ë_addr
;

756 
vÆ
.
vÆue
.
as_addr
 = - 
vÆ1
.value.as_addr;

758 
ë_uöt
:

759 i‡(()
vÆ1
.
vÆue
.
as_uöt
 > 2147483648U)

762 #ifde‡
HOST_HAS_QWORD


763 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

764 
vÆ
.
vÆue
.
as_sqw‹d
 = - ((
sqw‹d_t
)
vÆ1
.vÆue.
as_uöt
);

766 
vÆ
.
ty≥
 = 
ë_doubÀ
;

767 
vÆ
.
vÆue
.
as_doubÀ
 = - (()
vÆ1
.vÆue.
as_uöt
);

773 
vÆ
.
ty≥
 = 
ë_öt
;

774 
vÆ
.
vÆue
.
as_öt
 = - (()
vÆ1
.vÆue.
as_uöt
);

777 
ë_öt
:

778 i‡(()
vÆ1
.
vÆue
.
as_öt
 == 0x80000000U)

781 
vÆ
.
ty≥
 = 
ë_uöt
;

782 
vÆ
.
vÆue
.
as_uöt
 = 2147483648U;

787 
vÆ
.
ty≥
 = 
ë_öt
;

788 
vÆ
.
vÆue
.
as_öt
 = - 
vÆ1
.value.as_int;

792 
	`∑nic
("bogusÉxpressionÅype");

795  
vÆ
;

796 
	}
}

800 
	$f_eq_zîo
(
evÆ_vÆue_t
 
vÆ1
)

802 
vÆ
;

805 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

807 
evÆ_îr‹
 = 
ERR_BADEXPR
;

808  
FALSE
;

811 
vÆ1
.
ty≥
)

813 
ë_doubÀ
:

814 
vÆ
 = 
vÆ1
.
vÆue
.
as_doubÀ
 == 0.0;

816 
ë_Êﬂt
:

817 
vÆ
 = 
vÆ1
.
vÆue
.
as_Êﬂt
 == 0.0;

819 #ifde‡
HOST_HAS_QWORD


820 
ë_qw‹d
:

821 
vÆ
 = 
vÆ1
.
vÆue
.
as_qw‹d
 == 0;

823 
ë_sqw‹d
:

824 
vÆ
 = 
vÆ1
.
vÆue
.
as_sqw‹d
 == 0;

827 
ë_addr
:

828 
vÆ
 = 
vÆ1
.
vÆue
.
as_addr
 == 0;

830 
ë_uöt
:

831 
vÆ
 = 
vÆ1
.
vÆue
.
as_uöt
 == 0;

833 
ë_öt
:

834 
vÆ
 = 
vÆ1
.
vÆue
.
as_öt
 == 0;

837 
	`∑nic
("bogusÉxpressionÅype");

840  
vÆ
;

841 
	}
}

846 
evÆ_vÆue_t


847 
	$c⁄°™t
(
evÆ_°©e_t
 *
es
)

849 
evÆ_vÆue_t
 
vÆ
;

850 
öt_vÆ
;

851 
uöt_vÆ
;

852 
doubÀ_vÆ
;

853 *
ídp
;

854 #ifde‡
HOST_HAS_QWORD


855 
sqw‹d_t
 
sqw‹d_vÆ
;

856 
qw‹d_t
 
qw‹d_vÆ
;

860 #i‡
	`deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

861 
	`°πﬁ
(*, **, );

862 
	`°πod
(*, **);

872 
î∫o
 = 0;

873 
öt_vÆ
 = 
	`°πﬁ
(
es
->
tok_buf
, &
ídp
, 0);

874 i‡(!
î∫o
 && !*
ídp
)

877 
vÆ
.
ty≥
 = 
ë_öt
;

878 
vÆ
.
vÆue
.
as_öt
 = 
öt_vÆ
;

879  
vÆ
;

883 
î∫o
 = 0;

884 
uöt_vÆ
 = 
	`°πoul
(
es
->
tok_buf
, &
ídp
, 0);

885 i‡(!
î∫o
 && !*
ídp
)

888 
vÆ
.
ty≥
 = 
ë_uöt
;

889 
vÆ
.
vÆue
.
as_uöt
 = 
uöt_vÆ
;

890  
vÆ
;

893 #ifde‡
HOST_HAS_QWORD


895 
î∫o
 = 0;

896 
sqw‹d_vÆ
 = 
	`my©osq
(
es
->
tok_buf
, &
ídp
, 0);

897 i‡(!
î∫o
 && !*
ídp
)

900 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

901 
vÆ
.
vÆue
.
as_sqw‹d
 = 
sqw‹d_vÆ
;

902  
vÆ
;

906 
î∫o
 = 0;

907 
qw‹d_vÆ
 = 
	`my©oq
(
es
->
tok_buf
, &
ídp
, 0);

908 i‡(!
î∫o
 && !*
ídp
)

911 
vÆ
.
ty≥
 = 
ë_qw‹d
;

912 
vÆ
.
vÆue
.
as_qw‹d
 = 
qw‹d_vÆ
;

913  
vÆ
;

919 
î∫o
 = 0;

920 
doubÀ_vÆ
 = 
	`°πod
(
es
->
tok_buf
, &
ídp
);

921 i‡(!
î∫o
 && !*
ídp
)

924 
vÆ
.
ty≥
 = 
ë_doubÀ
;

925 
vÆ
.
vÆue
.
as_doubÀ
 = 
doubÀ_vÆ
;

926  
vÆ
;

931 
evÆ_îr‹
 = 
ERR_BADCONST
;

932  
îr_vÆue
;

933 
	}
}

937 
evÆ_vÆue_t


938 
	$Á˘‹
(
evÆ_°©e_t
 *
es
)

940 
evÆ_tokí_t
 
tok
;

941 
evÆ_vÆue_t
 
vÆ
;

943 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

944 
tok
)

946 
tok_›¨í
:

947 ()
	`gë_√xt_tokí
(
es
);

948 
vÆ
 = 
	`ex¥
(
es
);

949 i‡(
evÆ_îr‹
)

950  
îr_vÆue
;

952 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

953 i‡(
tok
 !
tok_˝¨í
)

955 
evÆ_îr‹
 = 
ERR_UPAREN
;

956  
îr_vÆue
;

958 ()
	`gë_√xt_tokí
(
es
);

961 
tok_möus
:

963 ()
	`gë_√xt_tokí
(
es
);

964 
vÆ
 = 
	`Á˘‹
(
es
);

965 i‡(
evÆ_îr‹
)

966  
îr_vÆue
;

967 
vÆ
 = 
	`f_√g
(val);

970 
tok_idít
:

971 ()
	`gë_√xt_tokí
(
es
);

973 
vÆ
 = 
es
->
	`f_evÆ_idít
(es);

974 i‡(
evÆ_îr‹
)

975  
îr_vÆue
;

978 
tok_c⁄°
:

979 ()
	`gë_√xt_tokí
(
es
);

980 
vÆ
 = 
	`c⁄°™t
(
es
);

981 i‡(
evÆ_îr‹
)

982  
îr_vÆue
;

986 
evÆ_îr‹
 = 
ERR_NOTERM
;

987  
îr_vÆue
;

990  
vÆ
;

991 
	}
}

995 
evÆ_vÆue_t


996 
	$ãrm
(
evÆ_°©e_t
 *
es
)

998 
evÆ_tokí_t
 
tok
;

999 
evÆ_vÆue_t
 
vÆ
, 
vÆ1
;

1001 
vÆ
 = 
	`Á˘‹
(
es
);

1002 i‡(
evÆ_îr‹
)

1003  
îr_vÆue
;

1005 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1006 
tok
)

1008 
tok_mu…
:

1009 ()
	`gë_√xt_tokí
(
es
);

1010 
vÆ
 = 
	`f_mu…
(vÆ, 
	`ãrm
(
es
));

1011 i‡(
evÆ_îr‹
)

1012  
îr_vÆue
;

1015 
tok_div
:

1016 ()
	`gë_√xt_tokí
(
es
);

1017 
vÆ1
 = 
	`ãrm
(
es
);

1018 i‡(
evÆ_îr‹
)

1019  
îr_vÆue
;

1020 i‡(
	`f_eq_zîo
(
vÆ1
))

1022 
evÆ_îr‹
 = 
ERR_DIV0
;

1023  
îr_vÆue
;

1025 
vÆ
 = 
	`f_div
(vÆ, 
vÆ1
);

1031  
vÆ
;

1032 
	}
}

1036 
evÆ_vÆue_t


1037 
	$ex¥
(
evÆ_°©e_t
 *
es
)

1039 
evÆ_tokí_t
 
tok
;

1040 
evÆ_vÆue_t
 
vÆ
;

1042 
vÆ
 = 
	`ãrm
(
es
);

1043 i‡(
evÆ_îr‹
)

1044  
îr_vÆue
;

1046 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1047 
tok
)

1049 
tok_∂us
:

1050 ()
	`gë_√xt_tokí
(
es
);

1051 
vÆ
 = 
	`f_add
(vÆ, 
	`ex¥
(
es
));

1052 i‡(
evÆ_îr‹
)

1053  
îr_vÆue
;

1056 
tok_möus
:

1057 ()
	`gë_√xt_tokí
(
es
);

1058 
vÆ
 = 
	`f_sub
(vÆ, 
	`ex¥
(
es
));

1059 i‡(
evÆ_îr‹
)

1060  
îr_vÆue
;

1066  
vÆ
;

1067 
	}
}

1070 
evÆ_°©e_t
 *

1071 
	$evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

1072 *
u£r_±r
)

1074 
evÆ_°©e_t
 *
es
;

1076 
es
 = 
	`ˇŒoc
(1, (
evÆ_°©e_t
));

1077 i‡(!
es
)

1078 
	`Áèl
("out of virtual memory");

1080 
es
->
f_evÆ_idít
 = f_eval_ident;

1081 
es
->
u£r_±r
 = user_ptr;

1083  
es
;

1084 
	}
}

1088 
	$evÆ_dñëe
(
evÆ_°©e_t
 *
es
)

1090 
	`‰ì
(
es
);

1091 
	}
}

1095 
evÆ_vÆue_t


1096 
	$evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

1097 *
p
,

1098 **
ídp
)

1100 
evÆ_vÆue_t
 
vÆ
;

1103 
evÆ_îr‹
 = 
ERR_NOERR
;

1104 
es
->
p
 =Ö;

1105 *
es
->
tok_buf
 = '\0';

1106 
es
->
≥ek_tok
 = 
tok_övÆid
;

1109 
vÆ
 = 
	`ex¥
(
es
);

1112 i‡(
ídp
)

1114 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

1117 *
ídp
 = 
es
->
œ°p
;

1120 *
ídp
 = 
es
->
p
;

1123  
vÆ
;

1124 
	}
}

1128 
	$evÆ_¥öt
(
FILE
 *
°ªam
,

1129 
evÆ_vÆue_t
 
vÆ
)

1131 
vÆ
.
ty≥
)

1133 
ë_doubÀ
:

1134 
	`Ârötf
(
°ªam
, "%‡[doubÀ]", 
vÆ
.
vÆue
.
as_doubÀ
);

1136 
ë_Êﬂt
:

1137 
	`Ârötf
(
°ªam
, "%‡[Êﬂt]", ()
vÆ
.
vÆue
.
as_Êﬂt
);

1139 #ifde‡
HOST_HAS_QWORD


1140 
ë_qw‹d
:

1141 
	`myÂrötf
(
°ªam
, "%lu [qw‹d_t]", 
vÆ
.
vÆue
.
as_qw‹d
);

1143 
ë_sqw‹d
:

1144 
	`myÂrötf
(
°ªam
, "%ld [sqw‹d_t]", 
vÆ
.
vÆue
.
as_sqw‹d
);

1147 
ë_addr
:

1148 
	`myÂrötf
(
°ªam
, "0x%∞[md_addr_t]", 
vÆ
.
vÆue
.
as_addr
);

1150 
ë_uöt
:

1151 
	`Ârötf
(
°ªam
, "%u [uöt]", 
vÆ
.
vÆue
.
as_uöt
);

1153 
ë_öt
:

1154 
	`Ârötf
(
°ªam
, "%d [öt]", 
vÆ
.
vÆue
.
as_öt
);

1156 
ë_symbﬁ
:

1157 
	`Ârötf
(
°ªam
, "\"%s\" [symbﬁ]", 
vÆ
.
vÆue
.
as_symbﬁ
);

1160 
	`∑nic
("bogusÉxpressionÅype");

1162 
	}
}

1165 #ifde‡
TEST


1167 
evÆ_vÆue_t
 
	g™_öt
;

1168 
evÆ_vÆue_t
 
	ga_uöt
;

1169 
evÆ_vÆue_t
 
	ga_Êﬂt
;

1170 
evÆ_vÆue_t
 
	ga_doubÀ
;

1171 
evÆ_vÆue_t
 
	ga_symbﬁ
;

1173 
	ssym_m≠_t
 {

1174 *
	msymbﬁ
;

1175 
evÆ_vÆue_t
 *
	mvÆue
;

1178 
sym_m≠_t
 
	gsym_m≠
[] = {

1179 { "™_öt", &
™_öt
 },

1180 { "a_uöt", &
a_uöt
 },

1181 { "a_Êﬂt", &
a_Êﬂt
 },

1182 { "a_doubÀ", &
a_doubÀ
 },

1183 { "a_symbﬁ", &
a_symbﬁ
 },

1184 { 
NULL
, NULL },

1187 
evÆ_vÆue_t


1188 
	$my_evÆ_idít
(
evÆ_°©e_t
 *
es
)

1190 
sym_m≠_t
 *
sym
;

1192 
sym
=
sym_m≠
; sym->
symbﬁ
 !
NULL
; sym++)

1194 i‡(!
	`°rcmp
(
sym
->
symbﬁ
, 
es
->
tok_buf
))

1195  *
sym
->
vÆue
;

1198 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

1199  
îr_vÆue
;

1200 
	}
}

1203 
	$maö
()

1205 
evÆ_°©e_t
 *
es
;

1208 
™_öt
.
ty≥
 = 
ë_öt
;án_öt.
vÆue
.
as_öt
 = 1;

1209 
a_uöt
.
ty≥
 = 
ë_uöt
;á_uöt.
vÆue
.
as_uöt
 = 2;

1210 
a_Êﬂt
.
ty≥
 = 
ë_Êﬂt
;á_Êﬂt.
vÆue
.
as_Êﬂt
 = 3.0f;

1211 
a_doubÀ
.
ty≥
 = 
ë_doubÀ
;á_doubÀ.
vÆue
.
as_doubÀ
 = 4.0;

1212 
a_symbﬁ
.
ty≥
 = 
ë_symbﬁ
;á_symbﬁ.
vÆue
.
as_symbﬁ
 = "testing 1 2 3...";

1215 
es
 = 
	`evÆ_√w
(
my_evÆ_idít
, 
NULL
);

1219 
evÆ_vÆue_t
 
vÆ
;

1220 
ex¥_buf
[1024];

1222 
	`fgës
(
ex¥_buf
, 1024, 
°dö
);

1225 i‡(
ex¥_buf
[
	`°æí
(expr_buf)-1] == '\n')

1226 
ex¥_buf
[
	`°æí
(expr_buf)-1] = '\0';

1228 i‡(
ex¥_buf
[0] == '\0')

1229 
	`exô
(0);

1231 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
ex¥_buf
, 
NULL
);

1232 i‡(
evÆ_îr‹
)

1233 
	`Ârötf
(
°dout
, "evÆÉº‹: %s\n", 
evÆ_îr_°r
[
evÆ_îr‹
]);

1236 
	`Ârötf
(
°dout
, "%†=", 
ex¥_buf
);

1237 
	`evÆ_¥öt
(
°dout
, 
vÆ
);

1238 
	`Ârötf
(
°dout
, "\n");

1241 
	}
}

	@ss/eval.h

52 #i‚de‡
EVAL_H


53 
	#EVAL_H


	)

55 
	~<°dio.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

61 
	gevÆ_°©e_t
;

62 
	gevÆ_vÆue_t
;

67 
	gevÆ_vÆue_t


68 (*
	tevÆ_idít_t
)(
	tevÆ_°©e_t
 *
	tes
);

71 
	eevÆ_tokí_t
 {

72 
	mtok_idít
,

73 
	mtok_c⁄°
,

74 
	mtok_∂us
,

75 
	mtok_möus
,

76 
	mtok_mu…
,

77 
	mtok_div
,

78 
	mtok_›¨í
,

79 
	mtok_˝¨í
,

80 
	mtok_eof
,

81 
	mtok_whôe•a˚
,

82 
	mtok_övÆid


86 
	sevÆ_°©e_t
 {

87 *
	mp
;

88 *
	mœ°p
;

89 
evÆ_idít_t
 
	mf_evÆ_idít
;

90 *
	mu£r_±r
;

91 
	mtok_buf
[512];

92 
evÆ_tokí_t
 
	m≥ek_tok
;

96 
	eevÆ_îr_t
 {

97 
	mERR_NOERR
,

98 
	mERR_UPAREN
,

99 
	mERR_NOTERM
,

100 
	mERR_DIV0
,

101 
	mERR_BADCONST
,

102 
	mERR_BADEXPR
,

103 
	mERR_UNDEFVAR
,

104 
	mERR_EXTRA
,

105 
	mERR_NUM


109 
evÆ_îr_t
 
evÆ_îr‹
 ;

112 *
evÆ_îr_°r
[
ERR_NUM
];

115 
	eevÆ_ty≥_t
 {

116 
	më_öt
,

117 
	më_uöt
,

118 
	më_addr
,

119 #ifde‡
HOST_HAS_QWORD


120 
	më_qw‹d
,

121 
	më_sqw‹d
,

123 
	më_Êﬂt
,

124 
	më_doubÀ
,

125 
	më_symbﬁ
,

126 
	më_NUM


130 #ifde‡
HOST_HAS_QWORD


131 
	#EVAL_INTEGRAL
(
TYPE
Ë\

	)

132 ((
	gTYPE
Ë=
ë_öt
 || (
TYPE
Ë=
ë_uöt
 || (TYPEË=
ë_addr
 \

133 || (
TYPE
Ë=
ë_qw‹d
 || (TYPEË=
ë_sqw‹d
)

135 
	#EVAL_INTEGRAL
(
TYPE
Ë\

	)

136 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
)

140 *
evÆ_ty≥_°r
[
ë_NUM
];

143 
	sevÆ_vÆue_t
 {

144 
evÆ_ty≥_t
 
	mty≥
;

146 
	mas_öt
;

147 
	mas_uöt
;

148 
md_addr_t
 
	mas_addr
;

149 #ifde‡
HOST_HAS_QWORD


150 
qw‹d_t
 
	mas_qw‹d
;

151 
sqw‹d_t
 
	mas_sqw‹d
;

153 
	mas_Êﬂt
;

154 
	mas_doubÀ
;

155 *
	mas_symbﬁ
;

156 } 
	mvÆue
;

164 
evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
);

167 
evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
);

169 #ifde‡
HOST_HAS_QWORD


171 
qw‹d_t
 
evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
);

174 
sqw‹d_t
 
evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
);

178 
md_addr_t
 
evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
);

181 
evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
);

184 
evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
);

187 
evÆ_°©e_t
 *

188 
evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

189 *
u£r_±r
);

193 
evÆ_dñëe
(
evÆ_°©e_t
 *
es
);

197 
evÆ_vÆue_t


198 
evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

199 *
p
,

200 **
ídp
);

204 
evÆ_¥öt
(
FILE
 *
°ªam
,

205 
evÆ_vÆue_t
 
vÆ
);

	@ss/host.h

52 #i‚de‡
HOST_H


53 
	#HOST_H


	)

56 #i‚de‡
__STDC__


57 #îr‹ 
The
 
Sim∂eSˇœr
 
simuœt‹s
 
mu°
 
be
 
compûed
 
wôh
 
™
 
ANSI
 
C
 
compûî
.

61 #unde‡
INLINE


62 #i‡
deföed
(
__GNUC__
)

63 
	#INLINE
 
ölöe


	)

65 
	#INLINE


	)

69 #ifde‡
__GNUC__


71 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

72 
	#ANSI_SYMCAT


	)

74 #ifde‡
OLD_SYMCAT


75 
	#SYMCAT
(
X
,
Y
ËX 
	)
Y

77 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

78 
	#ANSI_SYMCAT


	)

83 
	tboﬁ_t
;

84 
	tbyã_t
;

85 sig√d 
	tsbyã_t
;

86 
	thÆf_t
;

87 sig√d 
	tshÆf_t
;

88 
	tw‹d_t
;

89 sig√d 
	tsw‹d_t
;

90 
	tsÊﬂt_t
;

91 
	tdÊﬂt_t
;

94 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__SUNPRO_C
Ë|| deföed(
__CC_C89
Ë|| deföed(
__CC_XLC
)

95 
	#HOST_HAS_QWORD


	)

96 
	tqw‹d_t
;

97 sig√d 
	tsqw‹d_t
;

98 #ifde‡
ANSI_SYMCAT


99 
	#ULL
(
N
ËN##
ULL


	)

100 
	#LL
(
N
ËN##
LL


	)

102 
	#ULL
(
N
ËN 
ULL


	)

103 
	#LL
(
N
ËN 
LL


	)

105 #ñi‡
deföed
(
__Æpha
)

106 
	#HOST_HAS_QWORD


	)

107 
	tqw‹d_t
;

108 sig√d 
	tsqw‹d_t
;

109 #ifde‡
ANSI_SYMCAT


110 
	#ULL
(
N
ËN##
UL


	)

111 
	#LL
(
N
ËN##
L


	)

113 
	#ULL
(
N
ËN 
UL


	)

114 
	#LL
(
N
ËN 
L


	)

116 #ñi‡
deföed
(
_MSC_VER
)

117 
	#HOST_HAS_QWORD


	)

118 
	t__öt64
 
	tqw‹d_t
;

119 sig√d 
	t__öt64
 
	tsqw‹d_t
;

120 
	#ULL
(
N
Ë((
qw‹d_t
)(N))

	)

121 
	#LL
(
N
Ë((
sqw‹d_t
)(N))

	)

123 #unde‡
HOST_HAS_QWORD


127 #ifde‡
HOST_HAS_QWORD


128 
sqw‹d_t
 
	tcou¡î_t
;

129 
sqw‹d_t
 
	ttick_t
;

131 
dÊﬂt_t
 
	tcou¡î_t
;

132 
dÊﬂt_t
 
	ttick_t
;

135 #ifde‡
__svr4__


136 
	#£tjmp
 
_£tjmp


	)

137 
	#l⁄gjmp
 
_l⁄gjmp


	)

	@ss/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"lﬂdî.h
"

60 
	~"ecoff.h
"

63 
	#TEXT_TAIL_PADDING
 128

	)

66 
md_addr_t
 
ld_ãxt_ba£
;

69 
ld_ãxt_size
;

72 
md_addr_t
 
	gld_¥og_íåy
 = 0;

79 
	$ld_lﬂd_¥og
(*
‚ame
)

81 
i
;

82 
FILE
 *
fobj
;

83 
Êoc
;

84 
ecoff_fûehdr
 
fhdr
;

85 
ecoff_aouthdr
 
ahdr
;

86 
ecoff_s˙hdr
 
shdr
;

88 
fobj
 = 
	`f›í
(
‚ame
, "r");

89 i‡(!
fobj
)

90 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

92 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

93 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

95 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

96 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

101 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
fhdr
.
f_›thdr
, 0);

103 
	`debug
("¥o˚ssög %d se˘i⁄†ö `%s'...", 
fhdr
.
f_ns˙s
, 
‚ame
);

106 
Êoc
 = 
	`·ñl
(
fobj
);

107 
i
 = 0; i < 
fhdr
.
f_ns˙s
; i++)

109 *
p
;

110 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

111 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

112 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

113 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

114 
Êoc
 = 
	`·ñl
(
fobj
);

116 
shdr
.
s_Êags
) {

117 
ECOFF_STYP_TEXT
:

118 
ld_ãxt_size
 = ((
shdr
.
s_vaddr
 + shdr.
s_size
Ë- 
MD_TEXT_BASE
)

119 + 
TEXT_TAIL_PADDING
;

121 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

122 i‡(!
p
)

123 
	`Áèl
("out of virtual memory");

125 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

126 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

127 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

128 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

131 
	`‰ì
(
p
);

134 
ECOFF_STYP_RDATA
:

139 
ECOFF_STYP_DATA
:

141 
ECOFF_STYP_SDATA
:

144 
ECOFF_STYP_BSS
:

147 
ECOFF_STYP_SBSS
:

155 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

156 
ld_¥og_íåy
 = 
ahdr
.
íåy
;

159 i‡(
	`f˛o£
(
fobj
))

160 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

163 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

164 
	`Áèl
("executable is missingá `.text' section");

165 i‡(!
ld_¥og_íåy
)

166 
	`Áèl
("programÉntryÖointÇot specified");

167 
	}
}

	@ss/loader.h

52 #i‚de‡
LOADER_H


53 
	#LOADER_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

101 
md_addr_t
 
ld_ãxt_ba£
;

104 
ld_ãxt_size
;

107 
md_addr_t
 
ld_¥og_íåy
;

112 
ld_lﬂd_¥og
(*
‚ame
);

	@ss/machine.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

62 
md_ö°_t
 
	gMD_NOP_INST
 = { 
NOP
, 0 };

65 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

68 *
	gmd_›2«me
[
OP_MAX
] = {

69 
NULL
,

70 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

71 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

72 
	#CONNECT
(
OP
)

	)

73 
	~"machöe.def
"

77 *
	gmd_›2f‹m©
[
OP_MAX
] = {

78 
NULL
,

79 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

80 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

81 
	#CONNECT
(
OP
)

	)

82 
	~"machöe.def
"

86 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

87 
FUCœss_NA
,

88 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

89 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœss_NA
,

	)

90 
	#CONNECT
(
OP
)

	)

91 
	~"machöe.def
"

95 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

96 
NULL
,

111 
	gmd_›2Êags
[
OP_MAX
] = {

112 
NA
,

113 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

114 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

115 
	#CONNECT
(
OP
)

	)

116 
	~"machöe.def
"

120 
w‹d_t
 
	gmd_Ã_masks
[] = {

121 #ifde‡
BYTES_BIG_ENDIAN


136 *
	gmd_amode_°r
[
md_amode_NUM
] =

147 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

152 { "$r0", 
π_g¥
, 0 },

153 { "$zîo", 
π_g¥
, 0 },

154 { "$r1", 
π_g¥
, 1 },

155 { "$r2", 
π_g¥
, 2 },

156 { "$r3", 
π_g¥
, 3 },

157 { "$r4", 
π_g¥
, 4 },

158 { "$r5", 
π_g¥
, 5 },

159 { "$r6", 
π_g¥
, 6 },

160 { "$r7", 
π_g¥
, 7 },

161 { "$r8", 
π_g¥
, 8 },

162 { "$r9", 
π_g¥
, 9 },

163 { "$r10", 
π_g¥
, 10 },

164 { "$r11", 
π_g¥
, 11 },

165 { "$r12", 
π_g¥
, 12 },

166 { "$r13", 
π_g¥
, 13 },

167 { "$r14", 
π_g¥
, 14 },

168 { "$r15", 
π_g¥
, 15 },

169 { "$r16", 
π_g¥
, 16 },

170 { "$r17", 
π_g¥
, 17 },

171 { "$r18", 
π_g¥
, 18 },

172 { "$r19", 
π_g¥
, 19 },

173 { "$r20", 
π_g¥
, 20 },

174 { "$r21", 
π_g¥
, 21 },

175 { "$r22", 
π_g¥
, 22 },

176 { "$r23", 
π_g¥
, 23 },

177 { "$r24", 
π_g¥
, 24 },

178 { "$r25", 
π_g¥
, 25 },

179 { "$r26", 
π_g¥
, 26 },

180 { "$r27", 
π_g¥
, 27 },

181 { "$r28", 
π_g¥
, 28 },

182 { "$gp", 
π_g¥
, 28 },

183 { "$r29", 
π_g¥
, 29 },

184 { "$•", 
π_g¥
, 29 },

185 { "$r30", 
π_g¥
, 30 },

186 { "$Â", 
π_g¥
, 30 },

187 { "$r31", 
π_g¥
, 31 },

190 { "$f0", 
π_Âr
, 0 },

191 { "$f1", 
π_Âr
, 1 },

192 { "$f2", 
π_Âr
, 2 },

193 { "$f3", 
π_Âr
, 3 },

194 { "$f4", 
π_Âr
, 4 },

195 { "$f5", 
π_Âr
, 5 },

196 { "$f6", 
π_Âr
, 6 },

197 { "$f7", 
π_Âr
, 7 },

198 { "$f8", 
π_Âr
, 8 },

199 { "$f9", 
π_Âr
, 9 },

200 { "$f10", 
π_Âr
, 10 },

201 { "$f11", 
π_Âr
, 11 },

202 { "$f12", 
π_Âr
, 12 },

203 { "$f13", 
π_Âr
, 13 },

204 { "$f14", 
π_Âr
, 14 },

205 { "$f15", 
π_Âr
, 15 },

206 { "$f16", 
π_Âr
, 16 },

207 { "$f17", 
π_Âr
, 17 },

208 { "$f18", 
π_Âr
, 18 },

209 { "$f19", 
π_Âr
, 19 },

210 { "$f20", 
π_Âr
, 20 },

211 { "$f21", 
π_Âr
, 21 },

212 { "$f22", 
π_Âr
, 22 },

213 { "$f23", 
π_Âr
, 23 },

214 { "$f24", 
π_Âr
, 24 },

215 { "$f25", 
π_Âr
, 25 },

216 { "$f26", 
π_Âr
, 26 },

217 { "$f27", 
π_Âr
, 27 },

218 { "$f28", 
π_Âr
, 28 },

219 { "$f29", 
π_Âr
, 29 },

220 { "$f30", 
π_Âr
, 30 },

221 { "$f31", 
π_Âr
, 31 },

224 { "$d0", 
π_d¥
, 0 },

225 { "$d1", 
π_d¥
, 1 },

226 { "$d2", 
π_d¥
, 2 },

227 { "$d3", 
π_d¥
, 3 },

228 { "$d4", 
π_d¥
, 4 },

229 { "$d5", 
π_d¥
, 5 },

230 { "$d6", 
π_d¥
, 6 },

231 { "$d7", 
π_d¥
, 7 },

232 { "$d8", 
π_d¥
, 8 },

233 { "$d9", 
π_d¥
, 9 },

234 { "$d10", 
π_d¥
, 10 },

235 { "$d11", 
π_d¥
, 11 },

236 { "$d12", 
π_d¥
, 12 },

237 { "$d13", 
π_d¥
, 13 },

238 { "$d14", 
π_d¥
, 14 },

239 { "$d15", 
π_d¥
, 15 },

242 { "$l0", 
π_Õr
, 0 },

243 { "$l1", 
π_Õr
, 1 },

244 { "$l2", 
π_Õr
, 2 },

245 { "$l3", 
π_Õr
, 3 },

246 { "$l4", 
π_Õr
, 4 },

247 { "$l5", 
π_Õr
, 5 },

248 { "$l6", 
π_Õr
, 6 },

249 { "$l7", 
π_Õr
, 7 },

250 { "$l8", 
π_Õr
, 8 },

251 { "$l9", 
π_Õr
, 9 },

252 { "$l10", 
π_Õr
, 10 },

253 { "$l11", 
π_Õr
, 11 },

254 { "$l12", 
π_Õr
, 12 },

255 { "$l13", 
π_Õr
, 13 },

256 { "$l14", 
π_Õr
, 14 },

257 { "$l15", 
π_Õr
, 15 },

258 { "$l16", 
π_Õr
, 16 },

259 { "$l17", 
π_Õr
, 17 },

260 { "$l18", 
π_Õr
, 18 },

261 { "$l19", 
π_Õr
, 19 },

262 { "$l20", 
π_Õr
, 20 },

263 { "$l21", 
π_Õr
, 21 },

264 { "$l22", 
π_Õr
, 22 },

265 { "$l23", 
π_Õr
, 23 },

266 { "$l24", 
π_Õr
, 24 },

267 { "$l25", 
π_Õr
, 25 },

268 { "$l26", 
π_Õr
, 26 },

269 { "$l27", 
π_Õr
, 27 },

270 { "$l28", 
π_Õr
, 28 },

271 { "$l29", 
π_Õr
, 29 },

272 { "$l30", 
π_Õr
, 30 },

273 { "$l31", 
π_Õr
, 31 },

276 { "$hi", 
π_˘æ
, 0 },

277 { "$lo", 
π_˘æ
, 1 },

278 { "$fcc", 
π_˘æ
, 2 },

281 { "$pc", 
π_PC
, 0 },

282 { "$≈c", 
π_NPC
, 0 },

285 { 
NULL
, 
π_g¥
, 0 }

290 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

292 
i
;

294 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

296 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

297  
md_ªg_«mes
[
i
].
°r
;

301  
NULL
;

302 
	}
}

305 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

306 
is_wrôe
,

307 
md_ªg_ty≥
 
π
,

308 
ªg
,

309 
evÆ_vÆue_t
 *
vÆ
)

311 
π
)

313 
π_g¥
:

314 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

317 i‡(!
is_wrôe
)

319 
vÆ
->
ty≥
 = 
ë_uöt
;

320 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_R
[
ªg
];

323 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

326 
π_Õr
:

327 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

330 i‡(!
is_wrôe
)

332 
vÆ
->
ty≥
 = 
ë_uöt
;

333 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_F
.
l
[
ªg
];

336 
ªgs
->
ªgs_F
.
l
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

339 
π_Âr
:

340 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

343 i‡(!
is_wrôe
)

345 
vÆ
->
ty≥
 = 
ë_Êﬂt
;

346 
vÆ
->
vÆue
.
as_Êﬂt
 = 
ªgs
->
ªgs_F
.
f
[
ªg
];

349 
ªgs
->
ªgs_F
.
f
[
ªg
] = 
	`evÆ_as_Êﬂt
(*
vÆ
);

352 
π_d¥
:

353 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
/2)

356 i‡(!
is_wrôe
)

358 
vÆ
->
ty≥
 = 
ë_doubÀ
;

359 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

362 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

365 
π_˘æ
:

366 
ªg
)

369 i‡(!
is_wrôe
)

371 
vÆ
->
ty≥
 = 
ë_uöt
;

372 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
hi
;

375 
ªgs
->
ªgs_C
.
hi
 = 
	`evÆ_as_uöt
(*
vÆ
);

379 i‡(!
is_wrôe
)

381 
vÆ
->
ty≥
 = 
ë_uöt
;

382 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
lo
;

385 
ªgs
->
ªgs_C
.
lo
 = 
	`evÆ_as_uöt
(*
vÆ
);

389 i‡(!
is_wrôe
)

391 
vÆ
->
ty≥
 = 
ë_öt
;

392 
vÆ
->
vÆue
.
as_öt
 = 
ªgs
->
ªgs_C
.
fcc
;

395 
ªgs
->
ªgs_C
.
fcc
 = 
	`evÆ_as_uöt
(*
vÆ
);

403 
π_PC
:

404 i‡(!
is_wrôe
)

406 
vÆ
->
ty≥
 = 
ë_addr
;

407 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

410 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

413 
π_NPC
:

414 i‡(!
is_wrôe
)

416 
vÆ
->
ty≥
 = 
ë_addr
;

417 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

420 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

424 
	`∑nic
("bogusÑegister bank");

428  
NULL
;

429 
	}
}

433 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

435 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x",

436 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

437 
	}
}

440 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

442 
i
;

444 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

446 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

447 
	`Ârötf
(
°ªam
, " ");

448 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

449 
	`Ârötf
(
°ªam
, "\n");

451 
	}
}

455 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

457 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x/%f",

458 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
l
[ªg],Ñegs.l[ªg],Ñegs.
f
[reg]);

459 i‡–!(
ªg
 & 1))

461 
	`Ârötf
(
°ªam
, " (%4sás double: %f)",

462 
	`md_ªg_«me
(
π_d¥
, 
ªg
/2), 
ªgs
.
d
[reg/2]);

464 
	}
}

467 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

469 
i
;

472 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

474 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

477 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

478 
	`Ârötf
(
°ªam
, "\n");

480 
	}
}

483 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

486 
ªg
)

489 
	`Ârötf
(
°ªam
, "HI: 0x%08x", 
ªgs
.
hi
);

493 
	`Ârötf
(
°ªam
, "LO: 0x%08x", 
ªgs
.
lo
);

497 
	`Ârötf
(
°ªam
, "FCC: 0x%08x", 
ªgs
.
fcc
);

501 
	`∑nic
("bogus controlÑegister index");

503 
	}
}

506 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

508 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

509 
	`Ârötf
(
°ªam
, " ");

510 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

511 
	`Ârötf
(
°ªam
, " ");

512 
	`md_¥öt_¸eg
(
ªgs
, 2, 
°ªam
);

513 
	`Ârötf
(
°ªam
, "\n");

514 
	}
}

517 
w‹d_t


518 
	$md_¸c_ªgs
(
ªgs_t
 *
ªgs
)

520 
i
;

521 
w‹d_t
 
¸c_accum
 = 0;

523 
i
=0; i < 
MD_NUM_IREGS
; i++)

524 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_R
[
i
]);

526 
i
=0; i < 
MD_NUM_FREGS
; i++)

527 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_F
.
l
[
i
]);

529 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
hi
);

530 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
lo
);

531 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
fcc
);

532 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_PC
);

533 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_NPC
);

535  
¸c_accum
;

536 
	}
}

539 
w‹d_t


540 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

542 
i
;

543 
w‹d_t
 
checksum
 = 0;

545 
i
=0; i < 
MD_NUM_IREGS
; i++)

546 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

548 
i
=0; i < 
MD_NUM_FREGS
; i++)

549 
checksum
 ^
ªgs
->
ªgs_F
.
l
[
i
];

551 
checksum
 ^
ªgs
->
ªgs_C
.
hi
;

552 
checksum
 ^
ªgs
->
ªgs_C
.
lo
;

553 
checksum
 ^
ªgs
->
ªgs_C
.
fcc
;

554 
checksum
 ^
ªgs
->
ªgs_PC
;

555 
checksum
 ^
ªgs
->
ªgs_NPC
;

557  
checksum
;

558 
	}
}

562 
	$md_öô_decodî
()

565 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

566 i‡(
md_mask2›
[(
MSK
)]Ë
	`Áèl
("doubly defined mask value"); \

567 i‡((
MSK
Ë>
MD_MAX_MASK
Ë
	`Áèl
("mask value isÅooÜarge"); \

568 
md_mask2›
[(
MSK
)]=(
OP
);

570 
	~"machöe.def
"

571 
	}
}

575 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

576 
md_addr_t
 
pc
,

577 
FILE
 *
°ªam
)

579 
md_›code
 
›
;

582 i‡(!
°ªam
)

583 
°ªam
 = 
°dîr
;

586 
	`MD_SET_OPCODE
(
›
, 
ö°
);

589 i‡(
›
 =
OP_NA
 || o∞>
OP_MAX
)

592 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x:%08x>", 
ö°
.
a
, in°.
b
);

596 *
s
;

598 
	`Ârötf
(
°ªam
, "%-10s", 
	`MD_OP_NAME
(
›
));

600 
s
 = 
	`MD_OP_FORMAT
(
›
);

601 *
s
) {

602 *
s
) {

604 
	`Ârötf
(
°ªam
, "r%d", 
RD
);

607 
	`Ârötf
(
°ªam
, "r%d", 
RS
);

610 
	`Ârötf
(
°ªam
, "r%d", 
RT
);

613 
	`Ârötf
(
°ªam
, "r%d", 
BS
);

616 
	`Ârötf
(
°ªam
, "f%d", 
FD
);

619 
	`Ârötf
(
°ªam
, "f%d", 
FS
);

622 
	`Ârötf
(
°ªam
, "f%d", 
FT
);

625 
	`Ârötf
(
°ªam
, "0x%x", (
pc
 + 8 + (
OFS
 << 2)));

629 
	`Ârötf
(
°ªam
, "%d", 
IMM
);

632 
	`Ârötf
(
°ªam
, "%d", 
SHAMT
);

635 
	`Ârötf
(
°ªam
, "%u", 
UIMM
);

638 
	`Ârötf
(
°ªam
, "0x%x", 
UIMM
);

641 
	`Ârötf
(
°ªam
, "0x%x", ((
pc
 & 036000000000Ë| (
TARG
 << 2)));

644 
	`Ârötf
(
°ªam
, "0x%x", 
BCODE
);

649 i‡(
SS_COMP_OP
 =
SS_COMP_NOP
)

650 
	`Ârötf
(
°ªam
, ")");

651 i‡(
SS_COMP_OP
 =
SS_COMP_POST_INC
)

652 
	`Ârötf
(
°ªam
, ")+");

653 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DEC
)

654 
	`Ârötf
(
°ªam
, ")-");

655 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_INC
)

656 
	`Ârötf
(
°ªam
, ")^+");

657 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DEC
)

658 
	`Ârötf
(
°ªam
, ")^-");

659 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_INC
)

660 
	`Ârötf
(
°ªam
, ")++");

661 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_DEC
)

662 
	`Ârötf
(
°ªam
, ")--");

663 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_INC
)

664 
	`Ârötf
(
°ªam
, ")^++");

665 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_DEC
)

666 
	`Ârötf
(
°ªam
, ")^--");

668 
	`∑nic
("bogus SS_COMP_OP");

673 
	`Âutc
(*
s
, 
°ªam
);

675 
s
++;

678 
	}
}

687 
	#XX
 0x6bababab

	)

690 
	gss_f‹e_èb
[ 8][ 5] = {

694  { 
XX
, XX, XX, XX, XX, },

696  { 
XX
, XX, XX, XX, XX, },

697  { 
XX
, XX, XX, XX, XX, },

698  { 
XX
, XX, XX, XX, XX, },

703 
	gss_a·_èb
[ 8][ 5] = {

707  { 
XX
, XX, XX, XX, XX, },

709  { 
XX
, XX, XX, XX, XX, },

710  { 
XX
, XX, XX, XX, XX, },

711  { 
XX
, XX, XX, XX, XX, },

716 
md_addr_t
 
	gss_Ã_ãmp
;

719 
md_addr_t
 
	gãmp_bs
, 
	gãmp_rd
;

	@ss/machine.h

52 #i‚de‡
PISA_H


53 
	#PISA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

67 
	#TARGET_PISA


	)

69 #i‚de‡
TARGET_PISA_BIG


70 #i‚de‡
TARGET_PISA_LITTLE


72 #ifde‡
BYTES_BIG_ENDIAN


73 
	#TARGET_PISA_BIG


	)

75 
	#TARGET_PISA_LITTLE


	)

81 #i‡
deföed
(
BYTES_BIG_ENDIAN
Ë&& deföed(
TARGET_PISA_LITTLE
)

82 
	#MD_CROSS_ENDIAN


	)

84 #i‡
deföed
(
BYTES_LITTLE_ENDIAN
Ë&& deföed(
TARGET_PISA_BIG
)

85 
	#MD_CROSS_ENDIAN


	)

89 
	#NA
 0

	)

96 #unde‡
MD_QWORD_ADDRS


99 
w‹d_t
 
	tmd_addr_t
;

107 
	#MD_PAGE_SIZE
 4096

	)

108 
	#MD_LOG_PAGE_SIZE
 12

	)

115 
	emd_Áu…_ty≥
 {

116 
	mmd_Áu…_n⁄e
 = 0,

117 
	mmd_Áu…_ac˚ss
,

118 
	mmd_Áu…_Æignmít
,

119 
	mmd_Áu…_ovîÊow
,

120 
	mmd_Áu…_div0
,

121 
	mmd_Áu…_bªak
,

122 
	mmd_Áu…_unim∂
,

123 
	mmd_Áu…_öã∫Æ


132 
	#MD_NUM_IREGS
 32

	)

135 
	#MD_NUM_FREGS
 32

	)

138 
	#MD_NUM_CREGS
 3

	)

141 
	#MD_TOTAL_REGS
 \

	)

145 
sw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

149 
sw‹d_t
 
	ml
[
MD_NUM_FREGS
];

150 
sÊﬂt_t
 
	mf
[
MD_NUM_FREGS
];

151 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
/2];

152 } 
	tmd_Âr_t
;

156 
sw‹d_t
 
	mhi
, 
	mlo
;

157 
	mfcc
;

158 } 
	tmd_˘æ_t
;

161 
	emd_ªg_«mes
 {

162 
	mMD_REG_ZERO
 = 0,

163 
	mMD_REG_GP
 = 28,

164 
	mMD_REG_SP
 = 29,

165 
	mMD_REG_FP
 = 30

175 
w‹d_t
 
	ma
;

176 
w‹d_t
 
	mb
;

177 } 
	tmd_ö°_t
;

180 
md_ö°_t
 
MD_NOP_INST
;

183 #ifde‡
MD_CROSS_ENDIAN


185 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

186 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

187 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

188 
	#MD_SWAPI
(
X
Ë((X).
a
 = 
	`SWAP_WORD
((X).a), \

	)

189 (
	gX
).
	gb
 = 
SWAP_WORD
((
X
).
b
))

193 
	#MD_SWAPH
(
X
Ë(X)

	)

194 
	#MD_SWAPW
(
X
Ë(X)

	)

195 
	#MD_SWAPQ
(
X
Ë(X)

	)

196 
	#MD_SWAPD
(
X
Ë(X)

	)

197 
	#MD_SWAPI
(
X
Ë(X)

	)

202 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
Ë\

	)

203 { 
	gö°
.
	ga
 = 
MEM_READ_WORD
(
mem
, (
PC
)); \

204 
	gö°
.
	gb
 = 
MEM_READ_WORD
(
mem
, (
PC
Ë+ (
w‹d_t
)); }

211 
	#MD_TEXT_BASE
 0x00400000

	)

212 
	#MD_DATA_BASE
 0x10000000

	)

213 
	#MD_STACK_BASE
 0x7fffc000

	)

216 
	#MD_MAX_ENVIRON
 16384

	)

224 
	#MD_OPFIELD
(
INST
Ë(INST.
a
 & 0xff)

	)

225 
	#MD_SET_OPCODE
(
OP
, 
INST
Ë((OPË((INST).
a
 & 0xff))

	)

229 
	#MD_MAX_MASK
 255

	)

232 
	emd_›code
 {

233 
	mOP_NA
 = 0,

234 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

235 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

236 
	#CONNECT
(
OP
)

	)

237 
	~"machöe.def
"

238 
	mOP_MAX


242 
	#MD_OP_ENUM
(
MSK
Ë(
md_mask2›
[MSK])

	)

243 
md_›code
 
md_mask2›
[];

246 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

247 *
md_›2«me
[];

250 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

251 *
md_›2f‹m©
[];

254 
	emd_fu_˛ass
 {

255 
	mFUCœss_NA
 = 0,

256 
	mI¡ALU
,

257 
	mI¡MULT
,

258 
	mI¡DIV
,

259 
	mFlﬂtADD
,

260 
	mFlﬂtCMP
,

261 
	mFlﬂtCVT
,

262 
	mFlﬂtMULT
,

263 
	mFlﬂtDIV
,

264 
	mFlﬂtSQRT
,

265 
	mRdP‹t
,

266 
	mWrP‹t
,

267 
	mNUM_FU_CLASSES


271 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

272 
md_fu_˛ass
 
md_›2fu
[];

275 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

276 *
md_fu2«me
[];

279 
	#F_ICOMP
 0x00000001

	)

280 
	#F_FCOMP
 0x00000002

	)

281 
	#F_CTRL
 0x00000004

	)

282 
	#F_UNCOND
 0x00000008

	)

283 
	#F_COND
 0x00000010

	)

284 
	#F_MEM
 0x00000020

	)

285 
	#F_LOAD
 0x00000040

	)

286 
	#F_STORE
 0x00000080

	)

287 
	#F_DISP
 0x00000100

	)

288 
	#F_RR
 0x00000200

	)

289 
	#F_DIRECT
 0x00000400

	)

290 
	#F_TRAP
 0x00000800

	)

291 
	#F_LONGLAT
 0x00001000

	)

292 
	#F_DIRJMP
 0x00002000

	)

293 
	#F_INDIRJMP
 0x00004000

	)

294 
	#F_CALL
 0x00008000

	)

295 
	#F_FPCOND
 0x00010000

	)

296 
	#F_IMM
 0x00020000

	)

299 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

300 
md_›2Êags
[];

303 #unde‡
RS


304 
	#RS
 (
ö°
.
b
 >> 24Ë

	)

305 
	#RT
 ((
ö°
.
b
 >> 16Ë& 0xffË

	)

306 
	#RD
 ((
ö°
.
b
 >> 8Ë& 0xffË

	)

309 
	#SHAMT
 (
ö°
.
b
 & 0xff)

	)

312 
	#FS
 
RS


	)

313 
	#FT
 
RT


	)

314 
	#FD
 
RD


	)

317 
	#IMM
 (()(–)(
ö°
.
b
 & 0xffff)))

	)

320 
	#UIMM
 (
ö°
.
b
 & 0xffff)

	)

323 
	#TARG
 (
ö°
.
b
 & 0x3ffffff)

	)

326 
	#BCODE
 (
ö°
.
b
 & 0xfffff)

	)

329 
	#OFS
 
IMM


	)

332 
	#BS
 
RS


	)

335 
	#MAXINT_VAL
 0x7fffffff

	)

338 
	#OVER
(
X
,
Y
Ë\

	)

339 ((((
	gX
Ë> 0Ë&& ((
	gY
Ë> 0Ë&& (
	gMAXINT_VAL
 - (X) < (Y))) \

340 || (((
	gX
Ë< 0Ë&& ((
	gY
Ë< 0Ë&& (-
	gMAXINT_VAL
 - (X) > (Y))))

343 
	#UNDER
(
X
,
Y
Ë\

	)

344 ((((
	gX
Ë> 0Ë&& ((
	gY
Ë< 0Ë&& (
	gMAXINT_VAL
 + (Y) < (X))) \

345 || (((
	gX
Ë< 0Ë&& ((
	gY
Ë> 0Ë&& (-
	gMAXINT_VAL
 + (Y) > (X))))

348 #i‚de‡
SET_TPC


349 
	#SET_TPC
(
PC
Ë()0

	)

352 #ifde‡
BYTES_BIG_ENDIAN


354 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

355 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

356 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

357 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

358 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

361 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

362 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

363 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

364 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

365 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

368 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

369 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

370 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

371 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

372 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

375 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

376 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

377 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

378 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

379 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

383 
w‹d_t
 
md_Ã_masks
[];

387 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

388 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

389 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

392 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

393 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

394 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

397 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

398 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

399 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

400 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

403 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

404 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

405 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

406 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

415 
	#SS_SYS_exô
 1

	)

416 
	#MD_EXIT_SYSCALL
(
REGS
Ë((REGS)->
ªgs_R
[2] =
SS_SYS_exô
)

	)

419 
	#SS_SYS_wrôe
 4

	)

420 
	#MD_OUTPUT_SYSCALL
(
REGS
Ë\

	)

421 ((
	gREGS
)->
	gªgs_R
[2] =
SS_SYS_wrôe
 \

422 && ((
REGS
)->
ªgs_R
[4] == 1 \

423 || (
REGS
)->
ªgs_R
[4] == 2))

426 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[4])

	)

429 
	#MD_IS_CALL
(
OP
Ë\

	)

430 ((
MD_OP_FLAGS
(
OP
Ë& (
F_CTRL
|
F_CALL
)) == (F_CTRL|F_CALL))

433 
	#MD_IS_RETURN
(
OP
Ë((OPË=
JR
 && (
RS
Ë=31)

	)

436 
	#MD_IS_INDIR
(
OP
Ë((OPË=
JR
)

	)

439 
	emd_amode_ty≥
 {

440 
md_amode_imm
,

441 
md_amode_gp
,

442 
md_amode_•
,

443 
md_amode_Â
,

444 
md_amode_di•
,

445 
md_amode_º
,

446 
md_amode_NUM


448 *
md_amode_°r
[
md_amode_NUM
];

451 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë\

	)

452 { i‡((
	gOP
Ë=
LUI
Ë(
FSM
Ë(
RT
); }

455 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
Ë\

	)

457 i‡(
MD_OP_FLAGS
(
OP
Ë& 
	gF_DISP
) \

459 i‡((
	gBS
Ë=(
FSM
)) \

460 (
AM
Ë
md_amode_imm
; \

461 i‡((
	gBS
Ë=
MD_REG_GP
) \

462 (
AM
Ë
md_amode_gp
; \

463 i‡((
	gBS
Ë=
MD_REG_SP
) \

464 (
AM
Ë
md_amode_•
; \

465 i‡((
	gBS
Ë=
MD_REG_FP
) \

466 (
AM
Ë
md_amode_Â
; \

468 (
	gAM
Ë
md_amode_di•
; \

470 i‡(
MD_OP_FLAGS
(
OP
Ë& 
	gF_RR
) \

471 (
	gAM
Ë
md_amode_º
; \

473 
∑nic
("cannot decodeáddressing mode"); \

477 
	#MD_AMODE_POSTPROBE
(
FSM
Ë\

	)

478 { (
	gFSM
Ë
MD_REG_ZERO
; }

486 
	#MD_EIO_FILE_FORMAT
 
EIO_PISA_FORMAT


	)

488 
	#MD_MISC_REGS_TO_EXO
(
REGS
Ë\

	)

489 
exo_√w
(
ec_li°
, \

490  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

491  
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

492  
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

493  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
hi
), \

494  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
lo
), \

495  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
fcc
),\

496 
NULL
)

498 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
Ë\

	)

499 
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

501 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
Ë\

	)

502 
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
l
[
IDX
])

504 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
Ë\

	)

506 i‡(!
	gexo
 \

507 || 
	gexo
->
	gec
 !
ec_li°
 \

508 || !
exo
->
as_li°
.
hód
 \

509 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

510 || !
exo
->
as_li°
.
hód
->
√xt
 \

511 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

512 || !
exo
->
as_li°
.
hód
->
√xt
->next \

513 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

514 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

515 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

516 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

517 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

518 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next->next \

519 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
ec
 !
ec_öãgî
\

520 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->√xà!
NULL
) \

521 
Áèl
("couldÇotÑead EIO miscÑegs"); \

522 (
	gICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

523 (
	gREGS
)->
	gªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
; \

524 (
	gREGS
)->
	gªgs_NPC
 = \

525 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
; \

526 (
	gREGS
)->
	gªgs_C
.
	ghi
 = \

527 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

528 (
	gREGS
)->
	gªgs_C
.
	glo
 = \

529 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
; \

530 (
	gREGS
)->
	gªgs_C
.
	gfcc
 = \

531 ()
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

533 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
Ë\

	)

534 ((
	gREGS
)->
	gªgs_R
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

536 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
Ë\

	)

537 ((
	gREGS
)->
	gªgs_F
.
	gl
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

539 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
Ë\

	)

540 ((
	gREGS
)->
	gªgs_R
[
IDX
] !(
sw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

542 
	#MD_FIRST_IN_REG
 2

	)

543 
	#MD_LAST_IN_REG
 7

	)

545 
	#MD_FIRST_OUT_REG
 2

	)

546 
	#MD_LAST_OUT_REG
 7

	)

554 
qw‹d_t
 
	texo_addªss_t
;

557 
qw‹d_t
 
	texo_öãgî_t
;

560 
	texo_Êﬂt_t
;

568 #ifde‡
HOST_HAS_QWORD


569 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

570 
	#sc_cou¡î
 
sc_sqw‹d


	)

571 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

573 
	#°©_ªg_cou¡î
 
°©_ªg_doubÀ


	)

574 
	#sc_cou¡î
 
sc_doubÀ


	)

575 
	#f‹_cou¡î
 
f‹_doubÀ


	)

579 
	#°©_ªg_addr
 
°©_ªg_uöt


	)

587 
	emd_ªg_ty≥
 {

588 
	mπ_g¥
,

589 
	mπ_Õr
,

590 
	mπ_Âr
,

591 
	mπ_d¥
,

592 
	mπ_˘æ
,

593 
	mπ_PC
,

594 
	mπ_NPC
,

595 
	mπ_NUM


599 
	smd_ªg_«mes_t
 {

600 *
	m°r
;

601 
md_ªg_ty≥
 
	mfûe
;

602 
	mªg
;

606 
md_ªg_«mes_t
 
md_ªg_«mes
[];

609 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

612 
	gevÆ_vÆue_t
;

613 
	gªgs_t
;

615 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

616 
is_wrôe
,

617 
md_ªg_ty≥
 
π
,

618 
ªg
,

619 
evÆ_vÆue_t
 *
vÆ
);

622 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

623 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

626 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

627 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

630 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

631 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

634 
w‹d_t
 
md_¸c_ªgs
(
ªgs_t
 *
ªgs
);

637 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

645 
	#MD_AGEN_OP
 
ADD


	)

648 
	#MD_NOP_OP
 
NOP


	)

652 
	#MD_VALID_ADDR
(
ADDR
Ë\

	)

653 (((
	gADDR
Ë>
ld_ãxt_ba£
 && (
ADDR
Ë< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

654 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_°ack_ba£
))

663 
	#MD_BR_SHIFT
 3

	)

671 
md_öô_decodî
();

675 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

676 
md_addr_t
 
pc
,

677 
FILE
 *
°ªam
);

700 
	#SS_PAGE_SIZE
 4096

	)

703 
	#SS_NUM_REGS
 32

	)

706 
	#SS_TOTAL_REGS
 \

	)

707 (
	gSS_NUM_REGS
+SS_NUM_REGS+ 1+ 1+ 1+ 1+ \

711 
	#SS_COMP_OP
 ((
ö°
.
a
 & 0xff00Ë>> 8)

	)

714 
	#SS_COMP_NOP
 0x00

	)

715 
	#SS_COMP_POST_INC
 0x01

	)

716 
	#SS_COMP_POST_DEC
 0x02

	)

717 
	#SS_COMP_PRE_INC
 0x03

	)

718 
	#SS_COMP_PRE_DEC
 0x04

	)

719 
	#SS_COMP_POST_DBL_INC
 0x05

	)

720 
	#SS_COMP_POST_DBL_DEC
 0x06

	)

721 
	#SS_COMP_PRE_DBL_INC
 0x07

	)

722 
	#SS_COMP_PRE_DBL_DEC
 0x08

	)

729 
	#INC_DEC
(
EXPR
, 
REG
, 
SIZE
Ë\

	)

730 (
SET_GPR
((
REG
), 
GPR
(REGË+ 
ss_f‹e_èb
[(
SIZE
)-1][
SS_COMP_OP
]), \

731 (
	gEXPR
), \

732 
SET_GPR
((
REG
), 
GPR
(REGË+ 
ss_a·_èb
[(
SIZE
)-1][
SS_COMP_OP
]))

735 
ss_f‹e_èb
[8][5];

736 
ss_a·_èb
[8][5];

739 
	#Rgp
 28

	)

740 
	#R•
 29

	)

741 
	#RÂ
 30

	)

744 
SS_ADDR_TYPE
 
ss_Ã_ãmp
;

747 
SS_ADDR_TYPE
 
ãmp_bs
, 
ãmp_rd
;

753 #i‚de‡
IFAIL


754 
	#IFAIL
(
S
Ë
	`Áèl
(S)

	)

758 
	#DIV0
(
N
Ë(((NË=0Ë? 
	`IFAIL
("dividêby 0"Ë: ()0)

	)

761 
	#INTALIGN
(
N
Ë(((NË& 01Ë\

	)

762 ? 
IFAIL
("bad INTÑegisterálignment") : ()0)

765 
	#FPALIGN
(
N
Ë(((NË& 01Ë\

	)

766 ? 
IFAIL
("bad FPÑegisterálignment") : ()0)

769 
	#TALIGN
(
TARG
Ë(((TARGË& 0x7Ë\

	)

770 ? 
IFAIL
("bad jumpálignment") : ()0)

772 
	#OVER
(
X
,
Y
Ë(()0)

	)

773 
	#UNDER
(
X
,
Y
Ë(()0)

	)

774 
	#DIV0
(
N
Ë(()0)

	)

775 
	#INTALIGN
(
N
Ë(()0)

	)

776 
	#FPALIGN
(
N
Ë(()0)

	)

777 
	#TALIGN
(
TARG
Ë(()0)

	)

782 
	#IDIV
(
A
, 
B
Ë((AË/ (B))

	)

783 
	#IMOD
(
A
, 
B
Ë((AË% (B))

	)

784 
	#FDIV
(
A
, 
B
Ë((AË/ (B))

	)

785 
	#FINT
(
A
Ë(()A)

	)

	@ss/misc.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°d¨g.h
>

55 
	~<°rög.h
>

56 
	~<˘y≥.h
>

57 
	~<î∫o.h
>

59 #i‡
deföed
(
__Æpha
Ë|| deföed(
löux
)

60 
	~<uni°d.h
>

63 
	~"ho°.h
"

64 
	~"misc.h
"

65 
	~"machöe.h
"

68 
	gvîbo£
 = 
FALSE
;

70 #ifde‡
DEBUG


72 
	gdebuggög
 = 
FALSE
;

77 (*
hook_‚
)(
FILE
 *
°ªam
Ë
NULL
;

81 
	`Áèl_hook
((*
‚
)(
FILE
 *
°ªam
))

83 
hook_‚
 = 
‚
;

84 
	}
}

90 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

93 
	$Áèl
(*
fmt
, ...)

96 
va_li°
 
v
;

97 
	`va_°¨t
(
v
, 
fmt
);

99 
	`Ârötf
(
°dîr
, "fatal: ");

100 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

103 i‡(
vîbo£
)

104 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

106 
	`Ârötf
(
°dîr
, "\n");

107 i‡(
hook_‚
)

108 (*
hook_‚
)(
°dîr
);

109 
	`exô
(1);

110 
	}
}

116 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

119 
	$∑nic
(*
fmt
, ...)

122 
va_li°
 
v
;

123 
	`va_°¨t
(
v
, 
fmt
);

125 
	`Ârötf
(
°dîr
, "panic: ");

126 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

129 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

131 
	`Ârötf
(
°dîr
, "\n");

132 i‡(
hook_‚
)

133 (*
hook_‚
)(
°dîr
);

134 
	`ab‹t
();

135 
	}
}

138 #ifde‡
__GNUC__


140 
	$_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

143 
	$w¨n
(*
fmt
, ...)

146 
va_li°
 
v
;

147 
	`va_°¨t
(
v
, 
fmt
);

149 
	`Ârötf
(
°dîr
, "warning: ");

150 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

151 #ifde‡
__GNUC__


152 i‡(
vîbo£
)

153 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

155 
	`Ârötf
(
°dîr
, "\n");

156 
	}
}

159 #ifde‡
__GNUC__


161 
	$_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

164 
	$öfo
(*
fmt
, ...)

167 
va_li°
 
v
;

168 
	`va_°¨t
(
v
, 
fmt
);

170 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

171 #ifde‡
__GNUC__


172 i‡(
vîbo£
)

173 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

175 
	`Ârötf
(
°dîr
, "\n");

176 
	}
}

178 #ifde‡
DEBUG


180 #ifde‡
__GNUC__


182 
	$_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

185 
	$debug
(*
fmt
, ...)

188 
va_li°
 
v
;

189 
	`va_°¨t
(
v
, 
fmt
);

191 i‡(
debuggög
)

193 
	`Ârötf
(
°dîr
, "debug: ");

194 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

195 #ifde‡
__GNUC__


196 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

198 
	`Ârötf
(
°dîr
, "\n");

200 
	}
}

206 
	$my§™d
(
£ed
)

208 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

209 
	`§™d
(
£ed
);

211 
	`§™dom
(
£ed
);

213 
	}
}

217 
	$myønd
()

219 #i‡!
	`deföed
(
__Æpha
Ë&& !deföed(
unix
)

220 
	`øndom
();

223 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

224  
	`ønd
();

226  
	`øndom
();

228 
	}
}

233 
	$my°rdup
(*
s
)

235 *
buf
;

237 i‡(!(
buf
 = (*)
	`mÆloc
(
	`°æí
(
s
)+1)))

238  
NULL
;

239 
	`°r˝y
(
buf
, 
s
);

240  
buf
;

241 
	}
}

245 
	$my°ºchr
(*
s
, 
c
)

247 *
πnvÆ
 = 0;

250 i‡(*
s
 =
c
)

251 
πnvÆ
 = 
s
;

252 } *
s
++);

254  
πnvÆ
;

255 
	}
}

260 
	$my°ricmp
(*
s1
, *
s2
)

262 
u1
, 
u2
;

266 
u1
 = ()*
s1
++; u1 = 
	`tﬁowî
(u1);

267 
u2
 = ()*
s2
++; u2 = 
	`tﬁowî
(u2);

269 i‡(
u1
 !
u2
)

270  
u1
 - 
u2
;

271 i‡(
u1
 == '\0')

274 
	}
}

279 
	$gëc‹e
(
nbyãs
)

281  
	`ˇŒoc
(
nbyãs
, 1);

284 #i‡!
	`deföed
(
PURIFY
Ë&& !deföed(
_MSC_VER
)

285 *
p
 = (*)
	`sbrk
(
nbyãs
);

287 i‡(
p
 == (*)-1)

288  
NULL
;

291 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
_MSC_VER
)

292 
	`mem£t
(
p
, '\0', 
nbyãs
);

294 
	`bzîo
(
p
, 
nbyãs
);

296  
p
;

298  
	`ˇŒoc
(
nbyãs
, 1);

301 
	}
}

305 
	$log_ba£2
(
n
)

307 
powî
 = 0;

309 i‡(
n
 <= 0 || (n & (n-1)) != 0)

310 
	`∑nic
("log2() only works forÖositiveÖower ofÅwo values");

312 
n
 >>= 1)

313 
powî
++;

315  
powî
;

316 
	}
}

320 
	$ñ≠£d_time
(
£c
)

322 
t°r
[256];

323 
ãmp
[256];

325 i‡(
£c
 <= 0)

328 
t°r
[0] = '\0';

331 i‡(
£c
 >= 86400)

333 
	`•rötf
(
ãmp
, "%ldD ", 
£c
/86400);

334 
	`°rˇt
(
t°r
, 
ãmp
);

335 
£c
 = sec % 86400;

338 i‡(
£c
 >= 3600)

340 
	`•rötf
(
ãmp
, "%ldh ", 
£c
/3600);

341 
	`°rˇt
(
t°r
, 
ãmp
);

342 
£c
 = sec % 3600;

345 i‡(
£c
 >= 60)

347 
	`•rötf
(
ãmp
, "%ldm ", 
£c
/60);

348 
	`°rˇt
(
t°r
, 
ãmp
);

349 
£c
 = sec % 60;

352 i‡(
£c
 >= 1)

354 
	`•rötf
(
ãmp
, "%ld†", 
£c
);

355 
	`°rˇt
(
t°r
, 
ãmp
);

357 
t°r
[
	`°æí
(tstr)-1] = '\0';

358  
t°r
;

359 
	}
}

367 
	$exåa˘l
(
w‹d
,

368 
pos
,

369 
num
)

371 (((Ë
w‹d
 >> (
pos
 + 1 - 
num
)) & ~(~0 <<Çum));

372 
	}
}

374 
	#PUT
(
p
, 
n
Ë\

	)

376 
	g¬
, 
	gcc
; \

378 
	g¬
 = 0;Ç¿< 
	gn
;Çn++) \

380 
	gcc
 = *(
p
+
¬
); \

381 *
	gobuf
++ = 
cc
; \

385 
	#PAD
(
s
, 
n
Ë\

	)

387 
	g¬
, 
	gcc
; \

389 
	gcc
 = *
s
; \

390 
	g¬
 = 
n
;Çn > 0;Çn--) \

391 *
	gobuf
++ = 
cc
; \

394 #ifde‡
HOST_HAS_QWORD


395 
	#HIBITL
 
	`LL
(0x8000000000000000)

	)

396 
sqw‹d_t
 
	t¶¨geöt_t
;

397 
qw‹d_t
 
	tœrgeöt_t
;

399 
	#HIBITL
 0x80000000L

	)

400 
sw‹d_t
 
	t¶¨geöt_t
;

401 
w‹d_t
 
	tœrgeöt_t
;

405 
	$_lowdigô
(
¶¨geöt_t
 *
vÆ±r
)

412 
lowbô
 = ()(*
vÆ±r
 & 1);

413 
¶¨geöt_t
 
vÆue
 = (*
vÆ±r
 >> 1Ë& ~
HIBITL
;

415 *
vÆ±r
 = 
vÆue
 / 5;

416  ()(
vÆue
 % 5 * 2 + 
lowbô
 + '0');

417 
	}
}

421 
	$myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
)

423 
_bœnks
[] = " ";

424 
_zî€s
[] = "00000000000000000000";

427 
cou¡
 = 0;

430 
fcode
;

433 
width
, 
¥ec
;

436 
lzîo
;

439 
¥efixÀngth
;

442 
ŸhîÀngth
;

445 
	#PADZERO
 0x0001

	)

446 
	#RZERO
 0x0002

	)

447 
	#LZERO
 0x0004

	)

448 
	#DOTSEEN
 0x0008

	)

449 
	#LENGTH
 0x0010

	)

450 
Êagw‹d
;

453 
	#MAXDIGS
 22

	)

456 *
bp
, *
p
;

459 
k
, 
Ãadix
, 
mødix
;

462 *
¥efix
;

465 
buf
[
MAXDIGS
*4], 
buf1
[MAXDIGS*4];

468 *
èb
;

471 
¶¨geöt_t
 
vÆ
;

474 
dÊﬂt_t
 
fvÆ
;

478 
n
;

480 (
fcode
 = *
f‹m©
) != '\0' && fcode != '%')

482 *
obuf
++ = 
fcode
;

483 
f‹m©
++;

484 
cou¡
++;

487 i‡(
fcode
 == '\0')

490 *
obuf
 = '\0';

491  
obuf
;

500 
width
 = 
¥efixÀngth
 = 
ŸhîÀngth
 = 
Êagw‹d
 = 0;

501 
f‹m©
++;

503 
ch¨swôch
:

504 
fcode
 = *
f‹m©
++)

507 
Êagw‹d
 |
PADZERO
;

518 
num
 = 
fcode
 - '0';

519 
	`isdigô
(
fcode
 = *
f‹m©
))

521 
num
 =Çum * 10 + 
fcode
 - '0';

522 
f‹m©
++;

524 i‡(
Êagw‹d
 & 
DOTSEEN
)

525 
¥ec
 = 
num
;

527 
width
 = 
num
;

528 
ch¨swôch
;

532 
Êagw‹d
 |
DOTSEEN
;

533 
ch¨swôch
;

536 
Êagw‹d
 |
LENGTH
;

537 
ch¨swôch
;

540 #ifde‡
HOST_HAS_QWORD


541 
Êagw‹d
 |
LENGTH
;

544 
Êagw‹d
 |
DOTSEEN
;

545 i‡(!
width
)

546 
width
 = 12;

547 
¥ec
 = 0;

548 
¥o˚ss_Êﬂt
;

553 i‡(
Êagw‹d
 & 
LENGTH
)

554 
vÆ
 = 
	`va_¨g
(
v
, 
¶¨geöt_t
);

556 
vÆ
 = (
¶¨geöt_t
)
	`va_¨g
(
v
, 
sw‹d_t
);

559 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

562 i‡(
vÆ
 < 0)

564 
¥efix
 = "-";

565 
¥efixÀngth
 = 1;

567 i‡(
vÆ
 !(
¶¨geöt_t
)
HIBITL
)

568 
vÆ
 = -val;

572 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

576 
decimÆ
:

578 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

580 i‡(
qvÆ
 <= 9)

581 *--
bp
 = ()
qvÆ
 + '0';

585 
n
 = ()
qvÆ
;

586 
qvÆ
 /= 10;

587 *--
bp
 = 
n
 - ()
qvÆ
 * 10 + '0';

589 
qvÆ
 > 9);

590 *--
bp
 = ()
qvÆ
 + '0';

597 i‡(
Êagw‹d
 & 
LENGTH
)

598 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

600 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

603 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

605 i‡(
vÆ
 & 
HIBITL
)

606 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

607 
decimÆ
;

610 
mødix
 = 7;

611 
Ãadix
 = 2;

612 
fixed
;

615 i‡((
md_addr_t
) > 4)

616 
Êagw‹d
 |
LENGTH
;

621 
mødix
 = 15;

622 
Ãadix
 = 3;

624 
fixed
:

626 i‡(
Êagw‹d
 & 
LENGTH
)

627 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

629 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

632 
èb
 = (
fcode
 == 'X') ? "0123456789ABCDEF" : "0123456789abcdef";

635 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

638 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

640 i‡(
qvÆ
 == 0)

642 
ŸhîÀngth
 = 
lzîo
 = 1;

643 
Êagw‹d
 |
LZERO
;

647 *--
bp
 = 
èb
[
qvÆ
 & 
mødix
];

648 
qvÆ
 = ((qvÆ >> 1Ë& ~
HIBITL
Ë>> 
Ãadix
;

649 } 
qvÆ
 != 0);

653 #i‚de‡
HOST_HAS_QWORD


654 
¥o˚ss_Êﬂt
:

658 i‡(
Êagw‹d
 & 
DOTSEEN
)

659 
	`•rötf
(
buf1
, "%%%d.%df", 
width
, 
¥ec
);

660 i‡(
width
)

661 
	`•rötf
(
buf1
, "%%%df", 
width
);

663 
	`•rötf
(
buf1
, "%%f");

666 
fvÆ
 = 
	`va_¨g
(
v
, 
dÊﬂt_t
);

669 
	`•rötf
(
buf
, 
buf1
, 
fvÆ
);

670 
bp
 = 
buf
;

671 
p
 = 
bp
 + 
	`°æí
(bp);

675 
bp
 = 
	`va_¨g
(
v
, *);

676 i‡(
bp
 =
NULL
)

677 
bp
 = "(null)";

678 
p
 = 
bp
 + 
	`°æí
(bp);

682 
buf
[0] = 
fcode
;

683 
c_mîge
;

686 
buf
[0] = 
	`va_¨g
(
v
, );

687 
c_mîge
:

688 
p
 = (
bp
 = &
buf
[0]) + 1;

694 
f‹m©
--;

699 
k
 = (
n
 = 
p
 - 
bp
Ë+ 
¥efixÀngth
 + 
ŸhîÀngth
;

700 i‡(
width
 <
k
)

701 
cou¡
 +
k
;

704 
cou¡
 +
width
;

708 i‡(
Êagw‹d
 & 
PADZERO
)

710 i‡(!(
Êagw‹d
 & 
LZERO
))

712 
Êagw‹d
 |
LZERO
;

713 
lzîo
 = 
width
 - 
k
;

716 
lzîo
 +
width
 - 
k
;

719 
k
 = 
width
;

724 
	`PAD
(
_bœnks
, 
width
 - 
k
);

729 i‡(
¥efixÀngth
 != 0)

731 
	`PUT
(
¥efix
, 
¥efixÀngth
);

735 i‡(
Êagw‹d
 & 
LZERO
)

737 
	`PAD
(
_zî€s
, 
lzîo
);

741 i‡(
n
 > 0)

743 
	`PUT
(
bp
, 
n
);

746 
	}
}

750 
	$my•rötf
(*
obuf
, *
f‹m©
, ...)

753 
va_li°
 
v
;

754 
	`va_°¨t
(
v
, 
f‹m©
);

756  
	`myv•rötf
(
obuf
, 
f‹m©
, 
v
);

757 
	}
}

761 
	$myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
)

764 
buf
[2048];

766 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

767 
	`Âuts
(
buf
, 
°ªam
);

768 
	}
}

772 
	$myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...)

775 
buf
[2048];

778 
va_li°
 
v
;

779 
	`va_°¨t
(
v
, 
f‹m©
);

781 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

782 
	`Âuts
(
buf
, 
°ªam
);

783 
	}
}

785 #ifde‡
HOST_HAS_QWORD


787 
	#LL_MAX
 
	`LL
(9223372036854775807)

	)

788 
	#LL_MIN
 (-
LL_MAX
 - 1)

	)

789 
	#ULL_MAX
 (
	`ULL
(9223372036854775807Ë* ULL(2Ë+ 1)

	)

792 
sqw‹d_t


793 
	$my©osq
(*
≈å
, **
ídp
, 
ba£
)

795 *
s
, *
ßve
;

796 
√g©ive
, 
ovîÊow
;

797 
sqw‹d_t
 
cutoff
, 
cuéim
, 
i
;

798 
c
;

799 
î∫o
;

801 i‡(!
≈å
 || !*nptr)

802 
	`∑nic
("strtoll()Öassedá NULL string");

804 
s
 = 
≈å
;

807 
	`is•a˚
(()(*
s
)))

808 ++
s
;

809 i‡(*
s
 == '\0')

810 
noc⁄v
;

812 i‡(
ba£
 == 0)

814 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

815 
ba£
 = 16;

817 
ba£
 = 10;

820 i‡(
ba£
 <= 1 || base > 36)

821 
	`∑nic
("bogu†ba£: %d", 
ba£
);

824 i‡(*
s
 == '-')

826 
√g©ive
 = 1;

827 ++
s
;

829 i‡(*
s
 == '+')

831 
√g©ive
 = 0;

832 ++
s
;

835 
√g©ive
 = 0;

837 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

838 
s
 += 2;

841 
ßve
 = 
s
;

843 
cutoff
 = 
LL_MAX
 / (Ë
ba£
;

844 
cuéim
 = 
LL_MAX
 % (Ë
ba£
;

846 
ovîÊow
 = 0;

847 
i
 = 0;

848 
c
 = *
s
; c != '\0'; c = *++s)

850 i‡(
	`isdigô
 (
c
))

851 
c
 -= '0';

852 i‡(
	`ißÕha
 (
c
))

853 
c
 = 
	`touµî
(c) - 'A' + 10;

856 i‡(
c
 >
ba£
)

860 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

861 
ovîÊow
 = 1;

864 
i
 *(Ë
ba£
;

865 
i
 +
c
;

870 i‡(
s
 =
ßve
)

871 
noc⁄v
;

875 i‡(
ídp
 !
NULL
)

876 *
ídp
 = (*Ë
s
;

878 i‡(
ovîÊow
)

880 
î∫o
 = 
ERANGE
;

881  
√g©ive
 ? 
LL_MIN
 : 
LL_MAX
;

885 
î∫o
 = 0;

888  (
√g©ive
 ? -
i
 : i);

891 
noc⁄v
:

893 i‡(
ídp
 !
NULL
)

894 *
ídp
 = (*Ë
≈å
;

896 
	}
}

899 
qw‹d_t


900 
	$my©oq
(*
≈å
, **
ídp
, 
ba£
)

902 *
s
, *
ßve
;

903 
ovîÊow
;

904 
qw‹d_t
 
cutoff
, 
cuéim
, 
i
;

905 
c
;

906 
î∫o
;

908 i‡(!
≈å
 || !*nptr)

909 
	`∑nic
("strtoll()Öassedá NULL string");

911 
s
 = 
≈å
;

914 
	`is•a˚
(()(*
s
)))

915 ++
s
;

916 i‡(*
s
 == '\0')

917 
noc⁄v
;

919 i‡(
ba£
 == 0)

921 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

922 
ba£
 = 16;

924 
ba£
 = 10;

927 i‡(
ba£
 <= 1 || base > 36)

928 
	`∑nic
("bogu†ba£: %d", 
ba£
);

930 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

931 
s
 += 2;

934 
ßve
 = 
s
;

936 
cutoff
 = 
ULL_MAX
 / (Ë
ba£
;

937 
cuéim
 = 
ULL_MAX
 % (Ë
ba£
;

939 
ovîÊow
 = 0;

940 
i
 = 0;

941 
c
 = *
s
; c != '\0'; c = *++s)

943 i‡(
	`isdigô
 (
c
))

944 
c
 -= '0';

945 i‡(
	`ißÕha
 (
c
))

946 
c
 = 
	`touµî
(c) - 'A' + 10;

949 i‡(
c
 >
ba£
)

953 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

954 
ovîÊow
 = 1;

957 
i
 *(Ë
ba£
;

958 
i
 +
c
;

963 i‡(
s
 =
ßve
)

964 
noc⁄v
;

968 i‡(
ídp
 !
NULL
)

969 *
ídp
 = (*Ë
s
;

971 i‡(
ovîÊow
)

973 
î∫o
 = 
ERANGE
;

974  
ULL_MAX
;

978 
î∫o
 = 0;

981  
i
;

984 
noc⁄v
:

986 i‡(
ídp
 !
NULL
)

987 *
ídp
 = (*Ë
≈å
;

989 
	}
}

991 #ifde‡
TESTIT


993 
	$ã°ô
(*
s
)

995 
buf
[128];

996 
qw‹d_t
 
qvÆ
;

998 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 10);

1000 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

1001 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1002 
	`myqtﬂ
(
qvÆ
, "%16x", 
buf
, 
NULL
);

1003 
	`Ârötf
(
°dîr
, "16x: %s\n", 
buf
);

1004 
	`myqtﬂ
(
qvÆ
, "%016x", 
buf
, 
NULL
);

1005 
	`Ârötf
(
°dîr
, "016x: %s\n", 
buf
);

1006 
	`myqtﬂ
(
qvÆ
, "0x%016x", 
buf
, 
NULL
);

1007 
	`Ârötf
(
°dîr
, "0x016x: %s\n", 
buf
);

1008 
	`myqtﬂ
(
qvÆ
, "0x%08x", 
buf
, 
NULL
);

1009 
	`Ârötf
(
°dîr
, "0x08x: %s\n", 
buf
);

1011 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1012 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1013 
	`myqtﬂ
(
qvÆ
, "%22d", 
buf
, 
NULL
);

1014 
	`Ârötf
(
°dîr
, "22d: %s\n", 
buf
);

1015 
	`myqtﬂ
(
qvÆ
, "%022d", 
buf
, 
NULL
);

1016 
	`Ârötf
(
°dîr
, "022d: %s\n", 
buf
);

1018 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1019 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1021 
	`myqtﬂ
(
qvÆ
, "%o", 
buf
, 
NULL
);

1022 
	`Ârötf
(
°dîr
, "o: %s\n", 
buf
);

1023 
	}
}

1026 
	$°e°ô
(*
s
)

1028 
buf
[128];

1029 
sqw‹d_t
 
sqvÆ
;

1031 
sqvÆ
 = 
	`my©osq
(
s
, 
NULL
, 10);

1033 
	`myqtﬂ
(
sqvÆ
, "%x", 
buf
, 
NULL
);

1034 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1036 
	`myqtﬂ
(
sqvÆ
, "%d", 
buf
, 
NULL
);

1037 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1039 
	`myqtﬂ
(
sqvÆ
, "%u", 
buf
, 
NULL
);

1040 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1041 
	}
}

1044 
	$xã°ô
(*
s
)

1046 
buf
[128];

1047 
qw‹d_t
 
qvÆ
;

1049 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 16);

1051 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

1052 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1054 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1055 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1057 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1058 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1059 
	}
}

1064 #ifde‡
GZIP_PATH


1067 *
	mty≥
;

1068 *
	mext
;

1069 *
	mcmd
;

1070 } 
	ggzcmds
[] = {

1082 
FILE
 *

1083 
	$gz›í
(*
‚ame
, *
ty≥
)

1085 
i
;

1086 *
cmd
 = 
NULL
, *
ext
;

1087 
FILE
 *
fd
;

1088 
°r
[2048];

1091 
ext
 = 
	`my°ºchr
(
‚ame
, '.');

1094 i‡(
ext
 !
NULL
 && *ext != '\0')

1096 
i
=0; i < 
	`N_ELT
(
gzcmds
); i++)

1098 i‡(!
	`°rcmp
(
gzcmds
[
i
].
ty≥
,Åy≥Ë&& !°rcmp(gzcmds[i].
ext
,Éxt))

1100 
cmd
 = 
gzcmds
[
i
].cmd;

1106 i‡(!
cmd
)

1109 
fd
 = 
	`f›í
(
‚ame
, 
ty≥
);

1114 
	`•rötf
(
°r
, 
cmd
, 
GZIP_PATH
, 
‚ame
);

1115 
fd
 = 
	`p›í
(
°r
, 
ty≥
);

1118  
fd
;

1119 
	}
}

1123 
	$gz˛o£
(
FILE
 *
fd
)

1126 i‡(
	`p˛o£
(
fd
) == -1)

1127 
	`f˛o£
(
fd
);

1128 
	}
}

1132 
FILE
 *

1133 
	$gz›í
(*
‚ame
, *
ty≥
)

1135  
	`f›í
(
‚ame
, 
ty≥
);

1136 
	}
}

1139 
	$gz˛o£
(
FILE
 *
fd
)

1141 
	`f˛o£
(
fd
);

1142 
	}
}

1148 
	#POLYNOMIAL
 0x04c11db7L

	)

1150 
	g¸c_öô
 = 
FALSE
;

1151 
	g¸c_èbÀ
[256];

1155 
	$¸c_gíèb
()

1157 
i
, 
j
;

1158 
w‹d_t
 
¸c_accum
;

1160 
i
=0; i < 256; i++)

1162 
¸c_accum
 = (()
i
 << 24);

1163 
j
=0; j < 8; j++)

1165 i‡(
¸c_accum
 & 0x80000000L)

1166 
¸c_accum
 = (¸c_accum << 1Ë^ 
POLYNOMIAL
;

1168 
¸c_accum
 = (crc_accum << 1);

1170 
¸c_èbÀ
[
i
] = 
¸c_accum
;

1173 
	}
}

1176 
w‹d_t


1177 
	$¸c
(
w‹d_t
 
¸c_accum
, w‹d_à
d©a
)

1179 
i
, 
j
;

1181 i‡(!
¸c_öô
)

1183 
	`¸c_gíèb
();

1184 
¸c_öô
 = 
TRUE
;

1187 
j
=0; j < (
w‹d_t
); j++)

1189 
i
 = (()(
¸c_accum
 >> 24Ë^ (
d©a
 >> (
j
*8))) & 0xff;

1190 
¸c_accum
 = (¸c_accum << 8Ë^ 
¸c_èbÀ
[
i
];

1192  
¸c_accum
;

1193 
	}
}

	@ss/misc.h

52 #i‚de‡
MISC_H


53 
	#MISC_H


	)

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

57 
	~<°d¨g.h
>

58 
	~<°rög.h
>

59 
	~<sys/ty≥s.h
>

61 
	~"ho°.h
"

64 #i‚de‡
TRUE


65 
	#TRUE
 1

	)

67 #i‚de‡
FALSE


68 
	#FALSE
 0

	)

72 #i‚de‡
MAX


73 
	#MAX
(
a
, 
b
Ë((◊Ë< (b)Ë? (bË: (a))

	)

75 #i‚de‡
MIN


76 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

80 
	#LLHIGH
(
L
Ë(()(((L)>>32Ë& 0xffffffff))

	)

81 
	#LLLOW
(
L
Ë(()((LË& 0xffffffff))

	)

84 
	#N_ELT
(
ARR
Ë((ARR)/((ARR)[0]))

	)

87 
	#ROUND_UP
(
N
,
ALIGN
Ë(((NË+ ((ALIGN)-1)Ë& ~((ALIGN)-1))

	)

88 
	#ROUND_DOWN
(
N
,
ALIGN
Ë((NË& ~((ALIGN)-1))

	)

91 
vîbo£
;

93 #ifde‡
DEBUG


95 
debuggög
;

100 
Áèl_hook
((*
hook_‚
)(
FILE
 *
°ªam
));

105 
	#Áèl
(
fmt
, 
¨gs
...Ë\

	)

106 
	`_Áèl
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

109 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

110 
	`__©åibuã__
 ((
n‹ëu∫
));

113 
	`Áèl
(*
fmt
, ...);

119 
	#∑nic
(
fmt
, 
¨gs
...Ë\

	)

120 
	`_∑nic
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

123 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

124 
	`__©åibuã__
 ((
n‹ëu∫
));

127 
	`∑nic
(*
fmt
, ...);

130 #ifde‡
__GNUC__


132 
	#w¨n
(
fmt
, 
¨gs
...Ë\

	)

133 
	`_w¨n
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

136 
	`_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

139 
	`w¨n
(*
fmt
, ...);

142 #ifde‡
__GNUC__


144 
	#öfo
(
fmt
, 
¨gs
...Ë\

	)

145 
	`_öfo
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

148 
	`_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

151 
	`öfo
(*
fmt
, ...);

154 #ifde‡
DEBUG


156 #ifde‡
__GNUC__


158 
	#debug
(
fmt
, 
¨gs
...Ë\

	)

160 i‡(
debuggög
) \

161 
	`_debug
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
); \

162 
	}
} 0)

165 
	`_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

168 
	`debug
(*
fmt
, ...);

173 #ifde‡
__GNUC__


174 
	#debug
(
fmt
, 
¨gs
...)

	)

177 
	$debug
(*
fmt
, ...Ë{
	}
}

184 
my§™d
(
£ed
);

187 
myønd
();

192 
my°rdup
(*
s
);

196 
my°ºchr
(*
s
, 
c
);

201 
my°ricmp
(*
s1
, *
s2
);

205 *
gëc‹e
(
nbyãs
);

208 
log_ba£2
(
n
);

211 *
ñ≠£d_time
(
£c
);

219 
exåa˘l
(
w‹d
,

220 
pos
,

221 
num
);

223 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

224 
	#°πoul
 
°πﬁ


	)

230 *
myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
);

233 *
my•rötf
(*
obuf
, *
f‹m©
, ...);

236 
myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
);

239 
myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...);

241 #ifde‡
HOST_HAS_QWORD


244 
sqw‹d_t
 
my©osq
(*
≈å
, **
ídp
, 
ba£
);

247 
qw‹d_t
 
my©oq
(*
≈å
, **
ídp
, 
ba£
);

253 
FILE
 *
gz›í
(*
‚ame
, *
ty≥
);

256 
gz˛o£
(
FILE
 *
fd
);

259 
w‹d_t
 
¸c
(w‹d_à
¸c_accum
, w‹d_à
d©a
);

	@ss/my_opt.c

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"misc.h
"

27 
	~"machöe.h
"

28 
	~"›ti⁄s.h
"

29 
	~"ªsour˚.h
"

30 
	~"../b¥ed.h
"

39 
	gruu_ifq_size
;

42 
	gruu_bønch_≥«…y
;

45 *
	g¥ed_ty≥
;

48 
	gbimod_√…
 = 1;

49 
	gbimod_c⁄fig
[1] = { 4 };

52 
	gtwﬁev_√…
 = 4;

53 
	gtwﬁev_c⁄fig
[4] = { 1, 128, 2,

54 
TRUE
 };

57 
	gcomb_√…
 = 1;

58 
	gcomb_c⁄fig
[1] = { 4 };

61 
	gøs_size
 = 8;

64 
	gbtb_√…
 = 2;

65 
	gbtb_c⁄fig
[2] = { 4, 1 };

68 
	gruu_decode_width
;

71 
	gruu_issue_width
;

74 
	gruu_ö‹dî_issue
;

77 
	gruu_ö˛ude_•ec
 = 
TRUE
;

80 
	gruu_commô_width
;

83 
	gRUU_size
 = 8;

86 
	gLSQ_size
 = 8;

88 
	g„tch_•ìd
 = 1;

90 
	g„tch_width
;

93 *
	gˇche_dl1_›t
;

96 
	gˇche_dl1_œt
;

99 *
	gˇche_dl2_›t
;

102 
	gˇche_dl2_œt
;

105 *
	gˇche_û1_›t
;

108 
	gˇche_û1_œt
;

111 *
	gˇche_û2_›t
;

114 
	gˇche_û2_œt
;

117 
	gÊush_⁄_sysˇŒs
;

120 
	gcom¥ess_iˇche_addrs
;

123 
	gmem_√…
 = 2;

124 
	gmem_œt
[2] = { 30,

128 
	gmem_bus_width
;

131 *
	gôlb_›t
;

134 *
	gdéb_›t
;

137 
	géb_miss_œt
;

140 
	gªs_ülu
;

143 
	gªs_imu…
;

146 
	gªs_memp‹t
;

149 
	gªs_ÂÆu
;

152 
	gªs_Âmu…
;

155 
	gn£ts
, 
	gbsize
, 
	gassoc
;

158 
	gn£ts_dl1
, 
	gbsize_dl1
, 
	gassoc_dl1
;

162 
	gn£ts_l2
, 
	gbsize_l2
, 
	gassoc_l2
;

165 
	gn£ts_dl2
, 
	gbsize_dl2
, 
	gassoc_dl2
;

172 
	#FU_IALU_INDEX
 0

	)

173 
	#FU_IMULT_INDEX
 1

	)

174 
	#FU_MEMPORT_INDEX
 2

	)

175 
	#FU_FPALU_INDEX
 3

	)

176 
	#FU_FPMULT_INDEX
 4

	)

179 
ªs_desc
 
	gfu_c⁄fig
[] = { { "öãgî-ALU", 1, 0, { { 
I¡ALU
, 1, 1 } } }, {

180 "öãgî-MULT/DIV", 1, 0, { { 
I¡MULT
, 4, 4 }, { 
I¡DIV
, 4, 4 } } }, {

181 "mem‹y-p‹t", 2, 0, { { 
RdP‹t
, 1, 1 }, { 
WrP‹t
, 1, 1 } } }, {

182 "FP-addî", 1, 0, { { 
FlﬂtADD
, 2, 2 }, { 
FlﬂtCMP
, 2, 2 }, { 
FlﬂtCVT
,

183 2, 2 } } }, { "FP-MULT/DIV", 1, 0, { { 
FlﬂtMULT
, 12, 12 }, {

184 
FlﬂtDIV
, 12, 12 }, { 
FlﬂtSQRT
, 12, 12 } } }, };

187 *
	grun_›t
;

190 
›t_odb_t
 *
	gsim_odb
;

193 
b¥ed_scheme
;

194 
íabÀ_pùñöe
;

196 
íabÀ_iˇche
;

197 
íabÀ_û2ˇche
;

198 
íabÀ_s˝_dˇche
;

199 
íabÀ_s˝_dl2ˇche
;

200 
íabÀ_ul2ˇche
;

203 
BHR
, 
BHR_PWR
, 
BHR_MSK
;

204 
BHT_SIZE
, 
BHT
, 
BHT_MSK
;

207 
pùe_ibuf_size
, 
pùe_iwö_size
;

208 
	gPROLOG_SIZE
, 
	gEPILOG_SIZE
;

210 
	$‹ph™_‚
(
i
, 
¨gc
, **
¨gv
) {

211  
FALSE
;

212 
	}
}

215 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
) {

219 
	`›t_ªg_öt
(
odb
, "-fetch:ifqsize",

220 "ö°ru˘i⁄ fëch queuêsizê(ö in°s)", &
ruu_ifq_size
,

221 4, 
TRUE
, 
NULL
);

223 
	`›t_ªg_öt
(
odb
, "-fetch:mplat", "extra branch mis-predictionÜatency",

224 &
ruu_bønch_≥«…y
, 0, 
TRUE
,

225 
NULL
);

227 
	`›t_ªg_öt
(
odb
, "-fetch:speed",

229 &
„tch_•ìd
, 1, 
TRUE
, 
NULL
);

233 
	`›t_ªg_°rög
(
odb
, "-bpred",

235 &
¥ed_ty≥
, "2Àv", 
TRUE
, 
NULL
);

237 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

238 "bimodÆÖªdi˘‹ c⁄fig (<èbÀ size>)", 
bimod_c⁄fig
, 
bimod_√…
,

239 &
bimod_√…
,

240  
bimod_c⁄fig
, 
TRUE
, 
NULL
,

241 
FALSE
);

243 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev", "2-levelÖredictor config "

244 "(<l1size> <l2size> <hi°_size> <x‹>)", 
twﬁev_c⁄fig
, 
twﬁev_√…
,

245 &
twﬁev_√…
,

246  
twﬁev_c⁄fig
, 
TRUE
, 
NULL
,

247 
FALSE
);

249 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

250 "comböögÖªdi˘‹ c⁄fig (<mëa_èbÀ_size>)", 
comb_c⁄fig
,

251 
comb_√…
, &comb_nelt,

252  
comb_c⁄fig
, 
TRUE
, 
NULL
,

253 
FALSE
);

255 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

256 "BTB c⁄fig (<num_£ts> <assocütivôy>)", 
btb_c⁄fig
, 
btb_√…
,

257 &
btb_√…
,

258  
btb_c⁄fig
, 
TRUE
, 
NULL
,

259 
FALSE
);

263 
	`›t_ªg_öt
(
odb
, "-decode:width", "instruction decode B/W (insts/cycle)",

264 &
ruu_decode_width
, 2, 
TRUE
,

265 
NULL
);

269 
	`›t_ªg_öt
(
odb
, "-issue:width", "instruction issue B/W (insts/cycle)",

270 &
ruu_issue_width
, 8, 
TRUE
,

271 
NULL
);

273 
	`›t_ªg_Êag
(
odb
, "-issue:inorder", "runÖipeline with in-order issue",

274 &
ruu_ö‹dî_issue
, 
FALSE
, 
TRUE
,

275 
NULL
);

277 
	`›t_ªg_Êag
(
odb
, "-issue:wrongpath",

278 "issuêö°ru˘i⁄†dow¿wr⁄gÉxecuti⁄Ö©hs", &
ruu_ö˛ude_•ec
,

279 
TRUE
, TRUE, 
NULL
);

283 
	`›t_ªg_öt
(
odb
, "-commit:width", "instruction commit B/W (insts/cycle)",

284 &
ruu_commô_width
, 1, 
TRUE
,

285 
NULL
);

289 
	`›t_ªg_öt
(
odb
, "-ruu:size", "ªgi°î upd©êunô (RUUËsize", &
RUU_size
,

290 8, 
TRUE
, 
NULL
);

294 
	`›t_ªg_öt
(
odb
, "-lsq:size", "lﬂd/°‹êqueuê(LSQËsize", &
LSQ_size
,

295 8, 
TRUE
, 
NULL
);

299 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

300 "l1 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_dl1_›t
,

301 "n⁄e", 
TRUE
, 
NULL
);

303 
	`›t_ªg_öt
(
odb
, "-cache:dl1lat", "l1 data cache hitÜatency (in cycles)",

304 &
ˇche_dl1_œt
, 1, 
TRUE
, 
NULL
);

306 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

307 "l2 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_dl2_›t
,

308 "n⁄e", 
TRUE
, 
NULL
);

310 
	`›t_ªg_öt
(
odb
, "-cache:dl2lat", "l2 data cache hitÜatency (in cycles)",

311 &
ˇche_dl2_œt
, 6, 
TRUE
, 
NULL
);

313 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

315 &
ˇche_û1_›t
, "û1:16:32:2:l", 
TRUE
, 
NULL
);

317 
	`›t_ªg_öt
(
odb
, "-cache:il1lat",

318 "l1 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û1_œt
,

319 1, 
TRUE
, 
NULL
);

321 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

323 &
ˇche_û2_›t
, "n⁄e", 
TRUE
, 
NULL
);

325 
	`›t_ªg_öt
(
odb
, "-cache:il2lat",

326 "l2 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û2_œt
,

327 6, 
TRUE
, 
NULL
);

330 
	`›t_ªg_öt_li°
(
odb
, "-mem:lat",

331 "mem‹yác˚s†œãncy (<fú°_chunk> <öãr_chunk>)", 
mem_œt
,

332 
mem_√…
, &mem_√…, 
mem_œt
, 
TRUE
, 
NULL
,

333 
FALSE
);

335 
	`›t_ªg_öt
(
odb
, "-mem:width", "memoryáccess bus width (in bytes)",

336 &
mem_bus_width
, 64, 
TRUE
, 
NULL
);

340 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

341 "ö°ru˘i⁄ TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ôlb_›t
, "none",

342 
TRUE
, 
NULL
);

344 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb", "data TLB config, i.e., {<config>|none}",

345 &
déb_›t
, "n⁄e", 
TRUE
, 
NULL
);

347 
	`›t_ªg_öt
(
odb
, "-tlb:lat", "inst/data TLB missÜatency (in cycles)",

348 &
éb_miss_œt
, 30, 
TRUE
, 
NULL
);

352 
	`›t_ªg_öt
(
odb
, "-res:ialu", "totalÇumber of integer ALU'sávailable",

353 &
ªs_ülu
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

354  
TRUE
, 
NULL
);

356 
	`›t_ªg_öt
(
odb
, "-res:imult",

357 "tŸÆÇumbî o‡öãgî mu…ùlõr/dividî†avaûabÀ", &
ªs_imu…
,

358 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
, 
TRUE
,

359 
NULL
);

361 
	`›t_ªg_öt
(
odb
, "-res:memport",

363 &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

364  
TRUE
, 
NULL
);

366 
	`›t_ªg_öt
(
odb
, "-res:fpalu",

367 "tŸÆÇumbî o‡ÊﬂtögÖoöàALU'†avaûabÀ", &
ªs_ÂÆu
,

368 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
, 
TRUE
,

369 
NULL
);

371 
	`›t_ªg_öt
(
odb
, "-res:fpmult",

373 &
ªs_Âmu…
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

374  
TRUE
, 
NULL
);

377 
	`›t_ªg_°rög
(
odb
, "-run", "fun˘i⁄Æôy {CFG EST}", &
run_›t
,

378 "EST", 
TRUE
, 
NULL
);

380 
	}
}

382 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

383 
¨gc
, **
¨gv
)

385 
«me
[128], 
c
;

387 i‡(
ruu_ifq_size
 < 1 || (ruu_ifq_size & (ruu_ifq_size - 1)) != 0)

388 
	`Áèl
("inst fetch queue size must beÖositive > 0ándáÖower ofÅwo");

389 
pùe_ibuf_size
 = 
ruu_ifq_size
;

391 
„tch_width
 = 
ruu_decode_width
 * 
„tch_•ìd
;

396 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "perfect")) {

398 
b¥ed_scheme
 = 
NO_BPRED
;

401 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

406 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

412 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod")) {

414 i‡(
bimod_√…
 != 1)

415 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

416 i‡(
btb_√…
 != 2)

417 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

419 
b¥ed_scheme
 = 
LOCAL
;

420 
BHT_SIZE
 = 
btb_c⁄fig
[0];

421 
BHT
 = 
	`log_ba£2
(
BHT_SIZE
);

422 
BHT_MSK
 = 
BHT_SIZE
 - 1;

423 } i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev")) {

424 i‡(
twﬁev_√…
 != 4)

425 
	`Áèl
(

427 i‡(
btb_√…
 != 2)

428 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

429 i‡((
twﬁev_c⁄fig
[1] & (twolev_config[1] - 1)) != 0)

430 
	`Áèl
("Branch History Table (BHT) size %d isÇotÖower of 2!\n",

431 
twﬁev_c⁄fig
[1]);

432 i‡((
twﬁev_c⁄fig
[2] < 0) || (twolev_config[2] > 4))

433 
	`Áèl
(

435 
twﬁev_c⁄fig
[2]);

437 i‡(
twﬁev_c⁄fig
[2] == 0)

438 
b¥ed_scheme
 = 
LOCAL
;

439 i‡(
twﬁev_c⁄fig
[3] =
FALSE


441 
b¥ed_scheme
 = 
GAG
;

443 
b¥ed_scheme
 = 
GSHARE
;

444 
BHT_SIZE
 = 
twﬁev_c⁄fig
[1];

445 
BHT
 = 
	`log_ba£2
(
BHT_SIZE
);

446 
BHT_MSK
 = 
BHT_SIZE
 - 1;

447 
BHR
 = 
twﬁev_c⁄fig
[2];

448 
BHR_PWR
 = 1 << 
BHR
;

449 
BHR_MSK
 = 
BHR_PWR
 - 1;

451 i‡((1 << 
BHR
Ë> 
BHT_SIZE
)

452 
	`Áèl
(

454 
BHR
, 
BHT_SIZE
);

457 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

460 i‡(
twﬁev_√…
 != 4)

461 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

462 i‡(
bimod_√…
 != 1)

463 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

464 i‡(
comb_√…
 != 1)

465 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

466 i‡(
btb_√…
 != 2)

467 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

469 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

470  
bimod_c⁄fig
[0],

471  
twﬁev_c⁄fig
[0],

472  
twﬁev_c⁄fig
[1],

473  
comb_c⁄fig
[0],

474  
twﬁev_c⁄fig
[2],

475  
twﬁev_c⁄fig
[3],

476  
btb_c⁄fig
[0],

477  
btb_c⁄fig
[1],

478  
øs_size
);

482 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

485 i‡(
ruu_decode_width
 < 1 || (ruu_decode_width & (ruu_decode_width-1)) != 0)

486 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

488 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width-1)) != 0)

489 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

491 i‡(
ruu_commô_width
 < 1)

492 
	`Áèl
("commit width must beÖositiveÇon-zero");

495 i‡(
RUU_size
 < 2)

496 
	`Áèl
("Re-order buffer size must be greaterÅhan one!");

497 
pùe_iwö_size
 = 
RUU_size
;

498 
PROLOG_SIZE
 = 
pùe_iwö_size
 + 
pùe_ibuf_size
;

499 
EPILOG_SIZE
 = 
pùe_iwö_size
 * 2;

500 
LSQ_size
 = 
pùe_iwö_size
;

503 i‡(
LSQ_size
 < 2 || (LSQ_size & (LSQ_size-1)) != 0)

504 
	`Áèl
("LSQ size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

508 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none")) {

510 
ˇche_dl1
 = 
NULL
;

512 
íabÀ_s˝_dˇche
 = 0;

514 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

515 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

517 
ˇche_dl2
 = 
NULL
;

521 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts_dl1
,

522 &
bsize_dl1
, &
assoc_dl1
, &
c
) != 5)

523 
	`Áèl
(

526 
íabÀ_s˝_dˇche
 = 1;

528 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

529  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

530 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
);

533 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

534 
íabÀ_s˝_dl2ˇche
 = 0;

536 
ˇche_dl2
 = 
NULL
;

540 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts_dl2
,

541 &
bsize_dl2
, &
assoc_dl2
, &
c
) != 5)

542 
	`Áèl
("badÜ2 D-cacheÖarms: "

544 
íabÀ_s˝_dl2ˇche
 = 1;

551 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

552  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

553 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
);

554 
	}
}

559 i‡(!
my°ricmp
(
ˇche_û1_›t
, "none")) {

560 
	gíabÀ_iˇche
 = 0;

562 
	gˇche_û1
 = 
NULL
;

564 i‡(
°rcmp
(
ˇche_û2_›t
, "none"))

565 
Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

566 
	gˇche_û2
 = 
NULL
;

570 i‡(!
my°ricmp
(
ˇche_û1_›t
, "dl1"))

572 i‡(!
	gˇche_dl1
)

573 
Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

574 
	gˇche_û1
 = 
ˇche_dl1
;

577 i‡(
°rcmp
(
ˇche_û2_›t
, "none"))

578 
Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

579 
	gˇche_û2
 = 
NULL
;

581 i‡(!
my°ricmp
(
ˇche_û1_›t
, "dl2"))

583 i‡(!
	gˇche_dl2
)

584 
Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

587 i‡(
°rcmp
(
ˇche_û2_›t
, "none"))

588 
Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

589 
	gˇche_û2
 = 
NULL
;

594 i‡(
ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
,

595 &
assoc
, &
c
) != 5)

596 
Áèl
(

599 
	gˇche_û1
 = 
ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

600  0, 
assoc
, 
ˇche_ch¨2pﬁicy
(
c
),

601 
û1_ac˚ss_‚
, 
ˇche_û1_œt
);

604 i‡(!
my°ricmp
(
ˇche_û2_›t
, "none"))

605 
	gˇche_û2
 = 
NULL
;

607 i‡(!
my°ricmp
(
ˇche_û2_›t
, "none"))

608 
	gíabÀ_û2ˇche
 = 0;

609 i‡(!
my°ricmp
(
ˇche_û2_›t
, "dl2")) {

610 
	gíabÀ_û2ˇche
 = 1;

611 
	gíabÀ_ul2ˇche
 = 1;

613 i‡(!
	gˇche_dl2
)

614 
Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

615 
	gˇche_û2
 = 
ˇche_dl2
;

618 
	gíabÀ_û2ˇche
 = 1;

619 i‡(
ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts_l2
,

620 &
bsize_l2
, &
assoc_l2
, &
c
) != 5)

621 
Áèl
("badÜ2 I-cacheÖarms: "

625 
	gˇche_û2
 = 
ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

626  0, 
assoc
, 
ˇche_ch¨2pﬁicy
(
c
),

627 
û2_ac˚ss_‚
, 
ˇche_û2_œt
);

631 
	gíabÀ_iˇche
 = 1;

636 i‡(!
my°ricmp
(
ôlb_›t
, "none"))

637 
	gôlb
 = 
NULL
;

640 i‡(
ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

641 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

642 
Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

643 
	gôlb
 = 
ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

644  (
md_addr_t
), 
assoc
,

645 
ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

650 i‡(!
my°ricmp
(
déb_›t
, "none"))

651 
	gdéb
 = 
NULL
;

654 i‡(
ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

655 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

656 
Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

657 
	gdéb
 = 
ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

658  (
md_addr_t
), 
assoc
,

659 
ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

663 i‡(
	gˇche_dl1_œt
 < 1)

664 
Áèl
("l1 data cacheÜatency must be greaterÅhan zero");

666 i‡(
	gˇche_dl2_œt
 < 1)

667 
Áèl
("l2 data cacheÜatency must be greaterÅhan zero");

669 i‡(
	gˇche_û1_œt
 < 1)

670 
Áèl
("l1 instruction cacheÜatency must be greaterÅhan zero");

672 i‡(
	gˇche_û2_œt
 < 1)

673 
Áèl
("l2 instruction cacheÜatency must be greaterÅhan zero");

675 i‡(
	gmem_√…
 != 2)

676 
Áèl
("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

679 i‡(
	gmem_œt
[0] < 1 || mem_lat[1] < 1)

680 
Áèl
("all memoryáccessÜatencies must be greaterÅhan zero");

681 i‡(
	gíabÀ_ul2ˇche
 == 1){

682 
íabÀ_s˝_dl2ˇche
 = 
íabÀ_û2ˇche
 = 0;

684 i‡(
	gíabÀ_iˇche
) {

685 i‡(!(
	gíabÀ_û2ˇche
 =1 || 
íabÀ_ul2ˇche
 == 1 )) {

686 
£t_ˇche_basic
(
n£ts
, 
assoc
, 
bsize
, 
mem_œt
[0]);

687 } i‡(
	gíabÀ_û2ˇche
 == 1) {

688 
£t_ˇche_basic
(
n£ts
, 
assoc
, 
bsize
, 
ˇche_û2_œt
);

689 
£t_l2_ˇche_basic
(
n£ts_l2
, 
assoc_l2
, 
bsize_l2
, 
mem_œt
[0]);

690 } i‡(
	gíabÀ_ul2ˇche
 == 1) {

691 
£t_ˇche_basic
(
n£ts
, 
assoc
, 
bsize
, 
ˇche_dl2_œt
);

692 
£t_l2_ˇche_basic
(
n£ts_dl2
, 
assoc_dl2
, 
bsize_dl2
, 
mem_œt
[0]);

697 #ifde‡
_DEBUG


698 
¥ötf
("nsets_dl1 = %d , bsize_dl1 = %d,ássoc_dl1 = %d\n",

699 
n£ts_dl1
, 
bsize_dl1
, 
assoc_dl1
);

700 
¥ötf
("nsets_l2 = %d , bsize_l2 = %d,ássoc_l2 = %d\n",

701 
n£ts_l2
, 
bsize_l2
, 
assoc_l2
);

705 i‡(
	gmem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width-1)) != 0)

706 
Áèl
("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

708 i‡(
	géb_miss_œt
 < 1)

709 
Áèl
("TLB missÜatency must be greaterÅhan zero");

711 i‡(
	gªs_ülu
 < 1)

712 
Áèl
("number of integer ALU's must be greaterÅhan zero");

713 i‡(
	gªs_ülu
 > 
	gMAX_INSTS_PER_CLASS
)

714 
Áèl
("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

715 
	gfu_c⁄fig
[
FU_IALU_INDEX
].
	gqu™tôy
 = 
ªs_ülu
;

717 i‡(
	gªs_imu…
 < 1)

718 
Áèl
("number of integer multiplier/dividers must be greaterÅhan zero");

719 i‡(
	gªs_imu…
 > 
	gMAX_INSTS_PER_CLASS
)

720 
Áèl
("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

721 
	gfu_c⁄fig
[
FU_IMULT_INDEX
].
	gqu™tôy
 = 
ªs_imu…
;

723 i‡(
	gªs_memp‹t
 < 1)

724 
Áèl
("number of memory systemÖorts must be greaterÅhan zero");

725 i‡(
	gªs_memp‹t
 > 
	gMAX_INSTS_PER_CLASS
)

726 
Áèl
("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

727 
	gfu_c⁄fig
[
FU_MEMPORT_INDEX
].
	gqu™tôy
 = 
ªs_memp‹t
;

729 i‡(
	gªs_ÂÆu
 < 1)

730 
Áèl
("number of floatingÖoint ALU's must be greaterÅhan zero");

731 i‡(
	gªs_ÂÆu
 > 
	gMAX_INSTS_PER_CLASS
)

732 
Áèl
("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

733 
	gfu_c⁄fig
[
FU_FPALU_INDEX
].
	gqu™tôy
 = 
ªs_ÂÆu
;

735 i‡(
	gªs_Âmu…
 < 1)

736 
Áèl
("number of floatingÖoint multiplier/dividers must be > zero");

737 i‡(
	gªs_Âmu…
 > 
	gMAX_INSTS_PER_CLASS
)

738 
Áèl
("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

739 
	gfu_c⁄fig
[
FU_FPMULT_INDEX
].
	gqu™tôy
 = 
ªs_Âmu…
;

743 
	$ªad_›t_ss
(
¨gc
, **
¨gv
) {

744 *
s
;

747 
sim_odb
 = 
	`›t_√w
(
‹ph™_‚
);

750 
	`sim_ªg_›ti⁄s
(
sim_odb
);

753 
	`›t_¥o˚ss_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

756 
	`sim_check_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

761 
	}
}

	@ss/options.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#chdú
 
_chdú


	)

58 
	#gëcwd
 
_gëcwd


	)

60 
	~<°rög.h
>

61 
	~<˘y≥.h
>

62 
	~<Êﬂt.h
>

64 
	~"ho°.h
"

65 
	~"misc.h
"

66 
	~"›ti⁄s.h
"

69 
›t_odb_t
 *

70 
	$›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
)

72 
›t_odb_t
 *
odb
;

74 
odb
 = (
›t_odb_t
 *)
	`ˇŒoc
(1, (opt_odb_t));

75 i‡(!
odb
)

76 
	`Áèl
("out of virtual memory");

78 
odb
->
›ti⁄s
 = 
NULL
;

79 
odb
->
‹ph™_‚
 = orphan_fn;

80 
odb
->
hódî
 = 
NULL
;

81 
odb
->
nŸes
 = 
NULL
;

83  
odb
;

84 
	}
}

88 
	$›t_dñëe
(
›t_odb_t
 *
odb
)

90 
›t_›t_t
 *
›t
, *
›t_√xt
;

91 
›t_nŸe_t
 *
nŸe
, *
nŸe_√xt
;

94 
›t
=
odb
->
›ti⁄s
; o±; o±=
›t_√xt
)

96 
›t_√xt
 = 
›t
->
√xt
;

97 
›t
->
√xt
 = 
NULL
;

98 
	`‰ì
(
›t
);

102 
nŸe
 = 
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸê
nŸe_√xt
)

104 
nŸe_√xt
 = 
nŸe
->
√xt
;

105 
nŸe
->
√xt
 = 
NULL
;

106 
	`‰ì
(
nŸe
);

108 
odb
->
nŸes
 = 
NULL
;

110 
	`‰ì
(
odb
);

111 
	}
}

115 
	$add_›ti⁄
(
›t_odb_t
 *
odb
,

116 
›t_›t_t
 *
›t
)

118 
›t_›t_t
 *
ñt
, *
¥ev
;

121 i‡(
›t
->
«me
[0] != '-')

122 
	`∑nic
("›ti⁄ `%s' mu° sèπ wôhá `-'", 
›t
->
«me
);

125 
¥ev
=
NULL
, 
ñt
=
odb
->
›ti⁄s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

128 i‡(
ñt
->
«me
[0] =
›t
->«me[0] && !
	`°rcmp
(elt->name, opt->name))

129 
	`∑nic
("›ti⁄ `%s' i†mu…ùly deföed", 
›t
->
«me
);

132 i‡(
¥ev
 !
NULL
)

133 
¥ev
->
√xt
 = 
›t
;

135 
odb
->
›ti⁄s
 = 
›t
;

136 
›t
->
√xt
 = 
NULL
;

137 
	}
}

141 
	$›t_ªg_öt
(
›t_odb_t
 *
odb
,

142 *
«me
,

143 *
desc
,

144 *
v¨
,

145 
def_vÆ
,

146 
¥öt
,

147 *
f‹m©
)

149 
›t_›t_t
 *
›t
;

151 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

152 i‡(!
›t
)

153 
	`Áèl
("out of virtual memory");

155 
›t
->
«me
 =Çame;

156 
›t
->
desc
 = desc;

157 
›t
->
nv¨s
 = 1;

158 
›t
->
√…
 = 
NULL
;

159 
›t
->
f‹m©
 = format ? format : "%12d";

160 
›t
->
oc
 = 
oc_öt
;

161 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

162 
›t
->
¥öt
 =Örint;

163 
›t
->
ac¸ue
 = 
FALSE
;

166 
›t
->
√xt
 = 
NULL
;

167 
	`add_›ti⁄
(
odb
, 
›t
);

170 *
v¨
 = 
def_vÆ
;

171 
	}
}

175 
	$›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨s
,

179 
nv¨s
,

180 *
√…
,

181 *
def_vÆ
,

182 
¥öt
,

183 *
f‹m©
,

184 
ac¸ue
)

186 
i
;

187 
›t_›t_t
 *
›t
;

189 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

190 i‡(!
›t
)

191 
	`Áèl
("out of virtual memory");

193 
›t
->
«me
 =Çame;

194 
›t
->
desc
 = desc;

195 
›t
->
nv¨s
 =Çvars;

196 
›t
->
√…
 =Çelt;

197 
›t
->
f‹m©
 = format ? format : "%d";

198 
›t
->
oc
 = 
oc_öt
;

199 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = 
v¨s
;

200 
›t
->
¥öt
 =Örint;

201 
›t
->
ac¸ue
 =áccrue;

204 
›t
->
√xt
 = 
NULL
;

205 
	`add_›ti⁄
(
odb
, 
›t
);

208 
i
=0; i < *
√…
; i++)

209 
v¨s
[
i
] = 
def_vÆ
[i];

210 
	}
}

214 
	$›t_ªg_uöt
(
›t_odb_t
 *
odb
,

215 *
«me
,

216 *
desc
,

217 *
v¨
,

218 
def_vÆ
,

219 
¥öt
,

220 *
f‹m©
)

222 
›t_›t_t
 *
›t
;

224 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

225 i‡(!
›t
)

226 
	`Áèl
("out of virtual memory");

228 
›t
->
«me
 =Çame;

229 
›t
->
desc
 = desc;

230 
›t
->
nv¨s
 = 1;

231 
›t
->
√…
 = 
NULL
;

232 
›t
->
f‹m©
 = format ? format : "%12u";

233 
›t
->
oc
 = 
oc_uöt
;

234 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

235 
›t
->
¥öt
 =Örint;

236 
›t
->
ac¸ue
 = 
FALSE
;

239 
›t
->
√xt
 = 
NULL
;

240 
	`add_›ti⁄
(
odb
, 
›t
);

243 *
v¨
 = 
def_vÆ
;

244 
	}
}

248 
	$›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

249 *
«me
,

250 *
desc
,

251 *
v¨s
,

252 
nv¨s
,

253 *
√…
,

254 *
def_vÆ
,

255 
¥öt
,

256 *
f‹m©
,

257 
ac¸ue
)

259 
i
;

260 
›t_›t_t
 *
›t
;

262 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

263 i‡(!
›t
)

264 
	`Áèl
("out of virtual memory");

266 
›t
->
«me
 =Çame;

267 
›t
->
desc
 = desc;

268 
›t
->
nv¨s
 =Çvars;

269 
›t
->
√…
 =Çelt;

270 
›t
->
f‹m©
 = format ? format : "%u";

271 
›t
->
oc
 = 
oc_uöt
;

272 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = 
v¨s
;

273 
›t
->
¥öt
 =Örint;

274 
›t
->
ac¸ue
 =áccrue;

277 
›t
->
√xt
 = 
NULL
;

278 
	`add_›ti⁄
(
odb
, 
›t
);

281 
i
=0; i < *
√…
; i++)

282 
v¨s
[
i
] = 
def_vÆ
[i];

283 
	}
}

287 
	$›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨
,

291 
def_vÆ
,

292 
¥öt
,

293 *
f‹m©
)

295 
›t_›t_t
 *
›t
;

297 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

298 i‡(!
›t
)

299 
	`Áèl
("out of virtual memory");

301 
›t
->
«me
 =Çame;

302 
›t
->
desc
 = desc;

303 
›t
->
nv¨s
 = 1;

304 
›t
->
√…
 = 
NULL
;

305 
›t
->
f‹m©
 = format ? format : "%12.4f";

306 
›t
->
oc
 = 
oc_Êﬂt
;

307 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

308 
›t
->
¥öt
 =Örint;

309 
›t
->
ac¸ue
 = 
FALSE
;

312 
›t
->
√xt
 = 
NULL
;

313 
	`add_›ti⁄
(
odb
, 
›t
);

316 *
v¨
 = 
def_vÆ
;

317 
	}
}

321 
	$›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

322 *
«me
,

323 *
desc
,

324 *
v¨s
,

325 
nv¨s
,

326 *
√…
,

327 *
def_vÆ
,

328 
¥öt
,

329 *
f‹m©
,

330 
ac¸ue
)

332 
i
;

333 
›t_›t_t
 *
›t
;

335 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

336 i‡(!
›t
)

337 
	`Áèl
("out of virtual memory");

339 
›t
->
«me
 =Çame;

340 
›t
->
desc
 = desc;

341 
›t
->
nv¨s
 =Çvars;

342 
›t
->
√…
 =Çelt;

343 
›t
->
f‹m©
 = format ? format : "%.4f";

344 
›t
->
oc
 = 
oc_Êﬂt
;

345 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = 
v¨s
;

346 
›t
->
¥öt
 =Örint;

347 
›t
->
ac¸ue
 =áccrue;

350 
›t
->
√xt
 = 
NULL
;

351 
	`add_›ti⁄
(
odb
, 
›t
);

354 
i
=0; i < *
√…
; i++)

355 
v¨s
[
i
] = 
def_vÆ
[i];

356 
	}
}

360 
	$›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

361 *
«me
,

362 *
desc
,

363 *
v¨
,

364 
def_vÆ
,

365 
¥öt
,

366 *
f‹m©
)

368 
›t_›t_t
 *
›t
;

370 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

371 i‡(!
›t
)

372 
	`Áèl
("out of virtual memory");

374 
›t
->
«me
 =Çame;

375 
›t
->
desc
 = desc;

376 
›t
->
nv¨s
 = 1;

377 
›t
->
√…
 = 
NULL
;

378 
›t
->
f‹m©
 = format ? format : "%12.4f";

379 
›t
->
oc
 = 
oc_doubÀ
;

380 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

381 
›t
->
¥öt
 =Örint;

382 
›t
->
ac¸ue
 = 
FALSE
;

385 
›t
->
√xt
 = 
NULL
;

386 
	`add_›ti⁄
(
odb
, 
›t
);

389 *
v¨
 = 
def_vÆ
;

390 
	}
}

394 
	$›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

395 *
«me
,

396 *
desc
,

397 *
v¨s
,

398 
nv¨s
,

399 *
√…
,

400 *
def_vÆ
,

401 
¥öt
,

402 *
f‹m©
,

403 
ac¸ue
)

405 
i
;

406 
›t_›t_t
 *
›t
;

408 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

409 i‡(!
›t
)

410 
	`Áèl
("out of virtual memory");

412 
›t
->
«me
 =Çame;

413 
›t
->
desc
 = desc;

414 
›t
->
nv¨s
 =Çvars;

415 
›t
->
√…
 =Çelt;

416 
›t
->
f‹m©
 = format ? format : "%.4f";

417 
›t
->
oc
 = 
oc_doubÀ
;

418 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = 
v¨s
;

419 
›t
->
¥öt
 =Örint;

420 
›t
->
ac¸ue
 =áccrue;

423 
›t
->
√xt
 = 
NULL
;

424 
	`add_›ti⁄
(
odb
, 
›t
);

427 
i
=0; i < *
√…
; i++)

428 
v¨s
[
i
] = 
def_vÆ
[i];

429 
	}
}

433 
	$böd_to_íum
(*
°r
,

434 **
em≠
,

435 *
evÆ
,

436 
em≠_sz
,

437 *
ªs
)

439 
i
;

442 
i
=0; i<
em≠_sz
; i++)

444 i‡(!
	`°rcmp
(
°r
, 
em≠
[
i
]))

446 i‡(
evÆ
)

449 *
ªs
 = 
evÆ
[
i
];

454 *
ªs
 = 
i
;

456  
TRUE
;

461 *
ªs
 = -1;

462  
FALSE
;

463 
	}
}

467 
	$böd_to_°r
(
vÆ
,

468 **
em≠
,

469 *
evÆ
,

470 
em≠_sz
)

472 
i
;

474 i‡(
evÆ
)

477 
i
=0; i<
em≠_sz
; i++)

479 i‡(
evÆ
[
i
] =
vÆ
)

482  
em≠
[
i
];

486  
NULL
;

491 i‡(
vÆ
 >
em≠_sz
)

494  
NULL
;

497  
em≠
[
vÆ
];

499 
	}
}

505 
	$›t_ªg_íum
(
›t_odb_t
 *
odb
,

506 *
«me
,

507 *
desc
,

508 *
v¨
,

509 *
def_vÆ
,

510 **
em≠
,

511 *
evÆ
,

512 
em≠_sz
,

513 
¥öt
,

514 *
f‹m©
)

516 
íum_vÆ
;

517 
›t_›t_t
 *
›t
;

519 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

520 i‡(!
›t
)

521 
	`Áèl
("out of virtual memory");

523 
›t
->
«me
 =Çame;

524 
›t
->
desc
 = desc;

525 
›t
->
nv¨s
 = 1;

526 
›t
->
√…
 = 
NULL
;

527 
›t
->
f‹m©
 = format ? format : "%12s";

528 
›t
->
oc
 = 
oc_íum
;

529 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

530 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

531 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

532 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

533 i‡(
def_vÆ
)

535 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

536 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

539 
íum_vÆ
 = 0;

540 
›t
->
¥öt
 =Örint;

541 
›t
->
ac¸ue
 = 
FALSE
;

544 
›t
->
√xt
 = 
NULL
;

545 
	`add_›ti⁄
(
odb
, 
›t
);

548 *
v¨
 = 
íum_vÆ
;

549 
	}
}

555 
	$›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

556 *
«me
,

557 *
desc
,

558 *
v¨s
,

559 
nv¨s
,

560 *
√…
,

561 *
def_vÆ
,

562 **
em≠
,

563 *
evÆ
,

564 
em≠_sz
,

565 
¥öt
,

566 *
f‹m©
,

567 
ac¸ue
)

569 
i
, 
íum_vÆ
;

570 
›t_›t_t
 *
›t
;

572 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

573 i‡(!
›t
)

574 
	`Áèl
("out of virtual memory");

576 
›t
->
«me
 =Çame;

577 
›t
->
desc
 = desc;

578 
›t
->
nv¨s
 =Çvars;

579 
›t
->
√…
 =Çelt;

580 
›t
->
f‹m©
 = format ? format : "%s";

581 
›t
->
oc
 = 
oc_íum
;

582 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

583 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

584 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

585 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

586 i‡(
def_vÆ
)

588 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

589 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

592 
íum_vÆ
 = 0;

593 
›t
->
¥öt
 =Örint;

594 
›t
->
ac¸ue
 =áccrue;

597 
›t
->
√xt
 = 
NULL
;

598 
	`add_›ti⁄
(
odb
, 
›t
);

601 
i
=0; i < *
√…
; i++)

602 
v¨s
[
i
] = 
íum_vÆ
;

603 
	}
}

606 
	#NUM_FLAGS
 28

	)

607 *
	gÊag_em≠
[
NUM_FLAGS
] = {

613 
	gÊag_evÆ
[
NUM_FLAGS
] = {

620 
	$›t_ªg_Êag
(
›t_odb_t
 *
odb
,

621 *
«me
,

622 *
desc
,

623 *
v¨
,

624 
def_vÆ
,

625 
¥öt
,

626 *
f‹m©
)

628 
›t_›t_t
 *
›t
;

630 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

631 i‡(!
›t
)

632 
	`Áèl
("out of virtual memory");

634 
›t
->
«me
 =Çame;

635 
›t
->
desc
 = desc;

636 
›t
->
nv¨s
 = 1;

637 
›t
->
√…
 = 
NULL
;

638 
›t
->
f‹m©
 = format ? format : "%12s";

639 
›t
->
oc
 = 
oc_Êag
;

640 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

641 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

642 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

643 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

644 
›t
->
¥öt
 =Örint;

645 
›t
->
ac¸ue
 = 
FALSE
;

648 
›t
->
√xt
 = 
NULL
;

649 
	`add_›ti⁄
(
odb
, 
›t
);

652 *
v¨
 = 
def_vÆ
;

653 
	}
}

657 
	$›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

658 *
«me
,

659 *
desc
,

660 *
v¨s
,

661 
nv¨s
,

662 *
√…
,

663 *
def_vÆ
,

664 
¥öt
,

665 *
f‹m©
,

666 
ac¸ue
)

668 
i
;

669 
›t_›t_t
 *
›t
;

671 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

672 i‡(!
›t
)

673 
	`Áèl
("out of virtual memory");

675 
›t
->
«me
 =Çame;

676 
›t
->
desc
 = desc;

677 
›t
->
nv¨s
 =Çvars;

678 
›t
->
√…
 =Çelt;

679 
›t
->
f‹m©
 = format ? format : "%s";

680 
›t
->
oc
 = 
oc_Êag
;

681 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

682 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

683 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

684 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

685 
›t
->
¥öt
 =Örint;

686 
›t
->
ac¸ue
 =áccrue;

689 
›t
->
√xt
 = 
NULL
;

690 
	`add_›ti⁄
(
odb
, 
›t
);

693 
i
=0; i < *
√…
; i++)

694 
v¨s
[
i
] = 
def_vÆ
[i];

695 
	}
}

699 
	$›t_ªg_°rög
(
›t_odb_t
 *
odb
,

700 *
«me
,

701 *
desc
,

702 **
v¨
,

703 *
def_vÆ
,

704 
¥öt
,

705 *
f‹m©
)

707 
›t_›t_t
 *
›t
;

709 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

710 i‡(!
›t
)

711 
	`Áèl
("out of virtual memory");

713 
›t
->
«me
 =Çame;

714 
›t
->
desc
 = desc;

715 
›t
->
nv¨s
 = 1;

716 
›t
->
√…
 = 
NULL
;

717 
›t
->
f‹m©
 = format ? format : "%12s";

718 
›t
->
oc
 = 
oc_°rög
;

719 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = var;

720 
›t
->
¥öt
 =Örint;

721 
›t
->
ac¸ue
 = 
FALSE
;

724 
›t
->
√xt
 = 
NULL
;

725 
	`add_›ti⁄
(
odb
, 
›t
);

728 *
v¨
 = 
def_vÆ
;

729 
	}
}

733 
	$›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

734 *
«me
,

735 *
desc
,

736 **
v¨s
,

737 
nv¨s
,

738 *
√…
,

739 **
def_vÆ
,

740 
¥öt
,

741 *
f‹m©
,

742 
ac¸ue
)

744 
i
;

745 
›t_›t_t
 *
›t
;

747 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

748 i‡(!
›t
)

749 
	`Áèl
("out of virtual memory");

751 
›t
->
«me
 =Çame;

752 
›t
->
desc
 = desc;

753 
›t
->
nv¨s
 =Çvars;

754 
›t
->
√…
 =Çelt;

755 
›t
->
f‹m©
 = format ? format : "%s";

756 
›t
->
oc
 = 
oc_°rög
;

757 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = 
v¨s
;

758 
›t
->
¥öt
 =Örint;

759 
›t
->
ac¸ue
 =áccrue;

762 
›t
->
√xt
 = 
NULL
;

763 
	`add_›ti⁄
(
odb
, 
›t
);

766 
i
=0; i < *
√…
; i++)

767 
v¨s
[
i
] = 
def_vÆ
[i];

768 
	}
}

772 
	$¥o˚ss_›ti⁄
(
›t_odb_t
 *
odb
,

773 
ödex
,

774 
¨gc
,

775 **
¨gv
)

777 
˙t
, 
ít
, 
nv¨s
;

778 *
ídp
;

779 
tmp
;

780 
›t_›t_t
 *
›t
;

783 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

785 i‡(!
	`°rcmp
(
›t
->
«me
, 
¨gv
[
ödex
]))

788 i‡(!
›t
)

791 
	`Áèl
("›ti⁄ `%s' i†undeföed", 
¨gv
[
ödex
]);

793 
ödex
++;

796 
›t
->
oc
)

798 
oc_öt
:

800 i‡(
ödex
 >
¨gc


801 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

804 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

806 
˙t
 = 0;

807 i‡(
›t
->
ac¸ue
)

809 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

810 
nv¨s
 = 1;

811 i‡(
ít
 >
›t
->
nv¨s
)

812 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

816 
ít
 = 0;

817 i‡(
›t
->
√…
)

818 *
›t
->
√…
 = 0;

819 
nv¨s
 = 
›t
->nvars;

822 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

823 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

825 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
[
ít
] = 
	`°πﬁ
(
¨gv
[
ödex
], &
ídp
, 0);

826 i‡(*
ídp
)

829 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

830 
¨gv
[
ödex
], 
›t
->
«me
);

833 i‡(
›t
->
√…
)

834 (*
›t
->
√…
)++;

835 
˙t
++; 
ödex
++; 
ít
++;

838 
oc_uöt
:

840 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

843 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

845 
˙t
 = 0;

846 i‡(
›t
->
ac¸ue
)

848 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

849 
nv¨s
 = 1;

850 i‡(
ít
 >
›t
->
nv¨s
)

851 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

855 
ít
 = 0;

856 i‡(
›t
->
√…
)

857 *
›t
->
√…
 = 0;

858 
nv¨s
 = 
›t
->nvars;

861 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

863 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
[
ít
] = 
	`°πoul
(
¨gv
[
ödex
], &
ídp
, 0);

864 i‡(*
ídp
)

867 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

868 
¨gv
[
ödex
], 
›t
->
«me
);

871 i‡(
›t
->
√…
)

872 (*
›t
->
√…
)++;

873 
˙t
++; 
ödex
++; 
ít
++;

876 
oc_Êﬂt
:

878 i‡(
ödex
 >
¨gc


879 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

882 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

884 
˙t
 = 0;

885 i‡(
›t
->
ac¸ue
)

887 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

888 
nv¨s
 = 1;

889 i‡(
ít
 >
›t
->
nv¨s
)

890 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

894 
ít
 = 0;

895 i‡(
›t
->
√…
)

896 *
›t
->
√…
 = 0;

897 
nv¨s
 = 
›t
->nvars;

900 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

901 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

903 
tmp
 = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

904 i‡(*
ídp
)

907 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

908 
¨gv
[
ödex
], 
›t
->
«me
);

910 i‡(
tmp
 < 
FLT_MIN
 ||Åm∞> 
FLT_MAX
)

913 
	`Áèl
("FP over/underflow forárgument `%s' of option `%s'",

914 
¨gv
[
ödex
], 
›t
->
«me
);

917 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
ít
] = ()
tmp
;

918 i‡(
›t
->
√…
)

919 (*
›t
->
√…
)++;

920 
˙t
++; 
ödex
++; 
ít
++;

923 
oc_doubÀ
:

925 i‡(
ödex
 >
¨gc


926 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

929 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

931 
˙t
 = 0;

932 i‡(
›t
->
ac¸ue
)

934 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

935 
nv¨s
 = 1;

936 i‡(
ít
 >
›t
->
nv¨s
)

937 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

941 
ít
 = 0;

942 i‡(
›t
->
√…
)

943 *
›t
->
√…
 = 0;

944 
nv¨s
 = 
›t
->nvars;

947 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

948 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

950 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
ít
] = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

951 i‡(*
ídp
)

954 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

955 
¨gv
[
ödex
], 
›t
->
«me
);

958 i‡(
›t
->
√…
)

959 (*
›t
->
√…
)++;

960 
˙t
++; 
ödex
++; 
ít
++;

963 
oc_íum
:

965 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

968 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

970 
˙t
 = 0;

971 i‡(
›t
->
ac¸ue
)

973 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

974 
nv¨s
 = 1;

975 i‡(
ít
 >
›t
->
nv¨s
)

976 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

980 
ít
 = 0;

981 i‡(
›t
->
√…
)

982 *
›t
->
√…
 = 0;

983 
nv¨s
 = 
›t
->nvars;

986 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

988 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

989 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

990 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

991 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

992 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

995 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

996 
¨gv
[
ödex
], 
›t
->
«me
);

999 i‡(
›t
->
√…
)

1000 (*
›t
->
√…
)++;

1001 
˙t
++; 
ödex
++; 
ít
++;

1004 
oc_Êag
:

1006 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1009 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[0] = 
TRUE
;

1013 
˙t
 = 0;

1014 i‡(
›t
->
ac¸ue
)

1016 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1017 
nv¨s
 = 1;

1018 i‡(
ít
 >
›t
->
nv¨s
)

1019 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1023 
ít
 = 0;

1024 i‡(
›t
->
√…
)

1025 *
›t
->
√…
 = 0;

1026 
nv¨s
 = 
›t
->nvars;

1028 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1030 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

1031 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1032 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1033 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

1034 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

1037 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
] = 
TRUE
;

1043 i‡(
›t
->
√…
)

1044 (*
›t
->
√…
)++;

1045 
˙t
++; 
ödex
++; 
ít
++;

1049 
oc_°rög
:

1051 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1054 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1056 
˙t
 = 0;

1057 i‡(
›t
->
ac¸ue
)

1059 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1060 
nv¨s
 = 1;

1061 i‡(
ít
 >
›t
->
nv¨s
)

1062 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1066 
ít
 = 0;

1067 i‡(
›t
->
√…
)

1068 *
›t
->
√…
 = 0;

1069 
nv¨s
 = 
›t
->nvars;

1072 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1074 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
ít
] = 
¨gv
[
ödex
];

1075 i‡(
›t
->
√…
)

1076 (*
›t
->
√…
)++;

1077 
˙t
++; 
ödex
++; 
ít
++;

1081 
	`∑nic
("bogus option class");

1084  
ödex
;

1085 
	}
}

1088 
¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
);

1089 
dump_c⁄fig
(
›t_odb_t
 *
odb
, *
‚ame
);

1093 
	$__›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1094 
¨gc
,

1095 **
¨gv
,

1096 
dïth
)

1098 
ödex
, 
do_dumpc⁄fig
;

1099 *
dumpc⁄fig_«me
;

1101 
ödex
 = 0;

1102 
do_dumpc⁄fig
 = 
FALSE
;

1103 
dumpc⁄fig_«me
 = 
NULL
;

1105 
ödex
 < 
¨gc
)

1108 
ödex
 < 
¨gc
 && 
¨gv
[index][0] != '-')

1110 i‡(
dïth
 > 0)

1113 
	`Áèl
("orphan `%s'Éncountered during config fileÖrocessing",

1114 
¨gv
[
ödex
]);

1117 i‡(
odb
->
‹ph™_‚
)

1119 i‡(!
odb
->
	`‹ph™_‚
(
ödex
+1, 
¨gc
, 
¨gv
))

1122 
d⁄e_¥o˚ssög
;

1128 
	`Áèl
("‹ph™árgumíà`%s' wa†un˛aimed", 
¨gv
[
ödex
]);

1134 i‡(
ödex
 =
¨gc
)

1137 
d⁄e_¥o˚ssög
;

1142 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-config"))

1145 
ödex
++;

1146 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1149 
	`Áèl
("option `-config'Ñequiresánárgument");

1151 
	`¥o˚ss_fûe
(
odb
, 
¨gv
[
ödex
], 
dïth
);

1152 
ödex
++;

1154 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-dumpconfig"))

1157 
do_dumpc⁄fig
 = 
TRUE
;

1159 
ödex
++;

1160 i‡(
ödex
 >
¨gc


1161 || (
¨gv
[
ödex
][0] == '-' &&árgv[index][1] != '\0'))

1164 
	`Áèl
("option `-dumpconfig'Ñequiresánárgument");

1166 
dumpc⁄fig_«me
 = 
¨gv
[
ödex
];

1167 
ödex
++;

1172 
ödex
 = 
	`¥o˚ss_›ti⁄
(
odb
, index, 
¨gc
, 
¨gv
);

1175 
d⁄e_¥o˚ssög
:

1177 i‡(
do_dumpc⁄fig
)

1178 
	`dump_c⁄fig
(
odb
, 
dumpc⁄fig_«me
);

1179 
	}
}

1183 
	$›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1184 
¨gc
,

1185 **
¨gv
)

1188 i‡(
¨gc
 < 2)

1192 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
-1, 
¨gv
+1, 0);

1193 
	}
}

1196 
	#MAX_LINE_ARGS
 256

	)

1197 
	#MAX_FILENAME_LEN
 1024

	)

1199 
	$¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
)

1201 
œrgc
;

1202 *
œrgv
[
MAX_LINE_ARGS
];

1203 
löe
[1024], *
p
, *
q
;

1204 
cwd
[
MAX_FILENAME_LEN
];

1205 *
hódî
;

1206 
FILE
 *
fd
;

1208 
fd
 = 
	`f›í
(
‚ame
, "r");

1209 i‡(!
fd
)

1210 
	`Áèl
("couldÇŸ o≥¿c⁄figuøti⁄ fûê`%s'", 
‚ame
);

1212 i‡(!
	`gëcwd
(
cwd
, 
MAX_FILENAME_LEN
))

1213 
	`Áèl
("can't get cwd");

1215 
hódî
 = 
	`°ºchr
(
‚ame
, '/');

1216 i‡(
hódî
 !
NULL
)

1219 *
hódî
 = '\0';

1220 i‡(
	`chdú
(
‚ame
) == -1)

1221 
	`Áèl
("ˇn'àchdúÅÿ%s\n", 
‚ame
);

1222 *
hódî
 = '/';

1225 !
	`„of
(
fd
))

1228 
	`Ârötf
(
°dîr
, "!feof(fd): %d, strlen(line): %d,Üine: %s\n",

1229 !
	`„of
(
fd
), 
	`°æí
(
löe
),Üine);

1232 
löe
[0] = '\n';

1234 
	`fgës
(
löe
, 1024, 
fd
);

1235 i‡(
löe
[0] == '\0' ||Üine[0] == '\n')

1237 i‡(
löe
[
	`°æí
(line)-1] == '\n')

1238 
löe
[
	`°æí
(line)-1] = '\0';

1241 
œrgc
 = 0; 
p
 = 
löe
;

1242 *
p
)

1245 *
p
 != '\0' && (*p == ' ' || *p == '\t'))

1246 
p
++;

1249 i‡(*
p
 == '\0' || *p == '#')

1253 
q
 = 
p
;

1254 *
q
 != '\0' && *q != ' ' && *q != '\t')

1255 
q
++;

1256 i‡(*
q
)

1258 *
q
 = '\0';

1259 
q
++;

1263 
œrgv
[
œrgc
++] = 
	`my°rdup
(
p
);

1265 i‡(
œrgc
 =
MAX_LINE_ARGS
)

1267 i‡(
	`chdú
(
cwd
) == -1)

1268 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1269 
	`Áèl
("›ti⁄Üöêtoÿcom∂ex i¿fûê`%s'", 
‚ame
);

1273 
p
 = 
q
;

1277 i‡(
œrgc
 > 0)

1278 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
œrgc
, 
œrgv
, 
dïth
+1);

1282 
	`f˛o£
(
fd
);

1284 i‡(
	`chdú
(
cwd
) == -1)

1285 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1286 
	}
}

1290 
	$›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

1291 
FILE
 *
fd
)

1293 
i
, 
√…
;

1295 
›t
->
oc
)

1297 
oc_öt
:

1298 i‡(
›t
->
√…
)

1299 
√…
 = *(
›t
->nelt);

1301 
√…
 = 1;

1302 
i
=0; i<
√…
; i++)

1304 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_öt
.
v¨
[
i
]);

1305 
	`Ârötf
(
fd
, " ");

1308 
oc_uöt
:

1309 i‡(
›t
->
√…
)

1310 
√…
 = *(
›t
->nelt);

1312 
√…
 = 1;

1313 
i
=0; i<
√…
; i++)

1315 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_uöt
.
v¨
[
i
]);

1316 
	`Ârötf
(
fd
, " ");

1319 
oc_Êﬂt
:

1320 i‡(
›t
->
√…
)

1321 
√…
 = *(
›t
->nelt);

1323 
√…
 = 1;

1324 
i
=0; i<
√…
; i++)

1326 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, ()›t->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
i
]);

1327 
	`Ârötf
(
fd
, " ");

1330 
oc_doubÀ
:

1331 i‡(
›t
->
√…
)

1332 
√…
 = *(
›t
->nelt);

1334 
√…
 = 1;

1335 
i
=0; i<
√…
; i++)

1337 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
i
]);

1338 
	`Ârötf
(
fd
, " ");

1341 
oc_íum
:

1342 i‡(
›t
->
√…
)

1343 
√…
 = *(
›t
->nelt);

1345 
√…
 = 1;

1346 
i
=0; i<
√…
; i++)

1348 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1349 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1350 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1351 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1352 i‡(!
e°r
)

1353 
	`∑nic
("couldÇot bindÉnum `%d' for option `%s'",

1354 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1356 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1357 
	`Ârötf
(
fd
, " ");

1360 
oc_Êag
:

1361 i‡(
›t
->
√…
)

1362 
√…
 = *(
›t
->nelt);

1364 
√…
 = 1;

1365 
i
=0; i<
√…
; i++)

1367 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1368 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1369 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1370 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1371 i‡(!
e°r
)

1372 
	`∑nic
("couldÇot bind boolean `%d' for option `%s'",

1373 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1375 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1376 
	`Ârötf
(
fd
, " ");

1379 
oc_°rög
:

1380 i‡(!
›t
->
nv¨s
)

1382 
	`Ârötf
(
fd
, "%12s ", "<null>");

1385 i‡(
›t
->
√…
)

1386 
√…
 = *(
›t
->nelt);

1388 
√…
 = 1;

1389 i‡(
√…
 == 0)

1391 
	`Ârötf
(
fd
, "%12s ", "<null>");

1396 
i
=0; i<
√…
; i++)

1398 
	`Ârötf
(
fd
, 
›t
->
f‹m©
,

1399 (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1400 ? 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1402 
	`Ârötf
(
fd
, " ");

1407 
	`∑nic
("bogus option class");

1409 
	}
}

1413 
	$¥öt_›ti⁄_hódî
(
›t_odb_t
 *
odb
,

1414 
FILE
 *
fd
)

1416 i‡(!
odb
->
hódî
)

1419 
	`Ârötf
(
fd
, "\n%s\n", 
odb
->
hódî
);

1420 
	}
}

1424 
	$¥öt_›ti⁄_nŸes
(
›t_odb_t
 *
odb
,

1425 
FILE
 *
fd
)

1427 
›t_nŸe_t
 *
nŸe
;

1429 i‡(!
odb
->
nŸes
)

1432 
	`Ârötf
(
fd
, "\n");

1433 
nŸe
=
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸeÚŸe->
√xt
)

1434 
	`Ârötf
(
fd
, "%s\n", 
nŸe
->note);

1435 
	`Ârötf
(
fd
, "\n");

1436 
	}
}

1439 
›t_›t_t
 
	gdumpc⁄fig_›t
 =

1440 { 
NULL
, "-dumpconfig", "dump configurationÅoá file",

1441 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1442 
›t_›t_t
 
	gc⁄fig_›t
 =

1443 { &
dumpc⁄fig_›t
, "-config", "load configuration fromá file",

1444 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1445 
›t_›t_t
 *
	gbuûtö_›ti⁄s
 = &
c⁄fig_›t
;

1449 
	$›t_nuŒ_°rög
(
›t_›t_t
 *
›t
)

1451  (
›t
 !
NULL


1452 && 
›t
->
oc
 =
oc_°rög


1453 && (
›t
->
nv¨s
 == 0

1454 || (
›t
->
√…
 !
NULL
 && *opt->nelt == 0)

1455 || (
›t
->
√…
 =
NULL


1456 && (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 =
NULL


1457 || 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[0] =
NULL
))));

1458 
	}
}

1462 
	$›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

1463 
FILE
 *
fd
,

1464 
ãr£
,

1465 
nŸes
)

1467 
›t_›t_t
 *
›t
;

1469 i‡(!
odb
)

1476 i‡(
nŸes
)

1477 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1480 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1482 i‡(
ãr£
)

1483 
	`Ârötf
(
fd
, "# %-27†# %s\n", 
›t
->
«me
, o±->
desc
);

1486 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1487 
	`Ârötf
(
fd
, "# %-22s\n\n", 
›t
->
«me
);

1492 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1495 i‡(
	`°rcmp
(
›t
->
«me
, "-run") == 0)

1498 i‡(
ãr£
)

1500 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1501 
	`Ârötf
(
fd
, "# %-14†", 
›t
->
«me
);

1503 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1504 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1505 i‡(
›t
->
desc
)

1506 
	`Ârötf
(
fd
, "# %-22s", 
›t
->
desc
);

1507 
	`Ârötf
(
fd
, "\n");

1511 i‡(
›t
->
desc
)

1512 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1513 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1514 
	`Ârötf
(
fd
, "# %-20†", 
›t
->
«me
);

1516 
	`Ârötf
(
fd
, "%-22†", 
›t
->
«me
);

1517 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1518 
	`Ârötf
(
fd
, "\n\n");

1523 i‡(
nŸes
)

1524 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1525 
	}
}

1529 
	$¥öt_hñp
(
›t_›t_t
 *
›t
,

1530 
FILE
 *
fd
)

1532 *
s
 = 
NULL
;

1534 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1535 
›t
->
oc
)

1537 
oc_öt
:

1538 i‡(
›t
->
nv¨s
 == 1)

1539 
s
 = "<int>";

1541 
s
 = "<intÜist...>";

1543 
oc_uöt
:

1544 i‡(
›t
->
nv¨s
 == 1)

1545 
s
 = "<uint>";

1547 
s
 = "<uintÜist...>";

1549 
oc_Êﬂt
:

1550 i‡(
›t
->
nv¨s
 == 1)

1551 
s
 = "<float>";

1553 
s
 = "<floatÜist...>";

1555 
oc_doubÀ
:

1556 i‡(
›t
->
nv¨s
 == 1)

1557 
s
 = "<double>";

1559 
s
 = "<doubleÜist...>";

1561 
oc_íum
:

1562 i‡(
›t
->
nv¨s
 == 1)

1563 
s
 = "<enum>";

1565 
s
 = "<enumÜist...>";

1567 
oc_Êag
:

1568 i‡(
›t
->
nv¨s
 == 1)

1569 
s
 = "<true|false>";

1571 
s
 = "<true|falseÜist...>";

1573 
oc_°rög
:

1574 i‡(
›t
->
nv¨s
 == 0 || opt->nvars == 1)

1575 
s
 = "<string>";

1577 
s
 = "<stringÜist...>";

1580 
	`∑nic
("bogus option class");

1582 
	`Ârötf
(
fd
, "%-16†# ", 
s
);

1583 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1584 
	`Ârötf
(
fd
, "# %-22s\n", 
›t
->
desc
);

1585 
	}
}

1589 
	$›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

1590 
FILE
 *
fd
)

1592 
›t_›t_t
 *
›t
;

1595 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1597 
	`Ârötf
(
fd
, "#\n");

1598 
	`Ârötf
(
fd
, "%-16s %-16s # %12s # %-22s\n",

1600 
	`Ârötf
(
fd
, "#\n");

1603 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1604 
	`¥öt_hñp
(
›t
, 
fd
);

1607 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1608 
	`¥öt_hñp
(
›t
, 
fd
);

1611 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1612 
	}
}

1616 
	$dump_c⁄fig
(
›t_odb_t
 *
odb
,

1617 *
‚ame
)

1619 
FILE
 *
fd
;

1622 i‡(!
	`°rcmp
(
‚ame
, "-"))

1623 
fd
 = 
°dîr
;

1626 
fd
 = 
	`f›í
(
‚ame
, "w");

1627 i‡(!
fd
)

1628 
	`Áèl
("couldÇŸ o≥¿fûê`%s'", 
‚ame
);

1632 
	`›t_¥öt_›ti⁄s
(
odb
, 
fd
, 
FALSE
, FALSE);

1635 i‡(
fd
 !
°dout
 && fd !
°dîr
)

1636 
	`f˛o£
(
fd
);

1637 
	}
}

1640 
›t_›t_t
 *

1641 
	$›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

1642 *
›t_«me
)

1644 
›t_›t_t
 *
›t
;

1647 
›t
 = 
buûtö_›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1649 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1652  
›t
;

1657 
›t
 = 
odb
->
›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1659 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1662  
›t
;

1666  
NULL
;

1667 
	}
}

1671 
	$›t_ªg_hódî
(
›t_odb_t
 *
odb
,

1672 *
hódî
)

1674 
odb
->
hódî
 = header;

1675 
	}
}

1679 
	$›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

1680 *
nŸe_°r
)

1682 
›t_nŸe_t
 *
nŸe
, *
ñt
, *
¥ev
;

1684 
nŸe
 = (
›t_nŸe_t
 *)
	`ˇŒoc
(1, (opt_note_t));

1685 i‡(!
nŸe
)

1686 
	`Áèl
("out of virtual memory");

1689 
nŸe
->
√xt
 = 
NULL
;

1690 
nŸe
->nŸê
nŸe_°r
;

1693 
¥ev
=
NULL
, 
ñt
=
odb
->
nŸes
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

1696 i‡(
¥ev
 !
NULL
)

1697 
¥ev
->
√xt
 = 
nŸe
;

1699 
odb
->
nŸes
 = 
nŸe
;

1700 
nŸe
->
√xt
 = 
NULL
;

1701 
	}
}

1704 #ifde‡
TEST


1707 
	$f_‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

1709 
	`Ârötf
(
°dout
, "‹ph™†dëe˘edáàödex %d,árg = `%s'...\n", 
i
, 
¨gv
[i]);

1712  
FALSE
;

1713 
	}
}

1715 
	#MAX_VARS
 4

	)

1717 
	$maö
(
¨gc
, **
¨gv
)

1719 
›t_odb_t
 *
odb
;

1721 
n_öt_v¨s
, 
n_uöt_v¨s
, 
n_Êﬂt_v¨s
, 
n_doubÀ_v¨s
;

1722 
n_íum_v¨s
, 
n_íum_evÆ_v¨s
, 
n_Êag_v¨s
, 
n_°rög_v¨s
;

1723 
öt_v¨
, 
öt_v¨s
[
MAX_VARS
];

1724 
uöt_v¨
, 
uöt_v¨s
[
MAX_VARS
];

1725 
Êﬂt_v¨
, 
Êﬂt_v¨s
[
MAX_VARS
];

1726 
doubÀ_v¨
, 
doubÀ_v¨s
[
MAX_VARS
];

1727 
Êag_v¨
, 
Êag_v¨s
[
MAX_VARS
];

1728 *
°rög_v¨
, *
°rög_v¨s
[
MAX_VARS
];

1730 
	eëe°_t
 { 
íum_a
, 
íum_b
, 
íum_c
, 
íum_d
, 
íum_NUM
 };

1731 *
íum_em≠
[
íum_NUM
] =

1733 
íum_evÆ
[
íum_NUM
] =

1734 { 
íum_d
, 
íum_c
, 
íum_b
, 
íum_a
 };

1735 
íum_v¨
, 
íum_v¨s
[
MAX_VARS
];

1736 
íum_evÆ_v¨
, 
íum_evÆ_v¨s
[
MAX_VARS
];

1739 
odb
 = 
	`›t_√w
(
f_‹ph™_‚
);

1742 
	`›t_ªg_öt
(
odb
, "-opt:int", "This isán integer option.",

1743 &
öt_v¨
, 1, 
TRUE
, 
NULL
);

1744 
	`›t_ªg_öt_li°
(
odb
, "-opt:int:list", "This isán integerÜist option.",

1745 
öt_v¨s
, 
MAX_VARS
, &
n_öt_v¨s
, 2,

1746  
TRUE
, 
NULL
);

1747 
	`›t_ªg_uöt
(
odb
, "-opt:uint", "This isán unsigned integer option.",

1748 &
uöt_v¨
, 3, 
TRUE
, 
NULL
);

1749 
	`›t_ªg_uöt_li°
(
odb
, "-opt:uint:list",

1751 
uöt_v¨s
, 
MAX_VARS
, &
n_uöt_v¨s
, 4,

1752  
TRUE
, 
NULL
);

1753 
	`›t_ªg_Êﬂt
(
odb
, "-opt:float", "This isá float option.",

1754 &
Êﬂt_v¨
, 5.0, 
TRUE
, 
NULL
);

1755 
	`›t_ªg_Êﬂt_li°
(
odb
, "-opt:float:list", "This isá floatÜist option.",

1756 
Êﬂt_v¨s
, 
MAX_VARS
, &
n_Êﬂt_v¨s
, 6.0,

1757  
TRUE
, 
NULL
);

1758 
	`›t_ªg_doubÀ
(
odb
, "-opt:double", "This isá double option.",

1759 &
doubÀ_v¨
, 7.0, 
TRUE
, 
NULL
);

1760 
	`›t_ªg_doubÀ_li°
(
odb
, "-opt:double:list", "This isá doubleÜist option.",

1761 
doubÀ_v¨s
, 
MAX_VARS
, &
n_doubÀ_v¨s
, 8.0,

1762  
TRUE
, 
NULL
);

1763 
	`›t_ªg_íum
(
odb
, "-opt:enum", "This isánÉnumeration option.",

1764 &
íum_v¨
, "íum_a", 
íum_em≠
, 
NULL
, 
íum_NUM
,

1765  
TRUE
, 
NULL
);

1766 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:list", "This isáÉnumÜist option.",

1767 
íum_v¨s
, 
MAX_VARS
, &
n_íum_v¨s
, "enum_b",

1768 
íum_em≠
, 
NULL
, 
íum_NUM
,

1769  
TRUE
, 
NULL
);

1770 
	`›t_ªg_íum
(
odb
, "-opt:enum:eval", "This isánÉnumeration option w/eval.",

1771 &
íum_evÆ_v¨
, "íum_b", 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1772  
TRUE
, 
NULL
);

1773 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:eval:list",

1775 
íum_evÆ_v¨s
, 
MAX_VARS
, &
n_íum_evÆ_v¨s
, "enum_a",

1776 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1777  
TRUE
, 
NULL
);

1778 
	`›t_ªg_Êag
(
odb
, "-opt:flag", "This isá boolean flag option.",

1779 &
Êag_v¨
, 
FALSE
, 
TRUE
, 
NULL
);

1780 
	`›t_ªg_Êag_li°
(
odb
, "-opt:flag:list",

1782 
Êag_v¨s
, 
MAX_VARS
, &
n_Êag_v¨s
, 
TRUE
,

1783  
TRUE
, 
NULL
);

1784 
	`›t_ªg_°rög
(
odb
, "-opt:string", "This isá string option.",

1785 &
°rög_v¨
, "a:string",

1786  
TRUE
, 
NULL
);

1787 
	`›t_ªg_°rög_li°
(
odb
, "-opt:string:list", "This isá stringÜist option.",

1788 
°rög_v¨s
, 
MAX_VARS
, &
n_°rög_v¨s
, "another:string",

1789  
TRUE
, 
NULL
);

1792 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

1795 
	`Ârötf
(
°dout
, "## Current Option Values ##\n");

1796 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dout
, 
FALSE
, 
TRUE
);

1799 
	`›t_dñëe
(
odb
);

1800 
	`exô
(0);

1801 
	}
}

	@ss/options.h

52 #i‚de‡
OPTIONS_H


53 
	#OPTIONS_H


	)

67 
	e›t_˛ass_t
 {

68 
	moc_öt
 = 0,

69 
	moc_uöt
,

70 
	moc_Êﬂt
,

71 
	moc_doubÀ
,

72 
	moc_íum
,

73 
	moc_Êag
,

74 
	moc_°rög
,

75 
	moc_NUM


79 
	s›t_›t_t
 {

80 
›t_›t_t
 *
	m√xt
;

81 *
	m«me
;

82 *
	mdesc
;

83 
	mnv¨s
;

84 *
	m√…
;

85 *
	mf‹m©
;

86 
	m¥öt
;

87 
	mac¸ue
;

88 
›t_˛ass_t
 
	moc
;

89 
	u›t_v¨ü¡_t
 {

91 
	s›t_f‹_öt_t
 {

92 *
	mv¨
;

93 } 
	mf‹_öt
;

95 
	s›t_f‹_uöt_t
 {

96 *
	mv¨
;

97 } 
	mf‹_uöt
;

99 
	s›t_f‹_Êﬂt_t
 {

100 *
	mv¨
;

101 } 
	mf‹_Êﬂt
;

103 
	s›t_f‹_doubÀ_t
 {

104 *
	mv¨
;

105 } 
	mf‹_doubÀ
;

107 
	s›t_f‹_íum_t
 {

108 *
	mv¨
;

109 **
	mem≠
;

110 *
	mevÆ
;

111 
	mem≠_sz
;

112 } 
	mf‹_íum
;

114 
	s›t_f‹_°rög_t
 {

115 **
	mv¨
;

116 } 
	mf‹_°rög
;

117 } 
	mv¨ü¡
;

123 (*
	t‹ph™_‚_t
)(
	ti
,

124 
	t¨gc
,

125 **
	t¨gv
);

129 
	s›t_nŸe_t
 {

130 
›t_nŸe_t
 *
	m√xt
;

131 *
	mnŸe
;

135 
	s›t_odb_t
 {

136 
›t_›t_t
 *
	m›ti⁄s
;

137 
‹ph™_‚_t
 
	m‹ph™_‚
;

138 *
	mhódî
;

139 
›t_nŸe_t
 *
	mnŸes
;

143 
›t_odb_t
 *

144 
›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
);

148 
›t_dñëe
(
›t_odb_t
 *
odb
);

152 
›t_ªg_öt
(
›t_odb_t
 *
odb
,

153 *
«me
,

154 *
desc
,

155 *
v¨
,

156 
def_vÆ
,

157 
¥öt
,

158 *
f‹m©
);

162 
›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

163 *
«me
,

164 *
desc
,

165 *
v¨s
,

166 
nv¨s
,

167 *
√…
,

168 *
def_vÆ
,

169 
¥öt
,

170 *
f‹m©
,

171 
ac¸ue
);

175 
›t_ªg_uöt
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨
,

179 
def_vÆ
,

180 
¥öt
,

181 *
f‹m©
);

185 
›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

186 *
«me
,

187 *
desc
,

188 *
v¨s
,

189 
nv¨s
,

190 *
√…
,

191 *
def_vÆ
,

192 
¥öt
,

193 *
f‹m©
,

194 
ac¸ue
);

198 
›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

199 *
«me
,

200 *
desc
,

201 *
v¨
,

202 
def_vÆ
,

203 
¥öt
,

204 *
f‹m©
);

208 
›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

209 *
«me
,

210 *
desc
,

211 *
v¨s
,

212 
nv¨s
,

213 *
√…
,

214 *
def_vÆ
,

215 
¥öt
,

216 *
f‹m©
,

217 
ac¸ue
);

221 
›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

222 *
«me
,

223 *
desc
,

224 *
v¨
,

225 
def_vÆ
,

226 
¥öt
,

227 *
f‹m©
);

231 
›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

232 *
«me
,

233 *
desc
,

234 *
v¨s
,

235 
nv¨s
,

236 *
√…
,

237 *
def_vÆ
,

238 
¥öt
,

239 *
f‹m©
,

240 
ac¸ue
);

246 
›t_ªg_íum
(
›t_odb_t
 *
odb
,

247 *
«me
,

248 *
desc
,

249 *
v¨
,

250 *
def_vÆ
,

251 **
em≠
,

252 *
evÆ
,

253 
em≠_sz
,

254 
¥öt
,

255 *
f‹m©
);

261 
›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

262 *
«me
,

263 *
desc
,

264 *
v¨s
,

265 
nv¨s
,

266 *
√…
,

267 *
def_vÆ
,

268 **
em≠
,

269 *
evÆ
,

270 
em≠_sz
,

271 
¥öt
,

272 *
f‹m©
,

273 
ac¸ue
);

277 
›t_ªg_Êag
(
›t_odb_t
 *
odb
,

278 *
«me
,

279 *
desc
,

280 *
v¨
,

281 
def_vÆ
,

282 
¥öt
,

283 *
f‹m©
);

287 
›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨s
,

291 
nv¨s
,

292 *
√…
,

293 *
def_vÆ
,

294 
¥öt
,

295 *
f‹m©
,

296 
ac¸ue
);

300 
›t_ªg_°rög
(
›t_odb_t
 *
odb
,

301 *
«me
,

302 *
desc
,

303 **
v¨
,

304 *
def_vÆ
,

305 
¥öt
,

306 *
f‹m©
);

310 
›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

311 *
«me
,

312 *
desc
,

313 **
v¨s
,

314 
nv¨s
,

315 *
√…
,

316 **
def_vÆ
,

317 
¥öt
,

318 *
f‹m©
,

319 
ac¸ue
);

323 
›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

324 
¨gc
,

325 **
¨gv
);

329 
›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

330 
FILE
 *
fd
);

334 
›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

335 
FILE
 *
fd
,

336 
ãr£
,

337 
nŸes
);

341 
›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

342 
FILE
 *
fd
);

345 
›t_›t_t
 *

346 
›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

347 *
›t_«me
);

351 
›t_ªg_hódî
(
›t_odb_t
 *
odb
,

352 *
hódî
);

356 
›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

357 *
nŸe
);

	@ss/regs.h

52 #i‚de‡
REGS_H


53 
	#REGS_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

100 
	sªgs_t
 {

101 
md_g¥_t
 
	mªgs_R
;

102 
md_Âr_t
 
	mªgs_F
;

103 
md_˘æ_t
 
	mªgs_C
;

104 
md_addr_t
 
	mªgs_PC
;

105 
md_addr_t
 
	mªgs_NPC
;

109 
ªgs_t
 *
ªgs_¸óã
();

113 
ªgs_öô
(
ªgs_t
 *
ªgs
);

117 
ªgs_dump
(
ªgs_t
 *
ªgs
,

118 
FILE
 *
°ªam
);

122 
ªgs_de°roy
(
ªgs_t
 *
ªgs
);

	@ss/resource.h

52 #i‚de‡
RESOURCE_H


53 
	#RESOURCE_H


	)

55 
	~<°dio.h
>

58 
	#MAX_RES_CLASSES
 16

	)

61 
	#MAX_INSTS_PER_CLASS
 8

	)

64 
	sªs_desc
 {

65 *
	m«me
;

66 
	mqu™tôy
;

67 
	mbusy
;

68 
	sªs_ãm∂©e
 {

69 
	m˛ass
;

72 
	m›œt
;

74 
	missuñ©
;

77 
ªs_desc
 *
	mma°î
;

78 } 
	mx
[
MAX_RES_CLASSES
];

82 
	sªs_poﬁ
 {

83 *
	m«me
;

84 
	mnum_ªsour˚s
;

85 
ªs_desc
 *
	mªsour˚s
;

87 
	m√¡s
[
MAX_RES_CLASSES
];

88 
ªs_ãm∂©e
 *
	mèbÀ
[
MAX_RES_CLASSES
][
MAX_INSTS_PER_CLASS
];

92 
ªs_poﬁ
 *
ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
);

100 
ªs_ãm∂©e
 *
ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
);

103 
ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
);

	@ss/ss_exegraph.c

22 
	~<°dlib.h
>

23 
	~"../tcfg.h
"

24 
	~"../lo›s.h
"

25 
	~"../b¥ed.h
"

26 
	~"../ˇche.h
"

27 
	~"../pùñöe.h
"

28 
	~"../exegøph.h
"

29 
	~"machöe.h
"

30 
	~"ss_machöe.h
"

32 *
num_mp_ö°s
;

33 
pùe_°ages
;

34 
ss_pfu_˛ass
 
fu2pfu
[];

36 
tcfg_node_t
 **
tcfg
;

37 
mas_ö°_t
 **
eg_ö°s
;

38 
egøph_node_t
 **
egøph
;

39 
eg_Àn
, 
∂og_Àn
, 
ñog_Àn
, 
body_Àn
;

40 
egøph_edge_t
 *
egøph_edges
;

41 
num_eg_edges
;

42 
ønge16_t
 *
c€xi°
;

43 
eg_chaö_t
 *
eg_chaö
;

44 
b¥ed_ty≥
;

45 
lo›_t
 *
body_lo›
;

47 
ˇche_t
 
ˇche
;

48 
ˇche_t
 
ˇche_l2
;

51 
LSQ_size
;

52 
RUU_size
;

53 
„tch_width
;

54 
ruu_decode_width
;

55 
ruu_issue_width
;

56 
ruu_commô_width
;

57 
ruu_ö‹dî_issue
;

58 
ruu_ifq_size
;

59 
ruu_bønch_≥«…y
;

61 
íabÀ_iˇche
;

62 
íabÀ_û2ˇche
;

63 
íabÀ_s˝_dˇche
;

64 
íabÀ_s˝_dl2ˇche
;

65 
íabÀ_ul2ˇche
;

66 
mem_œt
[2];

67 
ˇche_dl1_œt
;

68 
ˇche_dl2_œt
;

70 **
	gd©a_dï
;

71 *
	geg_ö°s_ty≥
;

72 *
	geg_mem_ö°s
, 
	gnum_mem_ö°s
;

74 
ønge16_t
 
	gfu_œt
[] = { { 1, 1 },

90 
dump_d©a_dï
();

92 
	$ss_Æloc_mem
() {

93 
eg_ö°s_ty≥
 = (*Ë
	`ˇŒoc
(
MAX_EG_LEN
, ());

94 
eg_mem_ö°s
 = (*Ë
	`ˇŒoc
(
MAX_EG_LEN
, ());

95 
	}
}

97 
	$Æloc_dï_mem
() {

98 
i
;

100 
d©a_dï
 = (**Ë
	`ˇŒoc
(
eg_Àn
, (*));

101 
i
 = 1; i < 
eg_Àn
; i++)

102 
d©a_dï
[
i
] = (*Ë
	`ˇŒoc
(ò- 
c€xi°
[i].
lo
 + 1, ());

103 
	}
}

105 
	$dóŒoc_dï_mem
() {

106 
i
;

108 
i
 = 1; i < 
eg_Àn
; i++)

109 
	`‰ì
(
d©a_dï
[
i
]);

110 
	`‰ì
(
d©a_dï
);

111 
	}
}

113 
	$sˇn_¥ed_n‹mÆ
(
cuº
) {

114 
ö°
;

116 
ö°
 = 
cuº
 - 1; inst >= 0; inst--) {

117 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
) {

118 
eg_chaö
[
cuº
].
¥ed
 = 
ö°
;

119 
eg_chaö
[
ö°
].
succ
 = 
cuº
;

120 i‡(
cuº
 - 
ö°
 > 1)

121 
eg_chaö
[
cuº
 - 1].
succ
 = -1;

126 
eg_chaö
[
cuº
].
¥ed
 = -1;

127 
eg_chaö
[
cuº
 - 1].
succ
 = -1;

128 
	}
}

130 
	$sˇn_¥ed_m¥ed
(
cuº
) {

131 
eg_chaö
[
cuº
].
¥ed
 = curr - 1;

132 i‡(
eg_ö°s
[
cuº
 - 1]->
bp_Êag
 !
BP_CPRED


134 
eg_chaö
[
cuº
 - 1].
succ
 = curr;

135 
	}
}

137 
	$sˇn_¥ed
() {

138 
ö°
;

140 
eg_chaö
[0].
¥ed
 = -1;

141 
ö°
 = 1; in° < 
eg_Àn
; inst++) {

142 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED


144 
	`sˇn_¥ed_n‹mÆ
(
ö°
);

146 
	`sˇn_¥ed_m¥ed
(
ö°
);

148 
eg_chaö
[
eg_Àn
 - 1].
succ
 = -1;

149 
	}
}

151 
	$ö°_c€xi°s
(
cuº
) {

152 
ö°
, 
rob_num
 = 1, 
lsq_num
 = 0;

154 i‡((
eg_ö°s_ty≥
[
cuº
] =
INST_LOAD
)

155 || (
eg_ö°s_ty≥
[
cuº
] =
INST_STORE
))

156 
lsq_num
 = 1;

158 
ö°
 = 
eg_chaö
[
cuº
].
succ
; inst >= 0; inst =Ég_chain[inst].succ) {

160 i‡((
eg_ö°s_ty≥
[
cuº
] =
INST_LOAD
)

161 || (
eg_ö°s_ty≥
[
cuº
] =
INST_STORE
)) {

163 i‡(++
lsq_num
 > 
LSQ_size
)

167 i‡(++
rob_num
 >
RUU_size
)

170 i‡(
ö°
 < 0) {

171 
c€xi°
[
cuº
].
hi
 = 
eg_Àn
 - 1;

172 i‡(
cuº
 == 0)

173 
c€xi°
[
eg_Àn
 - 1].
lo
 = 0;

175 
c€xi°
[
cuº
].
hi
 = 
ö°
;

176 
c€xi°
[
ö°
].
lo
 = 
cuº
;

178 
	}
}

181 
	$mpö°_c€xi°s
(
cuº
, 
br_ö°
) {

182 
i
, 
ö°
, 
br_succ
;

184 
br_succ
 = 
eg_chaö
[
br_ö°
].
succ
;

185 i‡(
br_succ
 - 
cuº
 >
RUU_size
)

186 
c€xi°
[
cuº
].
hi
 = cuº + 
RUU_size
 - 1;

188 
c€xi°
[
cuº
].
hi
 = 
br_succ
 - 1;

190 i‡(
cuº
 - 
br_ö°
 >
RUU_size
)

191 
c€xi°
[
cuº
].
lo
 = cuº - 
RUU_size
 + 1;

192 i‡(
cuº
 - 
br_ö°
 =
RUU_size
 - 1)

193 
c€xi°
[
cuº
].
lo
 = 
br_ö°
;

195 
c€xi°
[
cuº
].
lo
 = 
	`max
(0, 
eg_chaö
[c€xi°[cuº+1].lo].
¥ed
);

197 
	}
}

199 
	$sˇn_c€xi°s
() {

200 
ö°
, 
br_ö°
;

202 
ö°
 = 0; in° >0; in° = 
eg_chaö
[ö°].
succ
) {

203 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
) {

204 
c€xi°
[
ö°
].
lo
 = 0;

208 
ö°
 = 0; in° >0; in° = 
eg_chaö
[ö°].
succ
) {

209 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
) {

210 
	`ö°_c€xi°s
(
ö°
);

213 
ö°
 = 
eg_Àn
 - 1; inst > 0; inst--) {

214 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 !
BP_CPRED
) {

215 i‡(
eg_ö°s
[
ö°
 + 1]->
bp_Êag
 =
BP_CPRED


217 
br_ö°
 = 
eg_chaö
[
ö°
 + 1].
¥ed
;

218 
	`mpö°_c€xi°s
(
ö°
, 
br_ö°
);

221 
	}
}

222 
	$gëD°Ctx
(
˘x
, 
˘x_Àngth
, 
bbi_id
) {

223 *
numbîOfLo›
;

224 
l
 = 
numbîOfLo›
[
bbi_id
] - 1;

225 
l
 < 
˘x_Àngth
) {

226 
˘x
 = ctx >> 1;

227 
l
++;

229  
˘x
;

230 
	}
}

231 
	$add_ö°
(
ö°
) {

233 
	`¥ötf
("bbi_id:%d in°:0x%x ", 
eg_ö°s
[
ö°
]->
bbi_id
,

234 
eg_ö°s
[
ö°
]->ö°->
addr
);

235 i‡(
íabÀ_iˇche
) {

236 
	`¥ötf
(" icf:%d", 
eg_ö°s
[
ö°
]->
ic_Êag
);

237 i‡(
íabÀ_û2ˇche
 || 
íabÀ_ul2ˇche
)

238 
	`¥ötf
(" icf2:%d", 
eg_ö°s
[
ö°
]->
ic_Êag_l2
);

240 i‡(
íabÀ_s˝_dˇche
) {

241 i‡(
eg_ö°s_ty≥
[
ö°
] =
INST_LOAD


242 || 
eg_ö°s_ty≥
[
ö°
] =
INST_STORE
) {

243 
	`¥ötf
(" dcf:%d", 
eg_ö°s
[
ö°
]->
dc_Êag
);

244 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
)

245 
	`¥ötf
(" dcf2:%d", 
eg_ö°s
[
ö°
]->
dc_Êag_l2
);

248 
	`¥ötf
("\n");

250 
°age
, 
fu
, 
lo
, 
hi
, 
ic_Êag
, 
bbi_id
, 
mblk_id
, 
mblk_id_l2
, 
ic_Êag_l2
,

251 
dc_Êag
, 
dc_Êag_l2
;

252 
egøph_node_t
 *
node
;

253 
lo›_t
 *
Õ
;

255 
ic_Êag
 = 
eg_ö°s
[
ö°
]->ic_flag;

256 
ic_Êag_l2
 = 
eg_ö°s
[
ö°
]->ic_flag_l2;

257 i‡((
ic_Êag
 !
IC_HIT
)

258 && (
ö°
 < 
∂og_Àn
 || in° >’log_À¿+ 
body_Àn
))) {

259 
bbi_id
 = 
eg_ö°s
[
ö°
]->bbi_id;

260 
mblk_id
 = 
eg_ö°s
[
ö°
]->mblk_id;

261 i‡(
íabÀ_iˇche
 == 0

262 || 
	`gë_mblk_hômiss
(
tcfg
[
bbi_id
], 
mblk_id
, 
body_lo›
Ë=
IC_HIT


264 
ic_Êag
 = 
IC_HIT
;

267 i‡((
ic_Êag_l2
 !
IC_HIT
)

268 && (
ö°
 < 
∂og_Àn
 || in° >’log_À¿+ 
body_Àn
))) {

269 
bbi_id
 = 
eg_ö°s
[
ö°
]->bbi_id;

270 
mblk_id_l2
 = 
eg_ö°s
[
ö°
]->mblk_id_l2;

272 i‡((
íabÀ_û2ˇche
 =0 || 
íabÀ_ul2ˇche
 == 0)

273 || 
	`gë_mblk_hômiss_l2
(
tcfg
[
bbi_id
], 
mblk_id_l2
, 
body_lo›
)

274 =
IC_HIT


276 
ic_Êag_l2
 = 
IC_HIT
;

279 
dc_Êag
 = 
eg_ö°s
[
ö°
]->dc_flag;

280 
dc_Êag_l2
 = 
eg_ö°s
[
ö°
]->dc_flag_l2;

282 
eg_ö°s_ty≥
[
ö°
] = 
	`ö°_ty≥
(
eg_ö°s
[inst]->inst);

283 i‡((
eg_ö°s_ty≥
[
ö°
] =
INST_LOAD
)

284 || (
eg_ö°s_ty≥
[
ö°
] =
INST_STORE
)) {

285 
eg_mem_ö°s
[
num_mem_ö°s
++] = 
ö°
;

288 
°age
 = 0; sègê< 
pùe_°ages
; stage++) {

289 
node
 = &
egøph
[
ö°
][
°age
];

290 
node
->
ö°
 = inst;

291 
node
->
°age
 = stage;

292 i‡((
°age
 =
STAGE_EX
)) {

293 
fu
 = 
	`ss_ö°_fu
(
eg_ö°s
[
ö°
]->inst);

294 
node
->
fu
 = fu;

297 i‡((
fu
 =
I¡ALU
Ë|| (fu =
RdP‹t
Ë|| (fu =
WrP‹t
)) {

298 
node
->
num_fu
 = 2;

300 
node
->
num_fu
 = 1;

301 
node
->
œt
.
hi
 = 
fu_œt
[
fu
].hi;

302 
node
->
œt
.
lo
 = 
fu_œt
[
fu
].lo;

303 } i‡(
°age
 =
STAGE_IF
) {

304 
node
->
fu
 =Çode->
num_fu
 = 0;

305 i‡(
ic_Êag
 =
IC_HIT
) {

306 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 1;

307 } i‡(
ic_Êag
 =
IC_MISS
) {

308 i‡(
ic_Êag_l2
 =
IC_HIT
) {

309 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 
ˇche
.
cmp
 + 1;

310 } i‡(
ic_Êag_l2
 =
IC_MISS
) {

311 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 
ˇche
.
cmp
 + 
ˇche_l2
.cmp + 1;

313 
node
->
œt
.
lo
 = 
ˇche
.
cmp
 + 1;

314 
node
->
œt
.
hi
 = 
ˇche
.
cmp
 + 
ˇche_l2
.cmp + 1;

317 
node
->
œt
.
lo
 = 1;

318 i‡(
ic_Êag_l2
 =
IC_HIT
) {

319 
node
->
œt
.
hi
 = 
ˇche
.
cmp
 + 1;

321 
node
->
œt
.
hi
 = 
ˇche
.
cmp
 + 
ˇche_l2
.cmp + 1;

325 
	`¥ötf
("\tbbi:%d in°:0x%x IF=[%d,%d]\n", 
eg_ö°s
[
ö°
]->
bbi_id
,

326 
eg_ö°s
[
ö°
]->ö°->
addr
, 
node
->
œt
.
lo
,Çode->œt.
hi
);

329 } i‡(
°age
 =
STAGE_WB
) {

330 
node
->
fu
 =Çode->
num_fu
 = 0;

331 
node
->
œt
.
hi
 =Çode->œt.
lo
 = 1;

332 i‡(
íabÀ_s˝_dˇche
) {

333 i‡(
dc_Êag
 =
DC_STORE
) {

334 
node
->
œt
.
lo
 = 
mem_œt
[0];

335 
node
->
œt
.
hi
 = 
ˇche_dl1_œt
 + 
mem_œt
[0];

336 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

337 i‡(
dc_Êag_l2
 =
DC_STORE
) {

338 
node
->
œt
.
hi
 = 
ˇche_dl1_œt
 + 
ˇche_dl2_œt


339 + 
mem_œt
[0];

342 } i‡(
dc_Êag
 =
DC_HIT
) {

343 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 
ˇche_dl1_œt
;

344 } i‡(
dc_Êag
 =
DC_MISS
) {

345 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 
ˇche_dl1_œt
 + 
mem_œt
[0];

346 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

347 i‡(
dc_Êag_l2
 =
DC_HIT
) {

348 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 
ˇche_dl1_œt


349 + 
ˇche_dl2_œt
;

350 } i‡(
dc_Êag_l2
 =
DC_MISS
) {

351 
node
->
œt
.
lo
 =Çode->œt.
hi
 = 
ˇche_dl1_œt


352 + 
ˇche_dl2_œt
 + 
mem_œt
[0];

353 } i‡(
dc_Êag_l2
 =
DC_UNCLEAR
) {

354 
node
->
œt
.
lo
 = 
ˇche_dl1_œt
 + 
ˇche_dl2_œt
;

355 
node
->
œt
.
hi
 = 
ˇche_dl1_œt
 + 
ˇche_dl2_œt


356 + 
mem_œt
[0];

359 } i‡(
dc_Êag
 =
DC_UNCLEAR
) {

360 
node
->
œt
.
lo
 = 
ˇche_dl1_œt
;

361 
node
->
œt
.
hi
 = 
ˇche_dl1_œt
 + 
mem_œt
[0];

362 i‡(
íabÀ_s˝_dl2ˇche
 || 
íabÀ_ul2ˇche
) {

363 i‡(
dc_Êag_l2
 =
DC_HIT
) {

364 
node
->
œt
.
hi
 = 
ˇche_dl1_œt
 + 
ˇche_dl2_œt
;

366 
node
->
œt
.
hi
 = 
ˇche_dl1_œt
 + 
ˇche_dl2_œt


367 + 
mem_œt
[0];

373 i‡((
eg_ö°s_ty≥
[
ö°
] =
INST_LOAD
)

374 || (
eg_ö°s_ty≥
[
ö°
] =
INST_STORE
)) {

375 
	`¥ötf
("\tbbi:%d in°:0x%x WB=[%d,%d]\n", 
eg_ö°s
[
ö°
]->
bbi_id
,

376 
eg_ö°s
[
ö°
]->ö°->
addr
, 
node
->
œt
.
lo
,Çode->œt.
hi
);

395 
node
->
fu
 =Çode->
num_fu
 = 0;

396 
node
->
œt
.
hi
 =Çode->œt.
lo
 = 1;

398 
node
->
bp_ty≥
 = 
eg_ö°s
[
ö°
]->
bp_Êag
;

399 
node
->
Êag
 = 0;

400 
node
->
ö
 =Çode->
out
 = 
NULL
;

401 
node
->
e_c⁄td
 =Çode->
l_c⁄td
 = 
NULL
;

403 
	}
}

516 
	$√w_dïíd
(
egøph_node_t
 *
§c
,Égøph_node_à*
d°
, 
low
,

517 
high
, 
n‹mÆ
) {

518 
egøph_edge_t
 *
edge
;

520 
edge
 = &
egøph_edges
[
num_eg_edges
];

521 
num_eg_edges
++;

523 
edge
->
§c
 = src;

524 
edge
->
d°
 = dst;

525 
edge
->
œt
.
lo
 = 
low
;

526 
edge
->
œt
.
hi
 = 
high
;

527 
edge
->
√xt_out
 = 
§c
->
out
;

528 
§c
->
out
 = 
edge
;

529 
edge
->
√xt_ö
 = 
d°
->
ö
;

530 
d°
->
ö
 = 
edge
;

531 
edge
->
n‹mÆ
 =Çormal;

532 
edge
->
c⁄td_ty≥
 = 0;

533 
	}
}

535 
	$°age_‹dî_dïíds
() {

536 
ö°
, 
°age
;

537 
egøph_node_t
 *
§c
, *
d°
;

539 
ö°
 = 0; in° < 
eg_Àn
; inst++) {

540 
°age
 = 0; sègê< 
pùe_°ages
 - 1; stage++) {

541 
§c
 = &
egøph
[
ö°
][
°age
];

542 
d°
 = &
egøph
[
ö°
][
°age
 + 1];

543 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

546 
	}
}

548 
	$succ_„tch_dïíds
(
ö°
) {

549 
succ
, 
edge_ty≥
, 
lo
, 
hi
;

550 
egøph_node_t
 *
§c
, *
d°
;

552 
succ
 = 
eg_chaö
[
ö°
].succ;

553 i‡(
succ
 < 0)

556 
§c
 = &
egøph
[
ö°
][
STAGE_IF
];

558 i‡((
„tch_width
 =1Ë|| (
eg_ö°s
[
ö°
]->
ic_Êag
 =
IC_MISS
)) {

559 
lo
 = 
§c
->
œt
.lo;

560 
hi
 = 
§c
->
œt
.hi;

561 } i‡(
eg_ö°s
[
ö°
]->
ic_Êag
 =
IC_UNCLEAR
) {

562 
lo
 = 0;

563 
hi
 = 
§c
->
œt
.hi;

565 
lo
 = 
hi
 = 0;

569 
d°
 = &
egøph
[
succ
][
STAGE_IF
];

570 
	`√w_dïíd
(
§c
, 
d°
, 
lo
, 
hi
, 
EG_NORM_EDGE
);

571 i‡(
succ
 =(
ö°
 + 1))

574 
d°
 = &
egøph
[
ö°
 + 1][
STAGE_IF
];

575 
	`√w_dïíd
(
§c
, 
d°
, 
lo
, 
hi
, 
EG_NORM_EDGE
);

577 
	}
}

579 
	$succ_decode_dïíds
(
ö°
) {

580 
succ
, 
edge_ty≥
, 
lo
, 
hi
;

581 
egøph_node_t
 *
§c
, *
d°
;

583 
succ
 = 
eg_chaö
[
ö°
].succ;

584 i‡(
succ
 < 0)

587 
§c
 = &
egøph
[
ö°
][
STAGE_ID
];

589 
d°
 = &
egøph
[
succ
][
STAGE_ID
];

590 i‡(
ruu_decode_width
 == 1)

591 
lo
 = 
hi
 = 1;

593 
lo
 = 
hi
 = 0;

594 
	`√w_dïíd
(
§c
, 
d°
, 
lo
, 
hi
, 
EG_NORM_EDGE
);

595 i‡(
succ
 =(
ö°
 + 1))

598 
d°
 = &
egøph
[
ö°
 + 1][
STAGE_ID
];

599 
	`√w_dïíd
(
§c
, 
d°
, 
lo
, 
hi
, 
EG_NORM_EDGE
);

600 
	}
}

603 
	$succ_issue_dïíds
(
ö°
) {

604 
succ
, 
edge_ty≥
, 
fu
;

605 
egøph_node_t
 *
§c
, *
d°
;

607 
succ
 = 
eg_chaö
[
ö°
].succ;

608 i‡(
succ
 < 0)

611 
fu
 = 
	`ss_ö°_fu
(
eg_ö°s
[
ö°
]->inst);

612 i‡((
fu
 =
RdP‹t
Ë|| (fu =
WrP‹t
))

613 
§c
 = &
egøph
[
ö°
][
STAGE_WB
];

615 
§c
 = &
egøph
[
ö°
][
STAGE_EX
];

617 
d°
 = &
egøph
[
succ
][
STAGE_ID
];

618 
	`√w_dïíd
(
§c
, 
d°
, 0, 0, 
EG_NORM_EDGE
);

619 i‡(
succ
 =(
ö°
 + 1))

622 
d°
 = &
egøph
[
ö°
 + 1][
STAGE_ID
];

623 
	`√w_dïíd
(
§c
, 
d°
, 0, 0, 
EG_NORM_EDGE
);

624 
	}
}

626 
	$succ_commô_dïíds
(
ö°
) {

627 
succ
, 
lo
, 
hi
;

628 
egøph_node_t
 *
§c
, *
d°
;

630 
succ
 = 
eg_chaö
[
ö°
].succ;

631 i‡(
succ
 < 0)

634 i‡(
ruu_commô_width
 == 1)

635 
lo
 = 
hi
 = 1;

637 
lo
 = 
hi
 = 0;

638 
§c
 = &
egøph
[
ö°
][
STAGE_CM
];

639 
d°
 = &
egøph
[
succ
][
STAGE_CM
];

640 
	`√w_dïíd
(
§c
, 
d°
, 
lo
, 
hi
, 
EG_NORM_EDGE
);

641 
	}
}

643 
	$„tch_width_dïíds_n
(
ö°
, 
succ
) {

644 
i
, 
succ1
, 
èg£t0
, 
èg£t
;

645 
egøph_node_t
 *
§c
, *
d°
;

648 
§c
 = &
egøph
[
ö°
][
STAGE_IF
];

649 
èg£t0
 = 
	`TAGSET
(
eg_ö°s
[
ö°
]->ö°->
addr
);

652 
succ1
 = 
ö°
;

653 
i
 = 0; i < 
„tch_width
; i++) {

654 
succ1
 = 
eg_chaö
[succ1].
succ
;

655 
èg£t
 = 
	`TAGSET
(
eg_ö°s
[
succ1
]->
ö°
->
addr
);

656 i‡(
èg£t0
 !
èg£t
)

659 
d°
 = &
egøph
[
succ1
][
STAGE_IF
];

660 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

661 
	}
}

663 
	$„tch_width_dïíds_m
(
ö°
) {

664 
succ
 = 
ö°
 + 
„tch_width
, 
èg£t0
, 
èg£t
;

665 
egøph_node_t
 *
§c
, *
d°
;

667 i‡(
eg_ö°s
[
succ
]->
bp_Êag
 =
BP_CPRED


671 
§c
 = &
egøph
[
ö°
][
STAGE_IF
];

672 
èg£t0
 = 
	`TAGSET
(
eg_ö°s
[
ö°
]->ö°->
addr
);

673 
succ
 = 
ö°
 + 1; suc¯< in° + 
„tch_width
; succ++) {

674 
èg£t
 = 
	`TAGSET
(
eg_ö°s
[
succ
]->
ö°
->
addr
);

675 i‡(
èg£t0
 !
èg£t
)

678 
d°
 = &
egøph
[
succ
][
STAGE_IF
];

679 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

680 
	}
}

682 
	$„tch_width_dïíds
(
ö°
, 
succ
) {

683 
	`„tch_width_dïíds_n
(
ö°
, 
succ
);

684 i‡((
eg_ö°s
[
ö°
]->
bp_Êag
 !
BP_CPRED
Ë|| (
succ
 =(ö° + 
„tch_width
)))

688 
	`„tch_width_dïíds_m
(
ö°
);

689 
	}
}

691 
	$decode_width_dïíds_n
(
ö°
, 
succ
) {

692 
egøph_node_t
 *
§c
, *
d°
;

694 
§c
 = &
egøph
[
ö°
][
STAGE_ID
];

695 
d°
 = &
egøph
[
succ
][
STAGE_ID
];

696 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

697 
	}
}

699 
	$decode_width_dïíds_m
(
ö°
) {

700 
succ
;

701 
egøph_node_t
 *
§c
, *
d°
;

703 
succ
 = 
ö°
 + 
ruu_decode_width
;

704 i‡(
eg_ö°s
[
succ
]->
bp_Êag
 =
BP_CPRED


707 
§c
 = &
egøph
[
ö°
][
STAGE_ID
];

708 
d°
 = &
egøph
[
succ
][
STAGE_ID
];

709 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

710 
	}
}

712 
	$decode_width_dïíds
(
ö°
, 
succ
) {

714 
	`decode_width_dïíds_n
(
ö°
, 
succ
);

715 i‡((
eg_ö°s
[
ö°
]->
bp_Êag
 !
BP_CPRED
)

716 || (
succ
 =(
ö°
 + 
ruu_decode_width
)))

720 
	`decode_width_dïíds_m
(
ö°
);

721 
	}
}

723 
	$issue_width_dïíds_n
(
ö°
, 
succ
) {

724 
egøph_node_t
 *
§c
, *
d°
;

726 
§c
 = &
egøph
[
ö°
][
STAGE_EX
];

727 
d°
 = &
egøph
[
succ
][
STAGE_EX
];

728 
	`√w_dïíd
(
§c
, 
d°
, 1, 1, 
EG_NORM_EDGE
);

729 
	}
}

731 
	$issue_width_dïíds_m
(
ö°
) {

732 
succ
;

733 
egøph_node_t
 *
§c
, *
d°
;

735 
succ
 = 
ö°
 + 
ruu_decode_width
;

736 i‡(
eg_ö°s
[
succ
]->
bp_Êag
 =
BP_CPRED


739 
§c
 = &
egøph
[
ö°
][
STAGE_EX
];

740 
d°
 = &
egøph
[
succ
][
STAGE_EX
];

741 
	`√w_dïíd
(
§c
, 
d°
, 1, 1, 
EG_NORM_EDGE
);

742 
	}
}

744 
	$issue_width_dïíds
(
ö°
, 
succ
) {

746 
	`issue_width_dïíds_n
(
ö°
, 
succ
);

747 i‡((
eg_ö°s
[
ö°
]->
bp_Êag
 !
BP_CPRED
)

748 || (
succ
 =(
ö°
 + 
ruu_issue_width
)))

752 
	`issue_width_dïíds_m
(
ö°
);

753 
	}
}

755 
	$commô_width_dïíds
(
ö°
, 
succ
) {

756 
egøph_node_t
 *
§c
, *
d°
;

758 
§c
 = &
egøph
[
ö°
][
STAGE_CM
];

759 
d°
 = &
egøph
[
succ
][
STAGE_CM
];

760 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

761 
	}
}

763 
	$ö‹dî_dïíds
() {

764 
i
, 
ö°
, 
succ
, 
msucc
;

766 
ö°
 = 0; in° < 
eg_Àn
 - 1; inst++) {

768 
	`succ_„tch_dïíds
(
ö°
);

769 
	`succ_decode_dïíds
(
ö°
);

770 
	`succ_commô_dïíds
(
ö°
);

771 i‡(
ruu_ö‹dî_issue
 =
TRUE


773 
	`succ_issue_dïíds
(
ö°
);

775 i‡(
„tch_width
 == 1)

778 
succ
 = 0;

779 
i
 = 0; i < 
„tch_width
; i++)

780 
succ
 = 
eg_chaö
[succ].succ;

782 
ö°
 = 0; in° < 
eg_Àn
 - 
„tch_width
; inst++) {

783 i‡(
succ
 < 0)

786 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
) {

787 
	`„tch_width_dïíds
(
ö°
, 
succ
);

788 
	`decode_width_dïíds
(
ö°
, 
succ
);

789 
	`commô_width_dïíds
(
ö°
, 
succ
);

790 
succ
 = 
eg_chaö
[succ].succ;

792 
msucc
 = 
eg_chaö
[
ö°
 - 1].
succ
 - 
„tch_width
;

793 
ö°
 < 
msucc
) {

794 
	`„tch_width_dïíds_m
(
ö°
);

795 
	`decode_width_dïíds_m
(
ö°
);

796 
ö°
++;

798 
ö°
 = 
msucc
 + 
„tch_width
 - 1;

801 i‡(
ö°
 < 
eg_Àn
 - 
„tch_width
) {

802 ; 
ö°
 < 
eg_Àn
 - 
„tch_width
; inst++) {

803 
	`„tch_width_dïíds_m
(
ö°
);

804 
	`decode_width_dïíds_m
(
ö°
);

807 
	}
}

811 
	$ibuf_n‹mÆ_dïíds
(
ö°
, 
succ
) {

812 
egøph_node_t
 *
§c
, *
d°
;

815 
§c
 = &
egøph
[
ö°
][
STAGE_ID
];

816 
d°
 = &
egøph
[
succ
][
STAGE_IF
];

817 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

818 i‡((
§c
->
bp_ty≥
 !
BP_CPRED
Ë|| (
succ
 =(
ö°
 + 
ruu_ifq_size
)))

822 
succ
 = 
ö°
 + 
ruu_ifq_size
;

823 i‡(
succ
 >
eg_chaö
[
ö°
].succ)

825 
d°
 = &
egøph
[
succ
][
STAGE_IF
];

826 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

827 
	}
}

829 
	$ibuf_m¥ed_dïíds
(
ö°
, 
succ
) {

830 
egøph_node_t
 *
§c
, *
d°
;

832 
§c
 = &
egøph
[
ö°
][
STAGE_ID
];

833 
d°
 = &
egøph
[
succ
][
STAGE_IF
];

834 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

835 
	}
}

840 
	$fifo_ibuf_dïíds
() {

841 
i
, 
ö°
, 
succ
, 
msucc
;

843 
succ
 = 0;

844 
i
 = 0; i < 
ruu_ifq_size
; i++)

845 
succ
 = 
eg_chaö
[succ].succ;

847 
ö°
 = 0; in° < 
eg_Àn
 - 
ruu_ifq_size
; inst++) {

848 i‡(
succ
 < 0)

850 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED
) {

851 
	`ibuf_n‹mÆ_dïíds
(
ö°
, 
succ
);

852 
succ
 = 
eg_chaö
[succ].succ;

854 
msucc
 = 
eg_chaö
[
ö°
 - 1].
succ
 - 
ruu_ifq_size
;

855 
ö°
 < 
msucc
) {

856 
	`ibuf_m¥ed_dïíds
(
ö°
, in° + 
ruu_ifq_size
);

857 
ö°
++;

859 
ö°
 = 
msucc
 + 
ruu_ifq_size
 - 1;

862 i‡(
ö°
 < 
eg_Àn
 - 
ruu_ifq_size
) {

863 ; 
ö°
 < 
eg_Àn
 - 
ruu_ifq_size
; inst++) {

864 
succ
 = 
ö°
 + 
ruu_ifq_size
;

865 i‡(
eg_ö°s
[
succ
]->
bp_Êag
 =
BP_CPRED


868 i‡(
eg_ö°s
[
ö°
]->
bp_Êag
 =
BP_CPRED


870 
	`ibuf_n‹mÆ_dïíds
(
ö°
, 
succ
);

872 
	`ibuf_m¥ed_dïíds
(
ö°
, 
succ
);

875 
	}
}

877 
	$rob_dïíds
(
ö°
, 
succ
) {

878 
egøph_node_t
 *
§c
, *
d°
;

880 
§c
 = &
egøph
[
ö°
][
STAGE_CM
];

881 
d°
 = &
egøph
[
succ
][
STAGE_ID
];

882 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

883 
	}
}

888 
	$fifo_rob_dïíds
() {

889 
i
, 
ö°
, 
succ
;

891 i‡(
eg_Àn
 <
RUU_size
)

893 
succ
 = 0;

894 
i
 = 0; i < 
RUU_size
; i++) {

895 
succ
 = 
eg_chaö
[succ].succ;

896 i‡(
succ
 < 0)

899 
ö°
 = 0; (ö° >0Ë&& (
succ
 >0); in° = 
eg_chaö
[inst].succ) {

900 
	`rob_dïíds
(
ö°
, 
succ
);

901 
succ
 = 
eg_chaö
[succ].succ;

903 
	}
}

906 
	$m¨k_d©a_dï
(
§c_id
, 
d°_id
) {

907 
ö°
, 
lbound
;

909 i‡(
§c_id
 < 
c€xi°
[
d°_id
].
lo
)

912 
d©a_dï
[
d°_id
][d°_id - 
§c_id
] = 1;

914 
lbound
 = 
	`max
(0, 
c€xi°
[
d°_id
].
lo
);

915 
ö°
 = 
eg_chaö
[
§c_id
].
¥ed
; in° >
c€xi°
[
d°_id
].
lo
; inst =

916 
eg_chaö
[
ö°
].
¥ed
) {

917 i‡(
d©a_dï
[
§c_id
][§c_id - 
ö°
])

918 
d©a_dï
[
d°_id
][d°_id - 
ö°
] = 1;

920 
	}
}

922 
	$¸óã_b¥ed_dïíd
(
§c_id
, 
d°_id
, 
n‹mÆ
) {

923 
lo
, 
hi
;

924 
egøph_node_t
 *
§c
, *
d°
;

926 
§c
 = &
egøph
[
§c_id
][
STAGE_WB
];

927 
d°
 = &
egøph
[
d°_id
][
STAGE_IF
];

928 
lo
 = 
ruu_bønch_≥«…y
 + 
§c
->
œt
.lo;

929 
hi
 = 
ruu_bønch_≥«…y
 + 
§c
->
œt
.hi;

930 
	`√w_dïíd
(
§c
, 
d°
, 
lo
, 
hi
, 
n‹mÆ
);

931 
	}
}

933 
	$¸óã_d©a_dïíd
(
§c_id
, 
d°_id
, 
n‹mÆ
) {

934 
egøph_node_t
 *
§c
, *
d°
;

936 i‡((
eg_ö°s_ty≥
[
§c_id
] =
INST_ICOMP
)

937 || (
eg_ö°s_ty≥
[
§c_id
] =
INST_FCOMP
))

938 
§c
 = &
egøph
[
§c_id
][
STAGE_EX
];

939 i‡(
eg_ö°s_ty≥
[
§c_id
] =
INST_LOAD
)

940 
§c
 = &
egøph
[
§c_id
][
STAGE_WB
];

943 
d°
 = &
egøph
[
d°_id
][
STAGE_EX
];

944 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
n‹mÆ
);

945 
	`m¨k_d©a_dï
(
§c_id
, 
d°_id
);

946 
	}
}

948 
	$d©a_dïíds
() {

949 
i
, 
j
, 
r
, 
br_ö°
, 
bp_Êag
, 
§c_id
;

950 
ªgs
[
MD_TOTAL_REGS
], 
mp_ªgs
[MD_TOTAL_REGS];

951 
de_ö°_t
 *
ö°
;

953 
i
 = 0; i < 
MD_TOTAL_REGS
; i++) {

954 
ªgs
[
i
] = 
mp_ªgs
[i] = -1;

957 
bp_Êag
 = 
eg_ö°s
[0]->bp_flag;

958 
ö°
 = 
eg_ö°s
[0]->inst;

960 
j
 = 0; j < 
ö°
->
num_out
; j++) {

961 
r
 = 
ö°
->
out
[
j
];

962 
ªgs
[
r
] = 0;

964 i‡(
eg_ö°s_ty≥
[0] =
INST_COND
)

965 
	`¸óã_b¥ed_dïíd
(0, 
eg_chaö
[0].
succ
, 
EG_COND_EDGE
);

967 
i
 = 1; i < 
eg_Àn
; i++) {

968 
ö°
 = 
eg_ö°s
[
i
]->inst;

969 
bp_Êag
 = 
eg_ö°s
[
i
]->bp_flag;

971 
j
 = 0; j < 
ö°
->
num_ö
; j++) {

972 
r
 = 
ö°
->
ö
[
j
];

973 i‡((
bp_Êag
 !
BP_CPRED
Ë&& (
mp_ªgs
[
r
] > 
br_ö°
))

974 
§c_id
 = 
mp_ªgs
[
r
];

976 
§c_id
 = 
ªgs
[
r
];

978 i‡(
§c_id
 >
c€xi°
[
i
].
lo
)

979 
	`¸óã_d©a_dïíd
(
§c_id
, 
i
, 
EG_NORM_EDGE
);

982 
j
 = 0; j < 
ö°
->
num_out
; j++) {

983 
r
 = 
ö°
->
out
[
j
];

984 i‡(
bp_Êag
 =
BP_CPRED


986 
ªgs
[
r
] = 
i
;

988 
mp_ªgs
[
r
] = 
i
;

990 i‡(
eg_ö°s_ty≥
[
i
] !
INST_COND
)

992 i‡(
eg_chaö
[
i
].
succ
 < 0)

995 i‡(
eg_chaö
[
i
].
succ
 =
∂og_Àn
) {

996 i‡(
b¥ed_ty≥
 =
BP_MPRED
) {

997 
	`¸óã_b¥ed_dïíd
(
i
, 
eg_chaö
[i].
succ
, 
EG_NORM_EDGE
);

998 
	`m¨k_d©a_dï
(
i
, 
eg_chaö
[i].
succ
);

1001 
	`¸óã_b¥ed_dïíd
(
i
, 
eg_chaö
[i].
succ
, 
EG_COND_EDGE
);

1004 
	}
}

1006 
	$lﬂd_waô_°‹e
() {

1007 
i
, 
j
, 
ty≥
;

1008 
de_ö°_t
 *
ö°
;

1009 
egøph_node_t
 *
§c
, *
d°
;

1011 
i
 = 1; i < 
num_mem_ö°s
; i++) {

1012 i‡(
eg_ö°s_ty≥
[
eg_mem_ö°s
[
i
]] =
INST_STORE
)

1014 
d°
 = &
egøph
[
eg_mem_ö°s
[
i
]][
STAGE_WB
];

1015 
j
 = 
i
 - 1; j >= 0; j--) {

1016 i‡(
eg_mem_ö°s
[
j
] < 
c€xi°
[
i
].
lo
)

1018 i‡(
eg_ö°s_ty≥
[
eg_mem_ö°s
[
j
]] =
INST_STORE
) {

1019 
§c
 = &
egøph
[
eg_mem_ö°s
[
j
]][
STAGE_EX
];

1020 
	`√w_dïíd
(
§c
, 
d°
, src->
œt
.
lo
, src->œt.
hi
, 
EG_NORM_EDGE
);

1024 
	}
}

1026 
	$buûd_dïíds
() {

1027 
	`°age_‹dî_dïíds
();

1029 
	`ö‹dî_dïíds
();

1031 
	`fifo_ibuf_dïíds
();

1032 
	`fifo_rob_dïíds
();

1034 
	`d©a_dïíds
();

1037 
	`lﬂd_waô_°‹e
();

1038 
	}
}

1040 
	$ªady_óæõr
(
ö°1
, 
ö°2
) {

1041 
egøph_node_t
 *
v1
, *
v2
;

1042 
egøph_edge_t
 *
e1
, *
e2
;

1043 
óæõr
 = 1, 
num_dïs
 = 0;

1045 i‡(
ö°1
 > 
ö°2
)

1047 i‡(
ö°1
 =
ö°2
)

1049 i‡(
c€xi°
[
ö°2
].
lo
 >
ö°1
)

1051 i‡(
d©a_dï
[
ö°2
][ö°2 - 
ö°1
])

1054 
v1
 = &
egøph
[
ö°1
][
STAGE_EX
];

1055 
v2
 = &
egøph
[
ö°2
][
STAGE_EX
];

1056 i‡(
fu2pfu
[
v1
->
fu
] !fu2pfu[
v2
->fu]) {

1057 
e2
 = 
v2
->
ö
;É2 !
NULL
;É2 =É2->
√xt_ö
) {

1058 i‡((
e2
->
§c
->
°age
 !
STAGE_EX
Ë&& (e2->§c->°agê!
STAGE_WB
))

1060 
óæõr
 = 
	`ªady_óæõr
(
ö°1
, 
e2
->
§c
->
ö°
);

1061 i‡(
óæõr
)

1064  
óæõr
;

1067 
e1
 = 
v1
->
ö
;É1 !
NULL
;É1 =É1->
√xt_ö
) {

1068 i‡((
e1
->
§c
->
°age
 !
STAGE_EX
Ë&& (e1->§c->°agê!
STAGE_WB
))

1070 
num_dïs
++;

1071 
e2
 = 
v2
->
ö
;É2 !
NULL
;É2 =É2->
√xt_ö
) {

1072 i‡((
e2
->
§c
->
°age
 !
STAGE_EX
Ë&& (e2->§c->°agê!
STAGE_WB
))

1074 
óæõr
 = 
	`ªady_óæõr
(
e1
->
§c
->
ö°
, 
e2
->src->inst);

1075 i‡(
óæõr
)

1078 i‡(!
óæõr
)

1081 i‡((
c€xi°
[
ö°2
].
lo
 =0Ë&& (
num_dïs
 < 2))

1084  
óæõr
;

1085 
	}
}

1087 
	$dñay_ty≥
(
egøph_edge_t
 *
˚
) {

1088 
óæõr
;

1090 
óæõr
 = 
	`ªady_óæõr
(
˚
->
§c
->
ö°
, ce->
d°
->inst);

1091 i‡(
óæõr
)

1092  
UNI_DELAY
;

1094  
BI_DELAY
;

1095 
	}
}

1097 
	$√w_c⁄ãnd
(
egøph_node_t
 *
§c
,Égøph_node_à*
d°
, 
n‹mÆ
) {

1098 
egøph_edge_t
 *
edge
;

1100 
edge
 = &
egøph_edges
[
num_eg_edges
];

1101 
num_eg_edges
++;

1103 
edge
->
§c
 = src;

1104 
edge
->
d°
 = dst;

1105 
edge
->
√xt_out
 = 
§c
->
l_c⁄td
;

1106 
§c
->
l_c⁄td
 = 
edge
;

1107 
edge
->
√xt_ö
 = 
d°
->
e_c⁄td
;

1108 
d°
->
e_c⁄td
 = 
edge
;

1113 i‡((
eg_ö°s
[
d°
->
ö°
]->
bp_Êag
 =
BP_UNCLEAR
)

1114 && (
eg_ö°s
[
§c
->
ö°
]->
bp_Êag
 =
BP_CPRED
))

1115 
n‹mÆ
 = 
EG_COND_EDGE
;

1116 
edge
->
n‹mÆ
 =Çormal;

1119 i‡(
edge
->
d°
->
œt
.
hi
 <= 1)

1120 
edge
->
c⁄td_ty≥
 = 
UNI_DELAY
;

1122 
edge
->
c⁄td_ty≥
 = 
	`dñay_ty≥
(edge);

1123 
	}
}

1125 
	$ö°_c⁄ãnds
(
cuº
) {

1126 
ö°
, 
n‹mÆ
;

1127 
egøph_node_t
 *
§c
, *
d°
;

1129 
d°
 = &
egøph
[
cuº
][
STAGE_EX
];

1130 
ö°
 = 
eg_chaö
[
cuº
].
¥ed
; inst >= 0; inst =Ég_chain[inst].pred) {

1131 i‡(
c€xi°
[
cuº
].
lo
 > 
ö°
)

1133 i‡(
d©a_dï
[
cuº
][cuº - 
ö°
] =
EG_DEP_NORM
)

1135 i‡(
d©a_dï
[
cuº
][cuº - 
ö°
] =
EG_DEP_COND
)

1136 
n‹mÆ
 = 
EG_COND_EDGE
;

1138 
n‹mÆ
 = 
EG_NORM_EDGE
;

1139 
§c
 = &
egøph
[
ö°
][
STAGE_EX
];

1140 i‡(
fu2pfu
[
§c
->
fu
] =fu2pfu[
d°
->fu])

1141 
	`√w_c⁄ãnd
(
§c
, 
d°
, 
n‹mÆ
);

1142 i‡(((
§c
->
fu
 =
I¡ALU
Ë|| (§c->fu =
RdP‹t
)

1143 || (
§c
->
fu
 =
WrP‹t
))

1144 && (
d°
->
fu
 =
I¡ALU
 || (d°->fu =
RdP‹t
)

1145 || (
d°
->
fu
 =
WrP‹t
))) {

1147 
	`√w_c⁄ãnd
(
§c
, 
d°
, 
n‹mÆ
);

1150 
	}
}

1152 
	$buûd_c⁄ãnds
() {

1153 
ö°
;

1155 
ö°
 = 1; in° < 
eg_Àn
; inst++)

1156 
	`ö°_c⁄ãnds
(
ö°
);

1157 
	}
}

1159 
	$¸óã_egøph_ss
() {

1160 
i
;

1161 
fú°
 = 1;

1163 i‡(
fú°
) {

1164 
	`ss_Æloc_mem
();

1165 
fú°
 = 0;

1167 
num_eg_edges
 = 0;

1168 
num_mem_ö°s
 = 0;

1169 
	`sˇn_¥ed
();

1170 
	`sˇn_c€xi°s
();

1171 
i
 = 0; i < 
eg_Àn
; i++)

1172 
	`add_ö°
(
i
);

1173 
	`Æloc_dï_mem
();

1174 
	`buûd_dïíds
();

1175 
	`buûd_c⁄ãnds
();

1176 
	`dóŒoc_dï_mem
();

1177 
	}
}

1179 
	$dump_c€xi°
(
fú°
, 
œ°
) {

1180 
i
;

1182 
i
 = 
fú°
; i < 
œ°
; i++)

1183 
	`¥ötf
("c€xi°[%d]/%d: [%d, %d]\n", 
i
, 
eg_ö°s
[i]->
bp_Êag
,

1184 
c€xi°
[
i
].
lo
, c€xi°[i].
hi
);

1185 
	}
}

1187 
	$dump_d©a_dï
() {

1188 
i
, 
j
;

1190 
	`¥ötf
("data dependences\n");

1191 
i
 = 1; i < 
eg_Àn
; i++) {

1192 
	`¥ötf
("%d(%x): ", 
i
, 
eg_ö°s
[i]->
ö°
->
addr
 & 0xffff);

1193 
j
;

1194 
j
 = 
c€xi°
[
i
].
lo
; j < i; j++)

1195 i‡(
d©a_dï
[
i
][ò- 
j
] != 0)

1196 
	`¥ötf
("%d(%xË", 
j
, 
eg_ö°s
[j]->
ö°
->
addr
 & 0xffff);

1197 
	`¥ötf
("\n");

1199 
	}
}

	@ss/ss_isa.c

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~"../comm⁄.h
"

27 
	~"../iß.h
"

28 
	~"ss_iß.h
"

29 
	~"machöe.h
"

33 
iß_t
 *
iß
;

34 
num_iß
;

45 *
	gmd_›2«me
[
OP_MAX
] = {

46 
NULL
,

47 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

48 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

49 
	#CONNECT
(
OP
)

	)

50 
	~"machöe.def
"

56 
	gmd_›2Êags
[
OP_MAX
] = {

57 
NA
,

58 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

59 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

60 
	#CONNECT
(
OP
)

	)

61 
	~"machöe.def
"

66 *
md_›2«me
[];

67 
md_›2Êags
[];

77 
	$öô_iß_ss
()

79 
i
, 
Àn
;

81 
num_iß
 = 
OP_MAX
 - 1;

83 
iß
 = (
iß_t
 *Ë
	`ˇŒoc
(
OP_MAX
 - 1, (isa_t));

84 
	`CHECK_MEM
(
iß
);

85 
i
 = 1; i < 
OP_MAX
 - 1; i++) {

86 
iß
[
i
].
›code
 = i;

87 i‡(
md_›2«me
[
i
] !
NULL
) {

88 
Àn
 = 
	`°æí
(
md_›2«me
[
i
]) + 1;

89 
iß
[
i
].
«me
 = (*Ë
	`mÆloc
(
Àn
);

90 
	`CHECK_MEM
(
iß
[
i
].
«me
);

91 
	`°r˝y
(
iß
[
i
].
«me
, 
md_›2«me
[i]);

93 i‡(
md_›2Êags
[
i
] & 
F_ICOMP
)

94 
iß
[
i
].
ty≥
 = 
INST_ICOMP
;

95 i‡(
md_›2Êags
[
i
] & 
F_FCOMP
)

96 
iß
[
i
].
ty≥
 = 
INST_FCOMP
;

97 i‡(
md_›2Êags
[
i
] & 
F_LOAD
)

98 
iß
[
i
].
ty≥
 = 
INST_LOAD
;

99 i‡(
md_›2Êags
[
i
] & 
F_STORE
)

100 
iß
[
i
].
ty≥
 = 
INST_STORE
;

101 i‡(
md_›2Êags
[
i
] & 
F_COND
)

102 
iß
[
i
].
ty≥
 = 
INST_COND
;

103 i‡(
md_›2Êags
[
i
] & 
F_CALL
)

104 
iß
[
i
].
ty≥
 = 
INST_CALL
;

105 i‡((
md_›2Êags
[
i
] & (
F_CTRL
|
F_UNCOND
|
F_DIRJMP
))

106 =(
F_CTRL
|
F_UNCOND
|
F_DIRJMP
))

107 
iß
[
i
].
ty≥
 = 
INST_UNCOND
;

108 i‡((
md_›2Êags
[
i
] & (
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
))

109 =(
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
))

110 
iß
[
i
].
ty≥
 = 
INST_RET
;

111 i‡(
md_›2Êags
[
i
] & 
F_TRAP
)

112 
iß
[
i
].
ty≥
 = 
INST_TRAP
;

114 
	`Ârötf
(
°dîr
, "%s: unidítifõd in°ru˘i⁄Åy≥!\n", 
iß
[
i
].
«me
);

115 
	`exô
(1);

118 
	}
}

124 
	$decode_ö°
(
de_ö°_t
 *
de_ö°
, 
md_ö°_t
 
ö°
)

126 
›
, 
ty≥
, 
off£t
, 
i
, 
ö¸
;

127 
ö
[3], 
out
[2];

128 
num_ö
 = 0, 
num_out
 = 0;

129 * 
ö°_f‹m©
;

130 
md_›code
 
m›
;

133 
	`MD_SET_OPCODE
(
m›
, 
ö°
);

134 
›
 = 
	`MD_OP_ENUM
(
m›
);

135 
de_ö°
->
›_íum
 = 
›
;

136 
de_ö°
->
size
 = (
md_ö°_t
);

137 
ty≥
 = 
iß
[
›
].type;

140 
ö°_f‹m©
 = 
	`MD_OP_FORMAT
(
›
);

144 *
ö°_f‹m©
) {

145 *
ö°_f‹m©
)

149 #ifde‡
_DEBUG


150 
	`¥ötf
("Immedüã vÆuê%d\n", 
IMM
);

152 
de_ö°
->
imm
 = 
IMM
;

155 #ifde‡
_DEBUG


156 
	`¥ötf
("Immedüã vÆuê%d\n", 
SHAMT
);

158 
de_ö°
->
imm
 = 
SHAMT
;

161 #ifde‡
_DEBUG


162 
	`¥ötf
("Immedüã vÆuê%u\n", 
UIMM
);

164 
de_ö°
->
imm
 = 
UIMM
;

167 #ifde‡
_DEBUG


168 
	`¥ötf
("Immedüã vÆuê%d\n", 
UIMM
);

170 
de_ö°
->
imm
 = 
UIMM
;

178 
ö°_f‹m©
++;

182 i‡(
ty≥
 =
INST_COND
) {

183 
off£t
 = (()(()(
ö°
.
b
 & 0xffff))) << 2;

184 
de_ö°
->
èrgë
 = de_ö°->
addr
 + (
md_ö°_t
Ë+ 
off£t
;

185 } i‡((
ty≥
 =
INST_UNCOND
Ë|| (ty≥ =
INST_CALL
)) {

186 
off£t
 = (
ö°
.
b
 & 0x3ffffff) << 2;

187 
de_ö°
->
èrgë
 = (de_ö°->
addr
 & 0xf0000000Ë| 
off£t
;

191 
›
) {

192 
	#DEFINST
(
OP
, 
MSK
, 
NAME
, 
FMT
, 
FU
, 
CLASS
, 
O1
,
O2
, 
IN1
, 
IN2
, 
IN3
Ë\

	)

193 
OP
: \

194 
ö
[0] = 
IN1
; in[1] = 
IN2
; in[2] = 
IN3
; \

195 
out
[0] = 
O1
; out[1] = 
O2
; \

197 
	~"machöe.def
"

198 #unde‡
DEFINST


200 
ö
[0] = in[1] = in[2] = 
NA
;

201 
out
[0] = out[1] = 
NA
;

203 
ö¸
 = 0;

204 
i
 = 0; i <= 2; i++) {

205 i‡(
ö
[
i
] !
NA
) {

206 
num_ö
++;

210 
ö¸
 = 0;

211 
i
 = 0; i <= 1; i++) {

212 i‡(
out
[
i
] !
NA
) {

213 
num_out
++;

217 if(!
	`°rcmp
(
iß
[
›
].
«me
, "lb") || !strcmp(isa[op].name, "lh") ||

218 !
	`°rcmp
(
iß
[
›
].
«me
, "lw") || !strcmp(isa[op].name, "lhu") ||

219 !
	`°rcmp
(
iß
[
›
].
«me
, "lwl") || !strcmp(isa[op].name, "lwr") ||

220 !
	`°rcmp
(
iß
[
›
].
«me
, "l.d") || !strcmp(isa[op].name, "l.s"))

222 if(
ö
[2] !
NA
)

223 
num_ö
 = 2;

225 
num_ö
 = 1;

227 if(!
	`°rcmp
(
iß
[
›
].
«me
, "sb") || !strcmp(isa[op].name, "sh") ||

228 !
	`°rcmp
(
iß
[
›
].
«me
, "sw") || !strcmp(isa[op].name, "swl") ||

229 !
	`°rcmp
(
iß
[
›
].
«me
, "swr") || !strcmp(isa[op].name, "s.d") ||

230 !
	`°rcmp
(
iß
[
›
].
«me
, "s.s"))

232 if(
ö
[2] !
NA
)

233 
num_ö
 = 3;

235 
num_ö
 = 2;

238 
de_ö°
->
ö
 = (*Ë
	`ˇŒoc
(
num_ö
, ());

239 
	`CHECK_MEM
(
de_ö°
->
ö
);

240 
de_ö°
->
num_ö
 = 0;

241 if(!
	`°rcmp
(
iß
[
›
].
«me
, "lb") || !strcmp(isa[op].name, "lh") ||

242 !
	`°rcmp
(
iß
[
›
].
«me
, "lw") || !strcmp(isa[op].name, "lhu") ||

243 !
	`°rcmp
(
iß
[
›
].
«me
, "lwl") || !strcmp(isa[op].name, "lwr") ||

244 !
	`°rcmp
(
iß
[
›
].
«me
, "l.d") || !strcmp(isa[op].name, "l.s"))

246 
i
 = 0; i < 
num_ö
; i++)

247 
de_ö°
->
ö
[de_ö°->
num_ö
++] = in[
i
+1];

249 if(!
	`°rcmp
(
iß
[
›
].
«me
, "sb") || !strcmp(isa[op].name, "sh") ||

250 !
	`°rcmp
(
iß
[
›
].
«me
, "sw") || !strcmp(isa[op].name, "swl") ||

251 !
	`°rcmp
(
iß
[
›
].
«me
, "swr") || !strcmp(isa[op].name, "s.d") ||

252 !
	`°rcmp
(
iß
[
›
].
«me
, "s.s"))

254 
i
 = 0; i < 
num_ö
; i++)

255 
de_ö°
->
ö
[de_ö°->
num_ö
++] = in[
i
];

259 
i
 = 0; i <= 2; i++) {

261 
de_ö°
->
ö
[de_ö°->
num_ö
++] = in[
i
];

264 
de_ö°
->
out
 = (*Ë
	`ˇŒoc
(
num_out
, ());

265 
	`CHECK_MEM
(
de_ö°
->
out
);

266 
de_ö°
->
num_out
 = 0;

267 
i
 = 0; i <= 1; i++) {

269 
de_ö°
->
out
[de_ö°->
num_out
++] = out[
i
];

271 
	}
}

274 
	$ss_ö°_fu
(
de_ö°_t
 *
ö°
)

276  
	`MD_OP_FUCLASS
(
ö°
->
›_íum
);

277 
	}
}

281 
ønge_t
 
fu_œt
[];

283 
	$ss_max_ö°_œt
(
de_ö°_t
 *
ö°
)

285 
fu
;

287 
fu
 = 
	`ss_ö°_fu
(
ö°
);

288  
fu_œt
[
fu
].
hi
;

289 
	}
}

	@ss/ss_isa.h

22 #i‚de‡
ISA_SS_H


23 
	#ISA_SS_H


	)

31 
	#DNA
 (0)

	)

34 
	#DGPR
(
N
Ë(N)

	)

35 
	#DGPR_D
(
N
Ë((NË&~1)

	)

38 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

39 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

40 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

43 
	#DHI
 (0+32+32)

	)

44 
	#DLO
 (1+32+32)

	)

45 
	#DFCC
 (2+32+32)

	)

46 
	#DTMP
 (3+32+32)

	)

48 #ñi‡
deföed
(
TARGET_ALPHA
)

51 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

54 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

57 
	#DFPCR
 (0+32+32)

	)

58 
	#DUNIQ
 (1+32+32)

	)

59 
	#DTMP
 (2+32+32)

	)

	@ss/ss_machine.c

25 
	~"../comm⁄.h
"

26 
	~"ss_machöe.h
"

28 
pùe_ibuf_size
, 
pùe_iwö_size
;

34 
	gpfu_qu™t
[] = {

45 
ss_pfu_˛ass
 
	gfu2pfu
[] = {

46 
P_FUCœss_NA
,

47 
P_I¡ALU
,

48 
P_I¡_Mu…_Div
,

49 
P_I¡_Mu…_Div
,

50 
P_FP_Addî
,

51 
P_FP_Addî
,

52 
P_FP_Addî
,

53 
P_FP_Mu…_Div
,

54 
P_FP_Mu…_Div
,

55 
P_FP_Mu…_Div
,

56 
P_Mem_P‹t
,

57 
P_Mem_P‹t


79 
ønge_t
 
	gfu_œt
[] = {

98 
	$ö°_wö_size_ss
()

100  
pùe_ibuf_size
 + 
pùe_iwö_size
;

101 
	}
}

	@ss/ss_machine.h

22 #i‚de‡
SS_MACHINE_H


23 
	#SS_MaCHINE_H


	)

25 
	~"../comm⁄.h
"

28 íum { 
	mSTAGE_IF
, 
	mSTAGE_ID
, 
	mSTAGE_EX
, 
	mSTAGE_WB
, 
	mSTAGE_CM
 };

31 
	ess_pfu_˛ass
 {

32 
	mP_FUCœss_NA
 = 0,

33 
	mP_I¡ALU
,

34 
	mP_I¡_Mu…_Div
,

35 
	mP_Mem_P‹t
,

36 
	mP_FP_Addî
,

37 
	mP_FP_Mu…_Div
,

38 
	mNUM_PFU_CLASSES


	@ss/ss_readfile.c

22 
	~<°dio.h
>

23 
	~"ecoff.h
"

24 
	~"symbﬁ.h
"

25 
	~"../cfg.h
"

26 
	~"../comm⁄.h
"

30 
¥og_t
 
¥og
;

31 
addr_t
 *
	g¥ocs_addr
;

32 
	gnum_¥ocs
;

37 
	#TEXT_TAIL_PADDING
 128

	)

40 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

42 
	gld_ãxt_size
 = 0;

43 
	gãxt_íåy
;

44 
	gãxt_off£t
;

45 
sym_sym_t
 **
sym_ãxtsyms
;

46 
sym_¡extsyms
;

53 
	$is_lib_func
(*
func_«me
)

55 i‡((
	`°rcmp
(
func_«me
, "__do_global_dtors") == 0)

56 || (
	`°rcmp
(
func_«me
, "__libc_init") == 0))

60 
	}
}

69 
	$lookup_addr
(*
‚ame
)

71 
dbg
 = 0;

72 
i
, 
size
 = 0;

73 
max_num_v¨s
 = 16,
max_num_¥ocs
 = 16;

74 
sym_sym_t
 *
sym
;

76 
	`sym_lﬂdsyms
(
‚ame
, 1);

78 
¥og
.
°¨t_addr
 = 
sym_ãxtsyms
[0]->
addr
;

79 
¥ocs_addr
 = (
md_addr_t
 *Ë
	`ˇŒoc
(
max_num_¥ocs
, (md_addr_t));

80 
¥og
.
p_öfo
 = (
symbﬁ_i
 *Ë
	`ˇŒoc
(
max_num_¥ocs
,(symbol_i));

81 
i
=0; i < 
sym_¡extsyms
; i++) {

82 
sym
 = 
sym_ãxtsyms
[
i
];

83 i‡(
	`is_lib_func
(
sym
->
«me
))

85 i‡(
	`°rcmp
(
sym
->
«me
, "main") == 0)

86 
¥og
.
maö_addr
 = 
sym
->
addr
;

87 i‡(
num_¥ocs
 >
max_num_¥ocs
) {

88 
max_num_¥ocs
 *= 2;

89 
¥ocs_addr
 = (
md_addr_t
 *Ë
	`ªÆloc
(procs_addr,

90 
max_num_¥ocs
 * (
md_addr_t
));

92 
¥og
.
p_öfo
[
num_¥ocs
].
«me
 = 
sym
->name;

93 
¥og
.
p_öfo
[
num_¥ocs
].
addr
 = 
sym
->addr;

94 
¥og
.
p_öfo
[
num_¥ocs
].
size
 = 
sym
->size;

95 i‡(
dbg
Ë
	`¥ötf
("%†%08x %d\n",
sym
->
«me
,sym->
addr
,sym->
size
);

97 
¥ocs_addr
[
num_¥ocs
++] = 
sym
->
addr
;

98 
¥og
.
code_size
 +
sym
->
size
;

100 
¥og
.
íd_addr
 =Örog.
°¨t_addr
 +Örog.
code_size
;

102 
¥og
.
num_v¨s
=0;

103 
¥og
.
v_öfo
 = (
symbﬁ_i
 *Ë
	`ˇŒoc
(
max_num_v¨s
, (symbol_i));

104 
i
=0;i<
sym_nd©asyms
;i++) {

105 
sym
 = 
sym_d©asyms
[
i
];

106 i‡(
¥og
.
num_v¨s
 >
max_num_v¨s
) {

107 
max_num_v¨s
 *= 2;

108 
¥og
.
v_öfo
 = (
symbﬁ_i
*Ë
	`ªÆloc
’rog.v_öfo, 
max_num_v¨s
*(symbol_i));

110 
¥og
.
v_öfo
[¥og.
num_v¨s
].
«me
 = 
sym
->name;

111 
¥og
.
v_öfo
[¥og.
num_v¨s
].
addr
 = 
sym
->addr;

112 i‡(
i
<
sym_nd©asyms
-1) {

113 
¥og
.
v_öfo
[¥og.
num_v¨s
].
size
 = 
sym_d©asyms
[
i
+1]->
addr
-
sym
->addr;

116 
¥og
.
v_öfo
[¥og.
num_v¨s
].
size
 = 0;

118 i‡(
dbg
Ë
	`¥ötf
("%†%08x %d\n",
¥og
.
v_öfo
[¥og.
num_v¨s
].
«me
,¥og.v_öfo[¥og.num_v¨s].
addr
,¥og.v_öfo[¥og.num_v¨s].
size
);

119 
¥og
.
num_v¨s
++;

121 
	}
}

127 
	$ªad_ãxt_hód
(
FILE
 *
Â
)

129 
pos
;

130 
ecoff_fûehdr
 
fhdr
;

131 
ecoff_aouthdr
 
ahdr
;

132 
ecoff_s˙hdr
 
shdr
;

133 
ãxt_size
;

134 
i
;

135 
md_›code
 
›
;

137 
	`md_öô_decodî
();

140 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

141 
	`‰ód
(&
fhdr
, (fhdr), 1, 
Â
);

142 
	`‰ód
(&
ahdr
, ◊hdr), 1, 
Â
);

143 
i
=0; i<
fhdr
.
f_ns˙s
; i++) {

144 
	`‰ód
(&
shdr
, (shdr), 1, 
Â
);

145 i‡(
shdr
.
s_Êags
 !
ECOFF_STYP_TEXT
)

147 
ãxt_size
 = 
shdr
.
s_size
;

148 
ãxt_off£t
 = 
shdr
.
s_s˙±r
;

149 
ãxt_íåy
 = 
shdr
.
s_vaddr
;

150 
ld_ãxt_size
 = ((
shdr
.
s_vaddr
 + shdr.
s_size
Ë- 
MD_TEXT_BASE
)

151 + 
TEXT_TAIL_PADDING
;

153 
ãxt_off£t
 +
¥og
.
°¨t_addr
 - 
ãxt_íåy
;

154 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

155 
	}
}

162 
	$ªad_ö°
(
FILE
 *
Â
, 
addr_t
 
addr
, 
i
)

164 
md_ö°_t
 
ö°
;

165 
›
;

167 
	`‰ód
(&
ö°
, (ö°), 1, 
Â
);

168 
¥og
.
code
[
i
].
addr
 =áddr;

169 
¥og
.
code
[
i
].
size
 = (
md_ö°_t
);

170 
	`MD_SET_OPCODE
(
›
, 
ö°
);

171 
¥og
.
code
[
i
].
›_íum
 = 
	`MD_OP_ENUM
(
›
);

172 
	`decode_ö°
(&
¥og
.
code
[
i
], 
ö°
);

173 
	}
}

179 
	$ªad_code_ss
(*
‚ame
)

181 
FILE
 *
Â
;

182 
i
;

183 
addr_t
 
addr
;

185 
	`lookup_addr
(
‚ame
);

187 
Â
 = 
	`f›í
(
‚ame
, "r");

188 
	`ªad_ãxt_hód
(
Â
);

189 
¥og
.
num_ö°
 =Örog.
code_size
 / (
md_ö°_t
);

190 
¥og
.
code
 = (
de_ö°_t
 *Ë
	`ˇŒoc
’rog.
num_ö°
, (de_inst_t));

191 
	`CHECK_MEM
(
¥og
.
code
);

192 
addr
 = 
¥og
.
°¨t_addr
;

194 
	`f£ek
(
Â
, 
ãxt_off£t
, 
SEEK_SET
);

195 
i
 = 0; i < 
¥og
.
num_ö°
; i++) {

196 
	`ªad_ö°
(
Â
, 
addr
, 
i
);

197 
addr
 +(
md_ö°_t
);

203 i‡(
¥og
.
code
[¥og.
num_ö°
-1].
›_íum
 =
NOP
) {

204 
¥og
.
num_ö°
--;

205 
¥og
.
code_size
 -(
md_ö°_t
);

206 
¥og
.
íd_addr
 -(
md_ö°_t
);

209 
	`f˛o£
(
Â
);

210 
	}
}

	@ss/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

57 #ifde‡
BFD_LOADER


58 
	~<bfd.h
>

60 
	~"ecoff.h
"

63 
	~"symbﬁ.h
"

68 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

71 
	gsym_nsyms
 = 0;

72 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

75 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

78 
	gsym_¡extsyms
 = 0;

79 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

82 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

85 
	gsym_nd©asyms
 = 0;

86 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

89 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

92 
	gsyms_lﬂded
 = 
FALSE
;

94 
ld_ãxt_ba£
, 
ld_ãxt_size
;

96 #ifde‡
PRINT_SYMS


99 
	$Êags2°r
(
Êags
)

101 
buf
[256];

102 *
p
;

104 i‡(!
Êags
)

107 
p
 = 
buf
;

108 *
p
 = '\0';

110 i‡(
Êags
 & 
BSF_LOCAL
)

112 *
p
++ = 'L';

113 *
p
++ = '|';

115 i‡(
Êags
 & 
BSF_GLOBAL
)

117 *
p
++ = 'G';

118 *
p
++ = '|';

120 i‡(
Êags
 & 
BSF_DEBUGGING
)

122 *
p
++ = 'D';

123 *
p
++ = '|';

125 i‡(
Êags
 & 
BSF_FUNCTION
)

127 *
p
++ = 'F';

128 *
p
++ = '|';

130 i‡(
Êags
 & 
BSF_KEEP
)

132 *
p
++ = 'K';

133 *
p
++ = '|';

135 i‡(
Êags
 & 
BSF_KEEP_G
)

137 *
p
++ = 'k'; *p++ = '|';

139 i‡(
Êags
 & 
BSF_WEAK
)

141 *
p
++ = 'W';

142 *
p
++ = '|';

144 i‡(
Êags
 & 
BSF_SECTION_SYM
)

146 *
p
++ = 'S'; *p++ = '|';

148 i‡(
Êags
 & 
BSF_OLD_COMMON
)

150 *
p
++ = 'O';

151 *
p
++ = '|';

153 i‡(
Êags
 & 
BSF_NOT_AT_END
)

155 *
p
++ = 'N';

156 *
p
++ = '|';

158 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

160 *
p
++ = 'C';

161 *
p
++ = '|';

163 i‡(
Êags
 & 
BSF_WARNING
)

165 *
p
++ = 'w';

166 *
p
++ = '|';

168 i‡(
Êags
 & 
BSF_INDIRECT
)

170 *
p
++ = 'I';

171 *
p
++ = '|';

173 i‡(
Êags
 & 
BSF_FILE
)

175 *
p
++ = 'f';

176 *
p
++ = '|';

179 i‡(
p
 =
buf
)

180 
	`∑nic
("no flags detected");

182 *--
p
 = '\0';

183  
buf
;

184 
	}
}

189 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

191  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

192 
	}
}

196 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

198  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

199 
	}
}

201 
	#RELEVANT_SCOPE
(
SYM
Ë\

	)

203 ((
	gSYM
)->
	gÊags
 & 
	gBSF_GLOBAL
) \

205 (((
	gSYM
)->
	gÊags
 & (
	gBSF_LOCAL
|
	gBSF_DEBUGGING
)Ë=
BSF_LOCAL
) \

206 && (
SYM
)->
«me
[0] != '$') \

208 
lﬂd_loˇls
 \

210 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

211 && (
SYM
)->
«me
[0] == '$') \

213 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

214 && (
SYM
)->
«me
[0] == '$'))))

219 
	$sym_lﬂdsyms
(*
‚ame
,

220 
lﬂd_loˇls
)

222 
i
, 
debug_˙t
;

223 
Àn
;

224 
FILE
 *
fobj
;

225 
ecoff_fûehdr
 
fhdr
;

226 
ecoff_aouthdr
 
ahdr
;

227 
ecoff_symhdr_t
 
symhdr
;

228 *
°πab
 = 
NULL
;

229 
ecoff_EXTR
 *
exå
;

231 i‡(
syms_lﬂded
)

238 
fobj
 = 
	`f›í
(
‚ame
, "r");

239 i‡(!
fobj
)

240 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

242 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

243 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

246 i‡(
fhdr
.
f_magic
 !
ECOFF_EB_MAGIC
 && fhdr.f_magi¯!
ECOFF_EL_MAGIC
)

247 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

249 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

250 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

253 
	`f£ek
(
fobj
, 
fhdr
.
f_sym±r
, 0);

255 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

256 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

258 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

259 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

262 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

263 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

264 i‡(!
°πab
)

265 
	`Áèl
("out of virtual memory");

268 
	`f£ek
(
fobj
, 
symhdr
.
cbSsOff£t
, 0);

269 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

270 
	`Áèl
("error whileÑeading symbolÅableÇames");

273 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

274 i‡(
Àn
 <= 0)

275 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

276 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

277 i‡(!
sym_db
)

278 
	`Áèl
("out of virtual memory");

281 
exå
 =

282 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

283 i‡(!
exå
)

284 
	`Áèl
("out of virtual memory");

286 
	`f£ek
(
fobj
, 
symhdr
.
cbExtOff£t
, 0);

287 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

288 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

290 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

293 
i
=0; i < 
symhdr
.
õxtMax
; i++)

295 
°r_off£t
;

297 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

299 
exå
[
i
].
asym
.
°
)

301 
ECOFF_°GlobÆ
:

302 
ECOFF_°Sètic
:

304 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

305 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

306 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

307 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

308 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

309 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

310 
sym_nsyms
++;

311 
sym_nd©asyms
++;

314 
ECOFF_°Proc
:

315 
ECOFF_°SèticProc
:

316 
ECOFF_°Labñ
:

318 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

319 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

320 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

321 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

322 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

323 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

324 
sym_nsyms
++;

325 
sym_¡extsyms
++;

332 
	`‰ì
(
exå
);

335 i‡(
	`f˛o£
(
fobj
))

336 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

343 
sym_syms
 =

344 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

345 i‡(!
sym_syms
)

346 
	`Áèl
("out of virtual memory");

348 
sym_syms_by_«me
 =

349 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

350 i‡(!
sym_syms_by_«me
)

351 
	`Áèl
("out of virtual memory");

353 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

355 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

356 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

357 
debug_˙t
++;

360 i‡(
debug_˙t
 !
sym_nsyms
)

361 
	`∑nic
("couldÇotÜocateáll symbols");

364 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

367 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

370 
sym_ãxtsyms
 =

371 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

372 i‡(!
sym_ãxtsyms
)

373 
	`Áèl
("out of virtual memory");

375 
sym_ãxtsyms_by_«me
 =

376 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

377 i‡(!
sym_ãxtsyms_by_«me
)

378 
	`Áèl
("out of virtual memory");

380 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

382 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

384 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

385 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

386 
debug_˙t
++;

390 i‡(
debug_˙t
 !
sym_¡extsyms
)

391 
	`∑nic
("couldÇotÜocateállÅext symbols");

394 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

397 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

398 (
sym_sym_t
 *), (*)
ncmp
);

401 
sym_d©asyms
 =

402 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

403 i‡(!
sym_d©asyms
)

404 
	`Áèl
("out of virtual memory");

406 
sym_d©asyms_by_«me
 =

407 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

408 i‡(!
sym_d©asyms_by_«me
)

409 
	`Áèl
("out of virtual memory");

411 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

413 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

415 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

416 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

417 
debug_˙t
++;

421 i‡(
debug_˙t
 !
sym_nd©asyms
)

422 
	`∑nic
("couldÇotÜocateáll data symbols");

425 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

428 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

429 (
sym_sym_t
 *), (*)
ncmp
);

432 
i
=0; i<
sym_¡extsyms
; i++)

434 
sym_ãxtsyms
[
i
]->
size
 =

435 (
i
 !(
sym_¡extsyms
 - 1)

436 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

437 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

441 
i
=0; i<
sym_nd©asyms
; i++)

443 
sym_d©asyms
[
i
]->
size
 =

444 (
i
 !(
sym_nd©asyms
 - 1)

445 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

446 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

451 
syms_lﬂded
 = 
TRUE
;

452 
	}
}

456 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

457 
FILE
 *
fd
)

459 
	`Ârötf
(
fd
,

461 
sym
->
«me
,

462 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

463 
sym
->
öôülized
 ? "y" : "n",

464 
sym
->
pub
 ? "y" : "n",

465 
sym
->
loˇl
 ? "y" : "n",

466 
sym
->
addr
,

467 
sym
->
size
);

468 
	}
}

472 
	$sym_dumpsyms
(
FILE
 *
fd
)

474 
i
;

476 
i
=0; i < 
sym_nsyms
; i++)

477 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

478 
	}
}

482 
	$sym_dum±extsyms
(
FILE
 *
fd
)

484 
i
;

486 
i
=0; i < 
sym_¡extsyms
; i++)

487 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

488 
	}
}

492 
	$sym_dump°©e
(
FILE
 *
fd
)

494 
i
;

496 i‡(
fd
 =
NULL
)

497 
fd
 = 
°dîr
;

499 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

500 
i
=0; i < 
sym_nsyms
; i++)

501 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

503 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

504 
i
=0; i < 
sym_nsyms
; i++)

505 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

507 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

508 
i
=0; i < 
sym_¡extsyms
; i++)

509 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

511 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

512 
i
=0; i < 
sym_¡extsyms
; i++)

513 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

515 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

516 
i
=0; i < 
sym_nd©asyms
; i++)

517 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

519 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

520 
i
=0; i < 
sym_nd©asyms
; i++)

521 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

522 
	}
}

528 
sym_sym_t
 *

529 
	$sym_böd_addr
(
md_addr_t
 
addr
,

530 *
pödex
,

531 
exa˘
,

532 
sym_db_t
 
db
)

534 
nsyms
, 
low
, 
high
, 
pos
;

535 
sym_sym_t
 **
syms
;

537 
db
)

539 
sdb_™y
:

540 
syms
 = 
sym_syms
;

541 
nsyms
 = 
sym_nsyms
;

543 
sdb_ãxt
:

544 
syms
 = 
sym_ãxtsyms
;

545 
nsyms
 = 
sym_¡extsyms
;

547 
sdb_d©a
:

548 
syms
 = 
sym_d©asyms
;

549 
nsyms
 = 
sym_nd©asyms
;

552 
	`∑nic
("bogus symbol database");

556 i‡(!
nsyms
)

558 i‡(
pödex
)

559 *
pödex
 = -1;

560  
NULL
;

564 
low
 = 0;

565 
high
 = 
nsyms
-1;

566 
pos
 = (
low
 + 
high
) >> 1;

568 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

570 || (!
exa˘


571 && 
syms
[
pos
]->
addr
 <=áddr

572 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

574 i‡(
addr
 < 
syms
[
pos
]->addr)

575 
high
 = 
pos
 - 1;

577 
low
 = 
pos
 + 1;

578 i‡(
high
 >
low
)

579 
pos
 = (
low
 + 
high
) >> 1;

582 i‡(
pödex
)

583 *
pödex
 = -1;

584  
NULL
;

589 i‡(
pödex
)

590 *
pödex
 = 
pos
;

591  
syms
[
pos
];

592 
	}
}

597 
sym_sym_t
 *

598 
	$sym_böd_«me
(*
«me
,

599 *
pödex
,

600 
sym_db_t
 
db
)

602 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

603 
sym_sym_t
 **
syms
;

605 
db
)

607 
sdb_™y
:

608 
syms
 = 
sym_syms_by_«me
;

609 
nsyms
 = 
sym_nsyms
;

611 
sdb_ãxt
:

612 
syms
 = 
sym_ãxtsyms_by_«me
;

613 
nsyms
 = 
sym_¡extsyms
;

615 
sdb_d©a
:

616 
syms
 = 
sym_d©asyms_by_«me
;

617 
nsyms
 = 
sym_nd©asyms
;

620 
	`∑nic
("bogus symbol database");

624 i‡(!
nsyms
)

626 i‡(
pödex
)

627 *
pödex
 = -1;

628  
NULL
;

632 
low
 = 0;

633 
high
 = 
nsyms
-1;

634 
pos
 = (
low
 + 
high
) >> 1;

635 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

637 i‡(
cmp
 > 0)

638 
high
 = 
pos
 - 1;

640 
low
 = 
pos
 + 1;

641 i‡(
high
 >
low
)

642 
pos
 = (
low
 + 
high
) >> 1;

645 i‡(
pödex
)

646 *
pödex
 = -1;

647  
NULL
;

652 i‡(
pödex
)

653 *
pödex
 = 
pos
;

654  
syms
[
pos
];

655 
	}
}

	@ss/symbol.h

52 #i‚de‡
SYMBOL_H


53 
	#SYMBOL_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

59 
	~"machöe.h
"

61 
	esym_£g_t
 {

62 
	mss_d©a
,

63 
	mss_ãxt
,

64 
	mss_NUM


68 
	ssym_sym_t
 {

69 *
	m«me
;

70 
sym_£g_t
 
	m£g
;

71 
	möôülized
;

72 
	mpub
;

73 
	mloˇl
;

74 
md_addr_t
 
	maddr
;

75 
	msize
;

79 
sym_sym_t
 *
sym_db
;

82 
sym_nsyms
;

83 
sym_sym_t
 **
sym_syms
;

86 
sym_sym_t
 **
sym_syms_by_«me
;

89 
sym_¡extsyms
;

90 
sym_sym_t
 **
sym_ãxtsyms
;

93 
sym_sym_t
 **
sym_ãxtsyms_by_«me
;

96 
sym_nd©asyms
;

97 
sym_sym_t
 **
sym_d©asyms
;

100 
sym_sym_t
 **
sym_d©asyms_by_«me
;

104 
sym_lﬂdsyms
(*
‚ame
,

105 
lﬂd_loˇls
);

109 
sym_dumpsym
(
sym_sym_t
 *
sym
,

110 
FILE
 *
fd
);

114 
sym_dumpsyms
(
FILE
 *
fd
);

118 
sym_dump°©e
(
FILE
 *
fd
);

121 
	esym_db_t
 {

122 
	msdb_™y
,

123 
	msdb_ãxt
,

124 
	msdb_d©a
,

125 
	msdb_NUM


132 
sym_sym_t
 *

133 
sym_böd_addr
(
md_addr_t
 
addr
,

134 *
pödex
,

135 
exa˘
,

136 
sym_db_t
 
db
);

141 
sym_sym_t
 *

142 
sym_böd_«me
(*
«me
,

143 *
pödex
,

144 
sym_db_t
 
db
);

	@symexec.c

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~"cfg.h
"

38 
	~"comm⁄.h
"

39 
	~"lo›s.h
"

40 
	~"ö„asibÀ.h
"

42 
	#MIN_VAL
 (0-0xffff)

	)

45 
¥ötMemLi°
(
FILE
* 
Â
, 
w‹kli°_p
);

46 
mem_p
 
¸óãMem
(
addr_t
 
ö°Addr
, 
ªg_t
 
wrôeAddr
,Ñeg_à
ªgVÆue
);

47 
c›yMem
(
mem_p
 
d°
, mem_∞
§c
);

48 
˛rMem
(
w‹kli°_p
 
memLi°
);

49 
lﬂdMem
(
w‹kli°_p
 
memLi°
, 
ªg_t
 
wrôeAddr
,Ñeg_à*
ªgVÆue
);

50 
°‹eMem
(
w‹kli°_p
 *
memLi°
, 
addr_t
 
ö°Addr
,

51 
ªg_t
 
wrôeAddr
,Ñeg_à
ªgVÆue
);

52 
c›yMemLi°
(
w‹kli°_p
 *
d°L
, w‹kli°_∞
§cL
);

53 
memLi°Eq
(
w‹kli°_p
 
li°1
, w‹kli°_∞
li°2
);

54 
mîgeMemLi°
(
w‹kli°_p
 *
d°Li°
, w‹kli°_∞
§cLi°
);

57 
biv_p
 
¸óãBIV
(
ªg_t
 *
ªgLi°
, 
ö¢_t
 *
ö¢
);

58 
ªgRedeföed
(*
ªgName
, 
ö¢_t
 *
ö¢
);

59 
checkBivSåide
(
ªg_t
 *
ªgLi°
, 
ö¢_t
 *
ö¢
);

60 
dëe˘BIV
();

63 
execuã
();

65 
doSymExec
();

66 
joöBøch
(
öf_¥oc_t
 *
ùroc
, 
öf_node_t
 *
ib
, 
ÕHódîId
);

67 
ªgDîive
(
öf_node_t
 *
ib
,
ö¢_t
 *
ö¢
,
ign‹e
,*
jÆ
,
dbg
);

68 
™ÆyzeBlock
(
öf_node_t
 *
ib
);

69 
ªadSymExecResu…
(
öf_node_t
 *
ib
);

70 
öôAŒ
();

71 
‰ìAŒ
();

73 
	g˙tExec
;

74 
	gc⁄Êi˘Dëe˘Fœg
;

75 
	gåa˚Indu˘i⁄Fœg
;

76 
	gåa˚MemFœg
;

78 
FILE
* 
	gdbgExec
;

80 
¥og_t
 
¥og
;

81 
lo›_t
 **
lo›s
;

82 
num_tcfg_lo›s
;

85 
	$gëAddrD
(
d©_ö°_t
 *
d_ö°
) {

86 
ö¢_t
 *
ö¢
;

87 
ö¢
 = (
ö¢_t
*)(
d_ö°
->insn);

88  
	`hexVÆue
(
ö¢
->
addr
);

89 
	}
}

90 
	$¥ötD©aRef
(
FILE
 *
Â
,
d©_ö°_t
 *
d_ö°
) {

91 
i
;

92 
ö¢_t
 *
ö¢
;

94 *
dîôªe
;

96 
ö¢
 = (
ö¢_t
*)(
d_ö°
->insn);

99 i‡(
Â
) {

100 
	`Ârötf
(
Â
, "\n\nDataRef: 0x%s %s %s %s %s\n",

101 
ö¢
->
addr
, in¢->
›
, in¢->
r1
, in¢->
r2
, in¢->
r3
 );

102 
	`¥ötEx¥
(
Â
,&(
d_ö°
->
addrEx¥
));

104 
	}
}

105 
	$isMemAc˚ss
(* 
iß_«me
)

107 if(! 
	`°rcmp
(
iß_«me
, "sw") || !strcmp(isa_name, "sh")

108 || !
	`°rcmp
(
iß_«me
, "sb") || !strcmp(isa_name, "swl")

109 || !
	`°rcmp
(
iß_«me
, "swr") || !strcmp(isa_name, "s.s")

110 || !
	`°rcmp
(
iß_«me
, "s.d"))

114 if(! 
	`°rcmp
(
iß_«me
, "lw") || !strcmp(isa_name, "lh")

115 || !
	`°rcmp
(
iß_«me
, "lb") || !strcmp(isa_name, "lwl")

116 || !
	`°rcmp
(
iß_«me
, "lwr") || !strcmp(isa_name, "lhu")

117 || !
	`°rcmp
(
iß_«me
, "lbu") || !strcmp(isa_name, "lhun")

118 || !
	`°rcmp
(
iß_«me
, "l.s") || !strcmp(isa_name, "l.d"))

123 
	}
}

124 
	$isLﬂdIn°
(*
iß_«me
) {

125 if(! 
	`°rcmp
(
iß_«me
, "lw") || !strcmp(isa_name, "lh")

126 || !
	`°rcmp
(
iß_«me
, "lb") || !strcmp(isa_name, "lwl")

127 || !
	`°rcmp
(
iß_«me
, "lwr") || !strcmp(isa_name, "lhu")

128 || !
	`°rcmp
(
iß_«me
, "lbu")

129 || !
	`°rcmp
(
iß_«me
, "l.s") || !strcmp(isa_name, "l.d")) {

133 
	}
}

134 
	$isSt‹eIn°
(*
iß_«me
) {

135 if(! 
	`°rcmp
(
iß_«me
, "sw") || !strcmp(isa_name, "sh")

136 || !
	`°rcmp
(
iß_«me
, "sb") || !strcmp(isa_name, "swl")

137 || !
	`°rcmp
(
iß_«me
, "swr") || !strcmp(isa_name, "s.s")

138 || !
	`°rcmp
(
iß_«me
, "s.d")) {

142 
	}
}

143 
lo›_t
* 
	$gëIbLo›
(
öf_node_t
 *
ib
) {

144 
dbg
 = 0;

145 
lo›_t
 *
lo›
;

146 i‡(
ib
->
lo›_id
==-1Ë 
lo›s
[0];

147 
lo›
 = 
lo›s
[
öf_lo›s
[
ib
->
lo›_id
].loop_id];

148  
lo›
;

149 
	}
}

150 
	$c›yIn°
(
ö¢_t
 *
d§c
, in¢_à*
ddes
) {

151 
	`°r˝y
(
ddes
->
addr
,
d§c
->addr);

152 
	`°r˝y
(
ddes
->
›
,
d§c
->op);

153 
	`°r˝y
(
ddes
->
r1
,
d§c
->r1);

154 
	`°r˝y
(
ddes
->
r2
,
d§c
->r2);

155 
	`°r˝y
(
ddes
->
r3
,
d§c
->r3);

156 
	}
}

158 
	$checkBivSåide
(
ªg_t
 *
ªgLi°
, 
ö¢_t
* 
ö¢
) {

159 
°r
[128];

160 
k
;

161 
ªgPos1
,
ªgPos2
,
ªgPos3
;

162 
Êag
;

163 
ªgPos1
 = 
	`födReg
(
ªgLi°
, 
ö¢
->
r1
);

164 
ªgPos2
 = 
	`födReg
(
ªgLi°
, 
ö¢
->
r2
);

166 
k
 = 
INFINITY
;

167 i‡(
ªgPos2
==28 ||ÑegPos2==29Ë 
INFINITY
;

169 i‡(
	`°rcmp
(
ªgLi°
[
ªgPos1
].
«me
,ªgLi°[
ªgPos2
].«me)!=0Ë 
INFINITY
;

170 i‡(
	`°ªq
(
ö¢
->
›
,"addu")) {

172 
ªgPos3
 = 
	`födReg
(
ªgLi°
,
ö¢
->
r3
);

173 i‡(
ªgLi°
[
ªgPos3
].
t
!=
VALUE_CONST
Ë 
INFINITY
;

175 
k
 = 
ªgLi°
[
ªgPos3
].
vÆ
;

176  
k
;

179 i‡(
	`°ªq
(
ö¢
->
›
,"addi") || streq(insn->op,"addiu")) {

181 
k
 = 
	`©oi
(
ö¢
->
r3
);

183  
k
;

184 
	}
}

186 
biv_p
 
	$¸óãBIV
(
ªg_t
 *
ªgLi°
, 
ö¢_t
 *
ö¢
) {

187 
biv_p
 
biV¨
;

188 
biV¨
 = 
	`ˇŒoc
(1,(
biv_s
));

190 
	`°r˝y
(
biV¨
->
›r
,
ö¢
->
›
);

191 
biV¨
->
ö¢
 = insn;

192 
biV¨
->
°ride
 = 
	`checkBivSåide
(
ªgLi°
, 
ö¢
);

193 
	`öôReg
–&(
biV¨
->
öôVÆ
));

194 
biV¨
->
Êag
 = 0;

195 
	`°r˝y
(
biV¨
->
ªgName
,
ö¢
->
r1
);

196  
biV¨
;

197 
	}
}

199 
	$ßved2Mem
(
öf_node_t
 *
node
, 
biv_p
 
biv
) {

200 
dbg
 = 0;

201 
k
;

202 
ö¢_t
 *
ö¢
;

203 *
bivAddr
;

208 
bivAddr
 = ((
ö¢_t
*)(
biv
->
ö¢
))->
addr
;

209 i‡(
dbg
) {

211 
k
=0; k<
node
->
num_ö¢
; k++) {

212 
ö¢
 = &(
node
->
ö¢li°
[
k
]);

213 i‡(
	`isSt‹eIn°
(
ö¢
->
›
Ë&& 
	`°rcmp
(
biv
->
ªgName
,ö¢->
r1
)==0

214 && 
	`hexVÆue
(
ö¢
->
addr
)>hexVÆue(
bivAddr
)) {

215 
biv
->
Êag
 |
BIV_SAVED
;

216 i‡(
dbg
) {

217 
	`Ârötf
(
dbgExec
,"\nSaved: insn %s |%s(%s,0,%d)",

218 
ö¢
->
addr
,((
ö¢_t
*)(
biv
->insn))->addr,

219 
biv
->
ªgName
,biv->
°ride
);

224 i‡(
	`°rcmp
(
bivAddr
,
ö¢
->
addr
)!=0

225 && (
biv
->
Êag
 & 
BIV_SAVED
)==0

226 && 
	`hexVÆue
(
ö¢
->
addr
)>hexVÆue(
bivAddr
)

227 && 
	`ªgRedeföed
(
biv
->
ªgName
, 
ö¢
)) {

228 i‡(
dbg
) {

229 
	`Ârötf
(
dbgExec
,"\nRedefined: insn %s |%s(%s,0,%d)",

230 
ö¢
->
addr
,
bivAddr
,
biv
->
ªgName
,biv->
°ride
);

231 
	`fÊush
(
dbgExec
);

235 i‡(
¥vNode
Ë¥vNode->
√xt
 = 
bivNode
->next;

236 
biv_li°
 = 
bivNode
->
√xt
;

237 
	`‰ìBIV
(&
biv
); 
	`‰ì
(
bivNode
);

238 i‡(
¥vNode
Ë
bivNode
 =ÖrvNode->
√xt
;

239 
bivNode
 = 
biv_li°
;

244 
	}
}

246 
	$dëe˘BIV
() {

247 
dbg
 = 0;

248 
i
,
j
,
k
,
h
;

249 *
bivAddr
;

251 
biv_p
 
biv
;

252 
°r
;

253 
w‹kli°_p
 
biv_li°
, 
bivNode
, 
¥vNode
;

254 
ö¢_t
 *
ö¢
;

256 
öf_node_t
 *
cur
;

257 
lo›_t
 *
curLp
;

258 
¥oc_t
 *
p
;

259 
ÕHódId
, 
ÕTaûId
, 
pId
, 
ÕId
;

261 
ªg_t
 *
ªgLi°
;

263 
i
=
num_tcfg_lo›s
-1; i>0; i--) {

264 
curLp
 = 
lo›s
[
i
];

265 i‡(
curLp
==
NULL
) ;

267 
biv_li°
 = 
NULL
;

268 
p
 = 
curLp
->
hód
->
bb
->
¥oc
;

269 i‡(
curLp
->
hód
Ë
ÕHódId
 = curLp->hód->
bb
->
id
;

270 
ÕHódId
 = 0;

271 i‡(
curLp
->
èû
Ë
ÕTaûId
 = curLp->èû->
bb
->
id
;

272 
ÕTaûId
 = 
p
->
num_bb
-1;

273 i‡(
dbg
) {

274 
	`Ârötf
(
dbgExec
,"\nLoop %d head (%d:%d)Åail (%d:%d)",

275 
curLp
->
id
, 
p
->id, 
ÕHódId
,Ö->id, 
ÕTaûId
);

276 
	`fÊush
(
dbgExec
);

280 
j
=
ÕHódId
; j<=
ÕTaûId
; j++) {

282 
cur
 = &(
öf_¥ocs
[
p
->
id
].
öf_cfg
[
j
]);

283 
ªgLi°
 = (
ªg_t
*)(
cur
->
ªgLi°In
);

284 
k
=0; k<
cur
->
num_ö¢
; k++) {

285 
ö¢
 = &(
cur
->
ö¢li°
[
k
]);

286 i‡(
ö¢
->
Êag
==
BIV_INST
) ;

287 
°r
 = 
	`checkBivSåide
(
ªgLi°
,
ö¢
);

288 i‡(
°r
 !
INFINITY
) {

289 i‡(
dbg
) {

290 
	`Ârötf
(
dbgExec
,"\nBIV: insn: %s (%s,_,%d)",

291 
ö¢
->
addr
,ö¢->
r1
,
°r
);
	`fÊush
(
dbgExec
);

294 
biv
 = 
	`¸óãBIV
(
ªgLi°
,
ö¢
);

296 
h
=
j
; h<
ÕTaûId
; h++) {

297 i‡(
	`ßved2Mem
(
öf_¥ocs
[
p
->
id
].
öf_cfg
+
h
,
biv
)) ;

300 
	`Ârötf
(
dbgExec
,"\nSaved BIV: in¢: %†- ",
ö¢
->
addr
);

301 
	`¥ötBIV
(
dbgExec
,
biv
);

302 
	`fÊush
(
dbgExec
);

305 
	`addToW‹kLi°
(&
biv_li°
, 
biv
);

310 
j
=
ÕHódId
; j<=
ÕTaûId
; j++) {

311 
cur
 = &(
öf_¥ocs
[
p
->
id
].
öf_cfg
[
j
]);

312 
ªgLi°
 = (
ªg_t
*)(
cur
->
ªgLi°In
);

313 
k
=0; k<
cur
->
num_ö¢
; k++) {

314 
ö¢
 = &(
cur
->
ö¢li°
[
k
]);

315 
bivNode
 = 
biv_li°
; 
¥vNode
 = 
NULL
;

316 
bivNode
) {

317 
biv
 = 
bivNode
->
d©a
;

318 
bivAddr
 = ((
ö¢_t
*)(
biv
->
ö¢
))->
addr
;

319 i‡(
biv
==
NULL
Ë{
bivNode
=bivNode->
√xt
; ;}

321 i‡(
	`°rcmp
(
bivAddr
,
ö¢
->
addr
)!=0

322 && (
biv
->
Êag
 & 
BIV_SAVED
)==0

323 && 
	`ªgRedeföed
(
biv
->
ªgName
, 
ö¢
)) {

324 i‡(
dbg
) {

325 
	`Ârötf
(
dbgExec
,"\nRedefined: insn %s |%s(%s,0,%d)",

326 
ö¢
->
addr
,
bivAddr
,
biv
->
ªgName
,biv->
°ride
);

327 
	`fÊush
(
dbgExec
);

329 i‡(
¥vNode
Ë¥vNode->
√xt
 = 
bivNode
->next;

330 
biv_li°
 = 
bivNode
->
√xt
;

331 
	`‰ìBIV
(&
biv
); 
	`‰ì
(
bivNode
);

332 i‡(
¥vNode
Ë
bivNode
 =ÖrvNode->
√xt
;

333 
bivNode
 = 
biv_li°
;

336 
¥vNode
 = 
bivNode
;

337 
bivNode
 = bivNode->
√xt
;

345 
j
=
ÕHódId
; j<=
ÕTaûId
; j++) {

346 
cur
 = &(
öf_¥ocs
[
p
->
id
].
öf_cfg
[
j
]);

347 
ªgLi°
 = (
ªg_t
*)(
cur
->
ªgLi°In
);

348 
k
=0; k<
cur
->
num_ö¢
; k++) {

349 
ö¢
 = &(
cur
->
ö¢li°
[
k
]);

350 
bivNode
 = 
biv_li°
; 
¥vNode
 = 
NULL
;

351 
bivNode
) {

352 
biv
 = 
bivNode
->
d©a
;

353 
bivAddr
 = ((
ö¢_t
*)(
biv
->
ö¢
))->
addr
;

354 i‡(
biv
==
NULL
Ë{
bivNode
=bivNode->
√xt
; ;}

356 i‡(
	`°rcmp
(
bivAddr
,
ö¢
->
addr
)!=0

357 && (
biv
->
Êag
 & 
BIV_SAVED
)==0

358 && 
	`ªgRedeföed
(
biv
->
ªgName
, 
ö¢
)) {

359 i‡(
dbg
) {

360 
	`Ârötf
(
dbgExec
,"\nRedefined: insn %s |%s(%s,0,%d)",

361 
ö¢
->
addr
,
bivAddr
,
biv
->
ªgName
,biv->
°ride
);

362 
	`fÊush
(
dbgExec
);

364 i‡(
¥vNode
Ë¥vNode->
√xt
 = 
bivNode
->next;

365 
biv_li°
 = 
bivNode
->
√xt
;

366 
	`‰ìBIV
(&
biv
); 
	`‰ì
(
bivNode
);

367 i‡(
¥vNode
Ë
bivNode
 =ÖrvNode->
√xt
;

368 
bivNode
 = 
biv_li°
;

371 
¥vNode
 = 
bivNode
;

372 
bivNode
 = bivNode->
√xt
;

380 
curLp
->
biv_li°
 = biv_list;

381 
bivNode
 = 
biv_li°
; bivNode; bivNode=bivNode->
√xt
) {

382 
biv
 = 
bivNode
->
d©a
;

383 i‡(
biv
Ë((
ö¢_t
*)(biv->
ö¢
))->
Êag
 |
BIV_INST
;

385 i‡(
dbg
) {

386 
	`Ârötf
(
dbgExec
,"\¿BIVÜi° o‡L%d ",
curLp
->
id
);

387 
bivNode
 = 
biv_li°
; bivNode; bivNodêbivNode->
√xt
) {

388 
biv
 = (
biv_p
Ë
bivNode
->
d©a
;

389 
bivAddr
 = ((
ö¢_t
*)(
biv
->
ö¢
))->
addr
;

390 
ÕId
 = 
curLp
->
id
;

392 
	`Ârötf
(
dbgExec
,"\n\à%†%†L%d",
bivAddr
,
biv
->
ªgName
,
ÕId
);

393 
	`¥ötBIV
(
dbgExec
,
biv
);

397 
	}
}

401 
	$addAssign
–
dîôªe
[], 
cfg_node_t
 *
bb
, 
löío
, 
rhs
, 
rhs_v¨
 ) {

402 
dbg
 = 0;

403 
i
;

404 
assign_t
 *
assg
;

405 
öf_node_t
 *
ib
;

407 i‡(
c⁄Êi˘Dëe˘Fœg
==0) ;

408 
ib
 = &(
öf_¥ocs
[
bb
->
¥oc
->
id
].
öf_cfg
[bb->id]);

411  
i
 = 0; i < 
ib
->
num_assign
; i++ ) {

412 
assg
 = 
ib
->
assig∆i°
[
i
];

414 if–
	`°ªq
–
assg
->
dîôªe
, deritree )) {

416 
assg
->
löío
 =Üineno;

417 
assg
->
rhs
 =Ñhs;

418 
assg
->
rhs_v¨
 =Ñhs_var;

420 if–
dbg
 & 0 ) { 
	`¥ötf
–"OVR " ); 
	`¥ötAssign
–
assg
, 0 ); }

426 
assg
 = (
assign_t
*Ë
	`mÆloc
( (assign_t) );

427 
	`°r˝y
–
assg
->
dîôªe
, deritree );

428 
assg
->
rhs
 =Ñhs;

429 
assg
->
rhs_v¨
 =Ñhs_var;

430 
assg
->
bb
 = bb;

431 
assg
->
löío
 =Üineno;

433 
ib
->
num_assign
++;

435 
i
 = 
ib
->
num_assign
;

436 
ib
->
assig∆i°
 = (
assign_t
**Ë
	`ªÆloc
–ib->assig∆i°, 
i
 * (assign_t*) );

437 
ib
->
assig∆i°
[
i
-1] = 
assg
;

439 if–
dbg
 & 0 ) { 
	`¥ötf
–"NEW " ); 
	`¥ötAssign
–
assg
, 0 ); }

441 
	}
}

443 
	$addBønch
–
dîôªe
[], 
cfg_node_t
 *
bb
, 
rhs
, 
rhs_v¨
, 
jump_c⁄d
 ) {

444 
dbg
 = 0;

445 
i
;

446 
bønch_t
 *
br
;

448 
numbb
 = 
¥og
.
¥ocs
[
bb
->
¥oc
->
id
].
num_bb
;

450 i‡(
c⁄Êi˘Dëe˘Fœg
==0) ;

451 
br
 = (
bønch_t
*Ë
	`mÆloc
( (branch_t) );

452 
	`°r˝y
–
br
->
dîôªe
, deritree );

453 
br
->
rhs
 =Ñhs;

454 
br
->
rhs_v¨
 =Ñhs_var;

455 
br
->
jump_c⁄d
 = jump_cond;

456 
br
->
bb
 = bb;

458 
br
->
num_BA_c⁄Êi˘s
 = 0;

459 
br
->
BA_c⁄Êi˘_li°
 = 
NULL
;

460 
br
->
num_BB_c⁄Êi˘s
 = 0;

461 
br
->
BB_c⁄Êi˘_li°
 = 
NULL
;

463 
öf_¥ocs
[
bb
->
¥oc
->
id
].
öf_cfg
[bb->id].
bønch
 = 
br
;

465 if–
dbg
 & 0 ) { 
	`¥ötBønch
–
br
, 0 ); }

467 
	}
}

472 
mem_p
 
	$¸óãMem
(
addr_t
 
ö°Addr
, 
ªg_t
 
wrôeAddr
,Ñeg_à
ªgVÆue
) {

473 
mem_p
 
memBlk
;

474 
memBlk
 = 
	`ˇŒoc
(1,(
mem_s
));

475 
memBlk
->
ö°Addr
 = instAddr;

476 
	`öôReg
–&(
memBlk
->
wrôeAddr
) );

477 
	`öôReg
–&(
memBlk
->
ªgVÆue
) );

478 
	`˝yReg
–&(
memBlk
->
wrôeAddr
),writeAddr);

479 
	`˝yReg
–&(
memBlk
->
ªgVÆue
),regValue);

480  
memBlk
;

481 
	}
}

482 
	$‰ìMemBlk
(
mem_p
 *
memBlk
) {

483 
	`˛rReg
–&–(*
memBlk
)->
wrôeAddr
) );

484 
	`˛rReg
–&–(*
memBlk
)->
ªgVÆue
) );

485 *
memBlk
=
NULL
;

486 
	}
}

487 
	$‰ìMemLi°
(
w‹kli°_p
 *
memLi°
) {

488 
mem_p
 
memBlk
;

489 
w‹kli°_p
 
curNode
, 
√xtNode
;

490 
curNode
 = *
memLi°
;

491 
curNode
) {

492 
√xtNode
 = 
curNode
->
√xt
;

493 
memBlk
 = 
curNode
->
d©a
;

494 
	`‰ìMemBlk
–&
memBlk
 );

495 
curNode
->
d©a
 = 
NULL
;

496 
curNode
->
√xt
 = 
NULL
;

497 
	`‰ì
(
curNode
);

498 
curNode
 = 
√xtNode
;

500 *
memLi°
 = 
NULL
;

501 
	}
}

502 
	$c›yMem
(
mem_p
 
d°
, mem_∞
§c
) {

503 
w‹kli°_p
 
memNode
;

504 
mem_p
 
memBlk
;

505 
ch™ged
 = 0;

506 i‡(
d°
->
ö°Addr
 !
§c
->instAddr) {

507 
ch™ged
 = 1;

508 
d°
->
ö°Addr
 = 
§c
->instAddr;

511 
ch™ged
 |
	`˝yReg
–&(
d°
->
wrôeAddr
), 
§c
->writeAddr );

512 
ch™ged
 |
	`˝yReg
–&(
d°
->
ªgVÆue
), 
§c
->regValue );

513  
ch™ged
;

514 
	}
}

515 
	$¥ötMemLi°
(
FILE
 *
Â
,
w‹kli°_p
 
memLi°
) {

516 
w‹kli°_p
 
memNode
;

517 
mem_p
 
memBlk
;

518 
	`Ârötf
(
Â
,"[ ");

519 
memNode
 = 
memLi°
; memNode; memNode=memNode->
√xt
) {

520 
memBlk
 = 
memNode
->
d©a
;

521 i‡(
memBlk
->
ªgVÆue
.
t
==
VALUE_UNPRED
);

522 
	`Ârötf
(
Â
," (%x ",
memBlk
->
ö°Addr
);

523 
	`¥ötReg
(
Â
,
memBlk
->
wrôeAddr
);

524 
	`Ârötf
(
Â
," ");

525 
	`¥ötReg
(
Â
,
memBlk
->
ªgVÆue
); 
	`Ârötf
(fp,")");

527 
	`Ârötf
(
Â
," ]");

528 
	`fÊush
(
Â
);

529 
	}
}

531 
	$c›yMemLi°
(
w‹kli°_p
 *
d°Li°
, w‹kli°_∞
§cLi°
) {

532 
dbg
 = 0;

533 
w‹kli°_p
 
§cNode
, 
d°Node
, 
¥vNode
, 
memNode
;

534 
mem_p
 
§cBlk
, 
d°Blk
, 
memBlk
;

535 
ch™ged
,
Êag
;

536 
§cNode
 = 
§cLi°
; 
d°Node
*
d°Li°
; 
¥vNode
 = 
NULL
;

537 
ch™ged
 = 0;

538 i‡(
dbg
) {

539 
	`Ârötf
(
dbgExec
,"\n CopyMem: SRC ");

540 
	`¥ötMemLi°
(
dbgExec
,
§cLi°
);

542 
§cNode
) {

543 i‡(
d°Node
) {

544 
Êag
 = 
	`c›yMem
(
d°Node
->
d©a
, 
§cNode
->data);

545 i‡(
Êag
Ë
ch™ged
 = 1;

546 
¥vNode
 = 
d°Node
;

547 
d°Node
 = d°Node->
√xt
;

550 
d°Blk
 = 
	`ˇŒoc
(1,(
mem_s
));

551 
	`c›yMem
(
d°Blk
, 
§cNode
->
d©a
);

552 
	`addA·îNode
(
d°Blk
, &
¥vNode
, 
d°Li°
);

553 
ch™ged
 = 1;

555 
§cNode
 = srcNode->
√xt
;

557 i‡(
¥vNode
) {

558 
¥vNode
->
√xt
 = 
NULL
;

559 
	`‰ìMemLi°
–&
d°Node
);

560 
ch™ged
 = 1;

562 i‡(*
d°Li°
!=
NULL
) {

563 
	`‰ìMemLi°
(
d°Li°
);

564 
ch™ged
 = 1;

567 i‡(
dbg
) {

568 
	`Ârötf
(
dbgExec
," ->DST ");

569 
	`¥ötMemLi°
(
dbgExec
,*
d°Li°
);

571  
ch™ged
;

572 
	}
}

574 
	$°‹eMem
 (
w‹kli°_p
 *
memLi°
, 
addr_t
 
ö°Addr
,

575 
ªg_t
 
wrôeAddr
,Ñeg_à
ªgVÆue
) {

576 
dbg
=0;

577 
mem_p
 
memBlk
;

578 
w‹kli°_p
 
memNode
, 
¥vNode
, 
addLoc
;

579 
upd©ed
, 
¥edi˘abÀ
, 
found
;

580 
°r
[
DERI_LEN
],
des
[DERI_LEN];

581 
FILE
 *
dbgExec
 = 
°dout
;

584 i‡(
wrôeAddr
.
t
==
VALUE_UNPRED
 || wrôeAddr.t==
VALUE_UNDEF
)  0;

586 i‡(
ªgVÆue
.
t
==
VALUE_UNDEF
 ||ÑegVÆue.t==
VALUE_UNPRED
Ë
¥edi˘abÀ
 = 0;

587 
¥edi˘abÀ
 = 1;

589 i‡(
dbg
 && 
¥edi˘abÀ
) {

590 
	`Ârötf
(
dbgExec
,"\nSt‹e: 0x%x ",
ö°Addr
);
	`¥ötReg
(dbgExec, 
wrôeAddr
);

591 
	`Ârötf
(
dbgExec
," ");
	`¥ötReg
(dbgExec, 
ªgVÆue
);

593 i‡(
dbg
 && 
¥edi˘abÀ
) {

594 
	`Ârötf
(
dbgExec
,"\nBef‹ê");
	`¥ötMemLi°
(dbgExec, *
memLi°
);

597 
upd©ed
 = 0;

598 
¥vNode
 = 
NULL
; 
addLoc
 = NULL;

599 
memNode
 = *
memLi°
; memNode; memNode=memNode->
√xt
) {

600 
memBlk
 = 
memNode
->
d©a
;

601 
¥vNode
 = 
memNode
;

602 i‡(
	`ªgEq
(
memBlk
->
wrôeAddr
, writeAddr)==1) ;

604 i‡(
memNode
) {

605 i‡(!
	`ªgEq
(
memBlk
->
ªgVÆue
,ÑegValue)) {

606 i‡(
memBlk
->
ö°Addr
==instAddr) {

609 
	`˝yReg
–&(
memBlk
->
ªgVÆue
),ÑegValue);

613 
memBlk
->
ö°Addr
 = instAddr;

614 i‡(
¥edi˘abÀ
Ë
	`˝yReg
–&(
memBlk
->
ªgVÆue
),ÑegValue);

615 
	`ªgUnknown
–&(
memBlk
->
ªgVÆue
) );

620 i‡(
¥edi˘abÀ
) {

621 i‡(
dbg
) {

622 
	`Ârötf
(
dbgExec
,"\nAddÇew memÉntry");

623 
	`Ârötf
(
dbgExec
,"\nSt‹e: 0x%x ",
ö°Addr
);

624 
	`¥ötReg
(
dbgExec
, 
wrôeAddr
);

626 
memBlk
=
	`¸óãMem
(
ö°Addr
,
wrôeAddr
,
ªgVÆue
);

627 
	`addA·îNode
(
memBlk
,&
¥vNode
,
memLi°
);

630 i‡(
dbg
 && 
¥edi˘abÀ
) {

631 
	`Ârötf
(
dbgExec
,"\nA·î: ");
	`¥ötMemLi°
(dbgExec, *
memLi°
);}

632  
upd©ed
;

633 
	}
}

635 
	$lﬂdMem
 (
w‹kli°_p
 
memLi°
, 
ªg_t
 
wrôeAddr
,Ñeg_à*
ªgVÆue
) {

636 
dbg
=0;

637 
FILE
 *
dbgExec
 = 
°dout
;

638 
mem_p
 
memBlk
;

639 
w‹kli°_p
 
memNode
;

641 i‡(
dbg
Ë
	`¥ötMemLi°
(
dbgExec
, 
memLi°
);

642 
	`ªgUnknown
(
ªgVÆue
);

643 
memNode
=
memLi°
; memNode; memNode=memNode->
√xt
) {

644 
memBlk
 = 
memNode
->
d©a
;

645 i‡(
	`ªgEq
(
wrôeAddr
,
memBlk
->writeAddr)) {

646 
	`˝yReg
(
ªgVÆue
, 
memBlk
->regValue);

650 i‡(
dbg
 && 
ªgVÆue
->
t
!=
VALUE_UNPRED
) {

651 
	`Ârötf
(
dbgExec
,"\nLﬂd from i:%x",
memBlk
->
ö°Addr
);

652 
	`Ârötf
(
dbgExec
,"á:");
	`¥ötReg
(dbgExec,
memBlk
->
wrôeAddr
);

653 
	`Ârötf
(
dbgExec
," v:");
	`¥ötReg
(dbgExec,*
ªgVÆue
);

655 
	}
}

656 
	$memLi°Eq
(
w‹kli°_p
 
d°Li°
, w‹kli°_∞
§cLi°
) {

657 
dbg
 = 0;

658 
w‹kli°_p
 
§cNode
, 
d°Node
;

659 
mem_p
 
§cBlk
, 
d°Blk
;

663 
§cNode
 = 
§cLi°
; 
d°Node
 = 
d°Li°
;

664 
§cNode
 && 
d°Node
) {

665 
§cBlk
 = 
§cNode
->
d©a
; 
d°Blk
=
d°Node
->data;

666 i‡(!
	`ªgEq
(
§cBlk
->
wrôeAddr
,
d°Blk
->writeAddr)

667 || !
	`ªgEq
(
§cBlk
->
ªgVÆue
,
d°Blk
->regValue))

669 
§cNode
 = srcNode->
√xt
;

670 
d°Node
 = d°Node->
√xt
;

672 i‡(
§cNode
 || 
d°Node
)  0;

674 
	}
}

675 
	$mîgeMemLi°
(
w‹kli°_p
 *
d°Li°
, w‹kli°_∞
§cLi°
) {

676 
dbg
 = 0;

677 
w‹kli°_p
 
memNode
, 
§cNode
, 
d°Node
, 
§cPrv
, 
d°Taû
, 
√wLi°
;

678 
mem_p
 
memBlk
, 
§cBlk
, 
d°Blk
;

679 
d°Ch™ged
;

680 
cmpVÆue
,
Êag
;

682 i‡(
dbg
) {

683 
	`Ârötf
(
dbgExec
,"\nMerge mem.list:");

684 
	`Ârötf
(
dbgExec
,"\nSrc: "); 
	`¥ötMemLi°
(dbgExec,
§cLi°
);

685 
	`Ârötf
(
dbgExec
,"\nD°: "); 
	`¥ötMemLi°
(dbgExec,*
d°Li°
);

687 
d°Ch™ged
 = 0;

688 i‡(
dbg
 && 0Ë
	`Ârötf
(
dbgExec
,"\nMerging: ");

689 
d°Taû
 = *
d°Li°
;

690 
d°Taû
 && d°Taû->
√xt
) dstTail = dstTail->next;

691 
√wLi°
 = 
NULL
;

694 
§cNode
 = 
§cLi°
;

695 
§cNode
) {

696 
§cBlk
 = 
§cNode
->
d©a
;

697 
d°Node
 = *
d°Li°
;

698 
d°Node
!=
NULL
) {

699 
d°Blk
 = 
d°Node
->
d©a
;

700 i‡(
	`ªgEq
(
§cBlk
->
wrôeAddr
,
d°Blk
->writeAddr)) {

701 
Êag
 = 
	`mîgeReg
–&(
d°Blk
->
ªgVÆue
), 
§cBlk
->regValue, 0);

702 i‡(
Êag
Ë
d°Ch™ged
 = 1;

705 
d°Node
 = d°Node->
√xt
;

707 i‡(
d°Node
==
NULL
) {

708 
memBlk
 = 
	`¸óãMem
(
§cBlk
->
ö°Addr
,

709 
§cBlk
->
wrôeAddr
,§cBlk->
ªgVÆue
);

710 
	`addToW‹kLi°
(&
√wLi°
,
memBlk
);

712 
§cNode
 = srcNode->
√xt
;

714 i‡(
d°Taû
Ëd°Taû->
√xt
 = 
√wLi°
;

715 *
d°Li°
 = 
√wLi°
;

717 i‡(
dbg
Ë{
	`Ârötf
(
dbgExec
,"\nMERGED c:%d ",
d°Ch™ged
);

718 
	`¥ötMemLi°
(
dbgExec
,*
d°Li°
);}

719  
d°Ch™ged
;

720 
	}
}

725 
	#PROCESS_STORE
 \

	)

726 i‡(
	gåa˚MemFœg
) {\

728 
£tI¡
(&
tmpReg
, 
©oi
(
ö¢
->
r2
));\

729 
ªgO¥
("+",&
wrôeAddr
,
ªgLi°
[
r3
],
tmpReg
);\

730 
°‹eMem
(
memLi°
,
ö°Addr
,
wrôeAddr
,
ªgLi°
[
r1
]);\

731 i‡(
	gdbg
) {\

732 
Ârötf
(
dbgF
,"\nSt‹ê(%x ",
ö°Addr
); \

733 
Ârötf
(
dbgF
," ");
¥ötReg
(dbgF,
wrôeAddr
);\

734 
Ârötf
(
dbgF
," -> ");
¥ötReg
(dbgF,
ªgLi°
[
r1
]);\

738 
	#PROCESS_LOAD
 \

	)

739 
ªgUnknown
(
ªgLi°
+
r1
);\

740 i‡(
	gåa˚MemFœg
) {\

742 
£tI¡
(&
tmpReg
, 
©oi
(
ö¢
->
r2
));\

743 
ªgO¥
("+",&
wrôeAddr
,
ªgLi°
[
r3
],
tmpReg
);\

744 
lﬂdMem
(*
memLi°
,
wrôeAddr
,
ªgLi°
+
r1
);\

745 i‡(
	gdbg
) {\

746 
Ârötf
(
dbgF
,"\nLﬂd (%x ",
ö°Addr
); \

747 
Ârötf
(
dbgF
," ");
¥ötReg
(dbgF,
wrôeAddr
);\

748 
Ârötf
(
dbgF
," -> ");
¥ötReg
(dbgF,
ªgLi°
[
r1
]);\

752 
	#PROCESS_SLTI
 \

	)

754 i‡(
	gªgLi°
[
r2
].
	gt
 =
VALUE_CONST
) {\

755 i‡(
ªgLi°
[
r2
].
vÆ
<
©oi
(
ö¢
->
r3
)) \

756 
£tI¡
(
ªgLi°
+
r1
,1);\

757 
£tI¡
(
ªgLi°
+
r1
,0);\

759 
ªgUnknown
(
ªgLi°
+
r1
);

761 
	#PROCESS_SLT
 \

	)

763 i‡(
	gªgLi°
[
r2
].
	gt
 =
VALUE_CONST
 && 
ªgLi°
[r2].
t
=ÙegLi°[
r3
].t) {\

764 i‡–
ªgLi°
[
r2
].
vÆ
 <ÑegLi°[
r3
].val ) \

765 
£tI¡
(
ªgLi°
[
r1
],1);\

766 
£tI¡
(
ªgLi°
[
r1
],0);\

768 
ªgUnknown
(
ªgLi°
[
r1
]);

770 
	#ADD_ASSIGN


	)

774 
	$ign‹eRegUpd©e
(*
r
) {

776 i‡(
	`°ªq
(
r
,"$31")

777 || 
	`°ªq
(
r
,"$0"))

780 
	}
}

781 
	$ªgDîive
(
öf_node_t
 *
ib
, 
ö¢_t
 *
ö¢
,

782 
ign‹e
, *
jÆ
, 
dbg
) {

783 
FILE
 *
dbgF
 = 
°dout
;

784 
r1
, 
r2
, 
r3
;

785 
addr_t
 
ö°Addr
;

786 
ö¢_t
 *
ö¢Tmp
;

787 
biv_p
 
biv
, 
bivInô
;

788 *
›
;

790 
w‹kli°_p
 *
memLi°
;

791 
ªg_t
 *
ªgLi°
;

792 
ªg_t
 
wrôeAddr
, 
wrôeVÆue
, 
tmpReg
;

794 
	`öôReg
(&
wrôeAddr
);

795 
	`öôReg
(&
wrôeVÆue
);

796 
	`öôReg
(&
tmpReg
);

798 
ign‹e
 = 1;

799 
memLi°
 = &(
ib
->
memLi°Out
);

801 
›
 = 
ö¢
->op;

802 
	`ssˇnf
(
ö¢
->
addr
,"%x",&
ö°Addr
);

803 
ªgLi°
 = (
ªg_t
*)(
ib
->
ªgLi°Out
);

805 
r1
 = 
	`födReg
(
ªgLi°
, 
ö¢
->r1);

806 
r2
 = 
	`födReg
(
ªgLi°
, 
ö¢
->r2);

807 
r3
 = 
	`födReg
(
ªgLi°
, 
ö¢
->r3);

809 if–
dbg
 ) {

810 
	`Ârötf
(
dbgF
,"\n%†",
ö¢
->
r1
);

811 i‡(
r1
>=0Ë
	`¥ötReg
(
dbgF
,
ªgLi°
[r1]);

812 
	`Ârötf
(
dbgF
," %†",
ö¢
->
r2
);

813 i‡(
r2
>=0Ë
	`¥ötReg
(
dbgF
,
ªgLi°
[r2]);

814 
	`Ârötf
(
dbgF
," %†",
ö¢
->
r3
);

815 i‡(
r3
>=0Ë
	`¥ötReg
(
dbgF
,
ªgLi°
[r3]);

816 
	`Ârötf
(
dbgF
," | ");

820 i‡(
	`dîiveUnknown
(
ªgLi°
,
ö¢
)) {

821 i‡(
dbg
Ë{ 
	`¥ötf
–"\n--> u≈ªd. " ); 
	`¥ötReg
(
°dout
,
ªgLi°
[
r1
]);}

825 i‡(
ö¢
->
Êag
==
BIV_INST
) {

827 i‡(
dbg
Ë{
	`¥ötf
("\nIndu˘i⁄: ");
	`¥ötReg
(
°dout
,
ªgLi°
[
r1
]);}

828 i‡(
ªgLi°
[
r1
].
t
!=
VALUE_BIV
) {

829 
biv
 = 
	`¸óãBIV
(
ªgLi°
, 
ö¢
);

830 i‡(
ªgLi°
[
r1
].
t
!=
VALUE_UNDEF
) {

831 
	`upd©eInôVÆ
(
biv
,
ªgLi°
[
r1
]);

833 
ªgLi°
[
r1
].
t
 = 
VALUE_BIV
;

834 
ªgLi°
[
r1
].
biv
 = biv;

837 
bivInô
 = 
ªgLi°
[
r1
].
biv
;

838 
ö¢Tmp
 = 
bivInô
->
ö¢
;

839 i‡(
	`°rcmp
(
ö¢Tmp
->
addr
,
ö¢
->addr) != 0) {

841 
biv
 = 
	`¸óãBIV
(
ªgLi°
, 
ö¢
);

842 
	`upd©eInôVÆ
(
biv
,
ªgLi°
[
r1
]);

843 
ªgLi°
[
r1
].
t
 = 
VALUE_BIV
;

844 
ªgLi°
[
r1
].
biv
 = biv;

849 i‡(
dbg
Ë{ 
	`¥ötf
–"\n--> biv: " ); 
	`¥ötReg
(
°dout
,
ªgLi°
[
r1
]);}

853 i‡(
	`°ªq
(
›
,"beq") || streq(op,"bne")) {

854 i‡(
ign‹e
)  0;

857 i‡(
	`°ªq
(
›
,"bgez") || streq(op,"blez") || streq(op,"bgtz")) {

858 i‡(
ign‹e
)  0;

861 i‡–
	`°ªq
(
›
,"sw")||streq(op,"sb")||streq(op,"sh")||streq(op,"sbu") ){

862 
PROCESS_STORE
;

865 i‡(
	`ign‹eRegUpd©e
(
ö¢
->
r1
)==1) {

868 i‡(
	`°ªq
(
›
,"lw")||streq(op,"lb")||streq(op,"lbu")

869 ||
	`°ªq
(
›
,"l.d")||streq(op,"lh")) {

870 
PROCESS_LOAD
;

873 i‡(
	`°ªq
(
›
,"lui")) {

874 
	`£tI¡
(
ªgLi°
+
r1
, 
	`©oi
(
ö¢
->
r2
)*65536);

877 if–
	`°ªq
(
›
, "addiu") || streq(op, "addi") )

879 
	`£tI¡
(&
tmpReg
, 
	`©oi
(
ö¢
->
r3
));

880 
	`ªgO¥
("+",
ªgLi°
+
r1
,ªgLi°[
r2
],
tmpReg
);

883 i‡(
	`°ªq
(
›
,"ori")) {

884 
	`£tI¡
(&
tmpReg
, 
	`©oi
(
ö¢
->
r3
));

885 
	`ªgO¥
("|",
ªgLi°
+
r1
,ªgLi°[
r2
],
tmpReg
);

888 if–
	`°ªq
(
›
, "xori") )

890 
	`£tI¡
(&
tmpReg
, 
	`©oi
(
ö¢
->
r3
));

891 
	`ªgO¥
("^",
ªgLi°
+
r1
,ªgLi°[
r2
],
tmpReg
);

894 if–
	`°ªq
(
›
, "andi") )

896 
	`£tI¡
(&
tmpReg
,
	`©oi
(
ö¢
->
r3
));

897 
	`ªgO¥
("&",
ªgLi°
+
r1
,ªgLi°[
r2
],
tmpReg
);

900 if–
	`°ªq
(
›
, "sll") )

902 
	`£tI¡
(&
tmpReg
,
	`hexVÆue
(
ö¢
->
r3
));

903 
	`ªgO¥
("<<",
ªgLi°
+
r1
,ªgLi°[
r2
],
tmpReg
);

906 if–
	`°ªq
(
›
, "srl") || streq(op,"sra") )

908 
	`£tI¡
(&
tmpReg
,
	`hexVÆue
(
ö¢
->
r3
));

909 
	`ªgO¥
(">>",
ªgLi°
+
r1
,ªgLi°[
r2
],
tmpReg
);

912 if–
	`°ªq
(
›
, "slti") || streq(op, "sltiu") )

914 
PROCESS_SLTI
;

917 if–
	`°ªq
(
›
, "slt") || streq(op, "sltu") )

920 
ADD_ASSIGN
;

922 if–
	`°ªq
(
›
, "addu") )

924 
	`ªgO¥
("+",
ªgLi°
+
r1
,ªgLi°[
r2
],ªgLi°[
r3
]);

927 if–
	`°ªq
(
›
, "subu") )

929 
	`ªgO¥
("-",
ªgLi°
+
r1
,ªgLi°[
r2
],ªgLi°[
r3
]);

932 if–
	`°ªq
(
›
, "or") )

934 
	`ªgO¥
("^",
ªgLi°
+
r1
,ªgLi°[
r2
],ªgLi°[
r3
]);

937 if–
	`°ªq
(
›
, "jÆ"ËË*
jÆ
 = 1;

938 if–
	`°ªq
(
›
, "j") );

940 i‡(
dbg
Ë
	`¥ötf
–"Ign‹ög opcode: %¢", 
›
 );

941 
	`ªgUnknown
(
ªgLi°
+
r1
);

943 i‡(
dbg
) {

944 
	`Ârötf
(
dbgF
,"\¿==> %†",
ªgLi°
[
r1
].
«me
);

945 
	`¥ötReg
(
dbgF
,
ªgLi°
[
r1
]);

948 
	`˛rReg
(&
tmpReg
);

949 
	`˛rReg
(&
wrôeAddr
);

950 
	`˛rReg
(&
wrôeVÆue
);

952 
	}
}

960 
	$joöBønch
(
öf_¥oc_t
 *
ùroc
, 
öf_node_t
 *
ib
, 
isLpHód
) {

961 
dbg
 = 0;

962 
a˘ive_ªg
 = 14;

963 
i
,
j
,
id
;

965 
cfg_node_t
 *
bb
, *
§c
;

966 
öf_node_t
 *
i§c
;

967 
cfg_edge_t
 *
edge
;

968 
ªg_t
 *
ªgSrc
, *
ªgCur
, *
ªgLi°
;

970 
bÊag
, 
Êag
, 
cmpFœg
;

971 
biv_p
 
biV¨
;

972 
lo›_t
 *
Õ
;

973 
˝Fwd
;

975 
°r
[12];

977 
bb
 = 
ib
->bb;

978 
Õ
 = 
	`gëIbLo›
(
ib
);

979 i‡(
dbg
) {

980 
	`¥ötf
("\nMerge incoming of c%d.%d,É:%d sa:%s,ÜpHeader %d ",

981 
ùroc
->
¥oc
->
id
,
bb
->id,
˙tExec
,
ib
->
ö¢li°
[0].
addr
,
isLpHód
);

982 
	`Ârötf
(
dbgExec
,"\nMerge incoming of c%d.%d,É:%d sa:%sÜpHeader %d",

983 
ùroc
->
¥oc
->
id
,
bb
->id,
˙tExec
,
ib
->
ö¢li°
[0].
addr
,
isLpHód
);

986 i‡(
dbg
 && 0) {

987 
	`¥ötf
("\nBefore merge\n");

988 
ªgLi°
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

989 
j
=11; j<26; j++Ë{
	`¥ötf
("Reg %d: ",j);
	`¥ötReg
(
°dout
,
ªgLi°
[j]);}

992 
bÊag
 = 0;

994 
i
=0; i<
bb
->
num_ö
; i++) {

995 
edge
 = 
bb
->
ö
[
i
];

996 
§c
 = 
edge
->src;

997 
i§c
 = &(
ùroc
->
öf_cfg
[
§c
->
id
]);

998 i‡(
isLpHód
) {

999 i‡(
§c
->
id
 < 
bb
->id) ;

1001 i‡(
dbg
) {

1002 
	`Ârötf
(
dbgExec
,"\nsrc c%d.%d L:%d, dst: c%d.%d L:%d",

1003 
ùroc
->
¥oc
->
id
, 
§c
->id, 
i§c
->
lo›_id
,

1004 
ùroc
->
¥oc
->
id
, 
bb
->id, 
ib
->
lo›_id
);

1007 
ªgCur
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1008 
ªgSrc
 = (
ªg_t
*)(
i§c
->
ªgLi°Out
);

1010 
Êag
 = 
	`mîgeMemLi°
–&(
ib
->
memLi°In
), 
i§c
->
memLi°Out
);

1011 i‡(
dbg
 && 
Êag
Ë
	`Ârötf
(
dbgExec
,"\n Changed in mem value");

1012 i‡(
Êag
Ë
bÊag
 = 1;

1014 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"\nMergeÑegisterÜist");

1015 
j
=0; j< 
NO_REG
; j++) {

1016 i‡(
dbg
 && !
	`ªgEq
(
ªgCur
[
j
],
ªgSrc
[j])) {

1017 
	`Ârötf
(
dbgExec
,"\¿%†c%d.%d ",
ªgCur
[
j
].
«me
,

1018 
ùroc
->
¥oc
->
id
,
bb
->id);

1019 
	`¥ötReg
(
dbgExec
,
ªgCur
[
j
]);

1020 
	`Ârötf
(
dbgExec
," <rS: c%d.%d ",
ùroc
->
¥oc
->
id
,
§c
->id);

1021 
	`¥ötReg
(
dbgExec
,
ªgSrc
[
j
]);

1023 
Êag
 = 
	`mîgeReg
–
ªgCur
+
j
, 
ªgSrc
[j], 
isLpHód
 );

1024 i‡(
dbg
 && 
Êag
) {

1025 
	`Ârötf
(
dbgExec
," => %†",
ªgCur
[
j
].
«me
);

1026 
	`¥ötReg
(
dbgExec
,
ªgCur
[
j
]);

1028 i‡(
Êag
Ë
bÊag
 = 1;

1033 i‡(
dbg
 && 0) {

1034 
	`¥ötf
("\nA·î mîge, ch™ge:%d\n",
bÊag
);

1035 
ªgLi°
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1036 
j
=11; j<26; j++Ë{
	`¥ötf
("Reg %d:",j);
	`¥ötReg
(
°dout
,
ªgLi°
[j]);}

1038  
bÊag
;

1039 
	}
}

1042 
gcd
(
a
, 
b
);

1052 
	$dîiveUnknown
(
ªg_t
 *
ªgLi°
, 
ö¢_t
 *
ö¢
) {

1053 
dbg
 = 0;

1054 
Êag
;

1056 
ªgPos1
, 
ªgPos2
, 
ªgPos3
;

1057 
ªgPos1
 = 
	`födReg
(
ªgLi°
, 
ö¢
->
r1
);

1058 
ªgPos2
 = 
	`födReg
(
ªgLi°
, 
ö¢
->
r2
);

1059 
ªgPos3
 = 
	`födReg
(
ªgLi°
, 
ö¢
->
r3
);

1060 
Êag
 = 0;

1061 i‡–(
ªgPos2
>-1 && 
ªgLi°
[ªgPos2].
t
==
VALUE_UNPRED
)

1062 && (
ªgPos3
>-1 && 
ªgLi°
[ªgPos3].
t
==
VALUE_UNPRED
) ) {

1063 
	`ªgUnknown
(
ªgLi°
+
ªgPos1
);

1064 
Êag
 = 1;

1066  
Êag
;

1067 
	}
}

1068 
	$biv2Lo›Id
(
biv_p
 
biv
) {

1069 
dbg
 = 0;

1070 
i
;

1071 
bivAddr
, 
ÕAddrSå
, 
ÕAddrEnd
;

1072 
cfg_node_t
 *
bb
;

1073 
ö¢_t
 *
ö¢
;

1074 
lo›_t
 *
Õ
;

1076 
ö¢
 = (
ö¢_t
*)(
biv
->insn);

1077 
i
=1; i<
num_tcfg_lo›s
; i++) {

1078 
Õ
 = 
lo›s
[
i
];

1079 
bb
 = 
Õ
->
hód
->bb; 
ÕAddrSå
 = bb->
ß
;

1080 
bb
 = 
Õ
->
èû
->bb; 
ÕAddrEnd
 = bb->
ß
+bb->
size
-1;

1081 
bivAddr
 = 
	`hexVÆue
(
ö¢
->
addr
);

1082 i‡(
ÕAddrSå
 <
bivAddr
 && bivAddr<
ÕAddrEnd
) {

1083 i‡(
dbg
) {

1084 
	`Ârötf
(
dbgExec
,"\¿BIV in° 0x%†ö L%d ",
ö¢
->
addr
,
Õ
->
id
);

1085 
	`¥ötBIV
(
dbgExec
,
biv
);

1087  
Õ
->
id
;

1091 
	}
}

1093 
	$ex∑ndAddrEx¥
(
ex¥_p
 
exp
, 
ªg_t
 *
addrEx¥
) {

1094 
dbg
 = 0;

1095 
ªg_t
* 
curReg
;

1096 
w‹kli°_p
 
ex∑ndLi°
;

1097 
biv_p
 
biv
;

1098 
i
, 
v¨Num
, 
ÕId
;

1100 i‡(
dbg
Ë{
	`Ârötf
(
dbgExec
,"\nAddrEx¥: ");
	`¥ötReg
(dbgExec,*
addrEx¥
);}

1101 
	`˛rEx¥
(
exp
);

1102 
ex∑ndLi°
 = 
NULL
;

1103 
	`addToW‹kLi°
(&
ex∑ndLi°
,
addrEx¥
);

1104 !
	`isEm±y
(
ex∑ndLi°
)) {

1105 
curReg
 = (
ªg_t
*Ë
	`ªmoveO√FromW‹kLi°
(&
ex∑ndLi°
);

1106 i‡(
dbg
){
	`Ârötf
(
dbgExec
,"\nEx∑ndÑeg: ");
	`¥ötReg
(dbgExec,*
curReg
);}

1107 i‡(
dbg
Ë{
	`Ârötf
(
dbgExec
,"\nCu∏ex¥: ");
	`¥ötEx¥
(dbgExec,
exp
);}

1108 
curReg
->
t
) {

1109 
VALUE_UNDEF
:

1110 
	`Ârötf
(
dbgExec
,"\nWarning: unknownÖarameter ináddrExpr");

1111 
v¨Num
 = 
exp
->varNum;

1112 
	`°r˝y
–
exp
->
vÆue
[
v¨Num
].
∑ø
, "T" );

1113 
exp
->
c€f
[
v¨Num
] = 1;

1114 
exp
->
v¨Num
++;

1116 
VALUE_CONST
:

1117 
exp
->
k
 +
curReg
->
vÆ
;

1119 
VALUE_PARA
:

1120 
	`Ârötf
(
dbgExec
,"\nWarning: unknownÖarameter ináddrExpr");

1121 
v¨Num
 = 
exp
->varNum;

1122 
	`˝yReg
–&(
exp
->
vÆue
[
v¨Num
]), *
curReg
);

1123 
exp
->
c€f
[
v¨Num
] = 1;

1124 
exp
->
v¨Num
++;

1126 
VALUE_BIV
:

1128 
v¨Num
 = 
exp
->varNum;

1129 
ÕId
 = 
	`biv2Lo›Id
(
curReg
->
biv
);

1130 
	`£tI¡
–&(
exp
->
vÆue
[
v¨Num
]), 
ÕId
 );

1132 
exp
->
c€f
[
v¨Num
] = 
curReg
->
biv
->
°ride
;

1133 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
," %d:L%d",

1134 
exp
->
c€f
[
v¨Num
],exp->
vÆue
[v¨Num].
vÆ
);

1135 
exp
->
v¨Num
++;

1136 
	`addToW‹kLi°
(&
ex∑ndLi°
,&(
curReg
->
biv
->
öôVÆ
));

1138 
VALUE_EXPR
:

1139 
exp
->
k
 +
curReg
->
ex¥
->k;

1140 
i
=0; i<
curReg
->
ex¥
->
v¨Num
; i++) {

1141 
v¨Num
 = 
exp
->varNum;

1142 
exp
->
c€f
[
v¨Num
] = 
curReg
->
ex¥
->c€f[
i
];

1143 i‡(
curReg
->
ex¥
->
vÆue
[
i
].
t
==
VALUE_BIV
) {

1144 
biv
 = 
curReg
->
ex¥
->
vÆue
[
i
].biv;

1145 
ÕId
 = 
	`biv2Lo›Id
(
biv
);

1146 
	`£tI¡
–&(
exp
->
vÆue
[
v¨Num
]), 
ÕId
 );

1147 
exp
->
c€f
[
v¨Num
] *
biv
->
°ride
;

1148 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
," %d:L%d",

1149 
exp
->
c€f
[
v¨Num
],exp->
vÆue
[v¨Num].
vÆ
);

1150 
	`addToW‹kLi°
(&
ex∑ndLi°
,&(
biv
->
öôVÆ
));

1153 
	`˝yReg
–&(
exp
->
vÆue
[
v¨Num
]), 
curReg
->
ex¥
->vÆue[
i
]);

1155 
exp
->
v¨Num
++;

1159 
	`¥ötf
("\¿P™i¯”x∑ndBIVË, unknow¿ty≥ %d",
curReg
->
t
);

1160 
	`exô
(1);

1162 i‡(
exp
->
v¨Num
==
MAX_EXPR_LEN
) {

1163 
	`¥ötf
("\nPanic,Éxceed MAX_EXPR_LEN ");

1164 
	`exô
(1);

1167 i‡(
dbg
Ë{
	`Ârötf
(
dbgExec
,"\nEx∑ndedÉx¥: ");
	`¥ötEx¥
(dbgExec,
exp
);}

1168 
	}
}

1169 
	$ªadSymExecResu…
(
öf_node_t
 *
ib
) {

1170 
dbg
 = 0;

1171 
k
, 
r1
,
r2
,
r3
;

1172 
ö¢_t
 *
ö¢
;

1173 
ªg_t
 *
li°In
, *
li°Out
;

1174 
jÆ
, 
ign‹e
;

1175 
ªg_t
 
tmpReg
, 
ex¥Reg
;

1176 
	`öôReg
(&
tmpReg
);öôReg(&
ex¥Reg
);

1178 
cfg_node_t
 *
bb
;

1179 
d©_ö°_t
 *
d©
;

1180 
d©Num
;

1183 
bb
 = 
ib
->bb;

1184 i‡(
ib
->
num_ö¢
!=
bb
->
num_ö°
Ë{
	`¥ötf
("\nP™i¯ib!=bb"); 
	`exô
(0);}

1186 
bb
->
num_d_ö°
=0;

1187 
k
=0; k<
ib
->
num_ö¢
; k++) {

1188 
ö¢
 = &(
ib
->
ö¢li°
[
k
]);

1189 i‡(
	`isLﬂdIn°
(
ö¢
->
›
Ë|| 
	`isSt‹eIn°
(ö¢->›)Ë
bb
->
num_d_ö°
++;

1191 
bb
->
d_ö°li°
 = 
	`ˇŒoc
(bb->
num_d_ö°
,(
d©_ö°_t
));

1195 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1196 
li°Out
 = (
ªg_t
*)(
ib
->
ªgLi°Out
);

1197 
	`c›yMemLi°
–&(
ib
->
memLi°Out
), ib->
memLi°In
);

1198  
k
=0; k<
NO_REG
; k++ ) {

1199 
	`˝yReg
(
li°Out
+
k
, 
li°In
[k]);

1202 
d©Num
 = 0;

1203  
k
 = 0; k < 
ib
->
num_ö¢
; k++ ) {

1204 
ö¢
 = &(
ib
->
ö¢li°
[
k
]);

1205 i‡(
	`isLﬂdIn°
(
ö¢
->
›
Ë|| 
	`isSt‹eIn°
(insn->op)) {

1206 
r1
 = 
	`födReg
(
li°Out
, 
ö¢
->r1);

1207 
r2
 = 
	`födReg
(
li°Out
, 
ö¢
->r2);

1208 
r3
 = 
	`födReg
(
li°Out
, 
ö¢
->r3);

1209 i‡(
dbg
) {

1210 
	`¥ötf
("\¿");
	`¥ötIn°r
(
ö¢
);

1212 
	`¥ötf
("\n%†",
ö¢
->
r1
);

1213 i‡(
r1
>=0Ë
	`¥ötReg
(
°dout
,
li°Out
[r1]);

1214 
	`¥ötf
(" %†",
ö¢
->
r2
);

1215 i‡(
r2
>=0Ë
	`¥ötReg
(
°dout
,
li°Out
[r2]);

1217 
	`¥ötf
("| %†",
ö¢
->
r3
);

1218 i‡(
r3
>=0Ë
	`¥ötReg
(
°dout
,
li°Out
[r3]);

1219 
	`¥ötf
("\n");

1221 
	`£tI¡
(&
tmpReg
, 
	`©oi
(
ö¢
->
r2
));

1223 
d©
 = &(((
d©_ö°_t
*)(
bb
->
d_ö°li°
))[
d©Num
]);

1224 
d©Num
++;

1225 
d©
->
ö¢
 = &(
ib
->
ö¢li°
[
k
]);

1226 
d©
->
addr_£t
 = 
NULL
;

1227 
d©
->
ªsideLpId
 = 
	`gëIbLo›
(
ib
)->
id
;

1228 
	`ªgO¥
("+",&
ex¥Reg
,
li°Out
[
r3
],
tmpReg
);

1229 
	`öôEx¥
–&(
d©
->
addrEx¥
) );

1230 
	`ex∑ndAddrEx¥
–&(
d©
->
addrEx¥
), &
ex¥Reg
);

1231 i‡(
dbg
Ë{
	`¥ötD©aRef
(
dbgExec
,
d©
);}

1233 
ign‹e
 = 
jÆ
; jal = 0;

1234 
	`ªgDîive
(
ib
,
ö¢
,
ign‹e
,&
jÆ
,0);

1236 
	`˛rReg
(&
tmpReg
);˛rReg(&
ex¥Reg
);

1237 
	}
}

1238 
	$™ÆyzeBlock
(
öf_node_t
 *
ib
) {

1239 
dbg
 = 0;

1240 
i
, 
j
, 
k
, 
m
, 
id
;

1241 
r1
, 
ªgPos2
, 
ªgPos3
;

1244 
jÆ
, 
ign‹e
;

1245 
Êag
;

1246 
ö¢_t
 *
ö¢
;

1247 
ªg_t
 *
ªgLi°
, *
li°In
, *
li°Out
, 
tmpReg
;

1248 
FILE
 *
Â
 = 
°dout
;

1250 
jÆ
 = 1;

1252 
	`öôReg
(&
tmpReg
);

1253 i‡(
dbg
) {

1254 
	`Ârötf
(
dbgExec
,"\nA«lyzêblock (%d,%d)", 
ib
->
bb
->
¥oc
->
id
, ib->bb->id);

1255 
	`¥ötf
("\nA«lyzêblock (%d,%d)", 
ib
->
bb
->
¥oc
->
id
, ib->bb->id);

1256 i‡(0Ë
	`¥ötMemLi°
(
Â
,
ib
->
memLi°Out
);

1257 
	`fÊush
(
dbgExec
);

1261 
	`c›yMemLi°
(&(
ib
->
memLi°Out
), ib->
memLi°In
);

1262 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1263 
li°Out
(
ªg_t
*)(
ib
->
ªgLi°Out
);

1264 
j
=0;j<
NO_REG
;j++Ë
	`˝yReg
(
li°Out
+j,
li°In
[j]);

1265 
ªgLi°
 = (
ªg_t
*)(
ib
->
ªgLi°Out
);

1266  
k
 = 0; k < 
ib
->
num_ö¢
; k++ ) {

1267 
ö¢
 = &(
ib
->
ö¢li°
[
k
]);

1269 if(
dbg
) {

1271 
	`¥ötf
("\¿k:%d ",
k
); 
	`¥ötIn°r
–
ö¢
 );

1275 
ign‹e
 = 
jÆ
; jal = 0;

1276 
	`ªgDîive
(
ib
,
ö¢
,
ign‹e
,&
jÆ
,
dbg
);

1278 i‡(
dbg
Ë
	`¥ötf
("\n");

1282 i‡(
dbg
) {

1283 
	`Ârötf
(
dbgExec
,"\nFöish block (%d,%d)", 
ib
->
bb
->
¥oc
->
id
, ib->bb->id);

1284 
	`¥ötf
("\nFöish block (%d,%d)", 
ib
->
bb
->
¥oc
->
id
, ib->bb->id);

1285 i‡(0Ë
	`¥ötMemLi°
(
Â
,
ib
->
memLi°Out
);

1286 
	`fÊush
(
dbgExec
);fÊush(
°dout
);

1289 
	}
}

1292 
	$ªgRedeföed
(* 
ªgName
, 
ö¢_t
 *
ö¢
) {

1293 *
›
 = 
ö¢
->op;

1294 
ªgPos1
;

1297 i‡(
	`°rcmp
(
ªgName
, 
ö¢
->
r1
)!=0)  0;

1299 i‡(
	`°ªq
(
›
,"lw") || streq(op,"lb") || streq(op,"lh") || streq(op,"lbu"))

1301 i‡(
	`°ªq
(
›
,"addu") || streq(op,"addiu") || streq(op,"addi"))

1303 i‡(
	`°ªq
(
›
,"ori") || streq(op,"xori") || streq(op,"andi"))

1305 i‡(
	`°ªq
(
›
,"sll") || streq(op,"srl") || streq(op,"slti")

1306 || 
	`°ªq
(
›
,"sltu"))  1;

1307 i‡(
	`°ªq
(
›
,"subu") || streq(op,"or") || streq(op,"xor"))

1310 
	}
}

1311 
	$ªInô
(
öf_¥oc_t
* 
p
, 
°¨tId
, 
ídId
, *
visôed
) {

1312 
dbg
 = 0;

1313 
öf_node_t
 *
ib
;

1314 
i
;

1316 
i
=
°¨tId
; i<=
ídId
; i++) {

1317 
visôed
[
i
]=0;

1318 i‡(
i
==0) ;

1319 
ib
 = &(
p
->
öf_cfg
[
i
]);

1320 
	`˛órRegLi°
(
ib
->
ªgLi°In
);

1321 
	`˛órRegLi°
(
ib
->
ªgLi°Out
);

1322 
	`‰ìMemLi°
–&(
ib
->
memLi°In
));

1324 
	`‰ìMemLi°
–&(
ib
->
memLi°Out
));

1326 i‡(
dbg
) {

1327 
	`Ârötf
(
dbgExec
,"\nReöô c%d.%d",
p
->
¥oc
->
id
,
ib
->
bb
->id);

1328 
	`¥ötMemLi°
(
dbgExec
,
ib
->
memLi°In
);

1329 
	`¥ötMemLi°
(
dbgExec
,
ib
->
memLi°Out
);

1330 
	`fÊush
(
dbgExec
);

1333 
	}
}

1342 
	$lo›SymExec
(
lo›_t
 *
Õ
, 
öf_¥oc_t
 *
p
, 
mu°Fœg
, 
P_Queue
 **
outQueue
) {

1343 
dbg
 = 0;

1344 
i
,
j
,
k
;

1345 
ÕTaûId
, 
ÕHódId
;

1347 
öf_node_t
 *
öNode
;

1348 
lo›_t
 *
öLp
;

1349 
öf_node_t
 *
ib
;

1350 
cfg_node_t
 *
§c
, *
d°
;

1351 
pch™ge
, 
bbch™ge
;

1352 
ªg_t
 * 
li°In
, *
li°Out
;

1354 
P_Queue
 *
pQueue
,*
qEÀm
;

1355 
ibId
, 
ÕId
;

1356 *
pI¡
;

1357 
visôed
[
MAX_OVRL_NODES
];

1359 i‡(
Õ
Ë
ÕHódId
 =Üp->
hód
->
bb
->
id
;

1360 
ÕHódId
 = 0;

1361 i‡(
Õ
 &&Üp->
èû
Ë
ÕTaûId
 =Üp->èû->
bb
->
id
;

1362 
ÕTaûId
 = 
p
->
num_bb
-1;

1364 
öNode
 = 
NULL
;

1365 i‡(
Õ
Ë
ÕId
 =Üp->
id
; lpId = 0;

1368 
pch™ge
 = 0;

1369 
ib
 = &(
p
->
öf_cfg
[
ÕHódId
]);

1370 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1371 
i
=0; i<
ib
->
bb
->
num_ö
; i++) {

1372 
öNode
 = &(
p
->
öf_cfg
[
ib
->
bb
->
ö
[
i
]->
§c
->
id
]);

1373 
li°Out
 = (
ªg_t
*)(
öNode
->
ªgLi°Out
);

1374 
k
=0; k<
NO_REG
; k++)

1375 i‡–!
	`ªgEq
(
li°In
[
k
],
li°Out
[k]) ) {

1377 
	`¥ötf
("\nRegI¿");
	`¥ötReg
(
°dout
, 
li°Out
[
k
]);

1378 
	`¥ötf
("\nRegCu∏");
	`¥ötReg
(
°dout
,
li°In
[
k
]);

1380 
pch™ge
 = 1;

1384 i‡(
dbg
) {

1385 
	`Ârötf
(
dbgExec
,"\nSym.exec ofÜoop L%d, [%d,%d]",

1386 
ÕId
,
ÕHódId
,
ÕTaûId
);

1387 
	`¥ötf
("\nSym.exec ofÜoop L%d, [%d,%d], %d",

1388 
ÕId
,
ÕHódId
,
ÕTaûId
,
mu°Fœg
);

1390 i‡(!
mu°Fœg
 && !
pch™ge
 && 
öNode
!=
NULL
) {

1391 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"\nNÿch™gêöÜo› L%d",
ÕId
);

1392 i‡(
dbg
Ë
	`¥ötf
("\nNÿch™gêöÜo› L%d",
ÕId
);

1396 
	`ªInô
(
p
, 
ÕHódId
, 
ÕTaûId
, 
visôed
);

1399 
ib
 = &(
p
->
öf_cfg
[
ÕHódId
]);

1400 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1401 i‡(
ib
->
bb
->
num_ö
>0) {

1402 
öNode
 = &(
p
->
öf_cfg
[
ib
->
bb
->
ö
[0]->
§c
->
id
]);

1403 
li°Out
 = (
ªg_t
*)(
öNode
->
ªgLi°Out
);

1404 i‡(
dbg
) {

1405 
	`¥ötf
("\nCopy ACS fromÜoopÖre-header c%d.%d -> c%d.%d",

1406 
p
->
¥oc
->
id
,
öNode
->
bb
->id,Ö->¥oc->id, 
ib
->bb->id);

1410 
	`c›yMemLi°
–&(
ib
->
memLi°In
), 
öNode
->
memLi°Out
);

1411 
k
=0; k<
NO_REG
; k++) {

1412 i‡(!
	`ªgEq
–
li°In
[
k
], 
li°Out
[k] )) {

1413 i‡(
dbg
) {

1414 
	`¥ötf
("\¿Ch™ged: %s, cur: ",
li°In
[
k
].
«me
);

1415 
	`¥ötReg
(
°dout
,
li°In
[
k
]);

1416 
	`¥ötf
("Çew: "); 
	`¥ötReg
(
°dout
,
li°Out
[
k
]);

1418 
	`˝yReg
(
li°In
+
k
, 
li°Out
[k]);

1422 
öNode
 = 
NULL
;

1427 
ib
 = &(
p
->
öf_cfg
[
ÕHódId
]);

1428 
bbch™ge
 = 
	`joöBønch
(
p
,
ib
,1);

1430 i‡(
dbg
) {

1431 
	`Ârötf
(
dbgExec
,"\nSèπÇexàL%d iã∏©ÜpHódî c%d.%d",
ÕId
,

1432 
p
->
¥oc
->
id
, 
ib
->
bb
->id);

1433 
	`¥ötf
("\nSèπÇexàL%d iã∏©ÜpHódî c%d.%d",
ÕId
,

1434 
p
->
¥oc
->
id
, 
ib
->
bb
->id);

1437 i‡(
bbch™ge
==0 && 
visôed
[
ÕHódId
]==1) ;

1439 
visôed
[
ÕHódId
] = 1;

1440 
	`ªInô
(
p
, 
ÕHódId
+1, 
ÕTaûId
, 
visôed
);

1441 
pQueue
 = 
NULL
;

1442 
	`p_íqueue
(&
pQueue
,&
ÕHódId
,lpHeadId);

1443 !
	`p_queue_em±y
(&
pQueue
)) {

1444 
˙tExec
++;

1445 i‡(
˙tExec
>=3000) {

1446 
	`¥ötf
("\nToo many iterations,ÇoÅerminate?\n");

1447 
	`exô
(1);

1449 
pI¡
 = (*)
	`p_dequeue
(&
pQueue
);
ibId
 = *pInt;

1450 
ib
 = &(
p
->
öf_cfg
[
ibId
]);

1452 i‡(
dbg
) {

1453 
	`Ârötf
(
dbgExec
,"\nA_ bb %d:%d (",
ibId
,
ib
->
bb
->
id
);

1454 i‡(
ib
->
bb
->
out_n
) {

1455 
d°
 = 
ib
->
bb
->
out_n
->dst;

1456 
	`Ârötf
(
dbgExec
,"%d,",
d°
->
id
);
	`fÊush
(dbgExec);

1458 i‡(
ib
->
bb
->
out_t
) {

1459 
d°
 = 
ib
->
bb
->
out_t
->dst;

1460 
	`Ârötf
(
dbgExec
,"%d,",
d°
->
id
);
	`fÊush
(dbgExec);

1462 
	`Ârötf
(
dbgExec
,")\n");
	`fÊush
(dbgExec);

1466 
i
=0; i<
ib
->
bb
->
num_ö
; i++) {

1468 
öNode
 = &(
p
->
öf_cfg
[
ib
->
bb
->
ö
[
i
]->
§c
->
id
]);

1470 i‡(
öNode
->
bb
->
id
 >
ib
->bb->idËib->
lo›_rﬁe
 = 
LOOP_HEAD
;

1472 i‡(
ib
->
bb
->
id
 > 
ÕHódId
 && ib->
lo›_rﬁe
 =
LOOP_HEAD
) {

1474 
öLp
 = 
	`gëIbLo›
(
ib
);

1475 
	`lo›SymExec
(
öLp
,
p
,!
visôed
[
ib
->
bb
->
id
], &
pQueue
);

1478 i‡(
dbg
) {

1479 
	`Ârötf
(
dbgExec
,"\nBackÅÿL%d [%d,%d]",
ÕId
,
ÕHódId
,
ÕTaûId
);

1480 
	`¥ötf
("\nBackÅÿL%d [%d,%d]",
ÕId
,
ÕHódId
,
ÕTaûId
);

1483 
visôed
[
ib
->
bb
->
id
] = 1;

1488 i‡(
ib
->
bb
->
id
==
ÕHódId
) {

1489 
bbch™ge
 = 1;

1492 
bbch™ge
 = 
	`joöBønch
(
p
,
ib
, 0);

1493 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"\nJoin in-status of c%d.%d",

1494 
p
->
¥oc
->
id
, 
ib
->
bb
->id);

1496 i‡(
bbch™ge
 || 
visôed
[
ib
->
bb
->
id
]==0) {

1497 
visôed
[
ib
->
bb
->
id
]=1;

1498 
	`™ÆyzeBlock
(
ib
);

1500 i‡(
ib
->
bb
->
out_n
) {

1501 
d°
 = 
ib
->
bb
->
out_n
->dst;

1502 i‡(
ÕHódId
 < 
d°
->
id
 && d°->id <
ÕTaûId
)

1504 
	`p_íqueue
(&
pQueue
,&(
d°
->
id
),dst->id);

1505 i‡(
d°
->
id
 > 
ÕTaûId
)

1507 
	`p_íqueue
(
outQueue
,&(
d°
->
id
),dst->id);

1510 i‡(
ib
->
bb
->
out_t
) {

1511 
d°
 = 
ib
->
bb
->
out_t
->dst;

1512 i‡(
ÕHódId
 < 
d°
->
id
 && d°->id <
ÕTaûId
)

1514 
	`p_íqueue
(&
pQueue
,&(
d°
->
id
),dst->id);

1515 i‡(
d°
->
id
 > 
ÕTaûId
)

1517 
	`p_íqueue
(
outQueue
,&(
d°
->
id
),dst->id);

1524 i‡(
dbg
 && 
Õ
Ë
	`Ârötf
(
dbgExec
,"\nFöish sym.exe¯o‡lo›Ü%d",Õ->
id
);

1526 
	}
}

1527 
	$doSymExec
() {

1528 
dbg
 = 0;

1529 
i
, 
j
, 
k
, 
m
, 
id
;

1530 
öf_¥oc_t
 *
p
;

1531 
ªg_t
 *
ªgLi°
;

1532 
öf_node_t
 *
ib
;

1534 i‡(
dbg
) {

1535 
	`¥ötf
("\nSèπÑeg.Éx∑nsi⁄");
	`fÊush
(
°dout
);

1536 
	`Ârötf
(
dbgExec
,"\nStartÑeg.Éxpansion");

1540  
i
 = 0; i <
¥og
.
num_¥ocs
; i++ ) {

1541 
	`¥ötf
("¥o˚duª:%d\n",
i
);

1542 
˙tExec
=0;

1543 
p
 = &(
öf_¥ocs
[
i
]);

1544 
ib
 = &(
p
->
öf_cfg
[0]);

1545 
ªgLi°
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1546 
	`£tI¡
(
ªgLi°
+0,0);

1547 
	`£tI¡
(
ªgLi°
+28,
GLOBAL_START
);

1548 
	`£tI¡
(
ªgLi°
+29,
STACK_START
);

1549 
	`ªgUnknown
(
ªgLi°
+30);

1551 
	`lo›SymExec
(
NULL
,
p
,1,NULL);

1552 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"\nEnd o‡p: %d",
i
);
	`fÊush
(dbgExec);

1554 i‡(
dbg
) {

1555 
	`¥ötf
("\nEndÑeg.Éx∑nsi⁄");
	`fÊush
(
°dout
);

1556 
	`Ârötf
(
dbgExec
,"\nEndÑeg.Éxpansion");

1558 
	}
}

1560 
	$öôBlock
() {

1561 
dbg
=0;

1562 
i
,
j
,
k
;

1563 
öf_¥oc_t
 *
p
;

1564 
öf_node_t
 *
ib
;

1565 
ªg_t
 *
ªgLi°
;

1566  
i
 = 0; i < 
¥og
.
num_¥ocs
; i++ ) {

1567 
p
 = &(
öf_¥ocs
[
i
]);

1568  
j
 = 0; j < 
p
->
num_bb
; j++ ) {

1569 
ib
 = &(
p
->
öf_cfg
[
j
]);

1570 
ib
->
memLi°In
 = 
NULL
;

1571 
ib
->
memLi°Out

NULL
;

1573 
ib
->
ªgLi°In
 = 
	`ˇŒoc
(
NO_REG
,(
ªg_t
));

1574 
	`öôRegSë
–(
ªg_t
*)(
ib
->
ªgLi°In
));

1576 
ib
->
ªgLi°Out
 = 
	`ˇŒoc
(
NO_REG
,(
ªg_t
));

1577 
	`öôRegSë
–(
ªg_t
*)(
ib
->
ªgLi°Out
));

1580 
	}
}

1581 
	$öôAŒ
() {

1582 
dbgExec
 = 
	`f›í
("dbg_exec.dbg","w");

1583 
	`£tDebugFûe
("dbg_comp.dbg");

1584 
	`öôBlock
();

1586 
	}
}

1587 
	$‰ìAŒ
() {

1588 
	`f˛o£
(
dbgExec
);

1589 
	}
}

1591 
	$execuã
() {

1592 
dbg
 = 0;

1593 
i
,
j
,
k
;

1594 
öf_¥oc_t
 *
p
;

1595 
öf_node_t
 *
ib
;

1596 
ªg_t
 *
li°In
, *
li°Out
;

1598 
ticks
 
a
,
b
;

1600 
	`öôAŒ
();

1601 
˙tExec
 = 0;

1603 
a

	`gëticks
();

1606 
c⁄Êi˘Dëe˘Fœg
 = 0;

1607 
åa˚Indu˘i⁄Fœg
 = 0;

1608 
åa˚MemFœg
 = 0;

1609 i‡(
dbg
Ë
	`¥ötf
 ("\nTrace constant value");

1610 
	`doSymExec
();

1611 i‡(
dbg
Ë
	`¥ötf
 ("\nFinishÅracing constant value");

1614 
i
=0; i<
¥og
.
num_¥ocs
; i++) {

1615 
p
&(
öf_¥ocs
[
i
]);

1616 
j
=0; j<
p
->
num_bb
; j++) {

1617 
ib
 = &(
p
->
öf_cfg
[
j
]);

1618 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1619 
li°Out
(
ªg_t
*)(
ib
->
ªgLi°Out
);

1620 
k
=0; k<
NO_REG
; k++) {

1622 i‡(
li°In
[
k
].
t
!=
VALUE_CONST
) {

1623 
	`˛rReg
–
li°In
+
k
 );

1624 
	`˛rReg
–
li°Out
+
k
 );

1631 i‡(
dbg
Ë
	`¥ötf
 ("\nDetect induction instruction");

1632 
	`dëe˘BIV
();

1633 i‡(
dbg
Ë
	`¥ötf
 ("\nFinish detecting induction instruction");

1638 
åa˚MemFœg
 = 1;

1639 
åa˚Indu˘i⁄Fœg
 = 1;

1640 i‡(
dbg
Ë
	`¥ötf
("\nTrace mem & induction value");

1641 
	`doSymExec
();

1642 i‡(
dbg
Ë
	`¥ötf
("\nFinishÅracing mem & induction value");

1645 i‡(
dbg
) {

1646 
	`Ârötf
(
dbgExec
,"\nRód sym.exe¯ªsu…");
	`fÊush
(dbgExec);

1647 
	`¥ötf
("\nRód sym.exe¯ªsu…");
	`fÊush
(
°dout
);

1650 
i
=0; i<
¥og
.
num_¥ocs
; i++) {

1651 
p
&(
öf_¥ocs
[
i
]);

1652 
j
=0; j<
p
->
num_bb
; j++) {

1653 
ib
 = &(
p
->
öf_cfg
[
j
]);

1654 
	`ªadSymExecResu…
(
ib
);

1658 
b

	`gëticks
();

1659 
	`¥ötf
("\n===================================================\n");

1660 
	`¥ötf
("E°ablishÅø˚Üök %l‡£cs\n", (
b
 - 
a
)/((1.0Ë* 
CPU_MHZ
));

1661 
	`¥ötf
("===================================================\n");

1663 
	`‰ìAŒ
();

1666 
	}
}

1679 
	$dëe˘BIV_ﬁd
() {

1680 
dbg
 = 0;

1681 
i
,
j
,
k
,
m
;

1682 
biv_p
 
biV¨
;

1684 
ö¢_t
 *
ö¢
;

1685 
i_°r
, 
i_öô
;

1686 
ªg_t
 *
ªgLi°
;

1687 
w‹kli°_p
 
biv_li°
, 
bivNode
, 
¥vNode
;

1689 
lo›_t
 *
cur_Õ
, *
∑r_Õ
;

1690 
P_Queue
 *
pQueue
, *
eEÀm
;

1691 
öf_node_t
 *
hód
,*
èû
, *
cur
;

1692 
cfg_node_t
 *
blk
, *
blk_hód
, *
blk_èû
, *
d°
;

1693 
cfg_edge_t
 *
edge
;

1694 
visôed
[256];

1696 i‡(
dbg
) {

1697 
	`Ârötf
(
dbgExec
,"\nSèπ dëe˘ög indu˘i⁄ v¨ %d",
num_tcfg_lo›s
);

1698 
	`fÊush
(
dbgExec
);

1701 
i
=0; i<
num_tcfg_lo›s
; i++) {

1702 
cur_Õ
 = 
lo›s
[
i
];

1704 i‡(
dbg
 && (!
cur_Õ
 || !(cur_Õ->
hód
Ë|| !(cur_Õ->
èû
))){

1705 i‡(!
cur_Õ
) {

1706 
	`Ârötf
(
dbgExec
,"\nNuŒÜp_id %d",
i
);
	`fÊush
(dbgExec);

1709 i‡(!
cur_Õ
->
hód
Ë
	`Ârötf
(
dbgExec
,"\nNullÜp head");

1710 
	`Ârötf
(
dbgExec
,"\nHód id: %d",
cur_Õ
->
hód
->
bb
->
id
);

1711 i‡(!
cur_Õ
->
èû
Ë
	`Ârötf
(
dbgExec
,"\nNullÜpÅail");

1712 
	`Ârötf
(
dbgExec
,"\nTaû id: %d",
cur_Õ
->
èû
->
bb
->
id
);

1714 
	`fÊush
(
dbgExec
);

1716 i‡(
cur_Õ
==
NULL
 || cur_Õ->
hód
==NULL || cur_Õ->
èû
==NULL) ;

1718 
biv_li°
 = 
NULL
;

1719 
blk_hód
 = 
cur_Õ
->
hód
->
bb
;

1720 
blk_èû
 = 
cur_Õ
->
èû
->
bb
;

1721 i‡(
dbg
) {

1722 
	`Ârötf
(
dbgExec
,"\nLoop %d head (%d:%d)Åail (%d:%d)",

1723 
cur_Õ
->
id
, 
blk_hód
->
¥oc
->id, blk_head->id,

1724 
blk_èû
->
¥oc
->
id
, blk_tail->id);

1725 
	`fÊush
(
dbgExec
);

1727 
j
=
blk_hód
->
id
; j<=
blk_èû
->id; j++Ë
visôed
[j]=0;

1730 
pQueue
 = 
NULL
;

1731 
	`p_íqueue
(&
pQueue
, 
blk_hód
, blk_hód->
id
);

1732 
visôed
[
blk_hód
->
id
]=1;

1733 !
	`p_queue_em±y
(&
pQueue
)) {

1734 
blk
 = (
cfg_node_t
*Ë
	`p_dequeue
(&
pQueue
);

1736 
edge
 = 
blk
->
out_n
;

1737 i‡(
edge
) {

1738 
d°
 = 
edge
->dst;

1739 i‡(
blk_hód
->
id
<=
d°
->id && d°->id<=
blk_èû
->id

1740 &&
visôed
[
d°
->
id
]==0) {

1741 
	`p_íqueue
(&
pQueue
, 
d°
, d°->
id
);

1742 
visôed
[
d°
->
id
]=1;

1745 
edge
 = 
blk
->
out_t
;

1746 i‡(
edge
) {

1747 
d°
 = 
edge
->dst;

1748 i‡(
blk_hód
->
id
<=
d°
->id && d°->id<=
blk_èû
->id

1749 &&
visôed
[
d°
->
id
]==0) {

1750 
	`p_íqueue
(&
pQueue
, 
d°
, d°->
id
);

1751 
visôed
[
d°
->
id
]=1;

1756 
cur
 = &(
öf_¥ocs
[
blk
->
¥oc
->
id
].
öf_cfg
[blk->id]);

1757 i‡(
dbg
) {

1758 
	`Ârötf
(
dbgExec
,"\nBB (%d,%dËL%dÇum:%d sa:%s",
blk
->
¥oc
->
id
,

1759 
blk
->
id
,
	`gëIbLo›
(
cur
)->id, cur->
num_ö¢
, cur->
ö¢li°
[0].
addr
);

1760 
	`fÊush
(
dbgExec
);

1763 
ªgLi°
 = (
ªg_t
*)(
cur
->
ªgLi°Out
);

1764 
k
=0; k<
cur
->
num_ö¢
; k++) {

1765 
ö¢
 = &(
cur
->
ö¢li°
[
k
]);

1767 i‡(
ö¢
->
Êag
==
BIV_INST
) ;

1768 
i_°r
 = 
	`checkBivSåide
(
ªgLi°
,
ö¢
);

1769 i‡(
i_°r
 !
INFINITY
) {

1770 i‡(
dbg
) {

1771 
	`Ârötf
(
dbgExec
,"\nBIV: insn: %s (%s,0,%d)",

1772 
ö¢
->
addr
,ö¢->
r1
,
i_°r
);

1773 
	`fÊush
(
dbgExec
);

1777 
biV¨
 = 
	`¸óãBIV
(
ªgLi°
,
ö¢
);

1778 
	`addToW‹kLi°
(&
biv_li°
, 
biV¨
);

1785 
bivNode
 = 
biv_li°
; 
¥vNode
 = 
NULL
;

1786 
bivNode
) {

1787 
biV¨
 = (
biv_p
)
bivNode
->
d©a
;

1789 i‡(
	`isSt‹eIn°
(
ö¢
->
›
)

1790 && 
	`°rcmp
(
biV¨
->
ªgName
,
ö¢
->
r1
)==0) {

1791 
biV¨
->
Êag
 |
BIV_SAVED
;

1792 i‡(
dbg
) {

1793 
	`Ârötf
(
dbgExec
,"\nSaved: insn %s |%s(%s,0,%d)",

1794 
ö¢
->
addr
,((
ö¢_t
*)(
biV¨
->insn))->addr,

1795 
biV¨
->
ªgName
,biV¨->
°ride
);

1800 i‡(
biV¨


1801 && 
	`°rcmp
(((
ö¢_t
*)(
biV¨
->
ö¢
))->
addr
,insn->addr)!=0

1802 && (
biV¨
->
Êag
 & 
BIV_SAVED
)==0

1803 && 
	`ªgRedeföed
(
biV¨
->
ªgName
, 
ö¢
)) {

1805 i‡(
dbg
) {

1806 
	`Ârötf
(
dbgExec
,"\nRedefined: insn %s |%s(%s,0,%d)",

1807 
ö¢
->
addr
,((
ö¢_t
*)(
biV¨
->insn))->addr,

1808 
biV¨
->
ªgName
,biV¨->
°ride
);

1809 
	`fÊush
(
dbgExec
);

1812 
	`‰ì
(
biV¨
);

1813 
bivNode
->
d©a
 = 
NULL
;

1814 i‡(
¥vNode
) {

1816 
¥vNode
->
√xt
 = 
bivNode
->next;

1817 
	`‰ì
(
bivNode
);

1818 
bivNode
 = 
¥vNode
->
√xt
;

1822 
biv_li°
 = 
bivNode
->
√xt
;

1823 
	`‰ì
(
bivNode
);

1824 i‡(
biv_li°
Ë
bivNode
 = biv_li°->
√xt
;

1825 
bivNode
 = 
NULL
;

1829 
¥vNode
 = 
bivNode
;

1830 
bivNode
 = bivNode->
√xt
;

1835 
bivNode
 = 
biv_li°
; bivNode; bivNode=bivNode->
√xt
) {

1836 
biV¨
 = 
bivNode
->
d©a
;

1837 i‡(
biV¨
Ë((
ö¢_t
*)(biV¨->
ö¢
))->
Êag
 |
BIV_INST
;

1839 
bivNode
 = 
biv_li°
;

1840 i‡(
dbg
) {

1841 
	`Ârötf
(
dbgExec
,"\nDetected inVar ");

1842 
bivNode
!=
NULL
) {

1843 
biV¨
 = (
biv_p
Ë
bivNode
->
d©a
;

1844 
	`Ârötf
(
dbgExec
," (%s,0,%dË",
biV¨
->
ªgName
,biV¨->
°ride
);

1845 
bivNode
 = bivNode->
√xt
;

1850 
cur_Õ
->
biv_li°
 = biv_list;

1851 i‡(
dbg
) {

1852 
	`Ârötf
(
dbgExec
,"\¿BIVÜi° o‡L%d ",
cur_Õ
->
id
);

1853 
bivNode
 = 
biv_li°
; bivNode; bivNodêbivNode->
√xt
) {

1854 
biV¨
 = (
biv_p
Ë
bivNode
->
d©a
;

1855 
	`¥ötBIV
(
dbgExec
,
biV¨
);

1859 
	}
}

1860 
	$lo›SymExec
(
lo›_t
 *
Õ
, 
öf_¥oc_t
 *
p
, 
mu°Fœg
, 
P_Queue
 **
outQueue
) {

1861 
dbg
 = 0;

1862 
i
,
j
,
k
;

1863 
ÕTaûId
, 
ÕHódId
;

1865 
öf_node_t
 *
öNode
;

1866 
lo›_t
 *
öLp
;

1867 
öf_node_t
 *
ib
;

1868 
cfg_node_t
 *
§c
, *
d°
;

1869 
pch™ge
, 
bbch™ge
;

1870 
ªg_t
 * 
li°In
, *
li°Out
;

1872 
P_Queue
 *
pQueue
,*
qEÀm
;

1873 
ibId
, 
ÕId
;

1874 *
pI¡
;

1875 
visôed
[
MAX_OVRL_NODES
];

1878 
pch™ge
 = 0;

1879 
ib
 = &(
p
->
öf_cfg
[
ÕHódId
]);

1880 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1881 
i
=0; i<
ib
->
bb
->
num_ö
; i++) {

1882 
öNode
 = &(
p
->
öf_cfg
[
ib
->
bb
->
ö
[
i
]->
§c
->
id
]);

1883 
li°Out
 = (
ªg_t
*)(
öNode
->
ªgLi°Out
);

1884 
k
=0; k<
NO_REG
; k++)

1885 i‡–!
	`ªgEq
(
li°In
[
k
],
li°Out
[k]) ) {

1887 
	`¥ötf
("\nRegI¿");
	`¥ötReg
(
°dout
, 
li°Out
[
k
]);

1888 
	`¥ötf
("\nRegCu∏");
	`¥ötReg
(
°dout
,
li°In
[
k
]);

1890 
pch™ge
 = 1;

1894 i‡(
dbg
) {

1895 
	`Ârötf
(
dbgExec
,"\nSym.exec ofÜoop L%d, [%d,%d]",

1896 
ÕId
,
ÕHódId
,
ÕTaûId
);

1897 
	`¥ötf
("\nSym.exec ofÜoop L%d, [%d,%d], %d",

1898 
ÕId
,
ÕHódId
,
ÕTaûId
,
mu°Fœg
);

1900 i‡(!
mu°Fœg
 && !
pch™ge
 && 
öNode
!=
NULL
) {

1901 i‡(
dbg
Ë
	`Ârötf
(
dbgExec
,"\nNÿch™gêöÜo› L%d",
ÕId
);

1902 i‡(
dbg
Ë
	`¥ötf
("\nNÿch™gêöÜo› L%d",
ÕId
);

1906 
	`ªInô
(
p
, 
ÕHódId
, 
ÕTaûId
, 
visôed
);

1909 
ib
 = &(
p
->
öf_cfg
[
ÕHódId
]);

1910 
li°In
 = (
ªg_t
*)(
ib
->
ªgLi°In
);

1911 i‡(
ib
->
bb
->
num_ö
>0) {

1912 
öNode
 = &(
p
->
öf_cfg
[
ib
->
bb
->
ö
[0]->
§c
->
id
]);

1913 
li°Out
 = (
ªg_t
*)(
öNode
->
ªgLi°Out
);

1914 
k
=0; k<
NO_REG
; k++) {

1915 i‡(!
	`ªgEq
–
li°In
[
k
], 
li°Out
[k] )) {

1916 i‡(
dbg
) {

1917 
	`¥ötf
("\¿Ch™ged: %s, cur: ",
li°In
[
k
].
«me
);

1918 
	`¥ötReg
(
°dout
,
li°In
[
k
]);

1919 
	`¥ötf
("Çew: "); 
	`¥ötReg
(
°dout
,
li°Out
[
k
]);

1921 
	`˝yReg
(
li°In
+
k
, 
li°Out
[k]);

1924 
	`c›yMemLi°
–&(
ib
->
memLi°In
), 
öNode
->
memLi°Out
);

1926 
öNode
 = 
NULL
;

1929 
pch™ge
 = 0;

1930 
pch™ge
) {

1933 
	}
}

	@symexec.h

32 #i‚de‡
SYM_EXEC_H


33 
	#SYM_EXEC_H


	)

34 
	~"comm⁄.h
"

36 
	#NO_REG
 32

	)

39 
	#DERI_LEN
 128

40 
	#VALUE_UNDEF
 0

	)

41 
	#VALUE_CONST
 1

	)

42 
	#VALUE_PARA
 2

	)

43 
	#VALUE_EXPR
 3

	)

44 
	#VALUE_BIV
 4

	)

45 
	#VALUE_UNPRED
 
VALUE_PARA


	)

47 
löór_ex¥
 * 
	tex¥_p
;

48 
BIV
 * 
	tbiv_p
;

52 
	m«me
[4];

53 
	mt
;

54 
	mvÆ
;

55 
ex¥_p
 
	mex¥
;

56 
biv_p
 
	mbiv
;

57 
	m∑ø
[4];

58 
	mÊag
;

59 } 
	tªg_t
;

61 
£tI¡
(
ªg_t
 *
ªg
, 
k
);

62 
öôReg
(
ªg_t
 *
ªg
);

63 
˛rReg
(
ªg_t
 *
ªg
);

64 
ªgUnknown
(
ªg_t
 *
ªg
);

65 
ªgEq
(
ªg_t
 
ªg1
,Ñeg_à
ªg2
);

66 
˝yReg
(
ªg_t
 *
d°
,Ñeg_à
§c
);

68 
¥ötReg
(
FILE
 *
Â
, 
ªg_t
 
ªg
);

69 
födReg
(
ªg_t
 *
ªgLi°
, 
ªgName
[]);

71 
öôRegSë
(
ªg_t
 *
ªgLi°
);

72 
˛órRegLi°
(
ªg_t
 *
ªgLi°
);

75 
mîgeReg
(
ªg_t
 *
d°Reg
,Ñeg_à
§cReg
, 
isBackEdge
);

76 
ªgO¥
(*
›
, 
ªg_t
 *
rD
,Ñeg_à
r1
,Ñeg_à
r2
);

83 
£tNewP¨a
(*
∑ø
);

91 
	#BIV_SAVED
 0x1

	)

92 
	sBIV
 {

93 *
	mö¢
;

95 
ªg_t
 
	möôVÆ
;

96 
	m›r
[8];

97 
	m°ride
;

98 
	mªgName
[10];

99 
	mÊag
;

101 
BIV
 
	tbiv_s
;

104 
upd©eInôVÆ
(
biv_p
 
biV¨
, 
ªg_t
 
öôVÆ
);

105 
bivEq
(
biv_p
 
öV¨1
, biv_∞
öV¨2
);

106 
˝yBIV
(
biv_p
 
v¨D°
, biv_∞
v¨Src
);

107 
¥ötBIV
(
FILE
 *
Â
, 
biv_p
 
biV¨
);

113 
	#MAX_EXPR_LEN
 3

	)

114 
	slöór_ex¥
 {

115 
ªg_t
 
	mvÆue
[
MAX_EXPR_LEN
];

116 
	mc€f
[
MAX_EXPR_LEN
];

117 
	madded
[
MAX_EXPR_LEN
];

118 
	mk
;

119 
	mv¨Num
;

122 
löór_ex¥
 
	tex¥_s
;

125 
¥ötEx¥
(
FILE
* 
Â
, 
ex¥_p
 
ex¥
);

126 
compuãEx¥
(*
›
, 
ex¥_p
 
ex¥D
,Éx¥_∞
ex¥1
,Éx¥_∞
ex¥2
);

127 
˝yEx¥
(
ex¥_p
 
ex¥D°
,Éx¥_∞
ex¥Src
);

128 
ªg2ex¥
(
ªg_t
 *
r
);

129 
£tEx¥
(
ex¥_p
 
ex¥
, 
ªg_t
 
r
);

130 
˛rEx¥
(
ex¥_p
 
ex¥
);

131 
ex¥Eq
(
ex¥_p
 
ex¥1
,Éx¥_∞
ex¥2
);

132 
öôEx¥
(
ex¥_p
 
ex¥
);

138 
	ssym_mem‹y_modñ
 {

139 
	mö°Addr
;

140 
ªg_t
 
	mwrôeAddr
;

141 
ªg_t
 
	mªgVÆue
;

143 
sym_mem‹y_modñ
 
	tmem_s
;

144 
sym_mem‹y_modñ
* 
	tmem_p
;

148 *
	mö¢
;

149 
ex¥_s
 
	maddrEx¥
;

150 
w‹kli°_p
 
	maddr_£t
;

151 
	mmax_miss
;

152 
	mmax_exec
;

153 
	mªsideLpId
;

155 } 
	td©_ö°_t
;

158 
biv2Lo›Id
(
biv_p
 
biv
);

160 
ex∑ndAddrEx¥
(
ex¥_p
 
exp
, 
ªg_t
 *
addrEx¥
);

161 
¥ötD©aRef
(
FILE
 *
Â
, 
d©_ö°_t
* 
d©In°
);

162 
gëAddrD
(
d©_ö°_t
* 
d©In°
);

	@symexec_value.c

1 
	~"symexec.h
"

3 
FILE
 *
	gdbgF
;

7 
	$£tNewP¨a
(*
∑ø
) {

8 
∑øCou¡
 = 0;

9 
«me
[4];

10 
dbg
 = 1;

12 
	`•rötf
(
«me
,"V%d",
∑øCou¡
);

13 
∑øCou¡
++;

14 
∑ø
 = 
	`ˇŒoc
(
	`°æí
(
«me
)+1,();

15 
	`°r˝y
(
∑ø
,
«me
);

16 i‡(
dbg
Ë
	`Ârötf
(
dbgF
,"\nNewÖ¨a: %s",
«me
);

17 
	}
}

21 
	$upd©eInôVÆ
(
biv_p
 
biV¨
, * 
öôVÆ
) {

22 
dbg
 = 0;

23 
	}
}

24 
	$cmpBIV
(
biv_p
 
öV¨1
, biv_∞
öV¨2
) {

25 i‡(
	`cmpReg
(

26 i‡(
öV¨1
->
°ride
 !
öV¨2
->stride)  1;

27 i‡(
	`°rcmp
(
öV¨1
->
ªgName
, 
öV¨2
->regName)!=0)  1;

29 
	}
}

30 
	$˝yBIV
(
biv_p
 
v¨D°
, biv_∞
v¨Src
) {

31 
v¨D°
->
ö¢
 = 
v¨Src
->insn;

32 
	`£tReg
(
v¨D°
->
öôVÆue
,
v¨Src
->öôVÆue.
ty≥
,v¨Src->öôVÆue.
vÆue
);

33 
	`°r˝y
(
v¨D°
->
›r
,
v¨Src
->opr);

34 
v¨D°
->
°ride
 = 
v¨Src
->stride;

35 
	}
}

36 
	$¥ötBIV
(
FILE
 *
Â
, 
biv_p
 
biV¨
) {

37 
	`Ârötf
(
Â
," BIV (%s,%s,%dË",
biV¨
->
ªgName
,biV¨->
öô
,biV¨->
°ride
);

38 
	`fÊush
(
Â
);

39 
	}
}

42 
	$compuãEx¥
(*
›r
, 
ex¥_p
 *
ex¥1
,Éx¥_∞*
ex¥2
) {

43 
dbg
 = 0;

44 
pﬁy_ex¥_t
 *
cur1
, *
cur2
, *
¥ev1
, *
¥ev2
, *
num
;

45 
i
,
Êag
, 
disFœg
, 
fö
;

46 
tmp
;

48 i‡(
dbg
) {

50 
	`Ârötf
(
dbgAddr
,"\n E1: ");

51 
	`¥ötEx¥essi⁄
(
dbgAddr
,
ex¥1
);

52 
	`Ârötf
(
dbgAddr
," %†E2: ",
›r
);

53 
	`¥ötEx¥essi⁄
(
dbgAddr
,
ex¥2
);

55 i‡(
›r
[0]=='+' || o¥[0]=='-'Ë
disFœg
 = 0;

56 
disFœg
 = 1;

58 
cur1
 = 
ex¥1
; cur1; cur1 = cur1->
√xt
Ëcur1->
added
 = 0;

59 
cur2
 = 
ex¥2
; cur2; cur2 = cur2->
√xt
Ëcur2->
added
 = 0;

60 
cur1
 = 
ex¥1
;
cur2
 = 
ex¥2
;

61 i‡(
cur1
 && 
cur2
 && (cur1->
√xt
==
NULL
 && cur2->√xt==NULLËË
disFœg
 = 0;

62 i‡(
disFœg
 == 0) {

67 
cur1
!=
NULL
) {

68 
cur2
 = 
ex¥2
;

69 
Êag
 = 0;

70 
fö
 = 1;

71 
cur2
!=
NULL
) {

72 i‡(
cur2
->
added
!=0) {

73 
cur2
 = cur2->
√xt
; ;

75 i‡(
cur2
->
c€f
==0) {

76 
cur2
->
added
=2;

77 
cur2
 = cur2->
√xt
; ;

79 
fö
 = 0;

80 i‡(
	`°rcmp
(
cur1
->
ªgName
,
cur2
->regName)==0

81 && 
cur2
->
ªgName
[0]=='$' && 
cur1
->regName[0]=='$'){

82 
Êag
 = 1; ;

84 i‡(
cur1
->
ªgName
[0]=='1' && 
cur2
->regName[0]=='1') {

85 
Êag
 = 2; ;

87 
cur2
 = cur2->
√xt
;

89 i‡(
fö
==1) ;

90 i‡(
dbg
) {

92 
	`Ârötf
(
dbgAddr
,"\n C1: ");

93 
	`¥ötEx¥essi⁄
(
dbgAddr
,
cur1
);

94 
	`Ârötf
(
dbgAddr
," %†C2: ",
›r
);

95 
	`¥ötEx¥essi⁄
(
dbgAddr
,
cur2
);

97 
Êag
) {

100 
cur1
->
added
=0;

101 
cur2
->
added
=2;

102 i‡(
	`°rcmp
(
›r
,"+")==0) {

103 
cur1
->
c€f
 +
cur2
->coef;

105 i‡(
	`°rcmp
(
›r
,"-")==0) {

106 
cur1
->
c€f
 -
cur2
->coef;

109 
	`Ârötf
(
dbgAddr
,"\nUnknown opr 1: %s %s %s",

110 
cur1
->
ªgName
,
›r
,
cur2
->ªgName);
	`fÊush
(
°dout
);

114 
cur1
->
added
=0;

115 
cur2
->
added
=2;

117 i‡(
	`°rcmp
(
›r
,"+")==0) {

118 
cur1
->
c€f
 +
cur2
->coef;

120 i‡(
	`°rcmp
(
›r
,"-")==0) {

121 
cur1
->
c€f
 -
cur2
->coef;

123 i‡(
	`°rcmp
(
›r
,"*")==0) {

124 
cur1
->
c€f
 *
cur2
->coef;

126 i‡(
	`°rcmp
(
›r
,"<<")==0) {

127 
i
=0;i<
cur2
->
c€f
;i++Ë
cur1
->coef*=2;

130 
	`Ârötf
(
dbgAddr
,"\nUnknown opr 2: %s %s %s",

131 
cur1
->
ªgName
,
›r
,
cur2
->ªgName);
	`fÊush
(
°dout
);

137 
cur1
 = cur1->
√xt
;

140 
cur1
=
ex¥1
; cur1->
√xt
; cur1=cur1->next);

142 
cur2
 = 
ex¥2
;

143 
cur2
!=
NULL
 && cur2->
added
!=0Ëcur2=cur2->
√xt
;

144 i‡(
cur2
Ëcur2->
added
 = 1;

148 i‡(
	`°rcmp
(
›r
,"+")==0 || strcmp(opr,"-")==0) {

150 
cur2
->
added
 = 3;

151 
cur1
->
√xt
 = 
cur2
;

152 
cur1
 = 
cur2
;

155 i‡(
cur2
->
ªgName
[0]=='$' || cur2->regName[0]=='T') {

156 
tmp
 = 
cur1
->
c€f
;

157 
cur1
->
c€f
 = 
cur2
->coef;

158 
cur2
->
c€f
 = 
tmp
;

159 
	`•rötf
(
cur1
->
ªgName
,"%s",
cur2
->regName);

161 
cur2
->
added
 = 2;

162 i‡(
	`°rcmp
(
›r
,"*")==0) {

163 
cur1
->
c€f
 *
cur2
->coef;

165 i‡(
	`°rcmp
(
›r
,"<<")==0) {

166 
i
=0;i<
cur2
->
c€f
;i++Ë
cur1
->coef*=2;

169 
	`Ârötf
(
dbgAddr
,"\nUnknow¿%d:%†%†%d:%s",
cur1
->
c€f
,

170 
cur1
->
ªgName
,
›r
,
cur2
->
c€f
,cur2->regName);

176 i‡(
ex¥2
->
√xt
==
NULL
) {

177 
cur1
 = 
ex¥1
;

178 
cur2
 = 
ex¥2
;

179 
Êag
 = 0;

182 
cur2
 = 
ex¥1
;

183 
cur1
 = 
ex¥2
;

184 i‡(
dbg
) {

185 
	`Ârötf
(
dbgAddr
,"\nReverseÉxpr ");

186 
	`¥ötEx¥essi⁄
(
dbgAddr
,
ex¥1
);

187 
	`¥ötEx¥essi⁄
(
dbgAddr
,
ex¥2
);

189 
Êag
 = 1;

192 
cur2
!=
NULL
) {

193 i‡(
cur2
->
ªgName
[0]=='$') {

194 
	`¥ötf
("\nNotáffine function");

195 
	`¥ötEx¥essi⁄
(
°dout
,
ex¥1
);

196 
	`¥ötf
(" %†",
›r
);

197 
	`¥ötEx¥essi⁄
(
°dout
,
ex¥2
);

198 
	`fÊush
(
°dout
);

199 
	`exô
(1);

201 
cur2
 = cur2->
√xt
;

204 i‡(
Êag
Ë
cur2
 = 
ex¥1
;

205 
cur2
 = 
ex¥2
;

206 
cur1
!=
NULL
) {

207 
cur1
->
added
 = 2; 
cur2
->added = 2;

208 i‡(
	`°rcmp
(
›r
,"*")==0) {

209 
cur1
->
c€f
 *
cur2
->coef;

211 i‡(
	`°rcmp
(
›r
,"/")==0) {

212 
cur1
->
c€f
 /
cur2
->coef;

214 i‡(
	`°rcmp
(
›r
,"<<")==0) {

215 
i
=0;i<
cur2
->
c€f
;i++Ë
cur1
->coef*=2;

218 
	`Ârötf
(
dbgAddr
,"\nUnknown opr 5: %s %s %s",

219 
cur1
->
ªgName
,
›r
,
cur2
->ªgName);
	`fÊush
(
°dout
);

221 
cur1
 = cur1->
√xt
;

223 i‡(
Êag
) {

224 
ex¥1
->
c€f
 = 
ex¥2
->coef;

225 
	`•rötf
(
ex¥1
->
ªgName
,"%s",
ex¥2
->regName);

226 
ex¥1
->
added
 = 0;

227 
ex¥2
->
added
 = 2;

232 
cur1
 = 
ex¥1
;
¥ev1
 = 
NULL
;

233 
cur1
!=
NULL
Ë{
¥ev1
cur1;cur1 = cur1->
√xt
;}

234 
cur2
 = 
ex¥2
;

235 
cur2
!=
NULL
) {

236 i‡(
cur2
->
added
==3) {

238 
cur2
 = cur2->
√xt
;

240 i‡(
cur2
->
added
==2) {

242 
¥ev2
 = 
cur2
;

243 
cur2
 = cur2->
√xt
;

244 i‡(
¥ev2
!=
NULL
Ë
	`‰ì
(prev2);

247 
cur1
 = 
cur2
;

248 
cur2
 = cur2->
√xt
;

249 i‡(
¥ev1
!=
NULL
) {

250 
¥ev1
->
√xt
 = 
cur1
;

251 
¥ev1
 = 
cur1
;

252 
¥ev1
->
√xt
 = 
NULL
;

255 
ex¥1
 = 
cur2
;

256 
¥ev1
 = 
ex¥1
;

260 i‡(
dbg
) {

261 
	`Ârötf
(
dbgAddr
,"\n = ");

262 
	`¥ötEx¥essi⁄
(
dbgAddr
,
ex¥1
);

264 
	}
}

265 
	$˝yEx¥
(
ex¥_p
 
ex¥D°
,Éx¥_∞
ex¥Src
) {

266 
ex¥_p
 
§cNode
, 
d°Node
, 
¥vNode
;

267 
§cNode
 = 
ex¥Src
;

268 
d°Node
 = 
ex¥D°
;

269 
d°Node
 && 
§cNode
) {

270 
d°Node
->
c€f
 = 
§cNode
->coef;

271 
	`°r˝y
(
d°Node
->
v¨
,
§cNode
->var);

273 
¥vNode
 = 
d°Node
;

274 
d°Node
 = d°Node->
√xt
;

275 
§cNode
 = srcNode->
√xt
;

277 
§cNode
) {

278 
d°Node
 = 
	`mÆloc
((
ex¥_s
));

279 
d°Node
->
√xt
 = 
NULL
;

280 
d°Node
->
c€f
 = 
§cNode
->coef;

281 
	`°r˝y
(
d°Node
->
v¨
,
§cNode
->var);

283 
¥vNode
->
√xt
 = 
d°Node
;

284 
¥vNode
 = 
d°Node
;

285 
§cNode
 = srcNode->
√xt
;

287 
d°Node
) {

288 
¥vNode
 = 
d°Node
;

289 
d°Node
 = d°Node->
√xt
;

290 
	`‰ì
(
¥vNode
);

292 
	}
}

293 
	$‰ìEx¥
(
ex¥_p
 
ex¥
) {

294 
ex¥_p
 
¥vNode
, 
curNode
;

295 
¥vNode
 = 
NULL
;

296 
curNode
 = 
ex¥
;

297 
curNode
) {

298 
¥vNode
 = 
curNode
;

299 
curNode
 = curNode->
√xt
;

300 i‡(
¥vNode
Ë
	`‰ì
(prvNode);

302 
	}
}

	@tcfg.c

41 
	~<°dlib.h
>

42 
	~"comm⁄.h
"

43 
	~"tcfg.h
"

44 
	~"lo›s.h
"

46 
¥og_t
 
¥og
;

48 
tcfg_node_t
 **
	gtcfg
;

50 
	gnum_tcfg_nodes
 = 0, 
	gtcfg_size
 = 0;

52 
tcfg_edge_t
 **
	gtcfg_edges
;

54 
	gnum_tcfg_edges
 = 0;

56 
tcfg_∆ök_t
 ***
	gbbi_m≠
;

62 
	$bbi_pid
(
tcfg_node_t
 *
bbi
)

66  
bbi
->
bb
->
¥oc
->
id
;

68 
	}
}

74 
	$bbi_bid
(
tcfg_node_t
 *
bbi
)

78  
bbi
->
bb
->
id
;

80 
	}
}

86 
	$c⁄d_bbi
(
tcfg_node_t
 *
bbi
)

90  (
bbi
->
bb
->
ty≥
 =
CTRL_COND
);

92 
	}
}

98 
	$bbi_backedge
(
tcfg_edge_t
 *
edge
)

102 
¥oc_t
 *
¥oc1
, *
¥oc2
;

104 
bid1
, 
bid2
;

106 
¥oc1
 = 
edge
->
§c
->
bb
->
¥oc
;

108 
¥oc2
 = 
edge
->
d°
->
bb
->
¥oc
;

110 
bid1
 = 
edge
->
§c
->
bb
->
id
;

112 
bid2
 = 
edge
->
d°
->
bb
->
id
;

114 i‡((
¥oc1
 =
¥oc2
Ë&& (
bid1
 >
bid2
))

122 
	}
}

128 
	$bbi_is_lo›back
(
tcfg_edge_t
 *
edge
, 
hód
, 
èû
)

132 i‡((
edge
->
d°
->
bb
->
id
 =
hód
)

134 && (
	`BETWEEN
(
edge
->
§c
->
bb
->
id
, 
hód
, 
èû
))

136 && (
edge
->
d°
->
bb
->
¥oc
 =edge->
§c
->bb->proc))

144 
	}
}

150 
	$bbi_is_ªtu∫
(
tcfg_node_t
 *
bbi
)

154 i‡((
bbi
->
bb
->
out_n
 =
NULL
Ë&& (bbi->bb->
out_t
 == NULL))

162 
	}
}

164 
tcfg_node_t
 *

166 
	$√w_tcfg_node
(
cfg_node_t
 *
bb
)

170 
tcfg_node_t
 *
bbi
;

172 
bbi
 = (
tcfg_node_t
 *Ë
	`ˇŒoc
(1, (tcfg_node_t));

174 
	`CHECK_MEM
(
bbi
);

176 
bbi
->
bb
 = bb;

178 
bbi
->
id
 = 
num_tcfg_nodes
;

180  
bbi
;

182 
	}
}

184 
	$dñëe_tcfg_edge
(
tcfg_edge_t
 *
edge
)

187 
tcfg_edge_t
 *
edge1
;

188 
tcfg_node_t
* 
§c
, *
d°
;

190 
§c
 = 
edge
->src;

191 
d°
 = 
edge
->dst;

193 i‡(
§c
->
out
 =
edge
) {

194 
§c
->
out
 = src->out->
√xt_out
;

196 
edge1
 = 
§c
->
out
;

198 
edge1
->
√xt_out
 !
edge
)

199 
edge1
 =Édge1->
√xt_out
;

201 
edge1
->
√xt_out
 = 
edge
->next_out;

204 i‡(
d°
->
ö
 =
edge
) {

205 
d°
->
ö
 = d°->ö->
√xt_ö
;

207 
edge1
 = 
d°
->
ö
;

209 
edge1
->
√xt_ö
 !
edge
)

210 
edge1
 =Édge1->
√xt_ö
;

212 
edge1
->
√xt_ö
 = 
edge
->next_in;

215 
	`‰ì
(
edge
);

216 
	}
}

217 
tcfg_edge_t
 *

219 
	$√w_tcfg_edge
(
tcfg_node_t
 *
§c
,Åcfg_node_à*
d°
, 
bønch
)

223 
tcfg_edge_t
 *
edge
, *
edge1
;

225 
edge
 = (
tcfg_edge_t
 *Ë
	`ˇŒoc
(1, (tcfg_edge_t));

227 
	`CHECK_MEM
(
edge
);

229 
edge
->
§c
 = src;

230 
edge
->
d°
 = dst;

231 
edge
->
bønch
 = branch;

233 i‡(
§c
->
out
 =
NULL


236 
§c
->
out
 = 
edge
;

240 
edge1
 = 
§c
->
out
;

242 
edge1
->
√xt_out
 !
NULL
)

244 
edge1
 =Édge1->
√xt_out
;

246 
edge1
->
√xt_out
 = 
edge
;

250 i‡(
d°
->
ö
 =
NULL


253 
d°
->
ö
 = 
edge
;

257 
edge1
 = 
d°
->
ö
;

259 
edge1
->
√xt_ö
 !
NULL
)

261 
edge1
 =Édge1->
√xt_ö
;

263 
edge1
->
√xt_ö
 = 
edge
;

267  
edge
;

269 
	}
}

277 
	$vu_lo›
(
lo›_t
* 
Õ
) {

278 
i
;

279 
lo›_t
* 
Õp
;

280 
ﬁd_tcfg_nodes
 = 
num_tcfg_nodes
;

281 
¬odes
 = 0;

282 
tcfg_node_t
** 
sub_tcfg
;

283 
cfg_node_t
* 
bb
;

284 
tcfg_edge_t
* 
edge
;

285 
tcfg_edge_t
* 
§c_out
;

287 
sub_tcfg
 = (
tcfg_node_t
 **Ë
	`ˇŒoc
(
num_tcfg_nodes
, (tcfg_node_t *));

288 
	`CHECK_MEM
(
sub_tcfg
);

290 
i
 = 0; i < 
ﬁd_tcfg_nodes
; i++) {

291 
Õp
 = 
lo›_m≠
[
i
];

293 i‡(
Õp
 !
Õ
 && 
lo›_comm_™˚s
[Õ->
id
][lpp->id] !=Üp) {

294 
sub_tcfg
[
tcfg
[
i
]->
id
] =Åcfg[i];

297 #ifde‡
_DEBUG_CRPD


298 
	`¥ötf
("TCFGÇodê%d i†ö˛uded i¿lo› sèπögáà0x%x\n", 
i
, 
Õ
->
hód
->
bb
->
ß
);

300 i‡(
num_tcfg_nodes
 >
tcfg_size
) {

302 
tcfg_size
 +
TCFG_STEP_SIZE
;

303 
tcfg
 = (
tcfg_node_t
 **Ë
	`ªÆloc
(tcfg,

304 
tcfg_size
 * (
tcfg_node_t
 *));

305 
	`CHECK_MEM
(
tcfg
);

308 
sub_tcfg
[
tcfg
[
i
]->
id
] =Åcfg[
num_tcfg_nodes
] = 
	`√w_tcfg_node
(

309 
tcfg
[
i
]->
bb
);

311 
tcfg
[
num_tcfg_nodes
]->
is_unc⁄dôi⁄Æ
 =Åcfg[
i
]->is_unconditional;

312 
num_tcfg_nodes
++;

316 
lo›_m≠
 = (
lo›_t
 **Ë
	`ªÆloc
(loop_map,

317 (
num_tcfg_nodes
Ë* (
lo›_t
 *));

318 
	`CHECK_MEM
(
lo›_m≠
);

320 
i
 = 
ﬁd_tcfg_nodes
; i < 
num_tcfg_nodes
; i++) {

321 
lo›_m≠
[
i
] = 
Õ
;

325 
edge
 = 
Õ
->
hód
->
ö
;Édge;Édgêedge->
√xt_ö
) {

326 
§c_out
 = 
edge
->
§c
->
out
;

329 i‡(
edge
->
§c
 =
Õ
->
èû
)

332 
§c_out
) {

333 i‡(
§c_out
->
d°
 =
Õ
->
hód
) {

334 
tcfg_node_t
* 
§c_out_d°
 = 
§c_out
->
§c
;

335 
§c_out_bønch
 = 
§c_out
->
bønch
;

337 
	`dñëe_tcfg_edge
(
§c_out
);

338 
	`√w_tcfg_edge
(
§c_out_d°
, 
sub_tcfg
[
Õ
->
hód
->
id
],

339 
§c_out_bønch
);

342 
§c_out
 = src_out->
√xt_out
;

347 
i
 = 0; i < 
ﬁd_tcfg_nodes
; i++) {

348 
tcfg_edge_t
* 
out
;

349 
Õp
 = 
lo›_m≠
[
i
];

351 i‡(
Õp
 !
Õ
 && 
lo›_comm_™˚s
[Õ->
id
][lpp->id] !=Üp)

354 i‡(
Õ
->
èû
 =
tcfg
[
i
]) {

355 
	`√w_tcfg_edge
(
sub_tcfg
[
tcfg
[
i
]->
id
], 
Õ
->
hód
, 
TAKEN
);

359 
out
 = 
Õ
->
èû
->out; out; ouàout->
√xt_out
) {

360 i‡(
out
->
d°
 !
Õ
->
hód
) {

361 
	`√w_tcfg_edge
(
sub_tcfg
[
tcfg
[
i
]->
id
], 
out
->
d°
, 
NOT_TAKEN
);

368 
out
 = 
tcfg
[
i
]->out; out; ouàout->
√xt_out
) {

369 
	`√w_tcfg_edge
(
sub_tcfg
[
tcfg
[
i
]->
id
], sub_tcfg[
out
->
d°
->id],

370 
out
->
bønch
);

374 
	`‰ì
(
sub_tcfg
);

376 
	}
}

378 
	$£t_t›ﬁogiˇl_tcfg
() {

379 * 
visôed
;

380 
i
, 
found
;

382 
visôed
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

383 
	`CHECK_MEM
(
visôed
);

384 
t›o_tcfg
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

387 
visôed
[0] = 1;

388 
num_t›o_tcfg
 = 0;

389 
t›o_tcfg
[
num_t›o_tcfg
++] = 0;

392 
found
 = 0;

393 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

394 i‡(
visôed
[
i
] =0 && 
	`Æl_¥ede˚ss‹s_visôed
(
tcfg
[i], visited)) {

395 
visôed
[
i
] = 1;

396 
t›o_tcfg
[
num_t›o_tcfg
++] = 
tcfg
[
i
]->
id
;

397 
found
 = 1;

400 i‡(!
found
)

404 
	`‰ì
(
visôed
);

405 
	}
}

409 
	$£t_t›ﬁogiˇl_tcfg_lo›s
() {

410 * 
visôed
;

411 
i
, 
found
;

413 
visôed
 = (*Ë
	`ˇŒoc
(
num_tcfg_nodes
, ());

414 
	`CHECK_MEM
(
visôed
);

417 
visôed
[0] = 1;

420 
found
 = 0;

421 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

422 i‡(
visôed
[
i
] =0 && 
	`Æl_¥ede˚ss‹s_visôed
(
tcfg
[i], visited)) {

423 
visôed
[
i
] = 1;

425 i‡(
lo›_m≠
[
i
] =
NULL


427 
	`¥ötf
("\nBUGGG! %d %d\n", 
i
, 
num_tcfg_nodes
);

428 i‡(
lo›_m≠
[
i
] !
lo›s
[0] &&Üo›_m≠[i]->
hód
 =
tcfg
[i])

429 
t›o_tcfg_lo›s
[
num_t›o_tcfg_lo›s
++] = 
lo›_m≠
[
i
]->
id
;

430 
found
 = 1;

433 i‡(!
found
)

437 
	`‰ì
(
visôed
);

438 
	}
}

443 
	$vútuÆ_uƒﬁl
() {

444 
i
, 
t›oidx
;

451 i‡(!
num_tcfg_nodes
) {

452 
	`Ârötf
(
°dîr
, "CreateÅheÅransformed CFG first\n");

453 
	`exô
(-1);

457 
num_t›o_tcfg_lo›s
 = 0;

458 
t›o_tcfg_lo›s
 = (*Ë
	`ˇŒoc
(
num_tcfg_lo›s
, ());

459 
	`CHECK_MEM
(
t›o_tcfg_lo›s
);

460 
	`£t_t›ﬁogiˇl_tcfg_lo›s
();

468 
i
 = 
num_tcfg_lo›s
 - 2; i >= 0; i--) {

469 
t›oidx
 = 
t›o_tcfg_lo›s
[
i
];

470 #ifde‡
_DEBUG_CRPD


471 
	`¥ötf
("Lo› id = %d wôhÉndáddªs†0x%x\n", 
i
, 
lo›s
[i]->
èû
->
bb
->
ß
);

473 
	`vu_lo›
(
lo›s
[
t›oidx
]);

477 
i
 = 0; i < 
num_tcfg_lo›s
; i++) {

478 
	`‰ì
(
lo›s
[
i
]);

479 
	`‰ì
(
lo›_comm_™˚s
[
i
]);

481 
	`‰ì
(
lo›s
);

482 
	`‰ì
(
lo›_m≠
);

483 
	`‰ì
(
lo›_comm_™˚s
);

484 
	`‰ì
(
t›o_tcfg_lo›s
);

485 
	}
}

487 
bdïth
;

488 
ã°_dïth
(
pid
, 
dïth
);

500 
	$¥oc_ölöe
(
¥oc_t
 *
¥oc
, 
tcfg_node_t
 *
ˇŒ_bbi
,Åcfg_node_à*
ªt_bbi
,

501 
dïth
)

505 
i
;

506 
cfg_node_t
 *
bb
;

507 
tcfg_node_t
 **
sub_tcfg
;

509 
sub_tcfg
 = (
tcfg_node_t
 **Ë
	`ˇŒoc
(
¥oc
->
num_bb
 + 1, (tcfg_node_t *));

511 
	`CHECK_MEM
(
sub_tcfg
);

515 
i
 = 0; i < 
¥oc
->
num_bb
; i++) {

517 i‡(
num_tcfg_nodes
 >
tcfg_size
) {

521 
tcfg_size
 += 64;

523 
tcfg
 = (
tcfg_node_t
 **Ë
	`ªÆloc
(tcfg,

524 
tcfg_size
 * (
tcfg_node_t
 *));

527 
sub_tcfg
[
i
] = 
tcfg
[
num_tcfg_nodes
] = 
	`√w_tcfg_node
(&
¥oc
->
cfg
[i]);

529 
num_tcfg_nodes
++;

535 
i
 = 0; i < 
¥oc
->
num_bb
; i++) {

537 i‡(
¥oc
->
cfg
[
i
].
ty≥
 =
CTRL_CALL
) {

543 i‡(
¥oc
->
cfg
[
i
].
ˇŒì
 !=Öroc->cfg[i].proc) {

544 
	`¥oc_ölöe
(
¥oc
->
cfg
[
i
].
ˇŒì
, 
sub_tcfg
[i], sub_tcfg[i + 1],

548 i‡(!
bdïth
)

550 i‡(
	`ã°_dïth
(
¥oc
->
id
, 
dïth
 + 1)) {

552 
	`¥oc_ölöe
(
¥oc
->
cfg
[
i
].
ˇŒì
, 
sub_tcfg
[i],

553 
sub_tcfg
[
i
 + 1], 
dïth
 + 1);

565 i‡(
ˇŒ_bbi
 !
NULL


568 
	`√w_tcfg_edge
(
ˇŒ_bbi
, 
sub_tcfg
[0], 
TAKEN
);

570 
i
 = 0; i < 
¥oc
->
num_bb
; i++) {

576 i‡(
¥oc
->
cfg
[
i
].
ty≥
 =
CTRL_CALL
)

582 i‡(
¥oc
->
cfg
[
i
].
ty≥
 =
CTRL_RET
) {

584 i‡(
ªt_bbi
 !
NULL


587 
	`√w_tcfg_edge
(
sub_tcfg
[
i
], 
ªt_bbi
, 
TAKEN
);

593 i‡(
¥oc
->
cfg
[
i
].
out_n
 !
NULL
) {

595 
bb
 = 
¥oc
->
cfg
[
i
].
out_n
->
d°
;

597 
	`√w_tcfg_edge
(
sub_tcfg
[
i
], sub_tcfg[
bb
->
id
], 
NOT_TAKEN
);

601 i‡(
¥oc
->
cfg
[
i
].
out_t
 !
NULL
) {

603 
bb
 = 
¥oc
->
cfg
[
i
].
out_t
->
d°
;

605 
	`√w_tcfg_edge
(
sub_tcfg
[
i
], sub_tcfg[
bb
->
id
], 
TAKEN
);

611 
	`‰ì
(
sub_tcfg
);

613 
	}
}

616 
	$Æl_¥ede˚ss‹s_visôed
(
tcfg_node_t
* 
bbi
, * 
visôed
) {

617 
tcfg_edge_t
* 
e
;

619 
e
 = 
bbi
->
ö
;É;É =É->
√xt_ö
) {

621 i‡(
lo›_m≠
[
bbi
->
id
] &&Üo›_m≠[bbi->id] =lo›_m≠[
e
->
§c
->id]

622 && 
bbi
 =
lo›_m≠
[bbi->
id
]->
hód
)

624 i‡(!
visôed
[
e
->
§c
->
id
])

629 
	}
}

633 
	$cﬁÀ˘_tcfg_edges
()

637 
i
, 
edge_id
 = 0;

639 
tcfg_edge_t
 *
e
;

641 
num_tcfg_edges
 = 0;

643 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

645 
e
 = 
tcfg
[
i
]->
out
;É !
NULL
;É =É->
√xt_out
)

647 
num_tcfg_edges
++;

651 
tcfg_edges
 = (
tcfg_edge_t
 **Ë
	`ˇŒoc
(
num_tcfg_edges
, (tcfg_edge_t *));

653 
	`CHECK_MEM
(
tcfg_edges
);

655 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

657 
e
 = 
tcfg
[
i
]->
out
;É !
NULL
;É =É->
√xt_out
) {

659 
e
->
id
 = 
edge_id
++;

661 
tcfg_edges
[
e
->
id
] =É;

667 
	}
}

671 
	$upd©e_bbi_m≠
(
tcfg_node_t
 *
bbi
)

675 
tcfg_∆ök_t
 *
∆
;

677 
pid
, 
bid
;

679 
∆
 = (
tcfg_∆ök_t
 *Ë
	`ˇŒoc
(1, (tcfg_nlink_t));

681 
∆
->
bbi
 = bbi;

683 
pid
 = 
	`bbi_pid
(
bbi
);

684 
bid
 = 
	`bbi_bid
(
bbi
);

686 
∆
->
√xt
 = 
bbi_m≠
[
pid
][
bid
];

688 
bbi_m≠
[
pid
][
bid
] = 
∆
;

690 
	}
}

694 
	$buûd_bbi_m≠
()

698 
i
;

700 
bbi_m≠
 = (
tcfg_∆ök_t
 ***Ë
	`ˇŒoc
(
¥og
.
num_¥ocs
,

702 (
tcfg_∆ök_t
 **));

704 
	`CHECK_MEM
(
bbi_m≠
);

706 
i
 = 0; i < 
¥og
.
num_¥ocs
; i++) {

708 
bbi_m≠
[
i
] = (
tcfg_∆ök_t
 **Ë
	`ˇŒoc
(
¥og
.
¥ocs
[i].
num_bb
,

710 (
tcfg_∆ök_t
 *));

712 
	`CHECK_MEM
(
bbi_m≠
[
i
]);

716 
i
 = 0; i < 
num_tcfg_nodes
; i++)

718 
	`upd©e_bbi_m≠
(
tcfg
[
i
]);

720 
	}
}

725 
	$¥og_å™
()

729 
¥oc_t
 *
¥oc
;

731 
FILE
 *
·cfg
;

732 
num_tcfg_nodes
 = 
num_tcfg_edges
 = 
num_tcfg_lo›s
 = 
tcfg_size
 = 0;

733 
¥oc
 = &
¥og
.
¥ocs
[¥og.
maö_¥oc
];

734 
	`¥oc_ölöe
(
¥oc
, 
NULL
, NULL, 0);

736 
	`cﬁÀ˘_tcfg_edges
();

745 
	`buûd_bbi_m≠
();

747 
·cfg
 = 
	`f›í
("tcfg.map", "w");

748 
	`dump_tcfg
(
·cfg
);

749 
	`f˛o£
(
·cfg
);

750 
	}
}

754 
	$˛ór_bbi_Êags
()

758 
i
;

760 
i
 = 0; i < 
num_tcfg_nodes
; i++)

762 
tcfg
[
i
]->
Êags
 = 0;

764 
	}
}

768 
	$˛ór_tcfg_edge_Êags
()

772 
i
;

774 
i
 = 0; i < 
num_tcfg_edges
; i++)

776 
tcfg_edges
[
i
]->
Êags
 = 0;

778 
	}
}

782 
	$bbi_ty≥
(
tcfg_node_t
 *
bbi
)

786  
bbi
->
bb
->
ty≥
;

788 
	}
}

792 
	$dump_tcfg
(
FILE
 *
Â
)

796 
tcfg_node_t
 *
bbi
;

798 
tcfg_edge_t
 *
edge
;

800 
i
;

802 
	`Ârötf
(
Â
, "dumpÅcfg...\n");

804 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

806 
bbi
 = 
tcfg
[
i
];

808 
	`Ârötf
(
Â
, "%d(%d.%d): [ ", 
bbi
->
id
, 
	`bbi_pid
(bbi), 
	`bbi_bid
(bbi));

810 
edge
 = 
bbi
->
out
;Édgê!
NULL
;Édgêedge->
√xt_out
) {

812 
	`Ârötf
(
Â
, "%d ", 
edge
->
d°
->
id
);

816 
	`Ârötf
(
Â
, "]\n");

820 
	`Ârötf
(
Â
, "\n");

822 
	}
}

	@tcfg.h

25 #i‚de‡
TCFG_H


26 
	#TCFG_H


	)

28 
	~"cfg.h
"

29 
	~"comm⁄.h
"

34 
	#V_START_ID
 -1

	)

35 
	#V_END_ID
 -2

	)

36 
	#TCFG_STEP_SIZE
 64

	)

38 
tcfg_edge_t
 
	ttcfg_edge_t
;

42 
cfg_node_t
 *
	mbb
;

43 
	mid
;

44 
tcfg_edge_t
 *
	mö
, *
	mout
;

45 
	mÊags
;

46 
	mlo›_id
;

47 
	mexec_cou¡
;

48 
	m™Æ_cou¡
;

49 
	mdˇche_dñay
;

50 
	mö°_ˇche_dñay
;

52 
	mn_≥rsi°í˚
;

53 
	mn_d©a_≥rsi°í˚
;

54 
	mn_u1_≥rsi°í˚
;

55 
	mn_u1_d©a_≥rsi°í˚
;

56 
	mn_l2_≥rsi°í˚
;

58 
	mis_unc⁄dôi⁄Æ
;

60 
	mmax_miss
;

63 
acs_p
** 
	macs_ö
;

64 
acs_p
** 
	macs_out
;

66 
w‹kli°_p
* 
	mm∑_acs_ö
;

67 
w‹kli°_p
* 
	mm∑_acs_out
;

69 
w‹kli°_p
 
	mm∑_acsö_¨r
, 
	mm∑_acsout_¨r
;

70 
w‹kli°_p
 
	mm∑_Õ_ö
, 
	mm∑_Õ_out
;

71 
w‹kli°_p
 
	mm∑_ac¶2ö_¨r
, 
	mm∑_ac¶2out_¨r
;

72 
w‹kli°_p
 
	mm∑_Õl2_ö
, 
	mm∑_Õl2_out
;

74 
w‹kli°_p
* 
	maddªss_£t
;

75 
w‹kli°_p
* 
	maddr£t_l1
;

76 
w‹kli°_p
* 
	maddr£t_l2
;

77 } 
	ttcfg_node_t
;

84 
	stcfg_edge_t
 {

85 
	mid
;

86 
	mbønch
;

87 
tcfg_node_t
 *
	m§c
, *
	md°
;

88 
tcfg_edge_t
 *
	m√xt_out
;

89 
tcfg_edge_t
 *
	m√xt_ö
;

90 
	mÊags
;

93 
tcfg_∆ök_t
 
	ttcfg_∆ök_t
;

94 
	stcfg_∆ök_t
 {

95 
tcfg_node_t
 *
	mbbi
;

96 
tcfg_∆ök_t
 *
	m√xt
;

99 
tcfg_ñök_t
 
	ttcfg_ñök_t
;

101 
	stcfg_ñök_t
 {

102 
tcfg_edge_t
 *
	medge
;

103 
tcfg_ñök_t
 *
	m√xt
;

107 
¥og_å™
();

110 
˛ór_bbi_Êags
();

113 
bbi_ty≥
();

116 
dump_tcfg
(
FILE
 *
Â
);

118 
	gnum_t›o_tcfg
;

119 * 
	gt›o_tcfg
;

120 
	gnum_t›o_tcfg_lo›s
;

121 * 
	gt›o_tcfg_lo›s
;

	@test.c

1 
	~<°dio.h
>

3 
	tticks
;

5 
__ölöe__
 
ticks
 
	$gëticks
()

7 
a
, 
d
;

8 
asm
 vﬁ©ûe("rdtsc" : "˜" (
a
), "=d" (
d
));

9  ((
ticks
)
a
Ë| ((—icks)
d
) << 32);

10 
	}
}

12 
	$maö
()

14 
ticks
 
a
,
b
;

16 
a
 = 
	`gëticks
();

17 
	`¶ìp
(10);

18 
b
 = 
	`gëticks
();

20 
	`¥ötf
("Timê%lf\n", (
b
 - 
a
)/((1.0)*2533821000));

21 
	}
}

	@unicache.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<as£π.h
>

5 
	~"ˇche.h
"

6 
	~"tcfg.h
"

7 
	~"addªss.h
"

8 
	~"comm⁄.h
"

9 
	~"b¥ed.h
"

10 
	~"lo›s.h
"

12 
	#CINFTY
 
assoc_l2


	)

14 
tcfg_node_t
** 
tcfg
;

15 
num_tcfg_nodes
;

16 
¥og_t
 
¥og
;

19 
iß_t
* 
iß
;

20 
gcd
(
a
, 
b
);

22 
n£ts
, 
bsize
, 
assoc
;

24 
n£ts_dl1
, 
bsize_dl1
, 
assoc_dl1
, 
ˇche_dl1_œt
;

28 
n£ts_l2
, 
bsize_l2
, 
assoc_l2
, 
ˇche_dl2_œt
, 
ˇche_û2_œt
;

29 
mem_œt
[2];

30 
íabÀ_û2ˇche
;

31 
íabÀ_ul2ˇche
;

34 
b¥ed_scheme
;

35 
de_ö°_t
 ***
mp_ö°s
;

36 *
num_mp_ö°s
;

38 
acs_p
 
Dif„ªn˚
◊cs_∞
acs
, 
mem_blk_£t_t
* 
mem_blk
);

39 
buûd_gøph
(
¥oc_t
* 
¥oc
);

40 
ch™ge_œyout
();

41 
ch™ge_addªss
();

42 
	gcou¡
;

43 
gëShi·edBlock
(
tblock
);

44 
Æloˇãd
(
mem_blk_£t_t
* 
¨g
);

45 
addM≠pög
(
mem_blk_£t_t
* 
¨g
, 
«ddr
);

47 #ifde‡
_DEBUG


48 
dumpCacheBB
(
acs_p
** 
acs
, 
FILE
* 
Â
);

49 
	g™Æysis
 = 0;

50 
	gunifõd
 = 0;

52 
	gl1_d1_ps
 = 0;

53 
	gl1_i1_ps
 = 0;

54 
	gi1_u1_ps
 = 0;

55 
	gu1_d1_ps
 = 0;

56 
	g›t
 = 0;

57 
ric_p
 
gëAddrBa£Off£t
(
de_ö°_t
* 
ö°
, 
ba£
, 
off£t
, 
›t
);

58 
ric_p
 
gëAddrBa£Index
(
de_ö°_t
* 
ö°
, 
ba£
, 
ödex
, 
›t
);

59 
	gX
, 
	gY
, 
	gB
;

62 
	$¥îr
(* 
msg
) {

63 
	`¥ötf
("PANIC ***** %s. ExôögÇow.......\n", 
msg
);

64 
	`exô
(-1);

65 
	}
}

68 
	$¥ötAcs
(
acs_p
** 
acs_¥öt
) {

69 
i
, 
num£t
;

70 
acs_p
* 
acs_£t_¥öt
 = 
NULL
;

71 
mem_blk_£t_t
* 
mem_blk_h_¥öt
 = 
NULL
;

73 
num£t
 = 0;Çum£à< 
MAX_CACHE_SET
;Çumset++) {

74 
	`¥ötf
("£à%i:\n", 
num£t
);

75 
i
 = 0; i < 
CACHE_SET_SIZE
; i++) {

76 
acs_£t_¥öt
 = 
acs_¥öt
[
num£t
];

77 i‡(
acs_£t_¥öt
 !
NULL
) {

78 i‡(
acs_£t_¥öt
[
i
] !
NULL


80 
mem_blk_h_¥öt
 = 
acs_£t_¥öt
[
i
]->
mem_blk_h
;

82 
	`¥ötf
("-");

84 
	`¥ötf
("N/A");

86 
mem_blk_h_¥öt
 !
NULL
) {

87 
	`¥ötf
("%ò", 
mem_blk_h_¥öt
->
block
);

88 
mem_blk_h_¥öt
 = mem_blk_h_¥öt->
√xt
;

91 
	`¥ötf
("\n");

94 
	`¥ötf
("\n");

95 
	}
}

98 
acs_p
* 
	$makeCacheSë
() {

99 
acs_p
* 
ªt
;

103 
ªt
 = (
acs_p
 *Ë
	`mÆloc
((
CACHE_SET_SIZE
 + 1) * (acs_p));

104 
	`CHECK_MEM
(
ªt
);

105 
	`mem£t
(
ªt
, 0, (
CACHE_SET_SIZE
 + 1Ë* (
acs_p
));

107  
ªt
;

108 
	}
}

111 
	$‰ìMemBlock
(
mem_blk_£t_t
* 
hód
) {

112 
mem_blk_£t_t
* 
ôî
;

114 i‡(!
hód
)

117 
	`‰ìMemBlock
(
hód
->
√xt
);

118 
hód
->
√xt
 = 
NULL
;

120 #ifde‡
_DELETE


121 
	`¥ötf
("Fªeög mem block = %x\n", 
hód
);

124 
	`‰ì
(
hód
);

125 
	}
}

128 
	$‰ìCacheLöe
(
acs_p
 
a˛
) {

129 i‡(!
a˛
)

132 
	`‰ìMemBlock
(
a˛
->
mem_blk_h
);

133 
a˛
->
mem_blk_h
 = 
NULL
;

135 
	`‰ì
(
a˛
);

136 
	}
}

139 
	$‰ìCacheSë
(
acs_p
* 
acs
) {

140 
i
;

142 i‡(!
acs
)

145 
i
 = 0; i <
CACHE_SET_SIZE
; i++) {

146 
	`‰ìCacheLöe
(
acs
[
i
]);

147 
acs
[
i
] = 
NULL
;

150 
	`‰ì
(
acs
);

151 
	}
}

154 
	$‰ìCacheSèã
(
acs_p
** 
acs
) {

155 
i
;

157 i‡(!
acs
)

160 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

161 
	`‰ìCacheSë
(
acs
[
i
]);

162 
acs
[
i
] = 
NULL
;

165 
	`‰ì
(
acs
);

166 
	}
}

169 
mem_blk_£t_t
* 
	$gëMem‹yBlocks
(
ric_p
 
addr
) {

170 
mem_blk_£t_t
* 
mem_£t
 = 
NULL
;

171 
mem_blk_£t_t
* 
ãmp
;

172 
i
;

173 
¥ev
 = -1;

174 
cou¡
 = 0;

176 
i
 = 
addr
->
lowî_bound
; i <addr->
uµî_bound
; i +addr->
°ride
) {

177 i‡(
¥ev
 =
	`GET_MEM
(
i
)

180 
¥ev
 = 
	`GET_MEM
(
i
);

181 
ãmp
 = (
mem_blk_£t_t
 *Ë
	`mÆloc
((mem_blk_set_t));

182 
	`CHECK_MEM
(
ãmp
);

185 
ãmp
->
block
 = 
¥ev
;

186 
ãmp
->
√xt
 = 
mem_£t
;

187 
mem_£t
 = 
ãmp
;

188 
cou¡
++;

191 i‡(
cou¡
 > 
MAX_CACHE_SET
 * 
CACHE_SET_SIZE


194 i‡(!
addr
->
°ride
)

198  
mem_£t
;

199 
	}
}

202 
acs_p
 
	$makeEm±y
() {

203 
acs_p
 
ªt
;

205 
ªt
 = (
acs_p
Ë
	`mÆloc
((
acs_s
));

206 
	`CHECK_MEM
(
ªt
);

208 
ªt
->
mem_blk_h
 = 
NULL
;

210  
ªt
;

211 
	}
}

215 
	$isResidít
(
mem_blk_£t_t
* 
mem_blk_h
, mem_blk_£t_t* 
ôem
) {

216 
mem_blk_£t_t
* 
ôî
;

218 
ôî
 = 
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

219 i‡(
ôî
->
block
 =
ôem
->block)

224 
	}
}

229 
	$checkF‹In˛usi⁄SögÀ
(
acs_p
* 
acs_ö
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

230 
mem_blk_£t_t
* 
ôî
;

231 
i
;

233 
i
 = 0; i <
CACHE_SET_SIZE
; i++) {

234 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

235 i‡(!
acs_ö
[
i
])

237 i‡(
	`isResidít
(
acs_ö
[
i
]->
mem_blk_h
, 
ôî
))

240 i‡(
ôî
) {

241  
i
;

247 
	}
}

250 
	$gëC¨döÆôy
(
mem_blk_£t_t
* 
mem_blk_£t
) {

251 
mem_blk_£t_t
* 
ôî
;

252 
cou¡
 = 0;

254 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
)

255 
cou¡
++;

257  
cou¡
;

258 
	}
}

261 
acs_p
 
	$makeC›y
(
acs_p
 
acs_ö
) {

262 
acs_p
 
ªt
;

263 
i
;

264 
mem_blk_£t_t
* 
ôî
;

266 i‡(!
acs_ö
)

267  
NULL
;

269 
ªt
 = (
acs_p
Ë
	`mÆloc
((
acs_s
));

270 
	`CHECK_MEM
(
ªt
);

271 
	`mem£t
(
ªt
, 0, (
acs_s
));

272 
ªt
->
mem_blk_h
 = 
NULL
;

274 
ôî
 = 
acs_ö
->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

275 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
((mem_blk_set_t));

276 
	`CHECK_MEM
(
ãmp
);

277 
ãmp
->
block
 = 
ôî
->block;

278 
ãmp
->
√xt
 = 
ªt
->
mem_blk_h
;

279 
ªt
->
mem_blk_h
 = 
ãmp
;

282  
ªt
;

283 
	}
}

286 
acs_p
 
	$makeCacheBlock
(
mem_blk_£t_t
* 
mem_blk_£t
) {

287 
acs_p
 
ªt
;

288 
i
;

289 
mem_blk_£t_t
* 
ôî
;

291 i‡(!
mem_blk_£t
)

292  
NULL
;

294 
ªt
 = (
acs_p
Ë
	`mÆloc
((
acs_s
));

295 
	`CHECK_MEM
(
ªt
);

296 
	`mem£t
(
ªt
, 0, (
acs_s
));

297 
ªt
->
mem_blk_h
 = 
NULL
;

299 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

300 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
((mem_blk_set_t));

301 
	`CHECK_MEM
(
ãmp
);

302 
ãmp
->
block
 = 
ôî
->block;

303 
ãmp
->
√xt
 = 
ªt
->
mem_blk_h
;

304 
ªt
->
mem_blk_h
 = 
ãmp
;

307  
ªt
;

308 
	}
}

312 
acs_p
 
	$I¡î£˘
(
acs_p
 
acs1
,ács_∞
acs2
) {

313 
acs_p
 
ªt
;

314 
i
;

315 
mem_blk_£t_t
* 
ôî
;

317 i‡(!
acs1
 || !
acs2
)

318  
NULL
;

320 
ªt
 = 
	`makeEm±y
();

322 
ôî
 = 
acs2
->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

327 i‡(
	`isResidít
(
acs1
->
mem_blk_h
, 
ôî
)) {

328 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
(

329 (
mem_blk_£t_t
));

330 
	`CHECK_MEM
(
ãmp
);

331 
ãmp
->
block
 = 
ôî
->block;

332 
ãmp
->
√xt
 = 
ªt
->
mem_blk_h
;

333 
ªt
->
mem_blk_h
 = 
ãmp
;

337  
ªt
;

338 
	}
}

342 
acs_p
 
	$Uni⁄
(
acs_p
 
acs1
,ács_∞
acs2
) {

343 
acs_p
 
ªt
;

344 
i
;

345 
mem_blk_£t_t
* 
ôî
;

347 i‡(!
acs1
 && !
acs2
)

348  
NULL
;

351 
ªt
 = 
	`makeC›y
(
acs1
);

353 i‡(!
acs2
)

354  
ªt
;

356 
ôî
 = 
acs2
->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

357 i‡(!
ªt
) {

358 
ªt
 = (
acs_p
Ë
	`mÆloc
((
acs_s
));

359 
	`CHECK_MEM
(
ªt
);

360 
ªt
->
mem_blk_h
 = 
NULL
;

362 i‡(!
	`isResidít
(
ªt
->
mem_blk_h
, 
ôî
)) {

363 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
(

364 (
mem_blk_£t_t
));

365 
	`CHECK_MEM
(
ãmp
);

366 
ãmp
->
block
 = 
ôî
->block;

367 
ãmp
->
√xt
 = 
ªt
->
mem_blk_h
;

368 
ªt
->
mem_blk_h
 = 
ãmp
;

372  
ªt
;

373 
	}
}

377 
acs_p
 
	$Uni⁄CacheMem
(
acs_p
 
acs1
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

378 
acs_p
 
ªt
 = 
NULL
;

379 
i
;

380 
mem_blk_£t_t
* 
ôî
;

382 i‡(!
mem_blk_£t
)

383  
acs1
;

386 
ªt
 = 
	`makeC›y
(
acs1
);

388 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

389 i‡(!
ªt
) {

390 
ªt
 = (
acs_p
Ë
	`mÆloc
((
acs_s
));

391 
	`mem£t
(
ªt
, 0, (
acs_s
));

393 i‡(!
	`isResidít
(
ªt
->
mem_blk_h
, 
ôî
)) {

394 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
(

395 (
mem_blk_£t_t
));

396 
	`CHECK_MEM
(
ãmp
);

397 
ãmp
->
block
 = 
ôî
->block;

398 
ãmp
->
√xt
 = 
ªt
->
mem_blk_h
;

399 
ªt
->
mem_blk_h
 = 
ãmp
;

403  
ªt
;

404 
	}
}

408 
	$checkF‹C⁄Êi˘s
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
cö°
, 
age
,

409 
fú°_w‹d
, *
c⁄Êi˘s
) {

410 
cfg_node_t
* 
bb
 = 
bbi
->bb;

411 
de_ö°_t
* 
ö°
 = 
bb
->
code
;

412 
¥ev_blk
 = -1;

413 
blk
;

414 
cblk
;

415 
shi·
 = 0;

417 i‡(
fú°_w‹d
)

418 
cblk
 = 
	`GET_MEM
(
cö°
->
addr
);

420 
cblk
 = 
	`GET_MEM
(
cö°
->
addr
 + 
SIZE_OF_WORD
);

422 
ö°
 !
cö°
) {

423 
blk
 = 
	`GET_MEM
(
ö°
->
addr
);

425 i‡(
	`GET_SET
(
blk
Ë=GET_SET(
cblk
) && blk != cblk) {

428 i‡(
blk
 !
¥ev_blk
)

429 
shi·
++;

430 
¥ev_blk
 = 
blk
;

431 } i‡(
blk
 =
cblk
) {

432 
age
 = 
shi·
 = 0;

436 
ö°
++;

439 *
c⁄Êi˘s
 = 
age
 + 
shi·
;

441 i‡(
age
 !-1 &&ágê+ 
shi·
 < 
CACHE_SET_SIZE


446 
	}
}

451 
	$checkF‹O√Pª£n˚
(
acs_p
** 
acs_ö
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

452 
mem_blk_£t_t
* 
ôî
;

453 
i
, 
k
;

455 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

456 
k
 = 
	`GET_SET
(
ôî
->
block
);

457 
i
 = 0; i < 
CACHE_SET_SIZE
; i++) {

458 i‡(
acs_ö
[
k
][
i
] && 
	`isResidít
◊cs_ö[k][i]->
mem_blk_h
, 
ôî
))

464 
	}
}

469 
	$checkF‹Pª£n˚
(
acs_p
** 
acs_ö
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

470 
mem_blk_£t_t
* 
ôî
;

471 
i
, 
k
;

473 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

474 
k
 = 
	`GET_SET
(
ôî
->
block
);

476 
i
 = 0; i < 
CACHE_SET_SIZE
; i++) {

477 i‡(
acs_ö
[
k
] &&ács_ö[k][
i
]

478 && 
	`isResidít
(
acs_ö
[
k
][
i
]->
mem_blk_h
, 
ôî
))

482 i‡(
i
 =
CACHE_SET_SIZE


488  
i
;

489 
	}
}

494 
	$checkF‹Vi˘im
(
acs_p
** 
acs_ö
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

495 
mem_blk_£t_t
* 
ôî
;

496 
i
, 
k
;

498 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

499 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

500 i‡(
acs_ö
[
i
][
PSEUDO
]

501 && 
	`isResidít
(
acs_ö
[
i
][
PSEUDO
]->
mem_blk_h
, 
ôî
))

507 
	}
}

512 
	$checkF‹In˛usi⁄
(
acs_p
* 
acs_ö
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

513 
mem_blk_£t_t
* 
ôî
;

514 
i
;

516 
i
 = 0; i < 
CACHE_SET_SIZE
; i++) {

517 
ôî
 = 
mem_blk_£t
; iãr; iã∏ôî->
√xt
) {

518 i‡(
acs_ö
[
i
] && !
	`isResidít
◊cs_ö[i]->
mem_blk_h
, 
ôî
))

521 i‡(!
ôî
)

522  
i
;

527 
	}
}

530 
mem_blk_£t_t
* 
	$gëMem‹yBlockOfSë
(
mem_blk_£t_t
* 
mem_blk
, 
£t
) {

531 
mem_blk_£t_t
* 
hód
 = 
NULL
;

532 
mem_blk_£t_t
* 
ôî
;

533 
°
;

535 i‡(!
mem_blk
)

536  
NULL
;

538 
ôî
 = 
mem_blk
; iãr; iã∏ôî->
√xt
) {

539 
°
 = 
	`GET_SET
(
ôî
->
block
);

540 i‡(
°
 =
£t
) {

541 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
(

542 (
mem_blk_£t_t
));

543 
	`CHECK_MEM
(
ãmp
);

544 
ãmp
->
block
 = 
ôî
->block;

545 
ãmp
->
√xt
 = 
hód
;

546 
hód
 = 
ãmp
;

550  
hód
;

551 
	}
}

554 
acs_p
 
	$Dif„ªn˚
(
acs_p
 
acs
, 
mem_blk_£t_t
* 
mem_blk
) {

555 
mem_blk_£t_t
* 
ôî
;

556 
acs_p
 
ªt
;

558 i‡(!
acs
)

559  
NULL
;

561 
ªt
 = (
acs_p
Ë
	`mÆloc
((
acs_s
));

562 
	`CHECK_MEM
(
ªt
);

563 
ªt
->
mem_blk_h
 = 
NULL
;

565 
ôî
 = 
acs
->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

566 i‡(
ôî
->
block
 !
mem_blk
->block) {

567 
mem_blk_£t_t
* 
ãmp
 = (mem_blk_£t_à*Ë
	`mÆloc
(

568 (
mem_blk_£t_t
));

569 
	`CHECK_MEM
(
ãmp
);

570 
ãmp
->
block
 = 
ôî
->block;

571 
ãmp
->
√xt
 = 
ªt
->
mem_blk_h
;

572 
ªt
->
mem_blk_h
 = 
ãmp
;

576  
ªt
;

577 
	}
}

580 
acs_p
* 
	$c›y_ˇche
(
acs_p
* 
acs
) {

581 
i
;

582 
acs_p
* 
de°
 = 
NULL
;

584 i‡(!
acs
)

585  
NULL
;

588 
de°
 = 
	`makeCacheSë
();

590 
i
 = 0; i <
CACHE_SET_SIZE
; i++) {

591 
de°
[
i
] = 
	`makeC›y
(
acs
[i]);

594  
de°
;

595 
	}
}

598 
acs_p
* 
	$upd©e_sögÀt⁄
(
acs_p
* 
acs
, 
mem_blk_£t_t
* 
mem_blk_£t
) {

599 
löe
 = 0;

600 
acs_p
* 
ªt
;

601 
acs_p
 
cur
;

602 
i
, 
j
;

603 
mem_blk_£t_t
* 
ãmp
 = 
NULL
;

605 
ãmp
 = (
mem_blk_£t_t
 *Ë
	`mÆloc
((mem_blk_set_t));

606 
	`CHECK_MEM
(
ãmp
);

607 
ãmp
->
block
 = 
mem_blk_£t
->block;

608 
ãmp
->
√xt
 = 
NULL
;

610 
ªt
 = 
	`makeCacheSë
();

612 
löe
 = 0;Üöê< 
CACHE_SET_SIZE
;Üine++) {

614 i‡(!
acs
) {

615 
löe
 = 
CACHE_SET_SIZE
;

619 i‡(
acs
[
löe
] && 
	`isResidít
◊cs[löe]->
mem_blk_h
, 
ãmp
))

624 i‡(
löe
 < 
CACHE_SET_SIZE
)

626 
i
 = 1; i < 
löe
; i++)

627 
ªt
[
i
] = 
	`makeC›y
(
acs
[i - 1]);

628 i‡(
löe
 > 0) {

629 
cur
 = 
	`Dif„ªn˚
(
acs
[
löe
], 
ãmp
);

630 
ªt
[
löe
] = 
	`Uni⁄
(
cur
, 
acs
[line - 1]);

631 #ifde‡
MEM_FREE


632 
	`‰ìCacheLöe
(
cur
);

633 
cur
 = 
NULL
;

636 
i
 = 
löe
 + 1; i < 
CACHE_SET_SIZE
; i++)

637 
ªt
[
i
] = 
	`makeC›y
(
acs
[i]);

638 
ªt
[0] = 
	`makeCacheBlock
(
ãmp
);

641 i‡(
löe
 =0 && 
acs
[0]) {

642 
cur
 = 
	`Dif„ªn˚
(
acs
[0], 
ãmp
);

643 
ªt
[1] = 
	`Uni⁄
(
cur
,Ñet[1]);

644 #ifde‡
MEM_FREE


645 
	`‰ìCacheLöe
(
cur
);

646 
cur
 = 
NULL
;

653 i‡(
acs
) {

654 
i
 = 1; i < 
CACHE_SET_SIZE
; i++)

655 
ªt
[
i
] = 
	`makeC›y
(
acs
[i - 1]);

657 
ªt
[0] = 
	`makeCacheBlock
(
ãmp
);

658 i‡(
acs
) {

661 
ªt
[
PSEUDO
] = 
	`Uni⁄
(
acs
[PSEUDO],ács[
CACHE_SET_SIZE
 - 1]);

665 #ifde‡
MEM_FREE


666 
	`‰ì
(
ãmp
);

669  
ªt
;

670 
	}
}

673 
acs_p
* 
	$joöCacheMu°
(
acs_p
* 
acs1
,ács_p* 
¨g
) {

674 
acs_p
 
ãmp
 = 
NULL
;

675 
acs_p
 
vÆ
 = 
NULL
;

676 
acs_p
 
vÆ2
 = 
NULL
;

677 
i
, 
j
;

678 
acs_p
* 
acs
;

679 
mem_blk_£t_t
* 
ôî
;

681 i‡(!
acs1
)

682  
	`c›y_ˇche
(
¨g
);

684 
acs
 = 
	`makeCacheSë
();

687 
i
 = 0; i < 
CACHE_SET_SIZE
; i++) {

688 
ãmp
 = 
NULL
;

689 
vÆ
 = 
NULL
;

695 
j
 = 
i
; j >= 0; j--) {

696 
vÆ
 = 
ãmp
;

697 
vÆ2
 = 
	`I¡î£˘
(
acs1
[
i
], 
¨g
[
j
]);

698 
ãmp
 = 
	`Uni⁄
—emp, 
vÆ2
);

699 #ifde‡
MEM_FREE


700 
	`‰ìCacheLöe
(
vÆ
);

701 
	`‰ìCacheLöe
(
vÆ2
);

702 
vÆ
 = 
NULL
;

706 
j
 = 
i
; j >= 0; j--) {

707 
vÆ
 = 
ãmp
;

708 
vÆ2
 = 
	`I¡î£˘
(
acs1
[
i
], 
¨g
[
j
]);

709 
ãmp
 = 
	`Uni⁄
—emp, 
vÆ2
);

710 #ifde‡
MEM_FREE


711 
	`‰ìCacheLöe
(
vÆ
);

712 
	`‰ìCacheLöe
(
vÆ2
);

713 
vÆ
 = 
NULL
;

717 
acs
[
i
] = 
ãmp
;

720  
acs
;

721 
	}
}

724 
acs_p
* 
	$joöCacheMay
(
acs_p
* 
acs1
,ács_p* 
¨g
) {

725 
acs_p
 
ãmp
 = 
NULL
;

726 
acs_p
 
vÆ
 = 
NULL
;

727 
i
, 
j
;

728 
acs_p
* 
acs
;

729 
mem_blk_£t_t
* 
ôî
;

731 i‡(!
acs1
)

732  
	`c›y_ˇche
(
¨g
);

734 
acs
 = 
	`makeCacheSë
();

736 
i
 = 0; i < 
CACHE_SET_SIZE
; i++) {

737 
ãmp
 = 
NULL
;

738 
vÆ
 = 
NULL
;

741 i‡(
acs1
[
i
]) {

742 
ôî
 = 
acs1
[
i
]->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

743 
j
 = 
i
 - 1; j >= 0; j--) {

744 i‡(
¨g
[
j
] && 
	`isResidít
◊rg[j]->
mem_blk_h
, 
ôî
)) {

748 i‡(
j
 < 0) {

749 
mem_blk_£t_t
* 
cur
 = (mem_blk_£t_à*Ë
	`mÆloc
(

750 (
mem_blk_£t_t
));

751 
cur
->
block
 = 
ôî
->block;

752 
cur
->
√xt
 = 
NULL
;

753 
vÆ
 = 
ãmp
;

754 
ãmp
 = 
	`Uni⁄CacheMem
—emp, 
cur
);

755 #ifde‡
MEM_FREE


756 
	`‰ìCacheLöe
(
vÆ
);

757 
	`‰ì
(
cur
);

758 
cur
 = 
NULL
;

759 
vÆ
 = 
NULL
;

765 i‡(
¨g
[
i
]) {

766 
ôî
 = 
¨g
[
i
]->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

767 
j
 = 
i
 - 1; j >= 0; j--) {

768 i‡(
acs1
[
j
] && 
	`isResidít
◊cs1[j]->
mem_blk_h
, 
ôî
)) {

772 i‡(
j
 < 0) {

773 
mem_blk_£t_t
* 
cur
 = (mem_blk_£t_à*Ë
	`mÆloc
(

774 (
mem_blk_£t_t
));

775 
cur
->
block
 = 
ôî
->block;

776 
cur
->
√xt
 = 
NULL
;

777 
vÆ
 = 
ãmp
;

778 
ãmp
 = 
	`Uni⁄CacheMem
—emp, 
cur
);

779 #ifde‡
MEM_FREE


780 
	`‰ìCacheLöe
(
vÆ
);

781 
	`‰ì
(
cur
);

782 
vÆ
 = 
NULL
;

783 
cur
 = 
NULL
;

788 
acs
[
i
] = 
ãmp
;

791  
acs
;

792 
	}
}

795 
acs_p
* 
	$joöCachePS
(
acs_p
* 
acs1
,ács_p* 
¨g
) {

796 
acs_p
 
ãmp
 = 
NULL
;

797 
acs_p
 
vÆ
 = 
NULL
;

798 
i
, 
j
;

799 
acs_p
* 
acs
;

800 
mem_blk_£t_t
* 
ôî
;

802 i‡(!
acs1
)

803  
	`c›y_ˇche
(
¨g
);

805 
acs
 = 
	`makeCacheSë
();

807 
i
 = 0; i <
CACHE_SET_SIZE
; i++) {

808 
ãmp
 = 
NULL
;

809 
vÆ
 = 
NULL
;

811 i‡(
acs1
[
i
]) {

812 
ôî
 = 
acs1
[
i
]->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

813 
j
 = 
i
 + 1; j <
CACHE_SET_SIZE
; j++) {

814 i‡(
¨g
[
j
] && 
	`isResidít
◊rg[j]->
mem_blk_h
, 
ôî
)) {

818 i‡(
j
 > 
CACHE_SET_SIZE
)

820 
mem_blk_£t_t
* 
cur
 = (mem_blk_£t_à*Ë
	`mÆloc
(

821 (
mem_blk_£t_t
));

822 
cur
->
block
 = 
ôî
->block;

823 
cur
->
√xt
 = 
NULL
;

824 
vÆ
 = 
ãmp
;

825 
ãmp
 = 
	`Uni⁄CacheMem
—emp, 
cur
);

826 #ifde‡
MEM_FREE


827 
	`‰ìCacheLöe
(
vÆ
);

828 
	`‰ì
(
cur
);

829 
vÆ
 = 
NULL
;

830 
cur
 = 
NULL
;

835 i‡(
¨g
[
i
]) {

836 
ôî
 = 
¨g
[
i
]->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

837 
j
 = 
i
 + 1; j <
CACHE_SET_SIZE
; j++) {

838 i‡(
acs1
[
j
] && 
	`isResidít
◊cs1[j]->
mem_blk_h
, 
ôî
)) {

842 i‡(
j
 > 
CACHE_SET_SIZE
)

844 
mem_blk_£t_t
* 
cur
 = (mem_blk_£t_à*Ë
	`mÆloc
(

845 (
mem_blk_£t_t
));

846 
cur
->
block
 = 
ôî
->block;

847 
cur
->
√xt
 = 
NULL
;

848 
vÆ
 = 
ãmp
;

849 
ãmp
 = 
	`Uni⁄CacheMem
—emp, 
cur
);

850 #ifde‡
MEM_FREE


851 
	`‰ìCacheLöe
(
vÆ
);

852 
	`‰ì
(
cur
);

853 
vÆ
 = 
NULL
;

854 
cur
 = 
NULL
;

859 
acs
[
i
] = 
ãmp
;

862  
acs
;

863 
	}
}

867 
acs_p
* 
	$joöCache
(
acs_p
* 
acs1
,ács_p* 
¨g
, 
ANALYSIS_T
 
ty≥
) {

868 
acs_p
 
ãmp
 = 
NULL
;

869 
acs_p
 
vÆ
 = 
NULL
;

870 
i
, 
j
;

871 
acs_p
* 
acs
;

872 
mem_blk_£t_t
* 
ôî
;

875 i‡(
ty≥
 =
MUST
) {

876  
	`joöCacheMu°
(
acs1
, 
¨g
);

880 i‡(
ty≥
 =
MAY
) {

881  
	`joöCacheMay
(
acs1
, 
¨g
);

885 i‡(
ty≥
 =
PERSISTENCE
) {

886  
	`joöCachePS
(
acs1
, 
¨g
);

889  
NULL
;

890 
	}
}

893 
acs_p
** 
	$upd©e_abs_ö°
(
acs_p
** 
acs_ö
, 
addr
) {

894 
mem_blk_£t_t
 
mem_blk
, *
ôî
;

895 
acs_p
* 
ãmp
;

896 
acs_p
* 
cur
;

897 
acs_p
** 
acs_out
;

898 
£t
, 
i
;

900 
mem_blk
.
block
 = 
	`GET_MEM
(
addr
);

901 
mem_blk
.
√xt
 = 
NULL
;

903 
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

904 
	`mem£t
(
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

906 i‡(
acs_ö
) {

907 
i
 = 0; i < 
MAX_CACHE_SET
; i++)

908 
acs_out
[
i
] = 
	`c›y_ˇche
(
acs_ö
[i]);

913 
£t
 = 
	`GET_SET
(
mem_blk
.
block
);

914 i‡(
acs_ö
)

915 
ãmp
 = 
	`upd©e_sögÀt⁄
(
acs_ö
[
£t
], &
mem_blk
);

917 
ãmp
 = 
	`upd©e_sögÀt⁄
(
NULL
, &
mem_blk
);

918 
mem_blk
.
block
 = 
	`GET_MEM
(
addr
 + 
SIZE_OF_WORD
);

919 
£t
 = 
	`GET_SET
(
mem_blk
.
block
);

920 
cur
 = 
acs_out
[
£t
];

921 
acs_out
[
£t
] = 
	`upd©e_sögÀt⁄
(
ãmp
, &
mem_blk
);

924 #ifde‡
MEM_FREE


925 
	`‰ìCacheSë
(
ãmp
);

926 
	`‰ìCacheSë
(
cur
);

927 
ãmp
 = 
cur
 = 
NULL
;

930  
acs_out
;

931 
	}
}

934 
	$is_ßme_ˇche_block
(
acs_p
 
acs1
,ács_∞
acs2
) {

935 
mem_blk_£t_t
* 
ôî
;

937 i‡(!
acs1
 && !
acs2
)

939 i‡(!
acs1
 || !
acs2
)

942 
ôî
 = 
acs1
->
mem_blk_h
; iãr; iã∏ôî->
√xt
) {

943 i‡(!
	`isResidít
(
acs2
->
mem_blk_h
, 
ôî
))

947 i‡(
	`gëC¨döÆôy
(
acs1
->
mem_blk_h
Ë=gëC¨döÆôy(
acs2
->mem_blk_h))

951 
	}
}

954 
	$checkEquÆôy
(
acs_p
* 
acs1
,ács_p* 
acs2
) {

955 
i
;

957 i‡(!
acs1
 && !
acs2
)

959 i‡(!
acs1
 || !
acs2
)

961 
i
 = 0; i <
CACHE_SET_SIZE
; i++) {

962 i‡(!
acs1
[
i
] && !
acs2
[i])

964 i‡(!
acs1
[
i
] || !
acs2
[i])

966 i‡(!
	`is_ßme_ˇche_block
(
acs1
[
i
], 
acs2
[i]))

971 
	}
}

974 
	$å™sf‹ml2In°CacheSèã
(
tcfg_node_t
* 
bbi
, * 
ch™ge_Êag
,

975 
ANALYSIS_T
 
ty≥
, 
ôî©i⁄_cou¡
) {

976 
de_ö°_t
* 
ö°
;

977 
n_ö°
, 
bbi_n_ö°
;

978 
ba£
, 
imm
, 
ödex
;

979 * 
iß_«me
;

980 
ric_p
 
addr
;

981 
acs_p
** 
acs_out
 = 
NULL
;

982 
acs_p
** 
cur_acs
 = 
NULL
;

983 
acs_p
** 
¥ev_acs
;

984 
acs_p
** 
acs_•ec
;

985 
acs_p
* 
cur_acs_£t
;

986 
tcfg_node_t
* 
bbi_•ec
;

987 
tcfg_edge_t
* 
bbi_ö_p
;

988 
k
;

989 
is_backedge
 = 0;

991 
	`as£π
(
bbi
);

992 
	`as£π
(
bbi
->
bb
);

993 
ö°
 = 
bbi
->
bb
->
code
;

996 
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

997 
	`CHECK_MEM
(
acs_out
);

998 
	`mem£t
(
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1000 i‡(!
bbi
->
acs_out
) {

1001 
bbi
->
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1002 
	`CHECK_MEM
(
bbi
->
acs_out
);

1003 
	`mem£t
(
bbi
->
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1006 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1007 
acs_out
[
k
] = 
	`c›y_ˇche
(
bbi
->acs_out[k]);

1009 i‡(!
bbi
->
acs_out
[
k
])

1010 
bbi
->
acs_out
[
k
] = 
	`makeCacheSë
();

1014 i‡(
b¥ed_scheme
 !
NO_BPRED
) {

1015 
acs_•ec
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1016 
	`CHECK_MEM
(
acs_•ec
);

1017 
	`mem£t
(
acs_•ec
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1019 
	`CHECK_MEM
(
num_mp_ö°s
);

1020 
	`CHECK_MEM
(
mp_ö°s
);

1022 
bbi_ö_p
 = 
bbi
->
ö
;

1025 
bbi_ö_p
 !
NULL
) {

1028 
is_backedge
 =

1029 ((
lo›_m≠
[
bbi
->
id
] =lo›_m≠[
bbi_ö_p
->
§c
->id])

1030 && (
bbi
 =
lo›_m≠
[bbi->
id
]->
hód
)) ? 1 : 0;

1031 i‡(
ôî©i⁄_cou¡
 =0 && 
is_backedge
) {

1032 
bbi_ö_p
 = bbi_ö_p->
√xt_ö
;

1037 
n_ö°
 = 0;Ç_ö° < 
num_mp_ö°s
[
bbi_ö_p
->
id
];Ç_inst++) {

1038 
bbi_n_ö°
 = 0;

1041 i‡(!
n_ö°
) {

1042 i‡(
bbi_ö_p
 =bbi_ö_p->
§c
->
out
)

1043 
bbi_•ec
 = 
bbi_ö_p
->
√xt_out
->
d°
;

1045 
bbi_•ec
 = 
bbi_ö_p
->
§c
->
out
->
d°
;

1049 i‡(
bbi_n_ö°
 >
bbi_•ec
->
bb
->
num_ö°
) {

1050 
bbi_•ec
 = bbi_•ec->
out
->
d°
;

1051 
bbi_n_ö°
 = 0;

1055 i‡(
ö°_chmc_l1
[
bbi_•ec
->
id
][
bbi_n_ö°
] =
ALL_MISS
) {

1056 i‡(!
n_ö°
)

1057 
cur_acs
 = 
	`upd©e_abs_ö°
(
bbi_ö_p
->
§c
->
acs_out
,

1058 
mp_ö°s
[
bbi_ö_p
->
id
][
n_ö°
]->
addr
);

1060 
cur_acs
 = 
	`upd©e_abs_ö°
(cur_acs,

1061 
mp_ö°s
[
bbi_ö_p
->
id
][
n_ö°
]->
addr
);

1062 } i‡(
ö°_chmc_l1
[
bbi_•ec
->
id
][
bbi_n_ö°
]

1063 =
NOT_CLASSIFIED


1064 || 
ö°_chmc_l1
[
bbi_•ec
->
id
][
bbi_n_ö°
] =
PS
) {

1065 i‡(!
n_ö°
) {

1066 
¥ev_acs
 = 
bbi_ö_p
->
§c
->
acs_out
;

1067 
cur_acs
 = 
	`upd©e_abs_ö°
(
bbi_ö_p
->
§c
->
acs_out
,

1068 
mp_ö°s
[
bbi_ö_p
->
id
][
n_ö°
]->
addr
);

1070 
¥ev_acs
 = 
cur_acs
;

1071 
cur_acs
 = 
	`upd©e_abs_ö°
(cur_acs,

1072 
mp_ö°s
[
bbi_ö_p
->
id
][
n_ö°
]->
addr
);

1075 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1076 
cur_acs_£t
 = 
cur_acs
[
k
];

1077 
cur_acs
[
k
] = 
	`joöCache
(
¥ev_acs
[k], cur_acs[k], 
ty≥
);

1078 #ifde‡
MEM_FREE


1079 
	`‰ìCacheSë
(
cur_acs_£t
);

1080 
cur_acs_£t
 = 
NULL
;

1085 
bbi_n_ö°
++;

1089 i‡(
cur_acs
 && 
num_mp_ö°s
[
bbi_ö_p
->
id
] > 0) {

1090 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1091 
cur_acs_£t
 = 
acs_•ec
[
k
];

1093 
acs_•ec
[
k
] = 
	`joöCache
◊cs_•ec[k], 
cur_acs
[k], 
ty≥
);

1094 #ifde‡
MEM_FREE


1095 
	`‰ìCacheSë
(
cur_acs_£t
);

1096 
cur_acs_£t
 = 
NULL
;

1100 #ifde‡
MEM_FREE


1101 
	`‰ìCacheSèã
(
cur_acs
);

1102 
cur_acs
 = 
NULL
;

1104 
bbi_ö_p
 = bbi_ö_p->
√xt_ö
;

1108 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1109 i‡(!
bbi
->
acs_ö
 || !bbi->acs_ö[
k
])

1112 
cur_acs_£t
 = 
bbi
->
acs_out
[
k
];

1114 
bbi
->
acs_out
[
k
] = 
	`joöCache
(
acs_•ec
[k], bbi->
acs_ö
[k], 
ty≥
);

1115 #ifde‡
MEM_FREE


1116 
	`‰ìCacheSë
(
cur_acs_£t
);

1117 
cur_acs_£t
 = 
NULL
;

1120 #ifde‡
MEM_FREE


1121 
	`‰ìCacheSèã
(
acs_•ec
);

1122 
acs_•ec
 = 
NULL
;

1126 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_ö°
;Ç_inst++) {

1128 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

1133 
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1134 
	`mem£t
(
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1136 if(!
ö°
->
acs_out
)

1138 
ö°
->
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1139 
	`mem£t
(
ö°
->
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1142 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1144 
acs_out
[
k
] = 
	`c›y_ˇche
(
ö°
->acs_out[k]);

1146 if(!
ö°
->
acs_out
[
k
])

1148 
ö°
->
acs_out
[
k
] = 
	`makeCacheSë
();

1154 i‡(
ö°_chmc_l1
[
bbi
->
id
][
n_ö°
] =
ALL_MISS
) {

1156 
cur_acs
 = 
ö°
->
acs_out
;

1157 
ö°
->
acs_out
 = 
	`upd©e_abs_ö°
(ö°->
acs_ö
, in°->
addr
);

1160 
cur_acs
 = 
bbi
->
acs_out
;

1163 i‡(!
n_ö°
 && 
b¥ed_scheme
 =
NO_BPRED
)

1164 
bbi
->
acs_out
 = 
	`upd©e_abs_ö°
(bbi->
acs_ö
, 
ö°
->
addr
);

1166 
bbi
->
acs_out
 = 
	`upd©e_abs_ö°
(bbi->acs_out, 
ö°
->
addr
);

1168 #ifde‡
MEM_FREE


1169 
	`‰ìCacheSèã
(
cur_acs
);

1170 
cur_acs
 = 
NULL
;

1172 } i‡(
ö°_chmc_l1
[
bbi
->
id
][
n_ö°
] =
NOT_CLASSIFIED


1173 || 
ö°_chmc_l1
[
bbi
->
id
][
n_ö°
] =
PS
) {

1175 
cur_acs
 = 
ö°
->
acs_out
;

1176 
ö°
->
acs_out
 = 
	`upd©e_abs_ö°
(ö°->
acs_ö
, in°->
addr
);

1178 
cur_acs
 = 
bbi
->
acs_out
;

1181 i‡(!
n_ö°
 && 
b¥ed_scheme
 =
NO_BPRED
) {

1182 
¥ev_acs
 = 
bbi
->
acs_ö
;

1183 
bbi
->
acs_out
 = 
	`upd©e_abs_ö°
(bbi->
acs_ö
, 
ö°
->
addr
);

1185 
¥ev_acs
 = 
bbi
->
acs_out
;

1186 
bbi
->
acs_out
 = 
	`upd©e_abs_ö°
(bbi->acs_out, 
ö°
->
addr
);

1190 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1191 
cur_acs_£t
 = 
ö°
->
acs_out
[
k
];

1192 
ö°
->
acs_out
[
k
] = 
	`joöCache
(ö°->
acs_ö
[k], in°->acs_out[k], 
ty≥
);

1193 #ifde‡
MEM_FREE


1194 
	`‰ìCacheSë
(
cur_acs_£t
);

1195 
cur_acs_£t
 = 
NULL
;

1200 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1201 
cur_acs_£t
 = 
bbi
->
acs_out
[
k
];

1202 
bbi
->
acs_out
[
k
] = 
	`joöCache
(
¥ev_acs
[k], bbi->acs_out[k], 
ty≥
);

1203 #ifde‡
MEM_FREE


1204 
	`‰ìCacheSë
(
cur_acs_£t
);

1205 
cur_acs_£t
 = 
NULL
;

1209 #ifde‡
MEM_FREE


1210 
	`‰ìCacheSèã
(
cur_acs
);

1211 
cur_acs
 = 
NULL
;

1217 i‡(!
n_ö°
) {

1218 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1219 
cur_acs_£t
 = 
bbi
->
acs_out
[
k
];

1220 
bbi
->
acs_out
[
k
] = 
	`c›y_ˇche
(bbi->
acs_ö
[k]);

1221 #ifde‡
MEM_FREE


1222 
	`‰ìCacheSë
(
cur_acs_£t
);

1223 
cur_acs_£t
 = 
NULL
;

1233 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1234 
cur_acs_£t
 = 
ö°
->
acs_out
[
k
];

1235 
ö°
->
acs_out
[
k
] = 
	`c›y_ˇche
(ö°->
acs_ö
[k]);

1236 #ifde‡
MEM_FREE


1237 
	`‰ìCacheSë
(
cur_acs_£t
);

1238 
cur_acs_£t
 = 
NULL
;

1243 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1244 *
ch™ge_Êag
 |!
	`checkEquÆôy
(
ö°
->
acs_out
[
k
],ács_out[k]);

1248 if(
n_ö°
 < 
bbi
->
bb
->
num_ö°
 - 1)

1250 
de_ö°_t
* 
√xt_ö°
 = 
ö°
 + 1;

1251 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1252 
√xt_ö°
->
acs_ö
[
k
] = 
ö°
->
acs_out
[k];

1253 
ö°
++;

1256 
ö°
++;

1261 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1262 *
ch™ge_Êag
 |!
	`checkEquÆôy
(
bbi
->
acs_out
[
k
],ács_out[k]);

1265 
	`‰ìCacheSèã
(
acs_out
);

1266 
	}
}

1269 
	$å™sf‹mIn°CacheSèã
(
tcfg_node_t
* 
bbi
, * 
ch™ge_Êag
,

1270 
ANALYSIS_T
 
ty≥
, 
ôî©i⁄_cou¡
) {

1271 
de_ö°_t
* 
ö°
;

1272 
n_ö°
;

1273 
ba£
, 
imm
, 
ödex
;

1274 * 
iß_«me
;

1275 
ric_p
 
addr
;

1276 
acs_p
** 
acs_out
;

1277 
acs_p
** 
cur_acs
;

1278 
acs_p
** 
acs_•ec
;

1279 
acs_p
* 
cur_acs_£t
;

1280 
tcfg_edge_t
* 
bbi_ö_p
;

1281 
k
;

1282 
is_backedge
 = 0;

1284 
	`as£π
(
bbi
);

1285 
	`as£π
(
bbi
->
bb
);

1286 
ö°
 = 
bbi
->
bb
->
code
;

1289 
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1290 
	`CHECK_MEM
(
acs_out
);

1291 
	`mem£t
(
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1293 i‡(!
bbi
->
acs_out
) {

1294 
bbi
->
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1295 
	`CHECK_MEM
(
bbi
->
acs_out
);

1296 
	`mem£t
(
bbi
->
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1299 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1300 
acs_out
[
k
] = 
	`c›y_ˇche
(
bbi
->acs_out[k]);

1302 i‡(!
bbi
->
acs_out
[
k
]) {

1303 
bbi
->
acs_out
[
k
] = 
	`makeCacheSë
();

1308 i‡(
b¥ed_scheme
 !
NO_BPRED
) {

1309 
acs_•ec
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1310 
	`CHECK_MEM
(
acs_•ec
);

1311 
	`mem£t
(
acs_•ec
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1313 
	`CHECK_MEM
(
num_mp_ö°s
);

1314 
	`CHECK_MEM
(
mp_ö°s
);

1316 
bbi_ö_p
 = 
bbi
->
ö
;

1319 
bbi_ö_p
 !
NULL
) {

1322 
is_backedge
 =

1323 ((
lo›_m≠
[
bbi
->
id
] =lo›_m≠[
bbi_ö_p
->
§c
->id])

1324 && (
bbi
 =
lo›_m≠
[bbi->
id
]->
hód
)) ? 1 : 0;

1325 i‡(
ôî©i⁄_cou¡
 =0 && 
is_backedge
) {

1326 
bbi_ö_p
 = bbi_ö_p->
√xt_ö
;

1330 
n_ö°
 = 0;Ç_ö° < 
num_mp_ö°s
[
bbi_ö_p
->
id
];Ç_inst++) {

1331 i‡(!
n_ö°
)

1332 
cur_acs
 = 
	`upd©e_abs_ö°
(
bbi_ö_p
->
§c
->
acs_out
,

1333 
mp_ö°s
[
bbi_ö_p
->
id
][
n_ö°
]->
addr
);

1335 
cur_acs
 = 
	`upd©e_abs_ö°
(cur_acs,

1336 
mp_ö°s
[
bbi_ö_p
->
id
][
n_ö°
]->
addr
);

1340 i‡(
num_mp_ö°s
[
bbi_ö_p
->
id
] > 0) {

1341 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1342 
cur_acs_£t
 = 
acs_•ec
[
k
];

1345 i‡(!
cur_acs
 || !cur_acs[
k
])

1348 
acs_•ec
[
k
] = 
	`joöCache
◊cs_•ec[k], 
cur_acs
[k], 
ty≥
);

1349 #ifde‡
MEM_FREE


1350 
	`‰ìCacheSë
(
cur_acs_£t
);

1351 
cur_acs_£t
 = 
NULL
;

1355 #ifde‡
MEM_FREE


1356 
	`‰ìCacheSèã
(
cur_acs
);

1357 
cur_acs
 = 
NULL
;

1359 
bbi_ö_p
 = bbi_ö_p->
√xt_ö
;

1363 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1364 i‡(!
bbi
->
acs_ö
 || !bbi->acs_ö[
k
])

1367 
cur_acs_£t
 = 
bbi
->
acs_out
[
k
];

1369 
bbi
->
acs_out
[
k
] = 
	`joöCache
(
acs_•ec
[k], bbi->
acs_ö
[k], 
ty≥
);

1370 #ifde‡
MEM_FREE


1371 
	`‰ìCacheSë
(
cur_acs_£t
);

1372 
cur_acs_£t
 = 
NULL
;

1375 #ifde‡
MEM_FREE


1376 
	`‰ìCacheSèã
(
acs_•ec
);

1377 
acs_•ec
 = 
NULL
;

1381 
n_ö°
 = 0;Ç_ö° < 
bbi
->
bb
->
num_ö°
;Ç_inst++) {

1382 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

1388 
acs_out
 = (
acs_p
 **)
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1389 
	`mem£t
(
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1391 if(!
ö°
->
acs_out
)

1393 
ö°
->
acs_out
 = (
acs_p
 **)
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1394 
	`mem£t
(
ö°
->
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1397 
k
 = 0; k < 
MAX_CACHE_SET
; k++) {

1398 
acs_out
[
k
] = 
	`c›y_ˇche
(
ö°
->acs_out[k]);

1400 if(!
ö°
->
acs_out
[
k
])

1402 
ö°
->
acs_out
[
k
] = 
	`makeCacheSë
();

1406 
cur_acs
 = 
ö°
->
acs_out
;

1407 
ö°
->
acs_out
 = 
	`upd©e_abs_ö°
(ö°->
acs_ö
, in°->
addr
);

1410 
cur_acs
 = 
bbi
->
acs_out
;

1413 i‡(!
n_ö°
 && (
b¥ed_scheme
 =
NO_BPRED
))

1414 
bbi
->
acs_out
 = 
	`upd©e_abs_ö°
(bbi->
acs_ö
, 
ö°
->
addr
);

1416 
bbi
->
acs_out
 = 
	`upd©e_abs_ö°
(bbi->acs_out, 
ö°
->
addr
);

1417 #ifde‡
MEM_FREE


1418 
	`‰ìCacheSèã
(
cur_acs
);

1419 
cur_acs
 = 
NULL
;

1424 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1425 *
ch™ge_Êag
 |!
	`checkEquÆôy
(
ö°
->
acs_out
[
k
],ács_out[k]);

1429 if(
n_ö°
 < 
bbi
->
bb
->
num_ö°
 - 1)

1431 
de_ö°_t
* 
√xt_ö°
 = 
ö°
 + 1;

1433 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1434 
√xt_ö°
->
acs_ö
[
k
] = 
ö°
->
acs_out
[k];

1436 
ö°
++;

1439 
ö°
++;

1444 
k
 = 0; k < 
MAX_CACHE_SET
; k++)

1445 *
ch™ge_Êag
 |!
	`checkEquÆôy
(
bbi
->
acs_out
[
k
],ács_out[k]);

1448 
	`‰ìCacheSèã
(
acs_out
);

1449 
	}
}

1455 
	$JoöCacheSèã
(
tcfg_node_t
* 
¥ed
,Åcfg_node_t* 
bbi
, 
ty≥
) {

1456 
de_ö°_t
* 
f_ö°
, *
l_ö°
;

1457 
acs_p
* 
‰ì_p
 = 
NULL
;

1458 
i
, 
j
, 
k
;

1460 i‡(!
¥ed
)

1465 
f_ö°
 = 
bbi
->
bb
->
code
;

1468 
l_ö°
 = 
¥ed
->
bb
->
code
 +Öªd->bb->
num_ö°
 - 1;

1473 
i
 = 0; i < 
MAX_CACHE_SET
; i++) {

1477 if(!
l_ö°
->
acs_out
[
i
])

1479 
‰ì_p
 = 
f_ö°
->
acs_ö
[
i
];

1480 
f_ö°
->
acs_ö
[
i
] = 
	`joöCache
(f_ö°->acs_ö[i], 
l_ö°
->
acs_out
[i], 
ty≥
);

1483 i‡(!
¥ed
->
acs_out
 || !¥ed->acs_out[
i
])

1486 
‰ì_p
 = 
bbi
->
acs_ö
[
i
];

1487 
bbi
->
acs_ö
[
i
] = 
	`joöCache
(bbi->acs_ö[i], 
¥ed
->
acs_out
[i], 
ty≥
);

1490 #ifde‡
MEM_FREE


1491 
	`‰ìCacheSë
(
‰ì_p
);

1492 
‰ì_p
 = 
NULL
;

1495 
	}
}

1503 
	$öôülizeCache
(
tcfg_node_t
* 
bbi
) {

1504 
de_ö°_t
* 
ö°
 = 
bbi
->
bb
->
code
;

1505 
i
, 
j
;

1507 
bbi
->
acs_ö
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1508 
	`CHECK_MEM
(
bbi
->
acs_ö
);

1509 
	`mem£t
(
bbi
->
acs_ö
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1510 
bbi
->
acs_out
 = (
acs_p
 **Ë
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1511 
	`CHECK_MEM
(
bbi
->
acs_out
);

1512 
	`mem£t
(
bbi
->
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1517 
	`as£π
(
ö°
);

1519 
j
 = 0; j < 
bbi
->
bb
->
num_ö°
; j++)

1521 
ö°
->
acs_ö
 = (
acs_p
 **)
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1522 
	`mem£t
(
ö°
->
acs_ö
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1523 
ö°
->
acs_out
 = (
acs_p
 **)
	`mÆloc
(
MAX_CACHE_SET
 * (acs_p *));

1524 
	`mem£t
(
ö°
->
acs_out
, 0, 
MAX_CACHE_SET
 * (
acs_p
 *));

1525 
ö°
++;

1527 
ö°
 = 
bbi
->
bb
->
code
;

1528 
i
 = 0; i < 
MAX_CACHE_SET
; i++)

1530 
ö°
->
acs_ö
[
i
] = 
	`makeCacheSë
();

1534 
	}
}

1541 
	$öôülize_CHMC
() {

1542 
i
, 
j
;

1544 
ö°_chmc_l1
 = (**Ë
	`mÆloc
(
num_tcfg_nodes
 * (*));

1545 
	`CHECK_MEM
(
ö°_chmc_l1
);

1546 
ö°_age_l1
 = (**Ë
	`mÆloc
(
num_tcfg_nodes
 * (*));

1547 
	`CHECK_MEM
(
ö°_age_l1
);

1548 
ö°_chmc_l2
 = (**Ë
	`mÆloc
(
num_tcfg_nodes
 * (*));

1549 
	`CHECK_MEM
(
ö°_chmc_l2
);

1550 
ö°_age_l2
 = (**Ë
	`mÆloc
(
num_tcfg_nodes
 * (*));

1551 
	`CHECK_MEM
(
ö°_age_l2
);

1553 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1554 
ö°_chmc_l1
[
i
] = (*Ë
	`mÆloc
(
tcfg
[i]->
bb
->
num_ö°
 * ());

1555 
	`CHECK_MEM
(
ö°_chmc_l1
[
i
]);

1556 
ö°_age_l1
[
i
] = (*Ë
	`mÆloc
(
tcfg
[i]->
bb
->
num_ö°
 * ());

1557 
	`CHECK_MEM
(
ö°_age_l1
[
i
]);

1558 
ö°_chmc_l2
[
i
] = (*Ë
	`mÆloc
(
tcfg
[i]->
bb
->
num_ö°
 * ());

1559 
	`CHECK_MEM
(
ö°_chmc_l2
[
i
]);

1560 
ö°_age_l2
[
i
] = (*Ë
	`mÆloc
(
tcfg
[i]->
bb
->
num_ö°
 * ());

1561 
	`CHECK_MEM
(
ö°_age_l2
[
i
]);

1563 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++) {

1566 
ö°_chmc_l1
[
i
][
j
] = 
CINFTY
;

1567 
ö°_chmc_l2
[
i
][
j
] = 
CINFTY
;

1568 
ö°_age_l1
[
i
][
j
] = 
CINFTY
;

1569 
ö°_age_l2
[
i
][
j
] = 
CINFTY
;

1572 
	}
}

1576 
	$ˇãg‹ize_l2_ö°_X_PS_NC
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
ö°
,

1577 
ö°_id
) {

1578 
mem_blk_£t_t
 
ãmp
;

1579 
h1
, 
h2
;

1581 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

1582 
ãmp
.
√xt
 = 
NULL
;

1585 
h1
 = 
	`checkF‹Vi˘im
(
ö°
->
acs_ö
, &
ãmp
);

1586 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1587 
h2
 = 
	`checkF‹Vi˘im
(
ö°
->
acs_ö
, &
ãmp
);

1589 
h1
 = 
	`checkF‹Vi˘im
(
bbi
->
acs_ö
, &
ãmp
);

1590 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1591 
h2
 = 
	`checkF‹Vi˘im
(
bbi
->
acs_ö
, &
ãmp
);

1593 i‡(
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
ALL_HIT
) {

1594 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
ALL_X
;

1595 } i‡((!
h1
 && !
h2
)

1596 && 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] =
NOT_CLASSIFIED
) {

1597 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
PS
;

1600 
	}
}

1604 
	$ˇãg‹ize_l2_ö°_X_AH_NC
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
ö°
,

1605 
ö°_id
) {

1606 
mem_blk_£t_t
 
ãmp
;

1607 
h1
, 
h2
;

1608 
hc1
, 
hc2
;

1609 
c⁄Êi˘s
 = 0;

1611 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

1612 
ãmp
.
√xt
 = 
NULL
;

1615 
h1
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1616 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1617 
h2
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1620 
h1
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1621 
hc1
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h1
, 1, &
c⁄Êi˘s
);

1622 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1623 
h2
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1624 
hc2
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h2
, 0, &
c⁄Êi˘s
);

1626 i‡(
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
ALL_HIT
) {

1627 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
ALL_X
;

1629 i‡(
hc1
 && 
hc2
)

1630 
ö°_age_l2
[
bbi
->
id
][
ö°_id
] = 
c⁄Êi˘s
;

1632 
ö°_age_l2
[
bbi
->
id
][
ö°_id
] = 
CINFTY
;

1634 } i‡(
hc1
 && 
hc2
) {

1635 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
ALL_HIT
;

1636 
ö°_age_l2
[
bbi
->
id
][
ö°_id
] = 
c⁄Êi˘s
;

1638 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
NOT_CLASSIFIED
;

1639 
ö°_age_l2
[
bbi
->
id
][
ö°_id
] = 
CINFTY
;

1641 
	}
}

1645 
	$ˇãg‹ize_l2_ö°_X_AM_NC
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
ö°
,

1646 
ö°_id
) {

1647 
mem_blk_£t_t
 
ãmp
;

1648 
h1
, 
h2
;

1649 
hc1
, 
hc2
;

1650 
c⁄Êi˘s
 = 0;

1652 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

1653 
ãmp
.
√xt
 = 
NULL
;

1656 
h1
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1657 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1658 
h2
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1661 
h1
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1662 
hc1
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h1
, 1, &
c⁄Êi˘s
);

1663 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1664 
h2
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1665 
hc2
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h2
, 0, &
c⁄Êi˘s
);

1667 i‡(
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
ALL_HIT
) {

1668 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
ALL_X
;

1669 } i‡((!
hc1
 || !
hc2
)

1670 && 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] =
NOT_CLASSIFIED
) {

1671 
ö°_chmc_l2
[
bbi
->
id
][
ö°_id
] = 
ALL_MISS
;

1674 
	}
}

1678 
	$ˇãg‹ize_ö°_AH_NC
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
ö°
,

1679 
ö°_id
) {

1680 
mem_blk_£t_t
 
ãmp
;

1681 
h1
, 
h2
;

1682 
hc1
, 
hc2
;

1683 
c⁄Êi˘s
 = 0;

1685 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

1686 
ãmp
.
√xt
 = 
NULL
;

1689 
h1
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1690 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1691 
h2
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1694 
h1
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1695 
hc1
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h1
, 1, &
c⁄Êi˘s
);

1696 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1697 
h2
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1698 
hc2
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h2
, 0, &
c⁄Êi˘s
);

1700 i‡(
hc1
 && 
hc2
) {

1701 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] = 
ALL_HIT
;

1702 
ö°_age_l1
[
bbi
->
id
][
ö°_id
] = 
c⁄Êi˘s
;

1704 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] = 
NOT_CLASSIFIED
;

1705 
ö°_age_l1
[
bbi
->
id
][
ö°_id
] = 
CINFTY
;

1708 
	}
}

1712 
	$ˇãg‹ize_ö°_PS_NC
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
ö°
,

1713 
ö°_id
) {

1714 
mem_blk_£t_t
 
ãmp
;

1715 
h1
, 
h2
;

1717 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

1718 
ãmp
.
√xt
 = 
NULL
;

1721 
h1
 = 
	`checkF‹Vi˘im
(
ö°
->
acs_ö
, &
ãmp
);

1722 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1723 
h2
 = 
	`checkF‹Vi˘im
(
ö°
->
acs_ö
, &
ãmp
);

1725 
h1
 = 
	`checkF‹Vi˘im
(
bbi
->
acs_ö
, &
ãmp
);

1726 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1727 
h2
 = 
	`checkF‹Vi˘im
(
bbi
->
acs_ö
, &
ãmp
);

1729 i‡(!
h1
 && !
h2
 && 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
NOT_CLASSIFIED
) {

1730 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] = 
PS
;

1734 
	}
}

1738 
	$ˇãg‹ize_ö°_AM_NC
(
tcfg_node_t
* 
bbi
, 
de_ö°_t
* 
ö°
,

1739 
ö°_id
) {

1740 
mem_blk_£t_t
 
ãmp
;

1741 
h1
, 
h2
;

1742 
hc1
, 
hc2
;

1743 
c⁄Êi˘s
 = 0;

1745 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
);

1746 
ãmp
.
√xt
 = 
NULL
;

1749 
h1
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1750 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1751 
h2
 = 
	`checkF‹Pª£n˚
(
ö°
->
acs_ö
, &
ãmp
);

1754 
h1
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1755 
hc1
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h1
, 1, &
c⁄Êi˘s
);

1756 
ãmp
.
block
 = 
	`GET_MEM
(
ö°
->
addr
 + 
SIZE_OF_WORD
);

1757 
h2
 = 
	`checkF‹Pª£n˚
(
bbi
->
acs_ö
, &
ãmp
);

1758 
hc2
 = 
	`checkF‹C⁄Êi˘s
(
bbi
, 
ö°
, 
h2
, 0, &
c⁄Êi˘s
);

1760 i‡((!
hc1
 || !
hc2
Ë&& 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] =
NOT_CLASSIFIED
) {

1761 
ö°_chmc_l1
[
bbi
->
id
][
ö°_id
] = 
ALL_MISS
;

1764 
	}
}

1767 
	$ˇãg‹ize_L2
(
ty≥
) {

1768 
tcfg_node_t
* 
bbi
;

1769 
de_ö°_t
* 
ö°
;

1770 * 
iß_«me
;

1771 
i
, 
j
;

1773 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1774 
ö°
 = 
tcfg
[
i
]->
bb
->
code
;

1776 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++) {

1777 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

1778 
ty≥
) {

1779 
MUST
:

1780 
	`ˇãg‹ize_l2_ö°_X_AH_NC
(
tcfg
[
i
], 
ö°
, 
j
);

1782 
MAY
:

1783 
	`ˇãg‹ize_l2_ö°_X_AM_NC
(
tcfg
[
i
], 
ö°
, 
j
);

1785 
PERSISTENCE
:

1786 
	`ˇãg‹ize_l2_ö°_X_PS_NC
(
tcfg
[
i
], 
ö°
, 
j
);

1796 
	`¥îr
("UnknownánalysisÅype");

1799 
ö°
++;

1802 
	}
}

1806 
	$ˇãg‹ize_L1
(
ty≥
) {

1807 
tcfg_node_t
* 
bbi
;

1808 
de_ö°_t
* 
ö°
;

1809 * 
iß_«me
;

1810 
i
, 
j
;

1812 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1813 
ö°
 = 
tcfg
[
i
]->
bb
->
code
;

1815 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++) {

1816 
iß_«me
 = 
iß
[
ö°
->
›_íum
].
«me
;

1818 
ty≥
) {

1819 
MUST
:

1820 
	`ˇãg‹ize_ö°_AH_NC
(
tcfg
[
i
], 
ö°
, 
j
);

1822 
MAY
:

1823 
	`ˇãg‹ize_ö°_AM_NC
(
tcfg
[
i
], 
ö°
, 
j
);

1827 
PERSISTENCE
:

1828 
	`ˇãg‹ize_ö°_PS_NC
(
tcfg
[
i
], 
ö°
, 
j
);

1837 
	`¥îr
("UnknownánalysisÅype");

1840 
ö°
++;

1844 
	}
}

1848 
	$˛ónupCache
() {

1849 
i
, 
j
, 
k
;

1850 
de_ö°_t
* 
ö°
;

1851 
de_ö°_t
* 
¥ev_ö°
;

1853 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1855 
ö°
 = 
tcfg
[
i
]->
bb
->
code
;

1856 
¥ev_ö°
 = 
NULL
;

1859 #ifde‡
MEM_FREE


1860 
	`‰ìCacheSèã
(
tcfg
[
i
]->
acs_ö
);

1861 
	`‰ìCacheSèã
(
tcfg
[
i
]->
acs_out
);

1865 
j
 = 0; j < 
tcfg
[
i
]->
bb
->
num_ö°
; j++)

1867 #ifde‡
MEM_FREE


1868 
	`‰ìCacheSèã
(
ö°
->
acs_out
);

1870 
ö°
->
acs_out
 = 
NULL
;

1875 i‡(
¥ev_ö°
)

1876 
¥ev_ö°
->
acs_ö
 = 
NULL
;

1877 
¥ev_ö°
 = 
ö°
;

1878 
ö°
++;

1882 
	}
}

1885 
	$™Æyze_abs_l2_ö°r_ˇche
(
ty≥
) {

1886 
ch™ge_Êag
 = 1;

1887 
tcfg_edge_t
* 
edge
;

1888 
i
, 
j
, 
t›oidx
;

1889 
ãmp
 = 0;

1890 
ôî
 = 0;

1892 
tcfg_node_t
* 
bbi
 = 
tcfg
[0];

1896 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1897 
	`öôülizeCache
(
tcfg
[
i
]);

1899 
ch™ge_Êag
) {

1900 
ch™ge_Êag
 = 0;

1902 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1904 
t›oidx
 = 
t›o_tcfg
[
i
];

1908 
edge
 = 
tcfg
[
t›oidx
]->
ö
;Édge;Édgêedge->
√xt_ö
) {

1909 
	`JoöCacheSèã
(
edge
->
§c
, 
tcfg
[
t›oidx
], 
ty≥
);

1911 
	`å™sf‹ml2In°CacheSèã
(
tcfg
[
t›oidx
], &
ch™ge_Êag
, 
ty≥
, 
ôî
);

1913 
ôî
++;

1917 #ifde‡
_DEBUG_CRPD


1918 
	`dumpIn°Cache
();

1919 
	`¥ötf
("L2 Iãøti⁄ cou¡ = %d\n", 
ôî
);

1923 
	`ˇãg‹ize_L2
(
ty≥
);

1926 
	`˛ónupCache
();

1927 
	}
}

1930 
	$™Æyze_abs_ö°r_ˇche
(
ty≥
) {

1931 
ch™ge_Êag
 = 1;

1932 
tcfg_edge_t
* 
edge
;

1933 
i
, 
j
, 
t›oidx
;

1934 
ãmp
 = 0;

1935 
ôî
 = 0;

1937 
tcfg_node_t
* 
bbi
 = 
tcfg
[0];

1941 
i
 = 0; i < 
num_tcfg_nodes
; i++)

1942 
	`öôülizeCache
(
tcfg
[
i
]);

1944 
ch™ge_Êag
) {

1945 
ch™ge_Êag
 = 0;

1947 
i
 = 0; i < 
num_tcfg_nodes
; i++) {

1949 
t›oidx
 = 
t›o_tcfg
[
i
];

1953 
j
 = 0; j < 
MAX_CACHE_SET
; j++) {

1954 #ifde‡ 
MEM_FREE


1955 
	`‰ìCacheSë
(
tcfg
[
i
]->
acs_ö
[
j
]);

1957 
tcfg
[
i
]->
acs_ö
[
j
]=
NULL
;

1960 #ifde‡
_DEBUG_CRPD


1961 
	`Ârötf
(
°dout
, "computög cachê°©e†o‡bbò%d (%d.%d)\n", 
t›oidx
, 
tcfg
[t›oidx]->
bb
->
¥oc
->
id
, \

1962 
tcfg
[
t›oidx
]->
bb
->
id
);

1966 
edge
 = 
tcfg
[
t›oidx
]->
ö
;Édge;Édgêedge->
√xt_ö
) {

1967 #ifde‡
_DEBUG_CRPD


1968 
	`Ârötf
(
°dout
, "joö cachê°©e†‰om bbò%d (%d.%d)\n", 
edge
->
§c
->
id
,

1969 
tcfg
[
edge
->
§c
->
id
]->
bb
->
¥oc
->id,Åcfg[edge->src->id]->bb->id);

1971 
	`JoöCacheSèã
(
edge
->
§c
, 
tcfg
[
t›oidx
], 
ty≥
);

1973 
	`å™sf‹mIn°CacheSèã
(
tcfg
[
t›oidx
], &
ch™ge_Êag
, 
ty≥
, 
ôî
);

1975 
ôî
++;

1976 #ifde‡
_DEBUG_WCET


1977 
	`Ârötf
(
°dout
, "ôî©i⁄ cou¡ = %d\n", 
ôî
);

1982 #ifde‡
_DEBUG_CRPD


1983 
	`dumpIn°Cache
();

1984 
	`Ârötf
(
°dout
, "Iãøti⁄ cou¡ = %d\n", 
ôî
);

1988 
	`ˇãg‹ize_L1
(
ty≥
);

1991 
	`˛ónupCache
();

1992 
	}
}

1995 
	$™Æyze_abs_ö°r_ˇche_Æl
() {

1997 
	`£t_ˇche
();

1999 
X
 = 
assoc
;

2000 
Y
 = 
n£ts
;

2001 
B
 = 
bsize
;

2003 
	`öôülize_CHMC
();

2006 
	`™Æyze_abs_ö°r_ˇche
(
MUST
);

2008 
	`™Æyze_abs_ö°r_ˇche
(
MAY
);

2011 i‡(
íabÀ_û2ˇche
) {

2013 
	`£t_ˇche_l2
();

2015 
X
 = 
assoc_l2
;

2016 
Y
 = 
n£ts_l2
;

2017 
B
 = 
bsize_l2
;

2019 
	`™Æyze_abs_l2_ö°r_ˇche
(
MUST
);

2021 
	`™Æyze_abs_l2_ö°r_ˇche
(
MAY
);

2028 
	`¥öt_˛assifiˇti⁄
();

2030 
	}
}

	@
1
.
0
66
749
.metadata/.plugins/org.eclipse.cdt.make.core/specs.c
address.c
address.h
bpred.c
bpred.h
cache.c
cache.h
cfg.c
cfg.h
common.c
common.h
conflicts.c
dump.c
estimate.c
exegraph.c
exegraph.h
ilp.c
infdump.c
infeasible.c
infeasible.h
isa.c
isa.h
loops.c
loops.h
main.c
options.c
pipeline.c
pipeline.h
readfile.c
reg.c
scp_address.c
scp_address.h
scp_cache.c
scp_cache.h
scp_tscope.c
ss/decode_cfg.h
ss/ecoff.h
ss/eval.c
ss/eval.h
ss/host.h
ss/loader.c
ss/loader.h
ss/machine.c
ss/machine.h
ss/misc.c
ss/misc.h
ss/my_opt.c
ss/options.c
ss/options.h
ss/regs.h
ss/resource.h
ss/ss_exegraph.c
ss/ss_isa.c
ss/ss_isa.h
ss/ss_machine.c
ss/ss_machine.h
ss/ss_readfile.c
ss/symbol.c
ss/symbol.h
symexec.c
symexec.h
symexec_value.c
tcfg.c
tcfg.h
test.c
unicache.c
